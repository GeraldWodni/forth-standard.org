{
    "wordSets": {
        "block": {
            "name": "block",
            "words": {
                "BLK": {
                    "id": "block:BLK",
                    "number": "7.6.1.0790",
                    "name": "BLK",
                    "english": "b-l-k",
                    "list": "BLOCK",
                    "basename": "BLK",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of a cell containing zero or the\n      number of the mass-storage block being interpreted. If\n      <strong>BLK</strong> contains zero, the input source is not a block and\n      can be identified by <a href=\"../core/SOURCE-ID\">SOURCE-ID</a>, if\n      <a href=\"../core/SOURCE-ID\">SOURCE-ID</a> is available. An ambiguous condition\n      exists if a program directly alters the contents of <strong>BLK</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../block#block:buffers\">7.3.2 Block buffer regions</a></strong>.\n      \n      "
                        }
                    }
                },
                "BLOCK": {
                    "id": "block:BLOCK",
                    "number": "7.6.1.0800",
                    "name": "BLOCK",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "BLOCK",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( u -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of the first character of the\n      block buffer assigned to mass-storage block <em>u</em>. An\n      ambiguous condition exists if <em>u</em> is not an available\n      block number.\n      </p><p>\n      If block <em>u</em> is already in a block buffer, <em>a-addr</em>\n      is the address of that block buffer.\n      </p><p>\n      If block <em>u</em> is not already in memory and there is an\n      unassigned block buffer, transfer block <em>u</em> from mass\n      storage to an unassigned block buffer. <em>a-addr</em> is the\n      address of that block buffer.\n      </p><p>\n      If block <em>u</em> is not already in memory and there are no\n      unassigned block buffers, unassign a block buffer. If the block\n      in that buffer has been <a href=\"../block/UPDATE\">UPDATE</a>d, transfer the block to\n      mass storage and transfer block <em>u</em> from mass storage into\n      that buffer. <em>a-addr</em> is the address of that block buffer.\n      </p><p>\n      At the conclusion of the operation, the block buffer pointed to\n      by <em>a-addr</em> is the current block buffer and is assigned to\n      <em>u</em>.\n      \n      </p>"
                        }
                    }
                },
                "BUFFER": {
                    "id": "block:BUFFER",
                    "number": "7.6.1.0820",
                    "name": "BUFFER",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "BUFFER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( u -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of the first character of the\n      block buffer assigned to block <em>u</em>. The contents of the\n      block are unspecified. An ambiguous condition exists if <em>u</em>\n      is not an available block number.\n      </p><p>\n      If block <em>u</em> is already in a block buffer, <em>a-addr</em>\n      is the address of that block buffer.\n      </p><p>\n      If block <em>u</em> is not already in memory and there is an\n      unassigned \tbuffer, <em>a-addr</em> is the address of that block\n      buffer.\n      </p><p>\n      If block <em>u</em> is not already in memory and there are no\n      unassigned block buffers, unassign a block buffer. If the block\n      in that buffer has been <a href=\"../block/UPDATE\">UPDATE</a>d, transfer the block to\n      mass storage. <em>a-addr</em> is the address of that block buffer.\n      </p><p>\n      At the conclusion of the operation, the block buffer pointed to\n      by <em>a-addr</em> is the current block buffer and is assigned to\n      <em>u</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../block/BLOCK\">7.6.1.0800 BLOCK</a>.\n      \n      "
                        }
                    }
                },
                "EMPTY-BUFFERS": {
                    "id": "block:EMPTY-BUFFERS",
                    "number": "7.6.2.1330",
                    "name": "EMPTY-BUFFERS",
                    "english": " ",
                    "list": "BLOCK EXT",
                    "basename": "EMPTY-BUFFERS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Unassign all block buffers. Do not transfer the contents of\n      any <a href=\"../block/UPDATE\">UPDATE</a>d block buffer to mass storage.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../block/BLOCK\">7.6.1.0800 BLOCK</a>.\n      \n      "
                        }
                    }
                },
                "EVALUATE": {
                    "id": "block:EVALUATE",
                    "number": "7.6.1.1360",
                    "name": "EVALUATE",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "EVALUATE",
                    "stackEffect": {
                        "html": {},
                        "plain": {}
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n Extend the semantics of <a href=\"../core/EVALUATE\">6.1.1360 EVALUATE</a> to\n      include: Store zero in <a href=\"../block/BLK\">BLK</a>.\n      \n      "
                        }
                    }
                },
                "FLUSH": {
                    "id": "block:FLUSH",
                    "number": "7.6.1.1559",
                    "name": "FLUSH",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "FLUSH",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Perform the function of <a href=\"../block/SAVE-BUFFERS\">SAVE-BUFFERS</a>, then unassign all\n      block buffers.\n      \n      </p>"
                        }
                    }
                },
                "LIST": {
                    "id": "block:LIST",
                    "number": "7.6.2.1770",
                    "name": "LIST",
                    "english": " ",
                    "list": "BLOCK EXT",
                    "basename": "LIST",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- )"
                        },
                        "plain": {
                            " ": "( u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- )\n      <p>\n      Display block <em>u</em> in an implementation-defined format.\n      Store <em>u</em> in <a href=\"../block/SCR\">SCR</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../block/BLOCK\">7.6.1.0800 BLOCK</a>.\n      \n      "
                        }
                    }
                },
                "LOAD": {
                    "id": "block:LOAD",
                    "number": "7.6.1.1790",
                    "name": "LOAD",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "LOAD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x u</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x u -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x u</em> -- <em>j * x</em> )\n      <p>\n      Save the current input-source specification. Store <em>u</em> in\n      <a href=\"../block/BLK\">BLK</a> (thus making block <em>u</em> the input source and\n      setting the input buffer to encompass its contents), set\n      <a href=\"../core/toIN\">&gt;IN</a> to zero, and interpret. When the parse area is\n      exhausted, restore the prior input source specification. Other\n      stack effects are due to the words <strong>LOAD</strong>ed.\n      </p><p>\n      An ambiguous condition exists if <em>u</em> is zero or is not a\n      valid block number.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>.\n      \n      "
                        }
                    }
                },
                "REFILL": {
                    "id": "block:REFILL",
                    "number": "7.6.2.2125",
                    "name": "REFILL",
                    "english": " ",
                    "list": "BLOCK EXT",
                    "basename": "REFILL",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      Extend the execution semantics of <a href=\"../core/REFILL\">6.2.2125 REFILL</a>\n      with the following:\n      </p><p>\n      When the input source is a block, make the next block the input\n      source and current input buffer by adding one to the value of\n      <a href=\"../block/BLK\">BLK</a> and setting <a href=\"../core/toIN\">&gt;IN</a> to zero. Return\n      <em>true</em> if the new value of BLK is a valid block number,\n      otherwise <em>false</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/REFILL\">6.2.2125 REFILL</a>,\n      <a href=\"../file/REFILL\">11.6.2.2125 REFILL</a>.\n      \n      "
                        }
                    }
                },
                "SAVE-BUFFERS": {
                    "id": "block:SAVE-BUFFERS",
                    "number": "7.6.1.2180",
                    "name": "SAVE-BUFFERS",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "SAVE-BUFFERS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Transfer the contents of each <a href=\"../block/UPDATE\">UPDATE</a>d block buffer to\n      mass storage. Mark all buffers as unmodified.\n      \n      </p>"
                        }
                    }
                },
                "SCR": {
                    "id": "block:SCR",
                    "number": "7.6.2.2190",
                    "name": "SCR",
                    "english": "s-c-r",
                    "list": "BLOCK EXT",
                    "basename": "SCR",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of a cell containing the block\n      number of the block most recently <a href=\"../block/LIST\">LIST</a>ed.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:block:SCR\">A.7.6.2.2190 SCR</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.7.6.2.2190 SCR -->\n      <strong>SCR</strong> is short for screen.\n      \n      \n      "
                        }
                    }
                },
                "THRU": {
                    "id": "block:THRU",
                    "number": "7.6.2.2280",
                    "name": "THRU",
                    "english": " ",
                    "list": "BLOCK EXT",
                    "basename": "THRU",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x u<sub>1</sub> u<sub>2</sub></em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x u1 u2 -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x u<sub>1</sub> u<sub>2</sub></em> -- <em>j * x</em> )\n      <p>\n      <a href=\"../block/LOAD\">LOAD</a> the mass storage blocks numbered <em>u<sub>1</sub></em> through\n      <em>u<sub>2</sub></em> in sequence. Other stack effects are due to the words\n      <a href=\"../block/LOAD\">LOAD</a>ed.\n      \n      </p>"
                        }
                    }
                },
                "UPDATE": {
                    "id": "block:UPDATE",
                    "number": "7.6.1.2400",
                    "name": "UPDATE",
                    "english": " ",
                    "list": "BLOCK",
                    "basename": "UPDATE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Mark the current block buffer as modified. An ambiguous\n      condition exists if there is no current block buffer.\n      </p><p>\n      <strong>UPDATE</strong> does not immediately cause I/O.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../block/BLOCK\">7.6.1.0800 BLOCK</a>,\n      <a href=\"../block/BUFFER\">7.6.1.0820 BUFFER</a>,\n      <a href=\"../block/FLUSH\">7.6.1.1559 FLUSH</a>,<br>\n      <a href=\"../block/SAVE-BUFFERS\">7.6.1.2180 SAVE-BUFFERS</a>.\n      \n      "
                        }
                    }
                },
                "bs": {
                    "id": "block:bs",
                    "number": "7.6.2.2535",
                    "name": "\\",
                    "english": "backslash",
                    "list": "BLOCK EXT",
                    "basename": "bs",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"ccc&lt;eol&gt;\"</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( \"ccc<eol>\" -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n Extend the semantics of <a href=\"../core/bs\">6.2.2535 \\</a> to be:\n        \n      "
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;eol&gt;\"</em> -- )\n      <p>\n      If <a href=\"../block/BLK\">BLK</a> contains zero, parse and discard the remainder\n      of the parse area; otherwise parse and discard the portion\n      of the parse area corresponding to the remainder of the current\n      line. <strong>\\</strong> is an immediate word.\n      \n      </p>"
                        }
                    }
                }
            }
        },
        "core": {
            "name": "core",
            "words": {
                "ABORT": {
                    "id": "core:ABORT",
                    "number": "6.1.0670",
                    "name": "ABORT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "ABORT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x</em> -- )\n      ( R: <em>j * x</em> -- )"
                        },
                        "plain": {
                            " ": "( i * x -- )\n( R: j * x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x</em> -- )\n      ( R: <em>j * x</em> -- )\n      <p>\n      Empty the data stack and perform the function of <a href=\"../core/QUIT\">QUIT</a>,\n      which includes emptying the return stack, without displaying\n      a message.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../exception/ABORT\">9.6.2.0670 ABORT</a>.\n      \n      "
                        }
                    }
                },
                "ABORTq": {
                    "id": "core:ABORTq",
                    "number": "6.1.0680",
                    "name": "ABORT\"",
                    "english": "abort-quote",
                    "list": "CORE",
                    "basename": "ABORTq",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( <em>i * x x<sub>1</sub></em> -- <em> |  i * x</em> )\n      ( R: <em>j * x</em> -- <em> |  j * x</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( i * x x1 --  |  i * x )\n( R: j * x --  |  j * x )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by a <code>\"</code> (double-quote).\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>i * x x<sub>1</sub></em> -- <em> |  i * x</em> )\n      ( R: <em>j * x</em> -- <em> |  j * x</em> )\n      <p>\n      Remove <em>x<sub>1</sub></em> from the stack. If any bit of <em>x<sub>1</sub></em> is not\n      zero, display <em>ccc</em> and perform an implementation-defined\n      abort sequence that includes the function of <a href=\"../core/ABORT\">ABORT</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../exception/ABORTq\">9.6.2.0680 ABORT\"</a>,\n      <a href=\"../rationale#rat:core:ABORTq\">A.6.1.0680 ABORT\"</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0680 ABORT\" -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <strong>ABORT\"</strong> <em>ccc</em><code>\"</code>\n      ... <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "ABS": {
                    "id": "core:ABS",
                    "number": "6.1.0690",
                    "name": "ABS",
                    "english": "abs",
                    "list": "CORE",
                    "basename": "ABS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( n -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- <em>u</em> )\n      <p>\n      <em>u</em> is the absolute value of <em>n</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0690 ABS -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>ABS</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>ABS</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>ABS</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<strong>ABS</strong> -&gt; MID-UINT+1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "ACCEPT": {
                    "id": "core:ACCEPT",
                    "number": "6.1.0695",
                    "name": "ACCEPT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "ACCEPT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr +n<sub>1</sub></em> -- <em>+n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( c-addr +n1 -- +n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr +n<sub>1</sub></em> -- <em>+n<sub>2</sub></em> )\n      <p>\n      Receive a string of at most <em>+n<sub>1</sub></em> characters. An ambiguous\n      condition exists if <em>+n<sub>1</sub></em> is zero or greater than 32,767.\n      Display graphic characters as they are received. A program that\n      depends on the presence or absence of non-graphic characters in the\n      string has an environmental dependency. The editing functions, if\n      any, that the system performs in order to construct the string are\n      implementation-defined.\n      </p><p>\n      Input terminates when an implementation-defined line terminator is\n      received. When input terminates, nothing is appended to the string,\n      and the display is maintained in an implementation-defined way.\n      </p><p>\n      <em>+n<sub>2</sub></em> is the length of the string stored at <em>c-addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:ACCEPT\">A.6.1.0695 ACCEPT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0695 ACCEPT -->\n      Specification of a non-zero, positive integer count (<em>+n<sub>1</sub></em>)\n      for <strong>ACCEPT</strong> allows some implementors to continue their\n      practice of using a zero or negative value as a flag to trigger\n      special behavior. Insofar as such behavior is outside the\n      standard, Standard Programs cannot depend upon it, but the\n      committee doesn't wish to preclude it unnecessarily.\n      Because actual values are almost always small integers, no\n      functionality is impaired by this restriction.\n      <p>\n      It is recommended that all non-graphic characters be reserved\n      for editing or control functions and not be stored in the input\n      string.\n      </p><p>\n      Because external system hardware and software may perform the\n      <strong>ACCEPT</strong> function, when a line terminator is received the\n      action of the cursor, and therefore the display, is\n      implementation-defined. It is recommended that the cursor remain\n      immediately following the entered text after a line terminator\n      is received.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0695 ACCEPT -->\n            <div class=\"tt\">\n<a href=\"../core/CREATE\">CREATE</a> ABUF 80 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/ALLOT\">ALLOT</a>\n        <p>\n        <a href=\"../core/Colon\">:</a> ACCEPT-TEST <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotq\">.\"</a> PLEASE TYPE UP TO 80 CHARACTERS:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; ABUF 80 <strong>ACCEPT</strong> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotq\">.\"</a> RECEIVED: \" <a href=\"../core/BracketCHAR\">[CHAR]</a> \" <a href=\"../core/EMIT\">EMIT</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; ABUF <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> \" <a href=\"../core/EMIT\">EMIT</a> <a href=\"../core/CR\">CR</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ ACCEPT-TEST -&gt;  }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "ACTION-OF": {
                    "id": "core:ACTION-OF",
                    "number": "6.2.0698",
                    "name": "ACTION-OF",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "ACTION-OF",
                    "stackEffect": {
                        "html": {
                            "Interpretation:": "( <em>\"&lt;spaces&gt;name\"</em> -- <em>xt</em> )",
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "Run-time:": "( -- <em>xt</em> )"
                        },
                        "plain": {
                            "Interpretation:": "( \"<spaces>name\" -- xt )",
                            "Compilation:": "( \"<spaces>name\" -- )",
                            "Run-time:": "( -- xt )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- <em>xt</em> )\n      <p>\n      Skip leading spaces and parse <em>name</em> delimited by a space.\n      <em>xt</em> is the execution token that <em>name</em> is set to execute.\n      An ambiguous condition exists if <em>name</em> was not defined by\n      <a href=\"../core/DEFER\">DEFER</a>, or if the <em>name</em> has not been set to execute an\n      <em>xt</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading spaces and parse <em>name</em> delimited by a space.\n      Append the run-time semantics given below to the current\n      definition.  An ambiguous condition exists if <em>name</em>\n      was not defined by <a href=\"../core/DEFER\">DEFER</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>xt</em> )\n      <p>\n      <em>xt</em> is the execution token that <em>name</em> is set to execute.\n      An ambiguous condition exists if <em>name</em> has not been\n      set to execute an <em>xt</em>.\n      </p><p>\n      An ambiguous condition exists if <a href=\"../core/POSTPONE\">POSTPONE</a>, <a href=\"../core/BracketCOMPILE\">[COMPILE]</a>,\n      <a href=\"../core/BracketTick\">[']</a> or <a href=\"../core/Tick\">'</a> is applied to <strong>ACTION-OF</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/DEFER\">6.2.1173 DEFER</a>,\n      <a href=\"../core/DEFERStore\">6.2.1175 DEFER!</a>,\n      <a href=\"../core/DEFERFetch\">6.2.1177 DEFER@</a>,\n      <a href=\"../core/IS\">6.2.1725 IS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.6.2.---- ACTION-OF -->\n      <a href=\"../core/Colon\">:</a> <strong>ACTION-OF</strong> <br>\n      &nbsp;&nbsp; <a href=\"../core/STATE\">STATE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/BracketTick\">[']</a> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/DEFERFetch\">DEFER@</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Tick\">'</a> <a href=\"../core/DEFERFetch\">DEFER@</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.---- ACTION-OF -->\n      <span class=\"tt\">T{ <a href=\"../core/DEFER\">DEFER</a>&nbsp;defer1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;action-defer1&nbsp;<strong>ACTION-OF</strong>&nbsp;defer1&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a>&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;defer1&nbsp;<a href=\"../core/DEFERStore\">DEFER!</a> -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;3&nbsp;defer1 -&gt; 6 }T</span> <br>\n      <span class=\"tt\">T{ <strong>ACTION-OF</strong>&nbsp;defer1 -&gt; <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;action-defer1 -&gt; <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a> }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/IS\">IS</a>&nbsp;defer1 -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;defer1 -&gt; 3 }T</span> <br>\n      <span class=\"tt\">T{ <strong>ACTION-OF</strong>&nbsp;defer1 -&gt; <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;action-defer1 -&gt; <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a> }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "AGAIN": {
                    "id": "core:AGAIN",
                    "number": "6.2.0700",
                    "name": "AGAIN",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "AGAIN",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>dest</em> -- )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: dest -- )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>dest</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition, resolving the backward reference <em>dest</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution at the location specified by <em>dest</em>.\n      If no other control flow words are used, any program code\n      after <strong>AGAIN</strong> will not be executed.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/BEGIN\">6.1.0760 BEGIN</a>,\n      <a href=\"../rationale#rat:core:AGAIN\">A.6.2.0700 AGAIN</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0700 AGAIN -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code>\n      ... <a href=\"../core/BEGIN\">BEGIN</a> ... <strong>AGAIN</strong>\n      ... <a href=\"../core/Semi\">;</a>\n      <p>\n      Unless word-sequence has a way to terminate, this is an\n      endless loop.\n      \n      \n      </p>"
                        }
                    }
                },
                "ALIGN": {
                    "id": "core:ALIGN",
                    "number": "6.1.0705",
                    "name": "ALIGN",
                    "english": " ",
                    "list": "CORE",
                    "basename": "ALIGN",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      If the data-space pointer is not aligned, reserve enough space\n      to align it.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:dataspace\">3.3.3 Data space</a></strong>,\n      <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>,\n      <a href=\"../rationale#rat:core:ALIGN\">A.6.1.0705 ALIGN</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0705 ALIGN -->\n      In this standard we have attempted to provide transportability\n      across various CPU architectures. One of the frequent causes\n      of transportability problems is the requirement of cell-aligned\n      addresses on some CPUs. On these systems, <strong>ALIGN</strong> and\n      <a href=\"../core/ALIGNED\">ALIGNED</a> may be required to build and traverse data\n      structures built with <a href=\"../core/CComma\">C,</a>. Implementors may define these\n      words as no-ops on systems for which they aren't functional.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0705 ALIGN -->\n            <div class=\"tt\">\n<strong>ALIGN</strong>  1 <a href=\"../core/ALLOT\">ALLOT</a> <a href=\"../core/HERE\">HERE</a>  <strong>ALIGN</strong> <a href=\"../core/HERE\">HERE</a> 3 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../core/ALLOT\">ALLOT</a> <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> A-ADDR  <a href=\"../core/CONSTANT\">CONSTANT</a> UA-ADDR <br>\n        <span class=\"tt\">T{ UA-ADDR&nbsp;<a href=\"../core/ALIGNED\">ALIGNED</a> -&gt; A-ADDR }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;A-ADDR&nbsp;<a href=\"../core/CStore\">C!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1234&nbsp;A-ADDR&nbsp;<a href=\"../core/Store\">!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp;1234 }T</span> <br>\n        <span class=\"tt\">T{ 123&nbsp;456&nbsp;A-ADDR&nbsp;<a href=\"../core/TwoStore\">2!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 123&nbsp;456 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;A-ADDR&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a>&nbsp;<a href=\"../core/CStore\">C!</a>&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a>&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;A-ADDR&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp;<a href=\"../core/CStore\">C!</a>&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1234&nbsp;A-ADDR&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp;<a href=\"../core/Store\">!</a>&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp;1234 }T</span> <br>\n        <span class=\"tt\">T{ 123&nbsp;456&nbsp;A-ADDR&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp;<a href=\"../core/TwoStore\">2!</a>&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 123&nbsp;456 }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "ALIGNED": {
                    "id": "core:ALIGNED",
                    "number": "6.1.0706",
                    "name": "ALIGNED",
                    "english": " ",
                    "list": "CORE",
                    "basename": "ALIGNED",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr</em> -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( addr -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr</em> -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the first aligned address greater than or equal\n      to <em>addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>,\n      <a href=\"../core/ALIGN\">6.1.0705 ALIGN</a>.\n      \n      "
                        }
                    }
                },
                "ALLOT": {
                    "id": "core:ALLOT",
                    "number": "6.1.0710",
                    "name": "ALLOT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "ALLOT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- )"
                        },
                        "plain": {
                            " ": "( n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- )\n      <p>\n      If <em>n</em> is greater than zero, reserve <em>n</em> address units\n      of data space. If <em>n</em> is less than zero, release <em> | n | </em>\n      address units of data space. If <em>n</em> is zero, leave the\n      data-space pointer unchanged.\n      </p><p>\n      If the data-space pointer is aligned and <em>n</em> is a multiple\n      of the size of a cell when <strong>ALLOT</strong> begins execution, it will\n      remain aligned when <strong>ALLOT</strong> finishes execution.\n      </p><p>\n      If the data-space pointer is character aligned and <em>n</em> is a\n      multiple of the size of a character when <strong>ALLOT</strong> begins\n      execution, it will remain character aligned when <strong>ALLOT</strong>\n      finishes execution.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:dataspace\">3.3.3 Data space</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0710 ALLOT -->\n            <div class=\"tt\">\n<a href=\"../core/HERE\">HERE</a> 1 <strong>ALLOT</strong> <br>\n        <a href=\"../core/HERE\">HERE</a> <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> 2NDA <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> 1STA <br>\n        <span class=\"tt\">T{ 1STA&nbsp;2NDA&nbsp;<a href=\"../core/Uless\">U&lt;</a> -&gt; &lt;TRUE&gt; }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> HERE MUST GROW WITH ALLOT <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1STA&nbsp;<a href=\"../core/OnePlus\">1+</a> -&gt; &nbsp;&nbsp;2NDA }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> ... BY ONE ADDRESS UNIT <br>\n        ( MISSING TEST: NEGATIVE ALLOT )\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "AND": {
                    "id": "core:AND",
                    "number": "6.1.0720",
                    "name": "AND",
                    "english": " ",
                    "list": "CORE",
                    "basename": "AND",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>3</sub></em> )\n      <p>\n      <em>x<sub>3</sub></em> is the bit-by-bit logical \"and\" of <em>x<sub>1</sub></em>\n      with <em>x<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0720 AND -->\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;<strong>AND</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;1&nbsp;<strong>AND</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;0&nbsp;<strong>AND</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;1&nbsp;<strong>AND</strong> -&gt; 1 }T</span>\n      <p>\n      <span class=\"tt\">T{ 0&nbsp;<a href=\"../core/INVERT\">INVERT</a>&nbsp;1&nbsp;<strong>AND</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;<a href=\"../core/INVERT\">INVERT</a>&nbsp;1&nbsp;<strong>AND</strong> -&gt; 0 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ 0S&nbsp;0S&nbsp;<strong>AND</strong> -&gt; 0S }T</span> <br>\n      <span class=\"tt\">T{ 0S&nbsp;1S&nbsp;<strong>AND</strong> -&gt; 0S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;0S&nbsp;<strong>AND</strong> -&gt; 0S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;1S&nbsp;<strong>AND</strong> -&gt; 1S }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "BASE": {
                    "id": "core:BASE",
                    "number": "6.1.0750",
                    "name": "BASE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "BASE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of a cell containing the current\n      number-conversion radix {{2...36}}.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0750 BASE -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> GN2\t<a href=\"../core/bs\">\\</a> ( -- 16 10 ) <br>\n        &nbsp;&nbsp; <strong>BASE</strong> <a href=\"../core/Fetch\">@</a> <a href=\"../core/toR\">&gt;R</a>\n        <a href=\"../core/HEX\">HEX</a> <strong>BASE</strong> <a href=\"../core/Fetch\">@</a>\n        <a href=\"../core/DECIMAL\">DECIMAL</a> <strong>BASE</strong> <a href=\"../core/Fetch\">@</a>\n        <a href=\"../core/Rfrom\">R&gt;</a> <strong>BASE</strong> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GN2 -&gt; 10&nbsp;A }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "BEGIN": {
                    "id": "core:BEGIN",
                    "number": "6.1.0760",
                    "name": "BEGIN",
                    "english": " ",
                    "list": "CORE",
                    "basename": "BEGIN",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>dest</em> )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- dest )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>dest</em> )\n      <p>\n      Put the next location for a transfer of control, <em>dest</em>, onto\n      the control flow stack. Append the run-time semantics given below\n      to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:controlstack\">3.2.3.2 Control-flow stack</a></strong>,\n      <a href=\"../core/REPEAT\">6.1.2140 REPEAT</a>,\n      <a href=\"../core/UNTIL\">6.1.2390 UNTIL</a>,\n      <a href=\"../core/WHILE\">6.1.2430 WHILE</a>, <br>\n      <a href=\"../rationale#rat:core:BEGIN\">A.6.1.0760 BEGIN</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0760 BEGIN -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>BEGIN</strong> ... <em>test</em> <a href=\"../core/UNTIL\">UNTIL</a>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      or\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>BEGIN</strong> ...\n      <em>test</em> <a href=\"../core/WHILE\">WHILE</a> ...\n      <a href=\"../core/REPEAT\">REPEAT</a>\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.0760 BEGIN -->\n      See <a href=\"../testsuite#test:core:WHILE\">F.6.1.2430 WHILE</a>,\n      <a href=\"../testsuite#test:core:UNTIL\">F.6.1.2390 UNTIL</a>.\n      \n      \n      "
                        }
                    }
                },
                "BL": {
                    "id": "core:BL",
                    "number": "6.1.0770",
                    "name": "BL",
                    "english": "b-l",
                    "list": "CORE",
                    "basename": "BL",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>char</em> )"
                        },
                        "plain": {
                            " ": "( -- char )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>char</em> )\n      <p>\n      <em>char</em> is the character value for a space.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:BL\">A.6.1.0770 BL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0770 BL -->\n      Because space is used throughout Forth as the standard\n      delimiter, this word is the only way a program has to find and\n      use the system value of \"space\". The value of a space\n      character can not be obtained with <a href=\"../core/CHAR\">CHAR</a>, for instance.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0770 BL -->\n      <span class=\"tt\">T{ <strong>BL</strong> -&gt; 20 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "BUFFERColon": {
                    "id": "core:BUFFER:",
                    "number": "6.2.0825",
                    "name": "BUFFER:",
                    "english": "buffer-colon",
                    "list": "CORE EXT",
                    "basename": "BUFFERColon",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( u \"<spaces>name\" -- )",
                            "name Execution:": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a space.\n      Create a definition for <em>name</em>, with the execution semantics defined\n      below.  Reserve <em>u</em> address units at an aligned address.\n      Contiguity of this region with any other region is undefined.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of the space reserved by <strong>BUFFER:</strong> when\n      it defined <em>name</em>.  The program is responsible for initializing the\n      contents.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:BUFFER:\">A.6.2.0825 BUFFER:</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      <strong>BUFFER:</strong> provides a means of defining an uninitialized buffer.\n      In systems that use a single memory space, this can effectively\n      be defined as:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <strong>BUFFER:</strong> <a href=\"../core/p\">(</a> u \"&lt;name&gt;\" -- ; -- addr ) <br>\n          &nbsp;&nbsp;&nbsp;<a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/ALLOT\">ALLOT</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div> \n      <p>\n      However, many systems profit from a separation of uninitialized and\n      initialized data areas.  Such systems can implement <strong>BUFFER:</strong> so\n      that it allocates memory from a separate uninitialized memory area.\n      Embedded systems can take advantage of the lack of initialization of the\n      memory area while hosted systems are permitted to <a href=\"../memory/ALLOCATE\">ALLOCATE</a>\n      a buffer.\n      A system may select a region of memory for performance reasons.\n      A detailed knowledge of the memory allocation within the system\n      is required to provide a version of <strong>BUFFER:</strong> that can take\n      advantage of the system.\n      </p><p>\n      It should be noted that the memory buffer provided by <strong>BUFFER:</strong>\n      is not initialized by the system and that if the application requires\n      it to be initialized, it is the responsibility of the application to\n      initialize it.\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n            <div class=\"rm\">\nThis implementation depends on children of <a href=\"../core/CREATE\">CREATE</a>\n        returning an aligned address.  Other memory location techniques\n        require implementation-specific knowledge of the underlying Forth\n        system.\n        <p>\n                </p><div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <strong>BUFFER:</strong> <a href=\"../core/bs\">\\</a> u \"&lt;name&gt;\" -- ; -- addr <br>\n          <a href=\"../core/bs\">\\</a> <span class=\"rm\">Create a buffer of u address units whose address is returned at run time.</span> <br>\n          &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/ALLOT\">ALLOT</a> <br>\n          <a href=\"../core/Semi\">;</a>\n            \n          </div>\n        </div>\n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n            <div class=\"tt\">\n<a href=\"../core/DECIMAL\">DECIMAL</a> <br>\n        <span class=\"tt\">T{ 127&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>BUFFER:</strong>&nbsp;TBUF1 -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ 127&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>BUFFER:</strong>&nbsp;TBUF2 -&gt;  }T</span>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Buffer is aligned</span> <br>\n        <span class=\"tt\">T{ TBUF1&nbsp;<a href=\"../core/ALIGNED\">ALIGNED</a> -&gt; TBUF1 }T</span>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Buffers do not overlap</span> <br>\n        <span class=\"tt\">T{ TBUF2&nbsp;TBUF1&nbsp;<a href=\"../core/Minus\">-</a>&nbsp;<a href=\"../core/ABS\">ABS</a>&nbsp;127&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<a href=\"../core/less\">&lt;</a> -&gt; &lt;FALSE&gt; }T</span>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Buffer can be written to</span> <br>\n        1 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/CONSTANT\">CONSTANT</a> /CHAR <br>\n        <a href=\"../core/Colon\">:</a> TFULL? <a href=\"../core/p\">(</a> c-addr n char -- flag )<br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/TRUE\">TRUE</a> <a href=\"../core/TwoSWAP\">2SWAP</a> <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/qDO\">?DO</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/I\">I</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/AND\">AND</a> <br>\n        &nbsp;&nbsp;&nbsp;/CHAR <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/NIP\">NIP</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;<a href=\"../core/CHAR\">CHAR</a>&nbsp;*&nbsp;<a href=\"../core/FILL\">FILL</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;<a href=\"../core/CHAR\">CHAR</a>&nbsp;*&nbsp;TFULL? -&gt; &lt;TRUE&gt; }T</span>\n        </p><p>\n        <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;0&nbsp;<a href=\"../core/FILL\">FILL</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;0&nbsp;TFULL? -&gt; &lt;TRUE&gt; }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "Bracket": {
                    "id": "core:[",
                    "number": "6.1.2500",
                    "name": "[",
                    "english": "left-bracket",
                    "list": "CORE",
                    "basename": "Bracket",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- )"
                        },
                        "plain": {
                            "Execution:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Enter interpretation state. <strong>[</strong> is an immediate word.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>,\n      <strong><a href=\"../usage#usage:compilation\">3.4.5 Compilation</a></strong>,\n      <a href=\"../right-bracket\">6.1.2540 ]</a>,\n      <a href=\"../rationale#rat:core:[\">A.6.1.2500 [</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2500 [ -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>[</strong> <code>4321</code> <a href=\"../right-bracket\">]</a> <a href=\"../core/LITERAL\">LITERAL</a>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2500 [ -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GC3&nbsp;<strong>[</strong>&nbsp;GC1&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../core/LITERAL\">LITERAL</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GC3 -&gt; 58 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "BracketCHAR": {
                    "id": "core:[CHAR]",
                    "number": "6.1.2520",
                    "name": "[CHAR]",
                    "english": "bracket-char",
                    "list": "CORE",
                    "basename": "BracketCHAR",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "Run-time:": "( -- <em>char</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"<spaces>name\" -- )",
                            "Run-time:": "( -- char )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited\n      by a space. Append the run-time semantics given below to the\n      current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>char</em> )\n      <p>\n      Place <em>char</em>, the value of the first character of\n      <em>name</em>, on the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/CHAR\">6.1.0895 CHAR</a>,\n      <a href=\"../rationale#rat:core:[CHAR]\">A.6.1.2520 [CHAR]</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2520 [CHAR] -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>[CHAR]</strong> <em>c</em>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2520 [CHAR] -->\n      <span class=\"tt\">T{ :&nbsp;GC1&nbsp;<strong>[CHAR]</strong>&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ :&nbsp;GC2&nbsp;<strong>[CHAR]</strong>&nbsp;HELLO&nbsp;; -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GC1 -&gt; 58 }T</span> <br>\n      <span class=\"tt\">T{ GC2 -&gt; 48 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "BracketCOMPILE": {
                    "id": "core:[COMPILE]",
                    "number": "6.2.2530",
                    "name": "[COMPILE]",
                    "english": "bracket-compile",
                    "list": "CORE EXT",
                    "basename": "BracketCOMPILE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( \"<spaces>name\" -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Find <em>name</em>. If <em>name</em> has other than default\n      compilation semantics, append them to the current definition;\n      otherwise append the execution semantics of <em>name</em>. An\n      ambiguous condition exists if <em>name</em> is not found.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n This word is obsolescent and is included as a concession to\n      existing implementations.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:core:[COMPILE]\">A.6.2.2530 [COMPILE]</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2530 [COMPILE] -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>name2</code> ...\n      <strong>[COMPILE]</strong> <code>name1</code>\n      ... <a href=\"../core/Semi\">;</a>   <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"rm\">With default compilation semantics</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;[c1]&nbsp;<strong>[COMPILE]</strong>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 123&nbsp;[c1] -&gt; 123&nbsp;123 }T</span>\n      <p>\n      <span class=\"rm\">With an immediate word</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;[c2]&nbsp;<strong>[COMPILE]</strong>&nbsp;[c1]&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 234&nbsp;[c2] -&gt; 234&nbsp;234 }T</span>\n      </p><p>\n      <span class=\"rm\">With special compilation semantics</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;[cif]&nbsp;<strong>[COMPILE]</strong>&nbsp;<a href=\"../core/IF\">IF</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;[c3]&nbsp;&nbsp;[cif]&nbsp;111&nbsp;<a href=\"../core/ELSE\">ELSE</a>&nbsp;222&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;[c3] -&gt; 111 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;[c3] -&gt; 222 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "BracketTick": {
                    "id": "core:[']",
                    "number": "6.1.2510",
                    "name": "[']",
                    "english": "bracket-tick",
                    "list": "CORE",
                    "basename": "BracketTick",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "Run-time:": "( -- <em>xt</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"<spaces>name\" -- )",
                            "Run-time:": "( -- xt )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Find <em>name</em>. Append the run-time semantics given\n      below to the current definition.\n      </p><p>\n      An ambiguous condition exists if <em>name</em> is not found.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>xt</em> )\n      <p>\n      Place <em>name</em>'s execution token <em>xt</em> on the stack.\n      The execution token returned by the compiled phrase\n      \"<strong>[']</strong> <code>X</code>\" is the same value returned by\n      \"<a href=\"../core/Tick\">'</a> <code>X</code>\" outside of compilation state.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/FIND\">6.1.1550 FIND</a>,\n      <a href=\"../rationale#rat:core:'\">A.6.1.0070 '</a>\n      <a href=\"../rationale#rat:core:POSTPONE\">A.6.1.2033 POSTPONE</a>,\n      <a href=\"../rationale#rat:core:[']\">A.6.1.2510 [']</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2510 ['] -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>[']</strong> <em>name</em>\n      ... <a href=\"../core/Semi\">;</a>\n      <p>\n      See:\n      <a href=\"../rationale#rat:core:FIND\">A.6.1.1550 FIND</a>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2510 ['] -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT2&nbsp;<strong>[']</strong>&nbsp;GT1&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GT2&nbsp;<a href=\"../core/EXECUTE\">EXECUTE</a> -&gt; 123 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "CASE": {
                    "id": "core:CASE",
                    "number": "6.2.0873",
                    "name": "CASE",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "CASE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>case-sys</em> )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- case-sys )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>case-sys</em> )\n      <p>\n      Mark the start of the\n      <strong>CASE</strong>...<a href=\"../core/OF\">OF</a>...<a href=\"../core/ENDOF\">ENDOF</a>...<a href=\"../core/ENDCASE\">ENDCASE</a>\n      structure. Append the run-time semantics given below to the\n      current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ENDCASE\">6.2.1342 ENDCASE</a>,\n      <a href=\"../core/ENDOF\">6.2.1343 ENDOF</a>,\n      <a href=\"../core/OF\">6.2.1950 OF</a>,\n      <a href=\"../rationale#rat:core:CASE\">A.6.2.0873 CASE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0873 CASE -->\n      Typical use:\n            <div class=\"quote\">\n\n        <a href=\"../core/Colon\">:</a> <code>X</code> ... <br>\n        &nbsp;&nbsp; <strong>CASE</strong> <br>\n        &nbsp;&nbsp;   <em>test1</em> <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;   <em>testn</em> <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;   ... <a href=\"../core/p\">(</a> default ) <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> ... <br>\n        <a href=\"../core/Semi\">;</a>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> cs1 <strong>CASE</strong> 1 <a href=\"../core/OF\">OF</a> 111 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp; 2 <a href=\"../core/OF\">OF</a> 222 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp; 3 <a href=\"../core/OF\">OF</a> 333 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> 999 <a href=\"../core/Rfrom\">R&gt;</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ 1&nbsp;cs1 -&gt; 111 }T</span> <br>\n        <span class=\"tt\">T{ 2&nbsp;cs1 -&gt; 222 }T</span> <br>\n        <span class=\"tt\">T{ 3&nbsp;cs1 -&gt; 333 }T</span> <br>\n        <span class=\"tt\">T{ 4&nbsp;cs1 -&gt; 999 }T</span> <br>\n        <a href=\"../core/Colon\">:</a> cs2 <a href=\"../core/toR\">&gt;R</a> <strong>CASE</strong> <br>\n        &nbsp;&nbsp; -1 <a href=\"../core/OF\">OF</a> <strong>CASE</strong> <a href=\"../core/RFetch\">R@</a> 1 <a href=\"../core/OF\">OF</a> 100 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 <a href=\"../core/OF\">OF</a> 200 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> -300 <a href=\"../core/Rfrom\">R&gt;</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp; -2 <a href=\"../core/OF\">OF</a> <strong>CASE</strong> <a href=\"../core/RFetch\">R@</a> 1 <a href=\"../core/OF\">OF</a> -99  <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> -199 <a href=\"../core/Rfrom\">R&gt;</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> 299 <a href=\"../core/Rfrom\">R&gt;</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/DROP\">DROP</a>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ -1&nbsp;1&nbsp;cs2 -&gt; &nbsp;100 }T</span> <br>\n        <span class=\"tt\">T{ -1&nbsp;2&nbsp;cs2 -&gt; &nbsp;200 }T</span> <br>\n        <span class=\"tt\">T{ -1&nbsp;3&nbsp;cs2 -&gt; -300 }T</span> <br>\n        <span class=\"tt\">T{ -2&nbsp;1&nbsp;cs2 -&gt; &nbsp;-99 }T</span> <br>\n        <span class=\"tt\">T{ -2&nbsp;2&nbsp;cs2 -&gt; -199 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;2&nbsp;cs2 -&gt; &nbsp;299 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "CComma": {
                    "id": "core:C,",
                    "number": "6.1.0860",
                    "name": "C,",
                    "english": "c-comma",
                    "list": "CORE",
                    "basename": "CComma",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>char</em> -- )"
                        },
                        "plain": {
                            " ": "( char -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>char</em> -- )\n      <p>\n      Reserve space for one character in the data space and store\n      <em>char</em> in the space. If the data-space pointer is character\n      aligned when <strong>C,</strong> begins execution, it will remain character\n      aligned when <strong>C,</strong> finishes execution.\n      An ambiguous condition exists if the data-space pointer is not\n      character-aligned prior to execution of <strong>C,</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:dataspace\">3.3.3 Data space</a></strong>,\n      <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0860 C, -->\n            <div class=\"tt\">\n<a href=\"../core/HERE\">HERE</a> 1 <strong>C,</strong> <br>\n        <a href=\"../core/HERE\">HERE</a> 2 <strong>C,</strong> <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> 2NDC <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> 1STC\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1STC&nbsp;2NDC&nbsp;<a href=\"../core/Uless\">U&lt;</a> -&gt; &lt;TRUE&gt; }T</span>\t<a href=\"../core/bs\">\\</a> HERE MUST GROW WITH ALLOT <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1STC&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a> -&gt; &nbsp;2NDC&nbsp; }T</span>\t\t<a href=\"../core/bs\">\\</a> ... BY ONE CHAR <br>\n        <span class=\"tt\">T{ &nbsp;1STC&nbsp;1&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<a href=\"../core/Plus\">+</a> -&gt; &nbsp;2NDC&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 1STC&nbsp;<a href=\"../core/CFetch\">C@</a>&nbsp;2NDC&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;1&nbsp;2&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;1STC&nbsp;<a href=\"../core/CStore\">C!</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 1STC&nbsp;<a href=\"../core/CFetch\">C@</a>&nbsp;2NDC&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;3&nbsp;2&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;2NDC&nbsp;<a href=\"../core/CStore\">C!</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 1STC&nbsp;<a href=\"../core/CFetch\">C@</a>&nbsp;2NDC&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;3&nbsp;4&nbsp; }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "CELLPlus": {
                    "id": "core:CELL+",
                    "number": "6.1.0880",
                    "name": "CELL+",
                    "english": "cell-plus",
                    "list": "CORE",
                    "basename": "CELLPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>a-addr<sub>1</sub></em> -- <em>a-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( a-addr1 -- a-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>a-addr<sub>1</sub></em> -- <em>a-addr<sub>2</sub></em> )\n      <p>\n      Add the size in address units of a cell to <em>a-addr<sub>1</sub></em>, giving\n      <em>a-addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>,\n      <a href=\"../rationale#rat:core:CELL+\">A.6.1.0880 CELL+</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0880 CELL+ -->\n      As with <a href=\"../core/ALIGN\">ALIGN</a> and <a href=\"../core/ALIGNED\">ALIGNED</a>, the words <a href=\"../core/CELLS\">CELLS</a>\n      and <strong>CELL+</strong> were added to aid in transportability across\n      systems with different cell sizes. They are intended to be used\n      in manipulating indexes and addresses in integral numbers of\n      cell-widths. Example:\n            <div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../double/TwoVARIABLE\">2VARIABLE</a> DATA\n          <p>\n          0 100 DATA <a href=\"../core/TwoStore\">2!</a>\n          </p><p>\n          DATA <a href=\"../core/Fetch\">@</a> <a href=\"../core/d\">.</a> 100\n          </p><p>\n          DATA <strong>CELL+</strong> <a href=\"../core/Fetch\">@</a> <a href=\"../core/d\">.</a> 0\n          \n          </p></div>\n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0880 CELL+ -->\n      See <a href=\"../testsuite#test:core:,\">F.6.1.0150 ,</a>.\n      \n      \n      "
                        }
                    }
                },
                "CELLS": {
                    "id": "core:CELLS",
                    "number": "6.1.0890",
                    "name": "CELLS",
                    "english": " ",
                    "list": "CORE",
                    "basename": "CELLS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 -- n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )\n      <p>\n      <em>n<sub>2</sub></em> is the size in address units of <em>n<sub>1</sub></em> cells.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:CELL+\">A.6.1.0880 CELL+</a>, <a href=\"../rationale#rat:core:CELLS\">A.6.1.0890 CELLS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0890 CELLS -->\n      Example:\n            <div class=\"quote\">\n\n        <a href=\"../core/CREATE\">CREATE</a> <code>NUMBERS</code>  \n        <code>100</code> <strong>CELLS</strong> <a href=\"../core/ALLOT\">ALLOT</a>\n        \n        </div>\n      Allots space in the array <code>NUMBERS</code> for 100 cells\n      of data.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0890 CELLS -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> BITS <a href=\"../core/p\">(</a> X -- U ) <br>\n        &nbsp;&nbsp; 0 <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> MSB <a href=\"../core/AND\">AND</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/TwoTimes\">2*</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/DROP\">DROP</a>\n        <a href=\"../core/Semi\">;</a>\n        <p>\n        <a href=\"../core/p\">(</a> CELLS &gt;= 1 AU, INTEGRAL MULTIPLE OF CHAR SIZE, &gt;= 16 BITS ) <br>\n        <span class=\"tt\">T{ 1&nbsp;<strong>CELLS</strong>&nbsp;1&nbsp;<a href=\"../core/less\">&lt;</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &lt;FALSE&gt; }T</span> <br>\n        <span class=\"tt\">T{ 1&nbsp;<strong>CELLS</strong>&nbsp;1&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<a href=\"../core/MOD\">MOD</a> -&gt; &nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 1S&nbsp;BITS&nbsp;10&nbsp;<a href=\"../core/less\">&lt;</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &lt;FALSE&gt; }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "CFetch": {
                    "id": "core:C@",
                    "number": "6.1.0870",
                    "name": "C@",
                    "english": "c-fetch",
                    "list": "CORE",
                    "basename": "CFetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr</em> -- <em>char</em> )"
                        },
                        "plain": {
                            " ": "( c-addr -- char )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr</em> -- <em>char</em> )\n      <p>\n      Fetch the character stored at <em>c-addr</em>. When the cell size is\n      greater than character size, the unused high-order bits are all\n      zeroes.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.0870 C@ -->\n      See <a href=\"../testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n      \n      \n      "
                        }
                    }
                },
                "CHAR": {
                    "id": "core:CHAR",
                    "number": "6.1.0895",
                    "name": "CHAR",
                    "english": "char",
                    "list": "CORE",
                    "basename": "CHAR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- <em>char</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- char )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- <em>char</em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Put the value of its first character onto the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/BracketCHAR\">6.1.2520 [CHAR]</a>,\n      <a href=\"../rationale#rat:core:CHAR\">A.6.1.0895 CHAR</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0895 CHAR -->\n      Typical use: ...\n      <strong>CHAR</strong> <code>A</code> <a href=\"../core/CONSTANT\">CONSTANT</a> <code>\"A\"</code> ...\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0895 CHAR -->\n      <span class=\"tt\">T{ <strong>CHAR</strong>&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 58 }T</span> <br>\n      <span class=\"tt\">T{ <strong>CHAR</strong>&nbsp;HELLO -&gt; 48 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "CHARPlus": {
                    "id": "core:CHAR+",
                    "number": "6.1.0897",
                    "name": "CHAR+",
                    "english": "char-plus",
                    "list": "CORE",
                    "basename": "CHARPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub></em> -- <em>c-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 -- c-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub></em> -- <em>c-addr<sub>2</sub></em> )\n      <p>\n      Add the size in address units of a character to\n      <em>c-addr<sub>1</sub></em>, giving <em>c-addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0897 CHAR+ -->\n      See <a href=\"../testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n      \n      \n      "
                        }
                    }
                },
                "CHARS": {
                    "id": "core:CHARS",
                    "number": "6.1.0898",
                    "name": "CHARS",
                    "english": "chars",
                    "list": "CORE",
                    "basename": "CHARS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 -- n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )\n      <p>\n      <em>n<sub>2</sub></em> is the size in address units of <em>n<sub>1</sub></em>\n      characters.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0898 CHARS -->\n            <div class=\"tt\">\n<a href=\"../core/p\">(</a> CHARACTERS &gt;= 1 AU, &lt;= SIZE OF CELL, &gt;= 8 BITS ) <br>\n        <span class=\"tt\">T{ 1&nbsp;<strong>CHARS</strong>&nbsp;1&nbsp;<a href=\"../core/less\">&lt;</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &lt;FALSE&gt; }T</span> <br>\n        <span class=\"tt\">T{ 1&nbsp;<strong>CHARS</strong>&nbsp;1&nbsp;<a href=\"../core/CELLS\">CELLS</a>&nbsp;<a href=\"../core/more\">&gt;</a> -&gt; &lt;FALSE&gt; }T</span> <br>\n        <a href=\"../core/p\">(</a> TBD: HOW TO FIND NUMBER OF BITS? )\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "COMPILEComma": {
                    "id": "core:COMPILE,",
                    "number": "6.2.0945",
                    "name": "COMPILE,",
                    "english": "compile-comma",
                    "list": "CORE EXT",
                    "basename": "COMPILEComma",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>xt</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( xt -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>xt</em> -- )\n      <p>\n      Append the execution semantics of the definition represented\n      by <em>xt</em> to the execution semantics of the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:COMPILE,\">A.6.2.0945 COMPILE,</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0945 COMPILE, -->\n      <strong>COMPILE,</strong> is the compilation equivalent of <a href=\"../core/EXECUTE\">EXECUTE</a>.\n      <p>\n      In traditional threaded-code implementations, compilation is\n      performed by <a href=\"../core/Comma\">,</a> (comma). This usage is not portable; it\n      doesn't work for subroutine-threaded, native code, or\n      relocatable implementations. Use of <strong>COMPILE,</strong> is portable.\n      </p><p>\n      In most systems it is possible to implement <strong>COMPILE,</strong> so\n      it will generate code that is optimized to the same extent as\n      code that is generated by the normal compilation process.\n      However, in some implementations there are two different\n      \"tokens\" corresponding to a particular definition name:\n      the normal \"execution token\" that is used while interpreting\n      or with <a href=\"../core/EXECUTE\">EXECUTE</a>, and another \"compilation token\" that\n      is used while compiling. It is not always possible to obtain\n      the compilation token from the execution token. In these\n      implementations, <strong>COMPILE,</strong> might not generate code that\n      is as efficient as normally compiled code.\n      </p><p>\n      The intention is that <strong>COMPILE,</strong> can be used as follows to write\n      the classic interpreter/compiler loop:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n... \t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/p\">(</a> c-addr ) <br>\n          <a href=\"../core/FIND\">FIND</a> <a href=\"../core/qDUP\">?DUP</a> <a href=\"../core/IF\">IF</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> xt +-1 ) <br>\n          &nbsp;&nbsp; <a href=\"../core/STATE\">STATE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> xt +-1 ) <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Zeromore\">0&gt;</a> <a href=\"../core/IF\">IF</a>  \n          <a href=\"../core/EXECUTE\">EXECUTE</a>  \n          <a href=\"../core/ELSE\">ELSE</a>  \n          <strong>COMPILE,</strong>  \n          <a href=\"../core/THEN\">THEN</a>\t\t\t\t\t\t\t\t&nbsp;\t<a href=\"../core/p\">(</a> ??? ) <br>\n          &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> xt +-1 ) <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> <a href=\"../core/EXECUTE\">EXECUTE</a> \t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> ??? ) <br>\n          &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n          <a href=\"../core/ELSE\">ELSE</a> \t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr ) <br>\n          &nbsp;&nbsp; <a href=\"../core/p\">(</a> <span class=\"rm\">whatever you do for an undefined word</span> ) <br>\n          <a href=\"../core/THEN\">THEN</a> <br>\n          ...\n          \n          </div>\n        </div>\n      <p>\n      Thus the interpretation semantics are left undefined, as <strong>COMPILE,</strong>\n      will not be executed during interpretation.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/ColonNONAME\">:NONAME</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/CONSTANT\">CONSTANT</a> dup+ <br>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;q&nbsp;dup+&nbsp;<strong>COMPILE,</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;as&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;q&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ 123&nbsp;as -&gt; 246 }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "CONSTANT": {
                    "id": "core:CONSTANT",
                    "number": "6.1.0950",
                    "name": "CONSTANT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "CONSTANT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>x</em> )"
                        },
                        "plain": {
                            " ": "( x \"<spaces>name\" -- )",
                            "name Execution:": "( -- x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Create a definition for <em>name</em> with the execution\n      semantics defined below.\n      </p><p>\n      <em>name</em> is referred to as a \"constant\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      <p>\n      Place <em>x</em> on the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:core:CONSTANT\">A.6.1.0950 CONSTANT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0950 CONSTANT -->\n      Typical use: ...\n      <a href=\"../core/DECIMAL\">DECIMAL</a> <code>10</code> <strong>CONSTANT</strong> <code>TEN</code>\n      ...\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0950 CONSTANT -->\n      <span class=\"tt\">T{ 123&nbsp;<strong>CONSTANT</strong>&nbsp;X123 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ X123 -&gt; 123 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;EQU&nbsp;<strong>CONSTANT</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ X123&nbsp;EQU&nbsp;Y123 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ Y123 -&gt; 123 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "COUNT": {
                    "id": "core:COUNT",
                    "number": "6.1.0980",
                    "name": "COUNT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "COUNT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub></em> -- <em>c-addr<sub>2</sub> u</em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 -- c-addr2 u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub></em> -- <em>c-addr<sub>2</sub> u</em> )\n      <p>\n      Return the character string specification for the counted\n      string stored at <em>c-addr<sub>1</sub></em>. <em>c-addr<sub>2</sub></em> is the\n      address of the first character after <em>c-addr<sub>1</sub></em>. <em>u</em>\n      is the contents of the character at <em>c-addr<sub>1</sub></em>, which is\n      the length in characters of the string at <em>c-addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0980 COUNT -->\n      <span class=\"tt\">T{ GT1STRING&nbsp;<strong>COUNT</strong> -&gt; GT1STRING&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a>&nbsp;3 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "CR": {
                    "id": "core:CR",
                    "number": "6.1.0990",
                    "name": "CR",
                    "english": "c-r",
                    "list": "CORE",
                    "basename": "CR",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Cause subsequent output to appear at the beginning of the next\n      line.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0990 CR -->\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      "
                        }
                    }
                },
                "CREATE": {
                    "id": "core:CREATE",
                    "number": "6.1.1000",
                    "name": "CREATE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "CREATE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Create a definition for <em>name</em> with the execution\n      semantics defined below. If the data-space pointer is not\n      aligned, reserve enough data space to align it. The new\n      data-space pointer defines <em>name</em>'s data field.\n      <strong>CREATE</strong> does not allocate data space in <em>name</em>'s\n      data field.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of <em>name</em>'s data field.\n      The execution semantics of <em>name</em> may be extended by\n      using <a href=\"../core/DOES\">DOES&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:dataspace\">3.3.3 Data space</a></strong>,\n      <a href=\"../core/DOES\">6.1.1250 DOES&gt;</a>,\n      <a href=\"../rationale#rat:core:CREATE\">A.6.1.1000 CREATE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1000 CREATE -->\n      The data-field address of a word defined by <strong>CREATE</strong> is\n      given by the data-space pointer immediately following the\n      execution of <strong>CREATE</strong>.\n      <p>\n      Reservation of data field space is typically done with\n      <a href=\"../core/ALLOT\">ALLOT</a>.\n      </p><p>\n      Typical use: ...\n      <strong>CREATE</strong> <code>SOMETHING</code> ...\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1000 CREATE -->\n      See <a href=\"../testsuite#test:core:toBODY\">F.6.1.0550 &gt;BODY</a> and\n      <a href=\"../testsuite#test:core:DOES\">F.6.1.1250 DOES&gt;</a>.\n      \n      \n      "
                        }
                    }
                },
                "CStore": {
                    "id": "core:C!",
                    "number": "6.1.0850",
                    "name": "C!",
                    "english": "c-store",
                    "list": "CORE",
                    "basename": "CStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>char c-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( char c-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>char c-addr</em> -- )\n      <p>\n      Store <em>char</em> at <em>c-addr</em>. When character size is smaller\n      than cell size, only the number of low-order bits corresponding to\n      character size are transferred.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0850 C! -->\n      See <a href=\"../testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n      \n      \n      "
                        }
                    }
                },
                "Colon": {
                    "id": "core::",
                    "number": "6.1.0450",
                    "name": ":",
                    "english": "colon",
                    "list": "CORE",
                    "basename": "Colon",
                    "stackEffect": {
                        "html": {
                            " ": "( C: <em>\"&lt;spaces&gt;name\"</em> -- <em>colon-sys</em> )",
                            "name Execution:": "( <em>i * x</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( C: \"<spaces>name\" -- colon-sys )",
                            "name Execution:": "( i * x -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( C: <em>\"&lt;spaces&gt;name\"</em> -- <em>colon-sys</em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Create a definition for <em>name</em>, called a \"colon\n      definition\". Enter compilation state and start the current\n      definition, producing <em>colon-sys</em>. Append the initiation\n      semantics given below to the current definition.\n      </p><p>\n      The execution semantics of <em>name</em> will be determined by the\n      words compiled into the body of the definition. The current\n      definition shall not be findable in the dictionary until it is\n      ended (or until the execution of <a href=\"../core/DOES\">DOES&gt;</a> in some systems).\n      </p><p>\n        \n      </p>"
                        },
                        "Initiation:": {
                            "name": "Initiation:",
                            "html": "\n\n ( <em>i * x</em> -- <em>i * x</em> )\n      ( R: -- <em>nest-sys</em> )\n      <p>\n      Save implementation-dependent information <em>nest-sys</em>\n      about the calling definition. The stack effects <em>i * x</em>\n      represent arguments to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> )\n      <p>\n      Execute the definition <em>name</em>. The stack effects\n      <em>i * x</em> and <em>j * x</em> represent arguments to and\n      results from <em>name</em>, respectively.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:interpret\">3.4.3.2 Interpretation semantics</a></strong>,\n      <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <strong><a href=\"../usage#usage:compilation\">3.4.5 Compilation</a></strong>,\n      <a href=\"../core/DOES\">6.1.1250 DOES&gt;</a>,\n      <a href=\"../core/Bracket\">6.1.2500 [</a>,\n      <a href=\"../right-bracket\">6.1.2540 ]</a>,\n      <a href=\"../tools/SemiCODE\">15.6.2.0470 ;CODE</a>,\n      <a href=\"../rationale#rat:core::\">A.6.1.0450 :</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0450 : -->\n      Typical use:\n      <strong>:</strong> <em>name</em> ... <a href=\"../core/Semi\">;</a>\n      <p>\n      In Forth 83, this word was specified to alter the search order.\n      This specification is explicitly removed in this standard. We\n      believe that in most cases this has no effect; however, systems\n      that allow many search orders found the Forth-83 behavior of\n      colon very undesirable.\n      </p><p>\n      Note that colon does not itself invoke the compiler. Colon sets\n      compilation state so that later words in the parse area are\n      compiled.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0450 : -->\n      <span class=\"tt\">T{ <strong>:</strong>&nbsp;NOP&nbsp;<strong>:</strong>&nbsp;<a href=\"../core/POSTPONE\">POSTPONE</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ NOP&nbsp;NOP1&nbsp;NOP&nbsp;NOP2 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ NOP1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ NOP2 -&gt;  }T</span>\n      <p>\n      The following tests the dictionary search order:\n      </p><p>\n      <span class=\"tt\">T{ <strong>:</strong>&nbsp;GDX&nbsp;&nbsp;&nbsp;123&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;&nbsp;&nbsp;&nbsp;<strong>:</strong>&nbsp;GDX&nbsp;&nbsp;&nbsp;GDX&nbsp;234&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GDX -&gt; 123&nbsp;234 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "ColonNONAME": {
                    "id": "core::NONAME",
                    "number": "6.2.0455",
                    "name": ":NONAME",
                    "english": "colon-no-name",
                    "list": "CORE EXT",
                    "basename": "ColonNONAME",
                    "stackEffect": {
                        "html": {
                            " ": "( C: -- <em>colon-sys</em> )\n      ( S: -- <em>xt</em> )",
                            "xt Execution:": "( <em>i * x</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( C: -- colon-sys )\n( S: -- xt )",
                            "xt Execution:": "( i * x -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( C: -- <em>colon-sys</em> )\n      ( S: -- <em>xt</em> )\n      <p>\n      Create an execution token <em>xt</em>, enter compilation state\n      and start the current definition, producing <em>colon-sys</em>.\n      Append the initiation semantics given below to the current\n      definition.\n      </p><p>\n      The execution semantics of <em>xt</em> will be determined by the\n      words compiled into the body of the definition. This definition\n      can be executed later by using <em>xt</em> <a href=\"../core/EXECUTE\">EXECUTE</a>.\n      </p><p>\n      If the control-flow stack is implemented using the data stack,\n      <em>colon-sys</em> shall be the topmost item on the data stack.\n      See <strong><a href=\"../usage#usage:controlstack\">3.2.3.2 Control-flow stack</a></strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "Initiation:": {
                            "name": "Initiation:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>i * x</em> )\n      ( R: -- <em>nest-sys</em> )\n      <p>\n      Save implementation-dependent information <em>nest-sys</em>\n      about the calling definition. The stack effects <em>i * x</em>\n      represent arguments to <em>xt</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "xt Execution:": {
                            "name": "xt Execution:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> )\n      <p>\n      Execute the definition specified by <em>xt</em>. The stack\n      effects <em>i * x</em> and <em>j * x</em> represent arguments to\n      and results from <em>xt</em>, respectively.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core::NONAME\">A.6.2.0455 :NONAME</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0455 :NONAME -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/DEFER\">DEFER</a> <code>print</code> <br>\n      \n      &nbsp;&nbsp; <strong>:NONAME</strong> <a href=\"../core/p\">(</a> n -- ) <a href=\"../core/d\">.</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IS\">IS</a> <code>print</code>\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n <a href=\"../core/RECURSE\">RECURSE</a> and <a href=\"../core/DOES\">DOES&gt;</a> are allowed within a <strong>:NONAME</strong> definition.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <a href=\"../core/VARIABLE\">VARIABLE</a> nn1 <br>\n      <a href=\"../core/VARIABLE\">VARIABLE</a> nn2 <br>\n      <span class=\"tt\">T{ <strong>:NONAME</strong>&nbsp;1234&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;nn1&nbsp;<a href=\"../core/Store\">!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <strong>:NONAME</strong>&nbsp;9876&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;nn2&nbsp;<a href=\"../core/Store\">!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ nn1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/EXECUTE\">EXECUTE</a> -&gt; 1234 }T</span> <br>\n      <span class=\"tt\">T{ nn2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/EXECUTE\">EXECUTE</a> -&gt; 9876 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Comma": {
                    "id": "core:,",
                    "number": "6.1.0150",
                    "name": ",",
                    "english": "comma",
                    "list": "CORE",
                    "basename": "Comma",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- )"
                        },
                        "plain": {
                            " ": "( x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- )\n      <p>\n      Reserve one cell of data space and store <em>x</em> in the cell.\n      If the data-space pointer is aligned when <strong>,</strong> begins\n      execution, it will remain aligned when <strong>,</strong> finishes\n      execution. An ambiguous condition exists if the data-space\n      pointer is not aligned prior to execution of <strong>,</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:dataspace\">3.3.3 Data space</a></strong>,\n      <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>,\n      <a href=\"../rationale#rat:core:,\">A.6.1.0150 ,</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0150 , -->\n      The use of <strong>,</strong> (comma) for compiling execution tokens is\n      not portable.\n      <p>\n      See: <a href=\"../core/COMPILEComma\">6.2.0945 COMPILE,</a>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0150 , -->\n            <div class=\"tt\">\n<a href=\"../core/HERE\">HERE</a> 1 <strong>,</strong> <br>\n        <a href=\"../core/HERE\">HERE</a> 2 <strong>,</strong> <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> 2ND <br>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> 1ST\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;2ND&nbsp;<a href=\"../core/Uless\">U&lt;</a> -&gt; &lt;TRUE&gt; }T</span> <a href=\"../core/bs\">\\</a> HERE MUST GROW WITH ALLOT <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/CELLPlus\">CELL+</a>&nbsp; -&gt; 2ND }T</span>    <a href=\"../core/bs\">\\</a> ... BY ONE CELL <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;1ST&nbsp;1&nbsp;<a href=\"../core/CELLS\">CELLS</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp; -&gt; 2ND }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;2ND&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp; -&gt; 1&nbsp;2 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;1ST&nbsp;<a href=\"../core/Store\">!</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;2ND&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp; -&gt; 5&nbsp;2 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;2ND&nbsp;<a href=\"../core/Store\">!</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;2ND&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp; -&gt; 5&nbsp;6 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 6&nbsp;5 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;1&nbsp;1ST&nbsp;<a href=\"../core/TwoStore\">2!</a> -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 2&nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ 1S&nbsp;1ST&nbsp;<a href=\"../core/Store\">!</a>&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp; -&gt; 1S&nbsp; }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> CAN STORE CELL-WIDE VALUE\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "Cq": {
                    "id": "core:Cq",
                    "number": "6.2.0855",
                    "name": "C\"",
                    "english": "c-quote",
                    "list": "CORE EXT",
                    "basename": "Cq",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( -- <em>c-addr</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( -- c-addr )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double-quote) and\n      append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>c-addr</em> )\n      <p>\n      Return <em>c-addr</em>, a counted string consisting of the\n      characters <em>ccc</em>. A program shall not alter the returned\n      string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/Sq\">6.1.2165 S\"</a>,\n      <a href=\"../file/Sq\">11.6.1.2165 S\"</a>,\n      <a href=\"../rationale#rat:core:Cq\">A.6.2.0855 C\"</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0855 C\" -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>C\"</strong> <em>ccc</em><code>\"</code>\n      ... <a href=\"../core/Semi\">;</a>\n      <p>\n      See: <strong><a href=\"../rationale#rat:cstring\">A.3.1.3.4 Counted strings</a></strong>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cq1&nbsp;<strong>C\"</strong>&nbsp;123<code>\"</code>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cq2&nbsp;<strong>C\"</strong>&nbsp;<code>\"</code>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;&nbsp;&nbsp; -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ cq1&nbsp;<a href=\"../core/COUNT\">COUNT</a>&nbsp;<a href=\"../core/EVALUATE\">EVALUATE</a> -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ cq2&nbsp;<a href=\"../core/COUNT\">COUNT</a>&nbsp;<a href=\"../core/EVALUATE\">EVALUATE</a> -&gt; &nbsp;&nbsp;&nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DECIMAL": {
                    "id": "core:DECIMAL",
                    "number": "6.1.1170",
                    "name": "DECIMAL",
                    "english": " ",
                    "list": "CORE",
                    "basename": "DECIMAL",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Set the numeric conversion radix to ten (decimal).\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1170 DECIMAL -->\n      See <a href=\"../testsuite#test:core:BASE\">F.6.1.0750 BASE</a>.\n      \n      \n      "
                        }
                    }
                },
                "DEFER": {
                    "id": "core:DEFER",
                    "number": "6.2.1173",
                    "name": "DEFER",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "DEFER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( <em>i * x</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( i * x -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters.  Parse <em>name</em> delimited by a\n      space.  Create a definition for <em>name</em> with the execution\n      semantics defined below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> )\n      <p>\n      Execute the <em>xt</em> that <em>name</em> is set to execute.\n      An ambiguous condition exists if <em>name</em> has not been\n      set to execute an <em>xt</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ACTION-OF\">6.2.0698 ACTION-OF</a>,\n      <a href=\"../core/DEFERStore\">6.2.1175 DEFER!</a>,\n      <a href=\"../core/DEFERFetch\">6.2.1177 DEFER@</a>,\n      <a href=\"../core/IS\">6.2.1725 IS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.6.2.---- DEFER -->\n      <a href=\"../core/Colon\">:</a> <strong>DEFER</strong> <a href=\"../core/p\">(</a> \"name\" -- ) <br>\n      &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/BracketTick\">[']</a> <a href=\"../core/ABORT\">ABORT</a> <a href=\"../core/Comma\">,</a> <br>\n      <a href=\"../core/DOES\">DOES&gt;</a> <a href=\"../core/p\">(</a> ... -- ... ) <br>\n      &nbsp;&nbsp; <a href=\"../core/Fetch\">@</a> <a href=\"../core/EXECUTE\">EXECUTE</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T 6.2.---- DEFER -->\n      <span class=\"tt\">T{ <strong>DEFER</strong>&nbsp;defer2 -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a>&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;defer2&nbsp;<a href=\"../core/DEFERStore\">DEFER!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;2&nbsp;3&nbsp;defer2 -&gt; 6 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/IS\">IS</a>&nbsp;defer2 -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;defer2 -&gt; 3 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DEFERFetch": {
                    "id": "core:DEFER@",
                    "number": "6.2.1177",
                    "name": "DEFER@",
                    "english": "defer-fetch",
                    "list": "CORE EXT",
                    "basename": "DEFERFetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xt<sub>1</sub></em> -- <em>xt<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xt1 -- xt2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xt<sub>1</sub></em> -- <em>xt<sub>2</sub></em> )\n      <p>\n      <em>xt<sub>2</sub></em> is the execution token <em>xt<sub>1</sub></em> is set to execute.\n      An ambiguous condition exists if <em>xt<sub>1</sub></em> is not\n      the execution token of a word defined by <a href=\"../core/DEFER\">DEFER</a>,\n      or if <em>xt<sub>1</sub></em> has not been set to execute an xt. \n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ACTION-OF\">6.2.0698 ACTION-OF</a>,\n      <a href=\"../core/DEFER\">6.2.1173 DEFER</a>,\n      <a href=\"../core/DEFERStore\">6.2.1175 DEFER!</a>,\n      <a href=\"../core/IS\">6.2.1725 IS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.6.2.---- DEFER@ -->\n      <a href=\"../core/Colon\">:</a> <strong>DEFER@</strong> <a href=\"../core/p\">(</a> xt1 -- xt2 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/toBODY\">&gt;BODY</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.---- DEFER@ -->\n      <span class=\"tt\">T{ <a href=\"../core/DEFER\">DEFER</a>&nbsp;defer4 -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a>&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;defer4&nbsp;<a href=\"../core/DEFERStore\">DEFER!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;3&nbsp;defer4 -&gt; 6 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;defer4&nbsp;<strong>DEFER@</strong> -&gt; <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a> }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/IS\">IS</a>&nbsp;defer4 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;defer4 -&gt; 3 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;defer4&nbsp;<strong>DEFER@</strong> -&gt; <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a> }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DEFERStore": {
                    "id": "core:DEFER!",
                    "number": "6.2.1175",
                    "name": "DEFER!",
                    "english": "defer-store",
                    "list": "CORE EXT",
                    "basename": "DEFERStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xt<sub>2</sub> xt<sub>1</sub></em> -- )"
                        },
                        "plain": {
                            " ": "( xt2 xt1 -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xt<sub>2</sub> xt<sub>1</sub></em> -- )\n      <p>\n      Set the word <em>xt<sub>1</sub></em> to execute <em>xt<sub>2</sub></em>.  An ambiguous\n      condition exists if <em>xt<sub>1</sub></em> is not for a word defined by\n      <a href=\"../core/DEFER\">DEFER</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ACTION-OF\">6.2.0698 ACTION-OF</a>,\n      <a href=\"../core/DEFER\">6.2.1173 DEFER</a>,\n      <a href=\"../core/DEFERFetch\">6.2.1177 DEFER@</a>,\n      <a href=\"../core/IS\">6.2.1725 IS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.6.2.---- DEFER! -->\n      <a href=\"../core/Colon\">:</a> <strong>DEFER!</strong> <a href=\"../core/p\">(</a> xt2 xt1 -- ) <br>\n      &nbsp;&nbsp; <a href=\"../core/toBODY\">&gt;BODY</a> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.---- DEFER! -->\n      <span class=\"tt\">T{ <a href=\"../core/DEFER\">DEFER</a>&nbsp;defer3 -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a>&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;defer3&nbsp;<strong>DEFER!</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;3&nbsp;defer3 -&gt; 6 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;defer3&nbsp;<strong>DEFER!</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;defer3 -&gt; 3 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DEPTH": {
                    "id": "core:DEPTH",
                    "number": "6.1.1200",
                    "name": "DEPTH",
                    "english": " ",
                    "list": "CORE",
                    "basename": "DEPTH",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>+n</em> )"
                        },
                        "plain": {
                            " ": "( -- +n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>+n</em> )\n      <p>\n      <em>+n</em> is the number of single-cell values contained in the\n      data stack before <em>+n</em> was placed on the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1200 DEPTH -->\n      <span class=\"tt\">T{ 0&nbsp;1&nbsp;<strong>DEPTH</strong> -&gt; 0&nbsp;1&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;<strong>DEPTH</strong> -&gt; 0&nbsp;1&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;<strong>DEPTH</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DO": {
                    "id": "core:DO",
                    "number": "6.1.1240",
                    "name": "DO",
                    "english": " ",
                    "list": "CORE",
                    "basename": "DO",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>do-sys</em> )",
                            "Run-time:": "( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- )\n      ( R: -- <em>loop-sys</em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- do-sys )",
                            "Run-time:": "( n1 | u1 n2 | u2 -- )\n( R: -- loop-sys )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>do-sys</em> )\n      <p>\n      Place <em>do-sys</em> onto the control-flow stack. Append the\n      run-time semantics given below to the current definition. The\n      semantics are incomplete until resolved by a consumer of\n      <em>do-sys</em> such as <a href=\"../core/LOOP\">LOOP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- )\n      ( R: -- <em>loop-sys</em> )\n      <p>\n      Set up loop control parameters with index <em>n<sub>2</sub> | u<sub>2</sub></em> and\n      limit <em>n<sub>1</sub> | u<sub>1</sub></em>. An ambiguous condition exists if\n      <em>n<sub>1</sub> | u<sub>1</sub></em> and <em>n<sub>2</sub> | u<sub>2</sub></em> are not both the same\n      type. Anything already on the return stack becomes unavailable\n      until the loop-control parameters are discarded.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:controlstack\">3.2.3.2 Control-flow stack</a></strong>,\n      <a href=\"../core/PlusLOOP\">6.1.0140 +LOOP</a>,\n      <a href=\"../core/LOOP\">6.1.1800 LOOP</a>,\n      <a href=\"../rationale#rat:core:DO\">A.6.1.1240 DO</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1240 DO -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>limit</em> <em>first</em> <strong>DO</strong>\n      ...\n      <a href=\"../core/LOOP\">LOOP</a>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      or\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>limit</em> <em>first</em> <strong>DO</strong>\n      ...\n      <em>step</em> <a href=\"../core/PlusLOOP\">+LOOP</a>\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1240 DO -->\n      See <a href=\"../testsuite#test:core:LOOP\">F.6.1.1800 LOOP</a>,\n      <a href=\"../testsuite#test:core:+LOOP\">F.6.1.0140 +LOOP</a>,\n      <a href=\"../testsuite#test:core:J\">F.6.1.1730 J</a>,\n      <a href=\"../testsuite#test:core:LEAVE\">F.6.1.1760 LEAVE</a>,\n      <a href=\"../testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a>.\n      \n      \n      "
                        }
                    }
                },
                "DOES": {
                    "id": "core:DOES",
                    "number": "6.1.1250",
                    "name": "DOES>",
                    "english": "does",
                    "list": "CORE",
                    "basename": "DOES",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>colon-sys<sub>1</sub></em> -- <em>colon-sys<sub>2</sub></em> )",
                            "Run-time:": "( -- )\n      ( R: <em>nest-sys<sub>1</sub></em> -- )",
                            "name Execution:": "( <em>i * x</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: colon-sys1 -- colon-sys2 )",
                            "Run-time:": "( -- )\n( R: nest-sys1 -- )",
                            "name Execution:": "( i * x -- j * x )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>colon-sys<sub>1</sub></em> -- <em>colon-sys<sub>2</sub></em> )\n      <p>\n      Append the run-time semantics below to the current definition.\n      Whether or not the current definition is rendered findable in\n      the dictionary by the compilation of <strong>DOES&gt;</strong> is\n      implementation defined. Consume <em>colon-sys<sub>1</sub></em> and\n      produce <em>colon-sys<sub>2</sub></em>. Append the initiation semantics\n      given below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>nest-sys<sub>1</sub></em> -- )\n      <p>\n      Replace the execution semantics of the most recent definition,\n      referred to as <em>name</em>, with the <em>name</em> execution\n      semantics given below. Return control to the calling definition\n      specified by <em>nest-sys<sub>1</sub></em>. An ambiguous condition exists\n      if <em>name</em> was not defined with <a href=\"../core/CREATE\">CREATE</a> or a\n      user-defined word that calls <a href=\"../core/CREATE\">CREATE</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Initiation:": {
                            "name": "Initiation:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>i * x a-addr</em> )\n      ( R: -- <em>nest-sys<sub>2</sub></em> )\n      <p>\n      Save implementation-dependent information <em>nest-sys<sub>2</sub></em>\n      about the calling definition. Place <em>name</em>'s data field\n      address on the stack. The stack effects <em>i * x</em> represent\n      arguments to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> )\n      <p>\n      Execute the portion of the definition that begins with the\n      initiation semantics appended by the <strong>DOES&gt;</strong> which modified\n      <em>name</em>. The stack effects <em>i * x</em> and <em>j * x</em>\n      represent arguments to and results from <em>name</em>,\n      respectively.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CREATE\">6.1.1000 CREATE</a>,\n      <a href=\"../rationale#rat:core:DOES\">A.6.1.1250 DOES&gt;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1250 DOES> -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ... <strong>DOES&gt;</strong> ... <a href=\"../core/Semi\">;</a>\n      <p>\n      Following <strong>DOES&gt;</strong>, a Standard Program may not make any\n      assumptions regarding the ability to find either the name of\n      the definition containing the <strong>DOES&gt;</strong> or any previous\n      definition whose name may be concealed by it. <strong>DOES&gt;</strong>\n      effectively ends one definition and begins another as far as\n      local variables and control-flow structures are concerned.\n      The compilation behavior makes it clear that the user is not\n      entitled to place <strong>DOES&gt;</strong> inside any control-flow\n      structures.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1250 DOES> -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;DOES1&nbsp;<strong>DOES&gt;</strong>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;1&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;DOES2&nbsp;<strong>DOES&gt;</strong>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;2&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/CREATE\">CREATE</a>&nbsp;CR1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ CR1&nbsp;&nbsp; -&gt; <a href=\"../core/HERE\">HERE</a> }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;<a href=\"../core/Comma\">,</a>&nbsp;&nbsp; -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ CR1&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ DOES1 -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ CR1&nbsp;&nbsp; -&gt; 2 }T</span> <br>\n      <span class=\"tt\">T{ DOES2 -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ CR1&nbsp;&nbsp; -&gt; 3 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;WEIRD:&nbsp;<a href=\"../core/CREATE\">CREATE</a>&nbsp;<strong>DOES&gt;</strong>&nbsp;1&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<strong>DOES&gt;</strong>&nbsp;2&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ WEIRD:&nbsp;W1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;W1&nbsp;<a href=\"../core/toBODY\">&gt;BODY</a> -&gt; <a href=\"../core/HERE\">HERE</a> }T</span> <br>\n      <span class=\"tt\">T{ W1 -&gt; <a href=\"../core/HERE\">HERE</a>&nbsp;1&nbsp;<a href=\"../core/Plus\">+</a> }T</span> <br>\n      <span class=\"tt\">T{ W1 -&gt; <a href=\"../core/HERE\">HERE</a>&nbsp;2&nbsp;<a href=\"../core/Plus\">+</a> }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DROP": {
                    "id": "core:DROP",
                    "number": "6.1.1260",
                    "name": "DROP",
                    "english": " ",
                    "list": "CORE",
                    "basename": "DROP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- )"
                        },
                        "plain": {
                            " ": "( x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- )\n      <p>\n      Remove <em>x</em> from the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1260 DROP -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>DROP</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;&nbsp;&nbsp;<strong>DROP</strong> -&gt; &nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DUP": {
                    "id": "core:DUP",
                    "number": "6.1.1290",
                    "name": "DUP",
                    "english": "dupe",
                    "list": "CORE",
                    "basename": "DUP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>x x</em> )"
                        },
                        "plain": {
                            " ": "( x -- x x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>x x</em> )\n      <p>\n      Duplicate <em>x</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1290 DUP -->\n      <span class=\"tt\">T{ 1&nbsp;<strong>DUP</strong> -&gt; 1&nbsp;1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Div": {
                    "id": "core:/",
                    "number": "6.1.0230",
                    "name": "/",
                    "english": "slash",
                    "list": "CORE",
                    "basename": "Div",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- n3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )\n      <p>\n      Divide <em>n<sub>1</sub></em> by <em>n<sub>2</sub></em>, giving the single-cell quotient\n      <em>n<sub>3</sub></em>. An ambiguous condition exists if <em>n<sub>2</sub></em> is zero.\n      If <em>n<sub>1</sub></em> and <em>n<sub>2</sub></em> differ in sign, the\n      implementation-defined result returned will be the same as that\n      returned by either the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>\n      or the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0230 / -->\n            <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;\t<a href=\"../core/Colon\">:</a> T/ T/MOD <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a> <br>\n        IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Colon\">:</a> T/ T/MOD <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>/</strong> -&gt; MAX-INT&nbsp;MAX-INT&nbsp;T/ }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>/</strong> -&gt; MIN-INT&nbsp;MIN-INT&nbsp;T/ }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "DivMOD": {
                    "id": "core:/MOD",
                    "number": "6.1.0240",
                    "name": "/MOD",
                    "english": "slash-mod",
                    "list": "CORE",
                    "basename": "DivMOD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub> n<sub>4</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- n3 n4 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub> n<sub>4</sub></em> )\n      <p>\n      Divide <em>n<sub>1</sub></em> by <em>n<sub>2</sub></em>, giving the single-cell remainder\n      <em>n<sub>3</sub></em> and the single-cell quotient <em>n<sub>4</sub></em>. An ambiguous\n      condition exists if <em>n<sub>2</sub></em> is zero. If <em>n<sub>1</sub></em> and\n      <em>n<sub>2</sub></em> differ in sign, the implementation-defined result\n      returned will be the same as that returned by either the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a>\n      or the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0240 /MOD -->\n            <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;  <a href=\"../core/Colon\">:</a> T/MOD  <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a> <a href=\"../core/Semi\">;</a> <br>\n        IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Colon\">:</a> T/MOD  <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>/MOD</strong> -&gt; MAX-INT&nbsp;MAX-INT&nbsp;T/MOD }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>/MOD</strong> -&gt; MIN-INT&nbsp;MIN-INT&nbsp;T/MOD }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "DotR": {
                    "id": "core:.R",
                    "number": "6.2.0210",
                    "name": ".R",
                    "english": "dot-r",
                    "list": "CORE EXT",
                    "basename": "DotR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- )\n      <p>\n      Display <em>n<sub>1</sub></em> right aligned in a field <em>n<sub>2</sub></em>\n      characters wide. If the number of characters required to display\n      <em>n<sub>1</sub></em> is greater than <em>n<sub>2</sub></em>, all digits are displayed\n      with no leading spaces in a field as wide as necessary.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:.R\">A.6.2.0210 .R</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0210 .R -->\n      In <strong>.R</strong>, \"R\" is short for RIGHT.\n      \n      \n      "
                        }
                    }
                },
                "Dotp": {
                    "id": "core:.p",
                    "number": "6.2.0200",
                    "name": ".(",
                    "english": "dot-paren",
                    "list": "CORE EXT",
                    "basename": "Dotp",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"ccc&lt;paren&gt;\"</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( \"ccc<paren>\" -- )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;paren&gt;\"</em> -- )\n      <p>\n      Parse and display <em>ccc</em> delimited by <code>)</code> (right\n      parenthesis). <strong>.(</strong> is an immediate word.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/Dotq\">6.1.0190 .\"</a>,\n      <a href=\"../rationale#rat:core:.p\">A.6.2.0200 .(</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0200 . -->\n      Typical use:\n      <strong>.(</strong> <em>ccc</em><code>)</code>\n      \n      \n      "
                        }
                    }
                },
                "Dotq": {
                    "id": "core:.q",
                    "number": "6.1.0190",
                    "name": ".\"",
                    "english": "dot-quote",
                    "list": "CORE",
                    "basename": "Dotq",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double-quote).\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Display <em>ccc</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/Dotp\">6.2.0200 .(</a>,\n      <a href=\"../rationale#rat:core:.q\">A.6.1.0190 .\"</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0190 .\" -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>.\"</strong> <em>ccc</em><code>\"</code> ...\n      <a href=\"../core/Semi\">;</a>\n      <p>\n      An implementation may define interpretation semantics for\n      <strong>.\"</strong> if desired. In one plausible implementation,\n      interpreting <strong>.\"</strong> would display the delimited message.\n      In another plausible implementation, interpreting <strong>.\"</strong>\n      would compile code to display the message later. In still\n      another plausible implementation, interpreting <strong>.\"</strong> would\n      be treated as an exception. Given this variation a Standard\n      Program may not use <strong>.\"</strong> while interpreting. Similarly,\n      a Standard Program may not compile <a href=\"../core/POSTPONE\">POSTPONE</a> <strong>.\"</strong>\n      inside a new word, and then use that word while interpreting.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0190 .\" -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pb1&nbsp;<a href=\"../core/CR\">CR</a>&nbsp;<strong>.\"</strong>&nbsp;You&nbsp;should&nbsp;see&nbsp;2345:&nbsp;\"<strong>.\"</strong>&nbsp;2345\"<a href=\"../core/Semi\">;</a>&nbsp;pb1 -&gt;  }T</span>\n      <p>\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "ELSE": {
                    "id": "core:ELSE",
                    "number": "6.1.1310",
                    "name": "ELSE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "ELSE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>orig<sub>1</sub></em> -- <em>orig<sub>2</sub></em> )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: orig1 -- orig2 )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>orig<sub>1</sub></em> -- <em>orig<sub>2</sub></em> )\n      <p>\n      Put the location of a new unresolved forward reference\n      <em>orig<sub>2</sub></em> onto the control flow stack. Append the run-time\n      semantics given below to the current definition. The semantics\n      will be incomplete until <em>orig<sub>2</sub></em> is resolved (e.g., by\n      <a href=\"../core/THEN\">THEN</a>). Resolve the forward reference <em>orig<sub>1</sub></em> using\n      the location following the appended run-time semantics.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution at the location given by the resolution of\n      <em>orig<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/IF\">6.1.1700 IF</a>,\n      <a href=\"../core/THEN\">6.1.2270 THEN</a>,\n      <a href=\"../rationale#rat:core:ELSE\">A.6.1.1310 ELSE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1310 ELSE -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <a href=\"../core/IF\">IF</a> ...\n      <strong>ELSE</strong> ... <a href=\"../core/THEN\">THEN</a>\n      <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1310 ELSE -->\n      See <a href=\"../testsuite#test:core:IF\">F.6.1.1700 IF</a>.\n      \n      \n      "
                        }
                    }
                },
                "EMIT": {
                    "id": "core:EMIT",
                    "number": "6.1.1320",
                    "name": "EMIT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "EMIT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- )"
                        },
                        "plain": {
                            " ": "( x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- )\n      <p>\n      If <em>x</em> is a graphic character in the implementation-defined\n      character set, display <em>x</em>. The effect of <strong>EMIT</strong> for all\n      other values of <em>x</em> is implementation-defined.\n      </p><p>\n      When passed a character whose character-defining bits have a\n      value between hex 20 and 7E inclusive, the corresponding\n      standard character, specified by <strong><a href=\"../usage#usage:ASCII\">3.1.2.1 Graphic characters</a></strong>, is displayed. Because different output\n      devices can respond differently to control characters, programs\n      that use control characters to perform specific functions have\n      an environmental dependency. Each EMIT deals with only one\n      character.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/TYPE\">6.1.2310 TYPE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1320 EMIT -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> OUTPUT-TEST <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> YOU SHOULD SEE THE STANDARD GRAPHIC CHARACTERS:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   41 <a href=\"../core/BL\">BL</a> <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <strong>EMIT</strong> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   61 41 <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <strong>EMIT</strong> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   7F 61 <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <strong>EMIT</strong> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> YOU SHOULD SEE 0-9 SEPARATED BY A SPACE:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   9 <a href=\"../core/OnePlus\">1+</a> 0 <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <a href=\"../core/d\">.</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> YOU SHOULD SEE 0-9 (WITH NO SPACES):\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   <a href=\"../core/BracketCHAR\">[CHAR]</a> 9 <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> 0\n        <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> 0 <a href=\"../core/SPACES\">SPACES</a> <strong>EMIT</strong> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> YOU SHOULD SEE A-G SEPARATED BY A SPACE:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   <a href=\"../core/BracketCHAR\">[CHAR]</a> G <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> A\n        <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <strong>EMIT</strong> <a href=\"../core/SPACE\">SPACE</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> YOU SHOULD SEE 0-5 SEPARATED BY TWO SPACES:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   5 <a href=\"../core/OnePlus\">1+</a> 0\n        <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> 0 <a href=\"../core/Plus\">+</a> <strong>EMIT</strong> 2 <a href=\"../core/SPACES\">SPACES</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/CR\">CR</a> <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> YOU SHOULD SEE TWO SEPARATE LINES:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   <a href=\"../core/Sq\">S\"</a> LINE 1\" <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/CR\">CR</a> <a href=\"../core/Sq\">S\"</a> LINE 2\" <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/CR\">CR</a> <br>\n        \n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a>  YOU SHOULD SEE THE NUMBER RANGES OF SIGNED AND UNSIGNED NUMBERS:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a>   SIGNED: \" MIN-INT <a href=\"../core/d\">.</a> MAX-INT <a href=\"../core/d\">.</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;   <a href=\"../core/Dotq\">.\"</a> UNSIGNED: \" 0 <a href=\"../core/Ud\">U.</a> MAX-UINT <a href=\"../core/Ud\">U.</a> <a href=\"../core/CR\">CR</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ OUTPUT-TEST -&gt;  }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "ENDCASE": {
                    "id": "core:ENDCASE",
                    "number": "6.2.1342",
                    "name": "ENDCASE",
                    "english": "end-case",
                    "list": "CORE EXT",
                    "basename": "ENDCASE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>case-sys</em> -- )",
                            "Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: case-sys -- )",
                            "Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>case-sys</em> -- )\n      <p>\n      Mark the end of the\n      <a href=\"../core/CASE\">CASE</a>...<a href=\"../core/OF\">OF</a>...<a href=\"../core/ENDOF\">ENDOF</a>...<strong>ENDCASE</strong>\n      structure. Use <em>case-sys</em> to resolve the entire structure.\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      Discard the case selector <em>x</em> and continue execution.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CASE\">6.2.0873 CASE</a>,\n      <a href=\"../core/ENDOF\">6.2.1343 ENDOF</a>,\n      <a href=\"../core/OF\">6.2.1950 OF</a>,\n      <a href=\"../rationale#rat:core:ENDCASE\">A.6.2.1342 ENDCASE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.1342 ENDCASE -->\n      Typical use:\n            <div class=\"quote\">\n\n        <a href=\"../core/Colon\">:</a> <code>X</code> ... <br>\n        &nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> <br>\n        &nbsp;&nbsp;   <em>test1</em> <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;   <em>testn</em> <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;   ... <a href=\"../core/p\">(</a> default ) <br>\n        &nbsp;&nbsp; <strong>ENDCASE</strong> ... <br>\n        <a href=\"../core/Semi\">;</a>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      See <a href=\"../testsuite#test:core:CASE\">F.6.2.0873 CASE</a>.\n      \n      \n      "
                        }
                    }
                },
                "ENDOF": {
                    "id": "core:ENDOF",
                    "number": "6.2.1343",
                    "name": "ENDOF",
                    "english": "end-of",
                    "list": "CORE EXT",
                    "basename": "ENDOF",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>case-sys<sub>1</sub> of-sys</em> -- <em>case-sys<sub>2</sub></em> )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: case-sys1 of-sys -- case-sys2 )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>case-sys<sub>1</sub> of-sys</em> -- <em>case-sys<sub>2</sub></em> )\n      <p>\n      Mark the end of the <a href=\"../core/OF\">OF</a>...<strong>ENDOF</strong> part of the\n      <a href=\"../core/CASE\">CASE</a> structure. The next location for a transfer of\n      control resolves the reference given by <em>of-sys</em>. Append\n      the run-time semantics given below to the current definition.\n      Replace <em>case-sys<sub>1</sub></em> with <em>case-sys<sub>2</sub></em> on the\n      control-flow stack, to be resolved by <a href=\"../core/ENDCASE\">ENDCASE</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution at the location specified by the consumer\n      of <em>case-sys<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CASE\">6.2.0873 CASE</a>,\n      <a href=\"../core/ENDCASE\">6.2.1342 ENDCASE</a>,\n      <a href=\"../core/OF\">6.2.1950 OF</a>,\n      <a href=\"../rationale#rat:core:ENDOF\">A.6.2.1343 ENDOF</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.1343 ENDOF -->\n      Typical use:\n            <div class=\"quote\">\n\n        <a href=\"../core/Colon\">:</a> <code>X</code> ... <br>\n        &nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> <br>\n        &nbsp;&nbsp;   <em>test1</em> <a href=\"../core/OF\">OF</a> ... <strong>ENDOF</strong> <br>\n        &nbsp;&nbsp;   <em>testn</em> <a href=\"../core/OF\">OF</a> ... <strong>ENDOF</strong> <br>\n        &nbsp;&nbsp;   ... <a href=\"../core/p\">(</a> default ) <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> ... <br>\n        <a href=\"../core/Semi\">;</a>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      See <a href=\"../testsuite#test:core:CASE\">F.6.2.0873 CASE</a>.\n      \n      \n      "
                        }
                    }
                },
                "ENVIRONMENTq": {
                    "id": "core:ENVIRONMENTq",
                    "number": "6.1.1345",
                    "name": "ENVIRONMENT?",
                    "english": "environment-query",
                    "list": "CORE",
                    "basename": "ENVIRONMENTq",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- <em>false  |  i * x true</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u -- false  |  i * x true )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- <em>false  |  i * x true</em> )\n      <p>\n      <em>c-addr</em> is the address of a character string and <em>u</em>\n      is the string's character count. <em>u</em> may have a value in\n      the range from zero to an implementation-defined maximum which\n      shall not be less than 31. The character string should contain a\n      keyword from <strong><a href=\"../usage#usage:env\">3.2.6 Environmental queries</a></strong> or the\n      optional word sets to be checked for correspondence with an\n      attribute of the present environment. If the system treats the\n      attribute as unknown, the returned flag is <em>false</em>;\n      otherwise, the flag is <em>true</em> and the <em>i * x</em> returned\n      is of the type specified in the table for the attribute queried.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:ENVIRONMENTq\">A.6.1.1345 ENVIRONMENT?</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1345 ENVIRONMENT? -->\n      In a Standard System that contains only the Core word set,\n      effective use of <strong>ENVIRONMENT?</strong> requires either its use\n      within a definition, or the use of user-supplied auxiliary\n      definitions. The Core word set lacks both a direct method for\n      collecting a string in interpretation state (<a href=\"../file/Sq\">11.6.1.2165 S\"</a>\n      is in an optional word set) and also a means to test the\n      returned flag in interpretation state (e.g. the optional\n      <a href=\"../tools/BracketIF\">15.6.2.2532 [IF]</a>).\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1345 ENVIRONMENT? -->\n      <a href=\"../core/bs\">\\</a> should be the same for any query starting with X: <br>\n      <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;X:deferred\"&nbsp;<strong>ENVIRONMENT?</strong>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/ZeroEqual\">0=</a>&nbsp;<a href=\"../core/XOR\">XOR</a>&nbsp;<a href=\"../core/INVERT\">INVERT</a> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;X:notfound\"&nbsp;<strong>ENVIRONMENT?</strong>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/ZeroEqual\">0=</a>&nbsp;<a href=\"../core/XOR\">XOR</a>&nbsp;<a href=\"../core/INVERT\">INVERT</a> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "ERASE": {
                    "id": "core:ERASE",
                    "number": "6.2.1350",
                    "name": "ERASE",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "ERASE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr u</em> -- )"
                        },
                        "plain": {
                            " ": "( addr u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr u</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, clear all bits in each of\n      <em>u</em> consecutive address units of memory beginning at\n      <em>addr</em>.\n      \n      </p>"
                        }
                    }
                },
                "EVALUATE": {
                    "id": "core:EVALUATE",
                    "number": "6.1.1360",
                    "name": "EVALUATE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "EVALUATE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x c-addr u</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x c-addr u -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x c-addr u</em> -- <em>j * x</em> )\n      <p>\n      Save the current input source specification. Store minus-one\n      (-1) in <a href=\"../core/SOURCE-ID\">SOURCE-ID</a> if it is present. Make the string\n      described by <em>c-addr</em> and <em>u</em> both the input source\n      and input buffer, set <a href=\"../core/toIN\">&gt;IN</a> to zero, and interpret. When\n      the parse area is empty, restore the prior input source\n      specification. Other stack effects are due to the words\n      <strong>EVALUATE</strong>d.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1360 EVALUATE -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> GE1 <a href=\"../core/Sq\">S\"</a> 123\" <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a> <br>\n        <a href=\"../core/Colon\">:</a> GE2 <a href=\"../core/Sq\">S\"</a> 123 1+\" <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a> <br>\n        <a href=\"../core/Colon\">:</a> GE3 <a href=\"../core/Sq\">S\"</a> <a href=\"../core/Colon\">:</a> GE4 345 <a href=\"../core/Semi\">;</a>\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> GE5 <strong>EVALUATE</strong> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        <p>\n        <span class=\"tt\">T{ GE1&nbsp;<strong>EVALUATE</strong> -&gt; 123 }T</span> <a href=\"../core/p\">(</a> TEST EVALUATE IN INTERP. STATE ) <br>\n        <span class=\"tt\">T{ GE2&nbsp;<strong>EVALUATE</strong> -&gt; 124 }T</span> <br>\n        <span class=\"tt\">T{ GE3&nbsp;<strong>EVALUATE</strong> -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ GE4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 345 }T</span>\n        </p><p>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GE6&nbsp;GE1&nbsp;GE5&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <a href=\"../core/p\">(</a> TEST EVALUATE IN COMPILE STATE ) <br>\n        <span class=\"tt\">T{ GE6 -&gt; 123 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GE7&nbsp;GE2&nbsp;GE5&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ GE7 -&gt; 124 }T</span>\n        </p><p>\n        <span class=\"rm\">See <a href=\"testsuite#test:throw\">F.9.3.6</a> for additional test.</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "EXECUTE": {
                    "id": "core:EXECUTE",
                    "number": "6.1.1370",
                    "name": "EXECUTE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "EXECUTE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x xt</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x xt -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x xt</em> -- <em>j * x</em> )\n      <p>\n      Remove <em>xt</em> from the stack and perform the semantics\n      identified by it. Other stack effects are due to the word\n      <strong>EXECUTE</strong>d.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/Tick\">6.1.0070 '</a>,\n      <a href=\"../core/BracketTick\">6.1.2510 [']</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1370 EXECUTE -->\n      See <a href=\"../testsuite#test:core:'\">F.6.1.0070 '</a> and <a href=\"../testsuite#test:core:[']\">F.6.1.2510 [']</a>.\n      \n      \n      "
                        }
                    }
                },
                "EXIT": {
                    "id": "core:EXIT",
                    "number": "6.1.1380",
                    "name": "EXIT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "EXIT",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- )\n      ( R: <em>nest-sys</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( -- )\n( R: nest-sys -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>nest-sys</em> -- )\n      <p>\n      Return control to the calling definition specified by\n      <em>nest-sys</em>. Before executing <strong>EXIT</strong> within a\n      do-loop, a program shall discard the loop-control parameters\n      by executing <a href=\"../core/UNLOOP\">UNLOOP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/UNLOOP\">6.1.2380 UNLOOP</a>,\n      <a href=\"../rationale#rat:core:EXIT\">A.6.1.1380 EXIT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1380 EXIT -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <a href=\"../core/IF\">IF</a>\n      ... <strong>EXIT</strong> <a href=\"../core/THEN\">THEN</a>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1380 EXIT -->\n      See <a href=\"../testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a>.\n      \n      \n      "
                        }
                    }
                },
                "Equal": {
                    "id": "core:=",
                    "number": "6.1.0530",
                    "name": "=",
                    "english": "equals",
                    "list": "CORE",
                    "basename": "Equal",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>x<sub>1</sub></em> is bit-for-bit\n      the same as <em>x<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0530 = -->\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;<strong>=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;1&nbsp;<strong>=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;-1&nbsp;<strong>=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;0&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;0&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      \n      \n      "
                        }
                    }
                },
                "FALSE": {
                    "id": "core:FALSE",
                    "number": "6.2.1485",
                    "name": "FALSE",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "FALSE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>false</em> )"
                        },
                        "plain": {
                            " ": "( -- false )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>false</em> )\n      <p>\n      Return a <em>false</em> flag.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:flags\">3.1.3.1 Flags</a></strong>\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>FALSE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <strong>FALSE</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "FILL": {
                    "id": "core:FILL",
                    "number": "6.1.1540",
                    "name": "FILL",
                    "english": " ",
                    "list": "CORE",
                    "basename": "FILL",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u char</em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr u char -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u char</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, store <em>char</em> in each of\n      <em>u</em> consecutive characters of memory beginning at\n      <em>c-addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1540 FILL -->\n      <span class=\"tt\">T{ FBUF&nbsp;0&nbsp;20&nbsp;<strong>FILL</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 00&nbsp;00&nbsp;00 }T</span>\n      <p>\n      <span class=\"tt\">T{ FBUF&nbsp;1&nbsp;20&nbsp;<strong>FILL</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;00&nbsp;00 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ FBUF&nbsp;3&nbsp;20&nbsp;<strong>FILL</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;20&nbsp;20 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "FIND": {
                    "id": "core:FIND",
                    "number": "6.1.1550",
                    "name": "FIND",
                    "english": " ",
                    "list": "CORE",
                    "basename": "FIND",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr</em> -- <em>c-addr 0  |  xt 1  |  xt -1</em> )"
                        },
                        "plain": {
                            " ": "( c-addr -- c-addr 0  |  xt 1  |  xt -1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr</em> -- <em>c-addr 0  |  xt 1  |  xt -1</em> )\n      <p>\n      Find the definition named in the counted string at <em>c-addr</em>.\n      If the definition is not found, return <em>c-addr</em> and zero.\n      If the definition is found, return its execution token <em>xt</em>.\n      If the definition is immediate, also return one (<em>1</em>),\n      otherwise also return minus-one (<em>-1</em>). For a given string,\n      the values returned by <strong>FIND</strong> while compiling may differ\n      from those returned while not compiling.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:find\">3.4.2 Finding definition names</a></strong>,\n      <a href=\"../rationale#rat:core:'\">A.6.1.0070 '</a>,\n      <a href=\"../rationale#rat:core:FIND\">A.6.1.1550 FIND</a>, <br>\n      <a href=\"../rationale#rat:core:POSTPONE\">A.6.1.2033 POSTPONE</a>,\n      <a href=\"../rationale#rat:core:[']\">A.6.1.2510 [']</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1550 FIND -->\n      One of the more difficult issues which the committee took on\n      was the problem of divorcing the specification of\n      implementation mechanisms from the specification of the\n      Forth language. Three basic implementation approaches can be\n      quickly enumerated:\n      <p>\n      </p><ol style=\"list-style-type: decimal\">\n      <li> Threaded code mechanisms.\n      These are the traditional approaches to implementing Forth,\n      but other techniques may be used.\n      <p>\n      </p></li>\n      <li> Subroutine threading with \"macro-expansion\" (code\n      copying). Short routines, like the code for <a href=\"../core/DUP\">DUP</a>,\n      are copied into a definition rather than compiling a\n      <code>JSR</code> reference.\n      <p>\n      </p></li>\n      <li> Native coding with optimization.\n      This may include stack optimization (replacing such phrases\n      as <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/ROT\">ROT</a> <a href=\"../core/Plus\">+</a> with one or two machine\n      instructions, for example), parallelization (the trend in\n      the newer RISC chips is to have several functional subunits\n      which can execute in parallel), and so on.\n      </li>\n</ol>\n      <p>\n      The initial requirement (inherited from Forth 83) that\n      compilation addresses be compiled into the dictionary\n      disallowed type 2 and type 3 implementations.\n      </p><p>\n      Type 3 mechanisms and optimizations of type 2 implementations\n      were hampered by the explicit specification of immediacy or\n      non-immediacy of all standard words. <a href=\"../core/POSTPONE\">POSTPONE</a> allowed\n      de-specification of immediacy or non-immediacy for all but a\n      few Forth words whose behavior must be <a href=\"../core/STATE\">STATE</a>-independent.\n      </p><p>\n      One type 3 implementation, Charles Moore's cmForth, has both\n      compiling and interpreting versions of many Forth words. At the\n      present, this appears to be a common approach for type 3\n      implementations. The committee felt that this implementation\n      approach must be allowed. Consequently, it is possible that\n      words without interpretation semantics can be found only during\n      compilation, and other words may exist in two versions: a\n      compiling version and an interpreting version. Hence the values\n      returned by <strong>FIND</strong> may depend on <a href=\"../core/STATE\">STATE</a>, and <a href=\"../core/Tick\">'</a>\n      and <a href=\"../core/BracketTick\">[']</a> may be unable to find words without\n      interpretation semantics.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1550 FIND -->\n            <div class=\"tt\">\n<a href=\"../core/HERE\">HERE</a>\n        3 <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CHAR\">CHAR</a> G <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CHAR\">CHAR</a> T <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CHAR\">CHAR</a> 1 <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> GT1STRING <br>\n        <a href=\"../core/HERE\">HERE</a>\n        3 <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CHAR\">CHAR</a> G <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CHAR\">CHAR</a> T <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CHAR\">CHAR</a> 2 <a href=\"../core/CComma\">C,</a>\n        <a href=\"../core/CONSTANT\">CONSTANT</a> GT2STRING <br>\n        <span class=\"tt\">T{ GT1STRING&nbsp;<strong>FIND</strong> -&gt; <a href=\"../core/Tick\">'</a>&nbsp;GT1&nbsp;-1 }T</span> <br>\n        <span class=\"tt\">T{ GT2STRING&nbsp;<strong>FIND</strong> -&gt; <a href=\"../core/Tick\">'</a>&nbsp;GT2&nbsp;1&nbsp; }T</span> <br>\n        <a href=\"../core/p\">(</a> HOW TO SEARCH FOR NON-EXISTENT WORD? )\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "FMDivMOD": {
                    "id": "core:FM/MOD",
                    "number": "6.1.1561",
                    "name": "FM/MOD",
                    "english": "f-m-slash-mod",
                    "list": "CORE",
                    "basename": "FMDivMOD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> n<sub>1</sub></em> -- <em>n<sub>2</sub> n<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 n1 -- n2 n3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> n<sub>1</sub></em> -- <em>n<sub>2</sub> n<sub>3</sub></em> )\n      <p>\n      Divide <em>d<sub>1</sub></em> by <em>n<sub>1</sub></em>, giving the floored quotient\n      <em>n<sub>3</sub></em> and the remainder <em>n<sub>2</sub></em>. Input and output stack\n      arguments are signed. An ambiguous condition exists if\n      <em>n<sub>1</sub></em> is zero or if the quotient lies outside the range of\n      a single-cell signed integer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>,\n      <a href=\"../core/SMDivREM\">6.1.2214 SM/REM</a>,\n      <a href=\"../core/UMDivMOD\">6.1.2370 UM/MOD</a>,\n      <a href=\"../rationale#rat:core:FM/MOD\">A.6.1.1561 FM/MOD</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1561 FM/MOD -->\n      By introducing the requirement for \"floored\" division,\n      Forth 83 produced much controversy and concern on the part of\n      those who preferred the more common practice followed in other\n      languages of implementing division according to the behavior\n      of the host CPU, which is most often symmetric (rounded toward\n      zero). In attempting to find a compromise position, this\n      standard provides primitives for both common varieties, floored\n      and symmetric (see <a href=\"../core/SMDivREM\">SM/REM</a>). <strong>FM/MOD</strong> is the floored\n      version.\n      <p>\n      The committee considered providing two complete sets\n      of explicitly named division operators, and declined to do so\n      on the grounds that this would unduly enlarge and complicate\n      the standard. Instead, implementors may define the normal\n      division words in terms of either <strong>FM/MOD</strong> or\n      <a href=\"../core/SMDivREM\">SM/REM</a> providing they document their choice. People\n      wishing to have explicitly named sets of operators are\n      encouraged to do so. <strong>FM/MOD</strong> may be used, for example,\n      to define:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> /_MOD <a href=\"../core/p\">(</a> n1 n2 -- n3 n4)\n          <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <strong>FM/MOD</strong>\n          <a href=\"../core/Semi\">;</a>\n          <p>\n          <a href=\"../core/Colon\">:</a> /_ <a href=\"../core/p\">(</a> n1 n2 -- n3)\n          /_MOD <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> _MOD <a href=\"../core/p\">(</a> n1 n2 -- n3)\n          /_MOD <a href=\"../core/DROP\">DROP</a>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> */_MOD <a href=\"../core/p\">(</a> n1 n2 n3 -- n4 n5)\n          <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <strong>FM/MOD</strong>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> */_ <a href=\"../core/p\">(</a> n1 n2 n3 -- n4 )\n          */_MOD <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>\n          <a href=\"../core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1561 FM/MOD -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>FM/MOD</strong> -&gt; -2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>FM/MOD</strong> -&gt; -1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1S&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;3&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Fetch": {
                    "id": "core:@",
                    "number": "6.1.0650",
                    "name": "@",
                    "english": "fetch",
                    "list": "CORE",
                    "basename": "Fetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>a-addr</em> -- <em>x</em> )"
                        },
                        "plain": {
                            " ": "( a-addr -- x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>a-addr</em> -- <em>x</em> )\n      <p>\n      <em>x</em> is the value stored at <em>a-addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0650 @ -->\n      See <a href=\"../testsuite#test:core:,\">F.6.1.0150 ,</a>.\n      \n      \n      "
                        }
                    }
                },
                "HERE": {
                    "id": "core:HERE",
                    "number": "6.1.1650",
                    "name": "HERE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "HERE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>addr</em> )"
                        },
                        "plain": {
                            " ": "( -- addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>addr</em> )\n      <p>\n      <em>addr</em> is the data-space pointer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:contiguous\">3.3.3.2 Contiguous regions</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1650 HERE -->\n      See <a href=\"../testsuite#test:core:,\">F.6.1.0150 ,</a>,\n      <a href=\"../testsuite#test:core:ALLOT\">F.6.1.0710 ALLOT</a>,\n      <a href=\"../testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n      \n      \n      "
                        }
                    }
                },
                "HEX": {
                    "id": "core:HEX",
                    "number": "6.2.1660",
                    "name": "HEX",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "HEX",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Set contents of <a href=\"../core/BASE\">BASE</a> to sixteen.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.1660 HEX -->\n      See <a href=\"../testsuite#test:core:BASE\">F.6.1.0750 BASE</a>.\n      \n      \n      "
                        }
                    }
                },
                "HOLD": {
                    "id": "core:HOLD",
                    "number": "6.1.1670",
                    "name": "HOLD",
                    "english": " ",
                    "list": "CORE",
                    "basename": "HOLD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>char</em> -- )"
                        },
                        "plain": {
                            " ": "( char -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>char</em> -- )\n      <p>\n      Add <em>char</em> to the beginning of the pictured numeric output\n      string. An ambiguous condition exists if <strong>HOLD</strong> executes\n      outside of a <a href=\"../core/num-start\">&lt;#</a> <a href=\"../core/num-end\">#&gt;</a> delimited number\n      conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1670 HOLD -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> GP1  <a href=\"../core/num-start\">&lt;#</a> 41 <strong>HOLD</strong> 42 <strong>HOLD</strong> 0 0 <a href=\"../core/num-end\">#&gt;</a> <a href=\"../core/Sq\">S\"</a> BA\" S= <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GP1 -&gt; &lt;TRUE&gt; }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "HOLDS": {
                    "id": "core:HOLDS",
                    "number": "6.2.1675",
                    "name": "HOLDS",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "HOLDS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- )\n      <p>\n      Adds the string represented by <em>c-addr u</em> to the pictured numeric\n      output string.  An ambiguous condition exists if <strong>HOLDS</strong> executes\n      outside of a <a href=\"../core/num-start\">&lt;#</a> <a href=\"../core/num-end\">#&gt;</a> delimited number conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/HOLD\">6.1.1670 HOLD</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>HOLDS</strong> <a href=\"../core/p\">(</a> addr u -- ) <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/WHILE\">WHILE</a> <a href=\"../core/OneMinus\">1-</a> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Plus\">+</a>\n      <a href=\"../core/CFetch\">C@</a> <a href=\"../core/HOLD\">HOLD</a> <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ 0.&nbsp;<a href=\"../core/num-start\">&lt;#</a>&nbsp;<a href=\"../file/Sq\">S\"</a>&nbsp;Test\"&nbsp;<strong>HOLDS</strong>&nbsp;<a href=\"../core/num-end\">#&gt;</a>&nbsp;<a href=\"../file/Sq\">S\"</a>&nbsp;Test\"&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "I": {
                    "id": "core:I",
                    "number": "6.1.1680",
                    "name": "I",
                    "english": " ",
                    "list": "CORE",
                    "basename": "I",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>n | u</em> )\n      ( R: <em>loop-sys</em> -- <em>loop-sys</em> )"
                        },
                        "plain": {
                            "Execution:": "( -- n | u )\n( R: loop-sys -- loop-sys )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- <em>n | u</em> )\n      ( R: <em>loop-sys</em> -- <em>loop-sys</em> )\n      <p>\n      <em>n | u</em> is a copy of the current (innermost) loop index.\n      An ambiguous condition exists if the loop control parameters\n      are unavailable.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1680 I -->\n      See <a href=\"../testsuite#test:core:LOOP\">F.6.1.1800 LOOP</a>,\n      <a href=\"../testsuite#test:core:+LOOP\">F.6.1.0140 +LOOP</a>,\n      <a href=\"../testsuite#test:core:J\">F.6.1.1730 J</a>,\n      <a href=\"../testsuite#test:core:LEAVE\">F.6.1.1760 LEAVE</a>,\n      <a href=\"../testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a>.\n      \n      \n      "
                        }
                    }
                },
                "IF": {
                    "id": "core:IF",
                    "number": "6.1.1700",
                    "name": "IF",
                    "english": " ",
                    "list": "CORE",
                    "basename": "IF",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>orig</em> )",
                            "Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- orig )",
                            "Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>orig</em> )\n      <p>\n      Put the location of a new unresolved forward reference\n      <em>orig</em> onto the control flow stack. Append the run-time\n      semantics given below to the current definition. The semantics\n      are incomplete until <em>orig</em> is resolved, e.g., by\n      <a href=\"../core/THEN\">THEN</a> or <a href=\"../core/ELSE\">ELSE</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      If all bits of <em>x</em> are zero, continue execution at the\n      location specified by the resolution of <em>orig</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:controlstack\">3.2.3.2 Control-flow stack</a></strong>,\n      <a href=\"../core/ELSE\">6.1.1310 ELSE</a>,\n      <a href=\"../core/THEN\">6.1.2270 THEN</a>,\n      <a href=\"../rationale#rat:core:IF\">A.6.1.1700 IF</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1700 IF -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <strong>IF</strong> ... <a href=\"../core/THEN\">THEN</a>\n      ... <a href=\"../core/Semi\">;</a>\n      </p><p>\n      or\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <strong>IF</strong>\n      ... <a href=\"../core/ELSE\">ELSE</a> ... <a href=\"../core/THEN\">THEN</a>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1700 IF -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GI1&nbsp;<strong>IF</strong>&nbsp;123&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GI2&nbsp;<strong>IF</strong>&nbsp;123&nbsp;<a href=\"../core/ELSE\">ELSE</a>&nbsp;234&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;GI1 -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;GI1 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;GI1 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;GI2 -&gt; 234 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;GI2 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;GI1 -&gt; 123 }T</span>\n      <p>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Multiple <a href=\"../core/ELSE\">ELSE</a>s in an <strong>IF</strong> statement</span> <br>\n      <a href=\"../core/Colon\">:</a> melse <strong>IF</strong> 1 <a href=\"../core/ELSE\">ELSE</a> 2 <a href=\"../core/ELSE\">ELSE</a> 3 <a href=\"../core/ELSE\">ELSE</a> 4 <a href=\"../core/ELSE\">ELSE</a> 5 <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ &lt;FALSE&gt;&nbsp;melse -&gt; 2&nbsp;4 }T</span> <br>\n      <span class=\"tt\">T{ &lt;TRUE&gt;&nbsp;&nbsp;melse -&gt; 1&nbsp;3&nbsp;5 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "IMMEDIATE": {
                    "id": "core:IMMEDIATE",
                    "number": "6.1.1710",
                    "name": "IMMEDIATE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "IMMEDIATE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Make the most recent definition an immediate word. An ambiguous\n      condition exists if the most recent definition does not have a\n      name or if it was defined as a <a href=\"../tools/SYNONYM\">SYNONYM</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../tools/SYNONYM\">15.6.2.2264 SYNONYM</a>\n      <a href=\"../rationale#rat:core:IMMEDIATE\">A.6.1.1710 IMMEDIATE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1710 IMMEDIATE -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code>\n      ... <a href=\"../core/Semi\">;</a> <strong>IMMEDIATE</strong>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1710 IMMEDIATE -->\n      <span class=\"tt\">T{ 123&nbsp;<a href=\"../core/CONSTANT\">CONSTANT</a>&nbsp;iw1&nbsp;<strong>IMMEDIATE</strong>&nbsp;iw1 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;iw2&nbsp;iw1&nbsp;<a href=\"../core/LITERAL\">LITERAL</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;iw2 -&gt; 123 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/VARIABLE\">VARIABLE</a>&nbsp;iw3&nbsp;<strong>IMMEDIATE</strong>&nbsp;234&nbsp;iw3&nbsp;<a href=\"../core/Store\">!</a>&nbsp;iw3&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 234 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;iw4&nbsp;iw3&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../core/LITERAL\">LITERAL</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;iw4 -&gt; 234 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/ColonNONAME\">:NONAME</a>&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;345&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;iw3&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;<a href=\"../core/Store\">!</a>&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;iw3&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 345 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/CREATE\">CREATE</a>&nbsp;iw5&nbsp;456&nbsp;<a href=\"../core/Comma\">,</a>&nbsp;<strong>IMMEDIATE</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/ColonNONAME\">:NONAME</a>&nbsp;iw5&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;iw3&nbsp;<a href=\"../core/Store\">!</a>&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;iw3&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 456 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;iw6&nbsp;<a href=\"../core/CREATE\">CREATE</a>&nbsp;<a href=\"../core/Comma\">,</a>&nbsp;<strong>IMMEDIATE</strong>&nbsp;<a href=\"../core/DOES\">DOES&gt;</a>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 111&nbsp;iw6&nbsp;iw7&nbsp;iw7 -&gt; 112 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;iw8&nbsp;iw7&nbsp;<a href=\"../core/LITERAL\">LITERAL</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;iw8 -&gt; 113 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;iw9&nbsp;<a href=\"../core/CREATE\">CREATE</a>&nbsp;<a href=\"../core/Comma\">,</a>&nbsp;<a href=\"../core/DOES\">DOES&gt;</a>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;2&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<strong>IMMEDIATE</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <a href=\"../core/Colon\">:</a> find-iw <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a> <a href=\"../core/FIND\">FIND</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 222&nbsp;iw9&nbsp;iw10&nbsp;find-iw&nbsp;iw10 -&gt; -1 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">iw10 is not immediate</span> <br>\n      <span class=\"tt\">T{ iw10&nbsp;find-iw&nbsp;iw10 -&gt; 224&nbsp;1 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">iw10 becomes immediate</span>\n      </p><p>\n      See <a href=\"../testsuite#test:core:[']\">F.6.1.2510 [']</a>,\n      <a href=\"../testsuite#test:core:POSTPONE\">F.6.1.2033 POSTPONE</a>,\n      <a href=\"../testsuite#test:core:STATE\">F.6.1.2250 STATE</a>,\n      <a href=\"../testsuite#test:core:Sq\">F.6.1.2165 S\"</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "INVERT": {
                    "id": "core:INVERT",
                    "number": "6.1.1720",
                    "name": "INVERT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "INVERT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub></em> -- <em>x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 -- x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub></em> -- <em>x<sub>2</sub></em> )\n      <p>\n      Invert all bits of <em>x<sub>1</sub></em>, giving its logical inverse\n      <em>x<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/NEGATE\">6.1.1910 NEGATE</a>,\n      <a href=\"../core/ZeroEqual\">6.1.0270 0=</a>,\n      <a href=\"../rationale#rat:core:INVERT\">A.6.1.1720 INVERT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1720 INVERT -->\n      The word <code>NOT</code> was originally provided in Forth as a\n      flag operator to make control structures readable. Under its\n      intended usage the following two definitions would produce\n      identical results:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> ONE <a href=\"../core/p\">(</a> flag -- ) <br>\n          &nbsp;&nbsp; <a href=\"../core/IF\">IF</a>\n          <a href=\"../core/Dotq\">.\"</a> true\"\n          <a href=\"../core/ELSE\">ELSE</a>\n          <a href=\"../core/Dotq\">.\"</a> false\"\n          <a href=\"../core/THEN\">THEN</a>\n          <a href=\"../core/Semi\">;</a>\n          <p>\n          <a href=\"../core/Colon\">:</a> TWO <a href=\"../core/p\">(</a> flag -- ) <br>\n          &nbsp;&nbsp; NOT <a href=\"../core/IF\">IF</a>\n          <a href=\"../core/Dotq\">.\"</a> false\"\n          <a href=\"../core/ELSE\">ELSE</a>\n          <a href=\"../core/Dotq\">.\"</a> true\"\n          <a href=\"../core/THEN\">THEN</a>\n          <a href=\"../core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n      <p>\n      This was common usage prior to the Forth-83 Standard which\n      redefined <code>NOT</code> as a cell-wide one's-complement\n      operation, functionally equivalent to the phrase <code>-1</code>\n      <a href=\"../core/XOR\">XOR</a>. At the same time, the data type manipulated by\n      this word was changed from a flag to a cell-wide collection of\n      bits and the standard value for true was changed from \"1\"\n      (rightmost bit only set) to \"-1\" (all bits set). As these\n      definitions of <a href=\"../core/TRUE\">TRUE</a> and <code>NOT</code> were incompatible\n      with their previous definitions, many Forth users continue to\n      rely on the old definitions. Hence both versions are in common\n      use.\n      </p><p>\n      Therefore, usage of <code>NOT</code> cannot be standardized at\n      this time. The two traditional meanings of <code>NOT</code> —\n      that of negating the sense of a flag and that of doing a one's\n      complement operation — are made available by <a href=\"../core/ZeroEqual\">0=</a> and\n      <strong>INVERT</strong>, respectively.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1720 INVERT -->\n      <span class=\"tt\">T{ 0S&nbsp;<strong>INVERT</strong> -&gt; 1S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;<strong>INVERT</strong> -&gt; 0S }T</span>\n      \n      \n      "
                        }
                    }
                },
                "IS": {
                    "id": "core:IS",
                    "number": "6.2.1725",
                    "name": "IS",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "IS",
                    "stackEffect": {
                        "html": {
                            "Interpretation:": "( <em>xt \"&lt;spaces&gt;name\"</em> -- )",
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "Run-time:": "( <em>xt</em> -- )"
                        },
                        "plain": {
                            "Interpretation:": "( xt \"<spaces>name\" -- )",
                            "Compilation:": "( \"<spaces>name\" -- )",
                            "Run-time:": "( xt -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      ( <em>xt \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading spaces and parse <em>name</em> delimited by a space.\n      Set <em>name</em> to execute <em>xt</em>.\n      </p><p>\n      An ambiguous condition exists if <em>name</em> was not defined\n      by <a href=\"../core/DEFER\">DEFER</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading spaces and parse <em>name</em> delimited by a space.\n      Append the run-time semantics given below to the current definition.\n      An ambiguous condition exists if <em>name</em> was not defined by\n      <a href=\"../core/DEFER\">DEFER</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>xt</em> -- )\n      <p>\n      Set <em>name</em> to execute <em>xt</em>.\n      </p><p>\n      An ambiguous condition exists if <a href=\"../core/POSTPONE\">POSTPONE</a>, <a href=\"../core/BracketCOMPILE\">[COMPILE]</a>,\n      <a href=\"../core/BracketTick\">[']</a> or <a href=\"../core/Tick\">'</a> is applied to <strong>IS</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ACTION-OF\">6.2.0698 ACTION-OF</a>,\n      <a href=\"../core/DEFER\">6.2.1173 DEFER</a>,\n      <a href=\"../core/DEFERStore\">6.2.1175 DEFER!</a>,\n      <a href=\"../core/DEFERFetch\">6.2.1177 DEFER@</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.6.2.---- IS -->\n      <a href=\"../core/Colon\">:</a> <strong>IS</strong> <br>\n      &nbsp;&nbsp; <a href=\"../core/STATE\">STATE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/BracketTick\">[']</a> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/DEFERStore\">DEFER!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Tick\">'</a> <a href=\"../core/DEFERStore\">DEFER!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.---- IS -->\n      <span class=\"tt\">T{ <a href=\"../core/DEFER\">DEFER</a>&nbsp;defer5 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;is-defer5&nbsp;<strong>IS</strong>&nbsp;defer5&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Times\">*</a>&nbsp;<strong>IS</strong>&nbsp;defer5 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;3&nbsp;defer5 -&gt; 6 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;is-defer5 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;defer5 -&gt; 3 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "J": {
                    "id": "core:J",
                    "number": "6.1.1730",
                    "name": "J",
                    "english": " ",
                    "list": "CORE",
                    "basename": "J",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>n | u</em> )\n      ( R: <em>loop-sys<sub>1</sub> loop-sys<sub>2</sub></em> -- <em>loop-sys<sub>1</sub> loop-sys<sub>2</sub></em> )"
                        },
                        "plain": {
                            "Execution:": "( -- n | u )\n( R: loop-sys1 loop-sys2 -- loop-sys1 loop-sys2 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- <em>n | u</em> )\n      ( R: <em>loop-sys<sub>1</sub> loop-sys<sub>2</sub></em> -- <em>loop-sys<sub>1</sub> loop-sys<sub>2</sub></em> )\n      <p>\n      <em>n | u</em> is a copy of the next-outer loop index. An\n      ambiguous condition exists if the loop control parameters of\n      the next-outer loop, <em>loop-sys<sub>1</sub></em>, are unavailable.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:J\">A.6.1.1730 J</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1730 J -->\n      <strong>J</strong> may only be used with a nested\n      <a href=\"../core/DO\">DO</a> ... <a href=\"../core/LOOP\">LOOP</a>,\n      <a href=\"../core/DO\">DO</a> ... <a href=\"../core/PlusLOOP\">+LOOP</a>,\n      <a href=\"../core/qDO\">?DO</a> ... <a href=\"../core/LOOP\">LOOP</a>, or\n      <a href=\"../core/qDO\">?DO</a> ... <a href=\"../core/PlusLOOP\">+LOOP</a>,\n      for example, in the form:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code>\n      ... <a href=\"../core/DO\">DO</a>\n      ... <a href=\"../core/DO\">DO</a>\n      ... <strong>J</strong> ...\n      <a href=\"../core/LOOP\">LOOP</a>\n      ... <a href=\"../core/PlusLOOP\">+LOOP</a>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1730 J -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GD3&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;1&nbsp;0&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<strong>J</strong>&nbsp;<a href=\"../core/LOOP\">LOOP</a>&nbsp;<a href=\"../core/LOOP\">LOOP</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;GD3 -&gt; &nbsp;1&nbsp;2&nbsp;3&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;GD3 -&gt; -1&nbsp;0&nbsp;1&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;MID-UINT&nbsp;GD3 -&gt; MID-UINT }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GD4&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;1&nbsp;0&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<strong>J</strong>&nbsp;<a href=\"../core/LOOP\">LOOP</a>&nbsp;-1&nbsp;<a href=\"../core/PlusLOOP\">+LOOP</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;GD4 -&gt; 4&nbsp;3&nbsp;2&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GD4 -&gt; 2&nbsp;1&nbsp;0&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT&nbsp;MID-UINT+1&nbsp;GD4 -&gt; MID-UINT+1&nbsp;MID-UINT }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "KEY": {
                    "id": "core:KEY",
                    "number": "6.1.1750",
                    "name": "KEY",
                    "english": " ",
                    "list": "CORE",
                    "basename": "KEY",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>char</em> )"
                        },
                        "plain": {
                            " ": "( -- char )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>char</em> )\n      <p>\n      Receive one character <em>char</em>, a member of the\n      implementation-defined character set. Keyboard events that do\n      not correspond to such characters are discarded until a valid\n      character is received, and those events are subsequently\n      unavailable.\n      </p><p>\n      All standard characters can be received. Characters received by\n      <strong>KEY</strong> are not displayed.\n      </p><p>\n      Any standard character returned by <strong>KEY</strong> has the numeric\n      value specified in <strong><a href=\"../usage#usage:ASCII\">3.1.2.1 Graphic characters</a></strong>.\n      Programs that require the ability to receive control characters\n      have an environmental dependency.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEY\">10.6.2.1305 EKEY</a>,\n      <a href=\"../facility/EKEYq\">10.6.2.1307 EKEY?</a>,\n      <a href=\"../facility/KEYq\">10.6.1.1755 KEY?</a>,\n      <a href=\"../rationale#rat:core:KEY\">A.6.1.1750 KEY</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- KEY -->\n      Use of <strong>KEY</strong> indicates that the application is processing\n      primitive characters.  Some input devices, e.g., keyboards,\n      may provide more information than can be represented as a\n      primitive character and such an event may be received as an\n      implementation-specific sequence of primitive characters.\n      <p>\n      See <a href=\"../rationale#rat:facility:EKEY\">A.10.6.2.1305 EKEY</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "LEAVE": {
                    "id": "core:LEAVE",
                    "number": "6.1.1760",
                    "name": "LEAVE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "LEAVE",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- )\n      ( R: <em>loop-sys</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( -- )\n( R: loop-sys -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>loop-sys</em> -- )\n      <p>\n      Discard the current loop control parameters. An ambiguous condition\n      exists if they are unavailable. Continue execution immediately\n      following the innermost syntactically enclosing\n      <a href=\"../core/DO\">DO</a>...<a href=\"../core/LOOP\">LOOP</a> or <a href=\"../core/DO\">DO</a>...<a href=\"../core/PlusLOOP\">+LOOP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/PlusLOOP\">6.1.0140 +LOOP</a>,\n      <a href=\"../core/LOOP\">6.1.1800 LOOP</a>,\n      <a href=\"../rationale#rat:core:LEAVE\">A.6.1.1760 LEAVE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1760 LEAVE -->\n      Note that <strong>LEAVE</strong> immediately exits the loop. No words\n      following <strong>LEAVE</strong> within the loop will be executed.\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ... <a href=\"../core/DO\">DO</a>\n      ... <a href=\"../core/IF\">IF</a>\n      ... <strong>LEAVE</strong>\n      <a href=\"../core/THEN\">THEN</a> ... <a href=\"../core/LOOP\">LOOP</a> ...\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1760 LEAVE -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GD5&nbsp;123&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;0&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/I\">I</a>&nbsp;4&nbsp;<a href=\"../core/more\">&gt;</a>&nbsp;<a href=\"../core/IF\">IF</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;234&nbsp;<strong>LEAVE</strong>&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/LOOP\">LOOP</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;GD5 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ 5&nbsp;GD5 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ 6&nbsp;GD5 -&gt; 234 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "LITERAL": {
                    "id": "core:LITERAL",
                    "number": "6.1.1780",
                    "name": "LITERAL",
                    "english": " ",
                    "list": "CORE",
                    "basename": "LITERAL",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>x</em> -- )",
                            "Run-time:": "( -- <em>x</em> )"
                        },
                        "plain": {
                            "Compilation:": "( x -- )",
                            "Run-time:": "( -- x )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      Append the run-time semantics given below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      <p>\n      Place <em>x</em> on the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:LITERAL\">A.6.1.1780 LITERAL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1780 LITERAL -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/Bracket\">[</a> <code>x</code> <a href=\"../right-bracket\">]</a> <strong>LITERAL</strong>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1780 LITERAL -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT3&nbsp;GT2&nbsp;<strong>LITERAL</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GT3 -&gt; <a href=\"../core/Tick\">'</a>&nbsp;GT1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "LOOP": {
                    "id": "core:LOOP",
                    "number": "6.1.1800",
                    "name": "LOOP",
                    "english": " ",
                    "list": "CORE",
                    "basename": "LOOP",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>do-sys</em> -- )",
                            "Run-time:": "( -- )\n      ( R: <em>loop-sys<sub>1</sub></em> -- <em> |  loop-sys<sub>2</sub></em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: do-sys -- )",
                            "Run-time:": "( -- )\n( R: loop-sys1 --  |  loop-sys2 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>do-sys</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition. Resolve the destination of all unresolved\n      occurrences of <a href=\"../core/LEAVE\">LEAVE</a> between the location given by\n      <em>do-sys</em> and the next location for a transfer of\n      control, to execute the words following the <strong>LOOP</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>loop-sys<sub>1</sub></em> -- <em> |  loop-sys<sub>2</sub></em> )\n      <p>\n      An ambiguous condition exists if the loop control parameters are\n      unavailable. Add one to the loop index. If the loop index is then\n      equal to the loop limit, discard the loop parameters and continue\n      execution immediately following the loop. Otherwise continue\n      execution at the beginning of the loop.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/DO\">6.1.1240 DO</a>,\n      <a href=\"../core/I\">6.1.1680 I</a>,\n      <a href=\"../core/LEAVE\">6.1.1760 LEAVE</a><a href=\"../rationale#rat:core:LOOP\">A.6.1.1800 LOOP</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1800 LOOP -->\n      \n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>limit</em> <em>first</em> <a href=\"../core/DO\">DO</a>\n      ...\n      <strong>LOOP</strong>\n      ... <a href=\"../core/Semi\">;</a>\n      </p><p>\n      or\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>limit</em> <em>first</em> <a href=\"../core/qDO\">?DO</a>\n      ...\n      <strong>LOOP</strong>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1800 LOOP -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GD1&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<a href=\"../core/I\">I</a>&nbsp;<strong>LOOP</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;GD1 -&gt; &nbsp;1&nbsp;2&nbsp;3&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;GD1 -&gt; -1&nbsp;0&nbsp;1&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;MID-UINT&nbsp;GD1 -&gt; MID-UINT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "LSHIFT": {
                    "id": "core:LSHIFT",
                    "number": "6.1.1805",
                    "name": "LSHIFT",
                    "english": "l-shift",
                    "list": "CORE",
                    "basename": "LSHIFT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> u</em> -- <em>x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 u -- x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> u</em> -- <em>x<sub>2</sub></em> )\n      <p>\n      Perform a logical left shift of <em>u</em> bit-places on\n      <em>x<sub>1</sub></em>, giving <em>x<sub>2</sub></em>. Put zeroes into the least\n      significant bits vacated by the shift. An ambiguous condition\n      exists if <em>u</em> is greater than or equal to the number of\n      bits in a cell.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1805 LSHIFT -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;0&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;1&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;2&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;4 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;F&nbsp;<strong>LSHIFT</strong> -&gt; 8000 }T</span> &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> BIGGEST GUARANTEED SHIFT <br>\n      <span class=\"tt\">T{ &nbsp;1S&nbsp;1&nbsp;<strong>LSHIFT</strong>&nbsp;1&nbsp;<a href=\"../core/XOR\">XOR</a> -&gt; 1S }T</span> <br>\n      <span class=\"tt\">T{ MSB&nbsp;1&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "MARKER": {
                    "id": "core:MARKER",
                    "number": "6.2.1850",
                    "name": "MARKER",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "MARKER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Create a definition for <em>name</em> with the execution\n      semantics defined below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Restore all dictionary allocation and search order pointers to\n      the state they had just prior to the definition of <em>name</em>.\n      Remove the definition of <em>name</em> and all subsequent\n      definitions. Restoration of any structures still existing that\n      could refer to deleted definitions or deallocated data space is\n      not necessarily provided. No other contextual information such\n      as numeric base is affected.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../tools/FORGET\">15.6.2.1580 FORGET</a>,\n      <a href=\"../rationale#rat:core:MARKER\">A.6.2.1850 MARKER</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.1850 MARKER -->\n      As dictionary implementations have become more elaborate\n      and in some cases have used multiple address spaces,\n      <a href=\"../tools/FORGET\">FORGET</a> has become prohibitively difficult or\n      impossible to implement on many Forth systems. <strong>MARKER</strong>\n      greatly eases the problem by making it possible for the\n      system to remember \"landmark information\" in advance that\n      specifically marks the spots where the dictionary may at some\n      future time have to be rearranged.\n      \n      \n      "
                        }
                    }
                },
                "MAX": {
                    "id": "core:MAX",
                    "number": "6.1.1870",
                    "name": "MAX",
                    "english": " ",
                    "list": "CORE",
                    "basename": "MAX",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- n3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )\n      <p>\n      <em>n<sub>3</sub></em> is the greater of <em>n<sub>1</sub></em> and <em>n<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1870 MAX -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n      \n      \n      "
                        }
                    }
                },
                "MIN": {
                    "id": "core:MIN",
                    "number": "6.1.1880",
                    "name": "MIN",
                    "english": " ",
                    "list": "CORE",
                    "basename": "MIN",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- n3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )\n      <p>\n      <em>n<sub>3</sub></em> is the lesser of <em>n<sub>1</sub></em> and <em>n<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1880 MIN -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      \n      \n      "
                        }
                    }
                },
                "MOD": {
                    "id": "core:MOD",
                    "number": "6.1.1890",
                    "name": "MOD",
                    "english": " ",
                    "list": "CORE",
                    "basename": "MOD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- n3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>n<sub>3</sub></em> )\n      <p>\n      Divide <em>n<sub>1</sub></em> by <em>n<sub>2</sub></em>, giving the single-cell remainder\n      <em>n<sub>3</sub></em>. An ambiguous condition exists if <em>n<sub>2</sub></em> is zero.\n      If <em>n<sub>1</sub></em> and <em>n<sub>2</sub></em> differ in sign, the\n      implementation-defined result returned will be the same as that\n      returned by either the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a> <a href=\"../core/DROP\">DROP</a>\n      or the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a> <a href=\"../core/DROP\">DROP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1890 MOD -->\n            <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp; \t<a href=\"../core/Colon\">:</a> TMOD T/MOD <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a> <br>\n        IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/Colon\">:</a> TMOD T/MOD <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>MOD</strong> -&gt; MAX-INT&nbsp;MAX-INT&nbsp;TMOD }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>MOD</strong> -&gt; MIN-INT&nbsp;MIN-INT&nbsp;TMOD }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "MOVE": {
                    "id": "core:MOVE",
                    "number": "6.1.1900",
                    "name": "MOVE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "MOVE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr<sub>1</sub> addr<sub>2</sub> u</em> -- )"
                        },
                        "plain": {
                            " ": "( addr1 addr2 u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr<sub>1</sub> addr<sub>2</sub> u</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, copy the contents of <em>u</em>\n      consecutive address units at <em>addr<sub>1</sub></em> to the <em>u</em>\n      consecutive address units at <em>addr<sub>2</sub></em>. After <strong>MOVE</strong>\n      completes, the <em>u</em> consecutive address units at <em>addr<sub>2</sub></em>\n      contain exactly what the <em>u</em> consecutive address units at\n      <em>addr<sub>1</sub></em> contained before the move.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n\t<a href=\"../string/CMOVE\">17.6.1.0910 CMOVE</a>,\n      <a href=\"../string/CMOVEtop\">17.6.1.0920 CMOVE&gt;</a>,\n      <a href=\"../rationale#rat:core:MOVE\">A.6.1.1900 MOVE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1900 MOVE -->\n      <a href=\"../string/CMOVE\">CMOVE</a> and <a href=\"../string/CMOVEtop\">CMOVE&gt;</a> are the primary\n      move operators in Forth 83. They specify a behavior for moving\n      that implies propagation if the move is suitably invoked. In\n      some hardware, this specific behavior cannot be achieved using\n      the best move instruction. Further, <a href=\"../string/CMOVE\">CMOVE</a> and\n      <a href=\"../string/CMOVEtop\">CMOVE&gt;</a> move characters; Forth needs a move\n      instruction capable of dealing with address units. Thus\n      <strong>MOVE</strong> has been defined and added to the Core word set,\n      and <a href=\"../string/CMOVE\">CMOVE</a> and <a href=\"../string/CMOVEtop\">CMOVE&gt;</a> have been\n      moved to the String word set.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1900 MOVE -->\n      <span class=\"tt\">T{ FBUF&nbsp;FBUF&nbsp;3&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span>  <a href=\"../core/bs\">\\</a> BIZARRE SPECIAL CASE <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;20&nbsp;20 }T</span>\n      <p>\n      <span class=\"tt\">T{ SBUF&nbsp;FBUF&nbsp;0&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;20&nbsp;20 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ SBUF&nbsp;FBUF&nbsp;1&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;20&nbsp;20 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ SBUF&nbsp;FBUF&nbsp;3&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;34&nbsp;56 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ FBUF&nbsp;FBUF&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a>&nbsp;2&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;12&nbsp;34 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ FBUF&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a>&nbsp;FBUF&nbsp;2&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;34&nbsp;34 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "MTimes": {
                    "id": "core:M*",
                    "number": "6.1.1810",
                    "name": "M*",
                    "english": "m-star",
                    "list": "CORE",
                    "basename": "MTimes",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>d</em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- d )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>d</em> )\n      <p>\n      <em>d</em> is the signed product of <em>n<sub>1</sub></em> times <em>n<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:M*\">A.6.1.1810 M*</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.1810 M* -->\n      This word is a useful early step in calculation, going to\n      extra precision conveniently. It has been in use since the\n      Forth systems of the early 1970's.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1810 M* -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-9&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-9&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;1S&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; MAX-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"../core/LSHIFT\">LSHIFT</a>&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MSB&nbsp;1&nbsp;<a href=\"../core/RSHIFT\">RSHIFT</a>&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;MSB&nbsp;MSB&nbsp;<a href=\"../core/TwoDiv\">2/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MSB&nbsp;<a href=\"../core/TwoDiv\">2/</a>&nbsp;<a href=\"../core/INVERT\">INVERT</a>&nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Minus": {
                    "id": "core:-",
                    "number": "6.1.0160",
                    "name": "-",
                    "english": "minus",
                    "list": "CORE",
                    "basename": "Minus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- <em>n<sub>3</sub> | u<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 | u1 n2 | u2 -- n3 | u3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- <em>n<sub>3</sub> | u<sub>3</sub></em> )\n      <p>\n      Subtract <em>n<sub>2</sub> | u<sub>2</sub></em> from <em>n<sub>1</sub> | u<sub>1</sub></em>, giving the\n      difference <em>n<sub>3</sub> | u<sub>3</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0160 - -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;-5&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5&nbsp;&nbsp;0&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;-2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;-2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;&nbsp;1&nbsp;<strong>-</strong> -&gt; MID-UINT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "NEGATE": {
                    "id": "core:NEGATE",
                    "number": "6.1.1910",
                    "name": "NEGATE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "NEGATE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 -- n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )\n      <p>\n      Negate <em>n<sub>1</sub></em>, giving its arithmetic inverse <em>n<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/INVERT\">6.1.1720 INVERT</a>,\n      <a href=\"../core/ZeroEqual\">6.1.0270 0=</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1910 NEGATE -->\n      <span class=\"tt\">T{ &nbsp;0&nbsp;<strong>NEGATE</strong> -&gt; &nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;<strong>NEGATE</strong> -&gt; -1 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;<strong>NEGATE</strong> -&gt; &nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;2&nbsp;<strong>NEGATE</strong> -&gt; -2 }T</span> <br>\n      <span class=\"tt\">T{ -2&nbsp;<strong>NEGATE</strong> -&gt; &nbsp;2 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "NIP": {
                    "id": "core:NIP",
                    "number": "6.2.1930",
                    "name": "NIP",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "NIP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>2</sub></em> )\n      <p>\n      Drop the first item below the top of stack.\n      \n      </p>"
                        }
                    }
                },
                "OF": {
                    "id": "core:OF",
                    "number": "6.2.1950",
                    "name": "OF",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "OF",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>of-sys</em> )",
                            "Run-time:": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em> |  x<sub>1</sub></em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- of-sys )",
                            "Run-time:": "( x1 x2 --  |  x1 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>of-sys</em> )\n      <p>\n      Put <em>of-sys</em> onto the control flow stack. Append the\n      run-time semantics given below to the current definition.\n      The semantics are incomplete until resolved by a consumer\n      of <em>of-sys</em> such as <a href=\"../core/ENDOF\">ENDOF</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em> |  x<sub>1</sub></em> )\n      <p>\n      If the two values on the stack are not equal, discard the\n      top value and continue execution at the location specified\n      by the consumer of <em>of-sys</em>, e.g., following the next\n      <a href=\"../core/ENDOF\">ENDOF</a>. Otherwise, discard both values and continue\n      execution in line.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CASE\">6.2.0873 CASE</a>,\n      <a href=\"../core/ENDCASE\">6.2.1342 ENDCASE</a>,\n      <a href=\"../core/ENDOF\">6.2.1343 ENDOF</a>,\n      <a href=\"../rationale#rat:core:OF\">A.6.2.1950 OF</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.1950 OF -->\n      Typical use:\n            <div class=\"quote\">\n\n        <a href=\"../core/Colon\">:</a> <code>X</code> ... <br>\n        &nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> <br>\n        &nbsp;&nbsp;   <em>test1</em> <strong>OF</strong> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;   <em>testn</em> <strong>OF</strong> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;   ... <a href=\"../core/p\">(</a> default ) <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> ... <br>\n        <a href=\"../core/Semi\">;</a>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      See <a href=\"../testsuite#test:core:CASE\">F.6.2.0873 CASE</a>.\n      \n      \n      "
                        }
                    }
                },
                "OR": {
                    "id": "core:OR",
                    "number": "6.1.1980",
                    "name": "OR",
                    "english": " ",
                    "list": "CORE",
                    "basename": "OR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>3</sub></em> )\n      <p>\n      <em>x<sub>3</sub></em> is the bit-by-bit inclusive-or of <em>x<sub>1</sub></em> with\n      <em>x<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1980 OR -->\n      <span class=\"tt\">T{ 0S&nbsp;0S&nbsp;<strong>OR</strong> -&gt; 0S }T</span> <br>\n      <span class=\"tt\">T{ 0S&nbsp;1S&nbsp;<strong>OR</strong> -&gt; 1S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;0S&nbsp;<strong>OR</strong> -&gt; 1S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;1S&nbsp;<strong>OR</strong> -&gt; 1S }T</span>\n      \n      \n      "
                        }
                    }
                },
                "OVER": {
                    "id": "core:OVER",
                    "number": "6.1.1990",
                    "name": "OVER",
                    "english": " ",
                    "list": "CORE",
                    "basename": "OVER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub> x<sub>1</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x1 x2 x1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub> x<sub>1</sub></em> )\n      <p>\n      Place a copy of <em>x<sub>1</sub></em> on top of the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.1990 OVER -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>OVER</strong> -&gt; 1&nbsp;2&nbsp;1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "OneMinus": {
                    "id": "core:1-",
                    "number": "6.1.0300",
                    "name": "1-",
                    "english": "one-minus",
                    "list": "CORE",
                    "basename": "OneMinus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> | u<sub>1</sub></em> -- <em>n<sub>2</sub> | u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 | u1 -- n2 | u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> | u<sub>1</sub></em> -- <em>n<sub>2</sub> | u<sub>2</sub></em> )\n      <p>\n      Subtract one (1) from <em>n<sub>1</sub> | u<sub>1</sub></em> giving the difference\n      <em>n<sub>2</sub> | u<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0300 1- -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>1-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>1-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>1-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;<strong>1-</strong> -&gt; MID-UINT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "OnePlus": {
                    "id": "core:1+",
                    "number": "6.1.0290",
                    "name": "1+",
                    "english": "one-plus",
                    "list": "CORE",
                    "basename": "OnePlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> | u<sub>1</sub></em> -- <em>n<sub>2</sub> | u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 | u1 -- n2 | u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> | u<sub>1</sub></em> -- <em>n<sub>2</sub> | u<sub>2</sub></em> )\n      <p>\n      Add one (1) to <em>n<sub>1</sub> | u<sub>1</sub></em> giving the sum\n      <em>n<sub>2</sub> | u<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0290 1+ -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>1+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>1+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>1+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT&nbsp;<strong>1+</strong> -&gt; MID-UINT+1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "PAD": {
                    "id": "core:PAD",
                    "number": "6.2.2000",
                    "name": "PAD",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "PAD",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>c-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- c-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>c-addr</em> )\n      <p>\n      <em>c-addr</em> is the address of a transient region that can\n      be used to hold data for intermediate processing.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>,\n      <a href=\"../rationale#rat:core:PAD\">A.6.2.2000 PAD</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2000 PAD -->\n      <strong>PAD</strong> has been available as scratch storage for strings\n      since the earliest Forth implementations. It was brought to\n      our attention that many programmers are reluctant to use\n      <strong>PAD</strong>, fearing incompatibilities with system uses.\n      <strong>PAD</strong> is specifically intended as a programmer convenience,\n      however, which is why we documented the fact that no standard\n      words use it.\n      \n      \n      "
                        }
                    }
                },
                "PARSE-NAME": {
                    "id": "core:PARSE-NAME",
                    "number": "6.2.2020",
                    "name": "PARSE-NAME",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "PARSE-NAME",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name&lt;space&gt;\"</em> -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name<space>\" -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name&lt;space&gt;\"</em> -- <em>c-addr u</em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space.\n      </p><p>\n      <em>c-addr</em> is the address of the selected string within the\n      input buffer and <em>u</em> is its length in characters. If the\n      parse area is empty or contains only white space, the resulting\n      string has length zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.6.2.---- PARSE-NAME -->\n      <a href=\"../core/Colon\">:</a> isspace? <a href=\"../core/p\">(</a> c -- f ) <br>\n      &nbsp;&nbsp; <a href=\"../core/BL\">BL</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/Semi\">;</a>\n      <p>\n      <a href=\"../core/Colon\">:</a> isnotspace? <a href=\"../core/p\">(</a> c -- f ) <br>\n      &nbsp;&nbsp; isspace? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> xt-skip <a href=\"../core/p\">(</a> addr1 n1 xt -- addr2 n2 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> skip all characters satisfying xt ( c -- f ) <br>\n      &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/EXECUTE\">EXECUTE</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 1 <a href=\"../string/DivSTRING\">/STRING</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> parse-name <a href=\"../core/p\">(</a> \"name\" -- c-addr u ) <br>\n      &nbsp;&nbsp; <a href=\"../core/SOURCE\">SOURCE</a> <a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Fetch\">@</a> <a href=\"../string/DivSTRING\">/STRING</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BracketTick\">[']</a> isspace? xt-skip <a href=\"../core/OVER\">OVER</a> <a href=\"../core/toR\">&gt;R</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BracketTick\">[']</a> isnotspace? xt-skip <a href=\"../core/p\">(</a> end-word restlen r: start-word ) <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> 1 <a href=\"../core/MIN\">MIN</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SOURCE\">SOURCE</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Store\">!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/TUCK\">TUCK</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.---- PARSE-NAME -->\n      <span class=\"tt\">T{ <strong>PARSE-NAME</strong>&nbsp;abcd&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;abcd\"&nbsp;S= -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ <strong>PARSE-NAME</strong>&nbsp;&nbsp;&nbsp;abcde&nbsp;&nbsp;&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;abcde\"&nbsp;S= -&gt; &lt;TRUE&gt; }T</span>\n      <p>\n      <a href=\"../core/bs\">\\</a> test empty parse area <br>\n      <span class=\"tt\">T{ <strong>PARSE-NAME</strong>&nbsp;<br>\n      \n      &nbsp;&nbsp;&nbsp;<a href=\"../core/NIP\">NIP</a> -&gt; 0 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> empty line <br>\n      <span class=\"tt\">T{ PARSE-NAME&nbsp;&nbsp;&nbsp;&nbsp;<br>\n      \n      &nbsp;&nbsp;&nbsp;<a href=\"../core/NIP\">NIP</a> -&gt; 0 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> line with white space\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;parse-name-test&nbsp;<a href=\"../core/p\">(</a>&nbsp;\"name1\"&nbsp;\"name2\"&nbsp;--&nbsp;n&nbsp;)&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<strong>PARSE-NAME</strong>&nbsp;<strong>PARSE-NAME</strong>&nbsp;S=&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n      </p><p>\n      <span class=\"tt\">T{ parse-name-test&nbsp;abcd&nbsp;abcd -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ parse-name-test&nbsp;&nbsp;abcd&nbsp;&nbsp;&nbsp;abcd&nbsp;&nbsp; -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ parse-name-test&nbsp;abcde&nbsp;abcdf -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ parse-name-test&nbsp;abcdf&nbsp;abcde -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ parse-name-test&nbsp;abcde&nbsp;abcde&nbsp;<br>\n      &nbsp;&nbsp;&nbsp; -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ parse-name-test&nbsp;abcde&nbsp;abcde&nbsp;&nbsp;<br>\n      &nbsp;&nbsp;&nbsp; -&gt; &lt;TRUE&gt; }T</span>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> line with white space\n      \n      \n      </p>"
                        }
                    }
                },
                "PARSE": {
                    "id": "core:PARSE",
                    "number": "6.2.2008",
                    "name": "PARSE",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "PARSE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>char \"ccc&lt;char&gt;\"</em> -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            " ": "( char \"ccc<char>\" -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>char \"ccc&lt;char&gt;\"</em> -- <em>c-addr u</em> )\n      <p>\n      Parse <em>ccc</em> delimited by the delimiter <em>char</em>.\n      </p><p>\n      <em>c-addr</em> is the address (within the input buffer) and\n      <em>u</em> is the length of the parsed string. If the parse area\n      was empty, the resulting string has a zero length.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:core:PARSE\">A.6.2.2008 PARSE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2008 PARSE -->\n      Typical use: <em>char</em> <strong>PARSE</strong> <em>ccc</em>&lt;<em>char</em>&gt;\n      <p>\n      The traditional Forth word for parsing is <a href=\"../core/WORD\">WORD</a>.\n      <strong>PARSE</strong> solves the following problems with <a href=\"../core/WORD\">WORD</a>:\n      </p><p>\n      </p><ol style=\"list-style-type: decimal\">\n      <li> <a href=\"../core/WORD\">WORD</a> always skips leading delimiters. This\n      behavior is appropriate for use by the text interpreter,\n      which looks for sequences of non-blank characters, but is\n      inappropriate for use by words like <a href=\"../core/p\">(</a> , <a href=\"../core/Dotp\">.(</a>,\n      and <a href=\"../core/Dotq\">.\"</a>. Consider the following (flawed) definition\n      of <a href=\"../core/Dotp\">.(</a>:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <a href=\"../core/Dotp\">.(</a>  \n      <a href=\"../core/BracketCHAR\">[CHAR]</a> <code>)</code>  \n      <a href=\"../core/WORD\">WORD</a> <a href=\"../core/COUNT\">COUNT</a> <a href=\"../core/TYPE\">TYPE</a>\n      <a href=\"../core/Semi\">;</a>   <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      </p><p>\n      This works fine when used in a line like:\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Dotp\">.(</a> <code>HELLO)</code> &nbsp;&nbsp; <code>5</code> <a href=\"../core/d\">.</a>\n      </p><p>\n      but consider what happens if the user enters an empty\n      string:\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Dotp\">.(</a> <code>)</code> &nbsp;&nbsp; <code>5</code> <a href=\"../core/d\">.</a>\n      </p><p>\n      The definition of <a href=\"../core/Dotp\">.(</a> shown above would treat the\n      <code>)</code> as a leading delimiter, skip it, and continue\n      consuming characters until it located another <code>)</code>\n      that followed a non-<code>)</code> character, or until the\n      parse area was empty. In the example shown, the\n      <code>5</code> <a href=\"../core/d\">.</a>\n      would be treated as part of the string to be printed.\n      </p><p>\n      With <strong>PARSE</strong>, we could write a correct definition of\n      <a href=\"../core/Dotp\">.(</a>:\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <a href=\"../core/Dotp\">.(</a>  \n      <a href=\"../core/BracketCHAR\">[CHAR]</a> <code>)</code>  \n      <strong>PARSE</strong> <a href=\"../core/TYPE\">TYPE</a>\n      <a href=\"../core/Semi\">;</a>   <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      </p><p>\n      This definition avoids the \"empty string\" anomaly.\n      </p><p>\n      </p></li>\n      <li> <a href=\"../core/WORD\">WORD</a> returns its result as a counted string.\n      This has four bad effects:\n      <p>\n      </p><ol style=\"list-style-type: lower-alpha\">\n      <li> The characters accepted by <a href=\"../core/WORD\">WORD</a> must be\n      copied from the input buffer into a transient buffer,\n      in order to make room for the count character that\n      must be at the beginning of the counted string. The\n      copy step is inefficient, compared to <strong>PARSE</strong>,\n      which leaves the string in the input buffer and doesn't\n      need to copy it anywhere.\n      <p>\n      </p></li>\n      <li> <a href=\"../core/WORD\">WORD</a> must be careful not to store too many\n      characters into the transient buffer, thus overwriting\n      something beyond the end of the buffer. This adds to\n      the overhead of the copy step. (<a href=\"../core/WORD\">WORD</a> may have\n      to scan a lot of characters before finding the trailing\n      delimiter.)\n      <p>\n      </p></li>\n      <li> The count character limits the length of the string\n      returned by <a href=\"../core/WORD\">WORD</a> to 255 characters (longer\n      strings can easily be stored in blocks!). This\n      limitation does not exist for <strong>PARSE</strong>.\n      <p>\n      </p></li>\n      <li> The transient buffer is typically overwritten by the\n      next use of <a href=\"../core/WORD\">WORD</a>.\n      </li>\n</ol>\n      <p>\n      The need for <a href=\"../core/WORD\">WORD</a> has largely been eliminated by\n      <strong>PARSE</strong> and <a href=\"../core/PARSE-NAME\">PARSE-NAME</a>. <a href=\"../core/WORD\">WORD</a> is\n      retained for backward compatibility.\n      </p></li>\n</ol>\n      \n      \n      "
                        }
                    }
                },
                "PICK": {
                    "id": "core:PICK",
                    "number": "6.2.2030",
                    "name": "PICK",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "PICK",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>u</sub>...x<sub>1</sub> x<sub>0</sub> u</em> -- <em>x<sub>u</sub>...x<sub>1</sub> x<sub>0</sub> x<sub>u</sub></em> )"
                        },
                        "plain": {
                            " ": "( xu...x1 x0 u -- xu...x1 x0 xu )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>u</sub>...x<sub>1</sub> x<sub>0</sub> u</em> -- <em>x<sub>u</sub>...x<sub>1</sub> x<sub>0</sub> x<sub>u</sub></em> )\n      <p>\n      Remove <em>u</em>. Copy the <em>x<sub>u</sub></em> to the top of the stack.\n      An ambiguous condition exists if there are less than <em>u</em>+2\n      items on the stack before <strong>PICK</strong> is executed.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:PICK\">A.6.2.2030 PICK</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2030 PICK -->\n      <code>0</code> <strong>PICK</strong> is equivalent to <a href=\"../core/DUP\">DUP</a> and\n      <code>1</code> <strong>PICK</strong> is equivalent to <a href=\"../core/OVER\">OVER</a>.\n      \n      \n      "
                        }
                    }
                },
                "POSTPONE": {
                    "id": "core:POSTPONE",
                    "number": "6.1.2033",
                    "name": "POSTPONE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "POSTPONE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( \"<spaces>name\" -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Find <em>name</em>. Append the compilation semantics of\n      <em>name</em> to the current definition. An ambiguous condition\n      exists if <em>name</em> is not found.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:core:POSTPONE\">A.6.1.2033 POSTPONE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2033 POSTPONE -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>ENDIF</code>\n      <strong>POSTPONE</strong> <a href=\"../core/THEN\">THEN</a>\n      <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/IF\">IF</a> ... <code>ENDIF</code>\n      ... <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <strong>POSTPONE</strong> replaces most of the functionality of\n      <code>COMPILE</code> and  <a href=\"../core/BracketCOMPILE\">[COMPILE]</a>. <code>COMPILE</code> and\n      \n      <a href=\"../core/BracketCOMPILE\">[COMPILE]</a> are used for the same purpose: postpone the\n      compilation behavior of the next word in the parse area.\n      <code>COMPILE</code> was designed to be applied to non-immediate\n      words and <a href=\"../core/BracketCOMPILE\">[COMPILE]</a> to immediate words. This burdens\n      the programmer with needing to know which words in a system\n      are immediate. Consequently, Forth standards have had to\n      specify the immediacy or non-immediacy of all words covered by\n      the standard. This unnecessarily constrains implementors.\n      </p><p>\n      A second problem with <code>COMPILE</code> is that some\n      programmers have come to expect and exploit a particular\n      implementation, namely:\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>COMPILE</code> <a href=\"../core/Rfrom\">R&gt;</a>\n      <a href=\"../core/DUP\">DUP</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/Comma\">,</a> <a href=\"../core/CELLPlus\">CELL+</a> <a href=\"../core/toR\">&gt;R</a>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      This implementation will not work on native code Forth systems.\n      In a native code Forth using inline code expansion and peephole\n      optimization, the size of the object code produced varies; this\n      information is difficult to communicate to a \"dumb\"\n      <code>COMPILE</code>. A \"smart\" (i.e., immediate) <code>COMPILE</code>\n      would not have this problem, but this was forbidden in previous\n      standards.\n      </p><p>\n      For these reasons, <code>COMPILE</code> has not been included in\n      the standard and <a href=\"../core/BracketCOMPILE\">[COMPILE]</a> has been moved in favor of\n      <strong>POSTPONE</strong>. Additional discussion can be found in Hayes,\n      J.R., \"Postpone\", <em>Proceedings of the 1989 Rochester\n      Forth Conference</em>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2033 POSTPONE -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT4&nbsp;<strong>POSTPONE</strong>&nbsp;GT1&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT5&nbsp;GT4&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GT5 -&gt; 123 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT6&nbsp;345&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT7&nbsp;<strong>POSTPONE</strong>&nbsp;GT6&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GT7 -&gt; 345 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "Plus": {
                    "id": "core:+",
                    "number": "6.1.0120",
                    "name": "+",
                    "english": "plus",
                    "list": "CORE",
                    "basename": "Plus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- <em>n<sub>3</sub> | u<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 | u1 n2 | u2 -- n3 | u3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- <em>n<sub>3</sub> | u<sub>3</sub></em> )\n      <p>\n      Add <em>n<sub>2</sub> | u<sub>2</sub></em> to <em>n<sub>1</sub> | u<sub>1</sub></em>, giving the sum\n      <em>n<sub>3</sub> | u<sub>3</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0120 + -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;-5&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5&nbsp;&nbsp;0&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;-2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;-2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;1&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT&nbsp;&nbsp;1&nbsp;<strong>+</strong> -&gt; MID-UINT+1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "PlusLOOP": {
                    "id": "core:+LOOP",
                    "number": "6.1.0140",
                    "name": "+LOOP",
                    "english": "plus-loop",
                    "list": "CORE",
                    "basename": "PlusLOOP",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>do-sys</em> -- )",
                            "Run-time:": "( <em>n</em> -- )\n      ( R: <em>loop-sys<sub>1</sub></em> -- <em> | loop-sys<sub>2</sub></em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: do-sys -- )",
                            "Run-time:": "( n -- )\n( R: loop-sys1 --  | loop-sys2 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>do-sys</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition. Resolve the destination of all unresolved\n      occurrences of <a href=\"../core/LEAVE\">LEAVE</a> between the location given\n      by <em>do-sys</em> and the next location for a transfer of\n      control, to execute the words following <strong>+LOOP</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>n</em> -- )\n      ( R: <em>loop-sys<sub>1</sub></em> -- <em> | loop-sys<sub>2</sub></em> )\n      <p>\n      An ambiguous condition exists if the loop control parameters\n      are unavailable. Add <em>n</em> to the loop index. If the loop\n      index did not cross the boundary between the loop limit minus\n      one and the loop limit, continue execution at the beginning\n      of the loop. Otherwise, discard the current loop control\n      parameters and continue execution immediately following the\n      loop.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/DO\">6.1.1240 DO</a>,\n      <a href=\"../core/I\">6.1.1680 I</a>,\n      <a href=\"../core/LEAVE\">6.1.1760 LEAVE</a>,\n      <a href=\"../rationale#rat:core:+LOOP\">A.6.1.0140 +LOOP</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0140 +LOOP -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code>  ... limit first <a href=\"../core/DO\">DO</a>\n      ... step <strong>+LOOP</strong>\n      <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0140 +LOOP -->\n            <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GD2&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<a href=\"../core/I\">I</a>&nbsp;-1&nbsp;<strong>+LOOP</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;GD2 -&gt; 4&nbsp;3&nbsp;2&nbsp;&nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GD2 -&gt; 2&nbsp;1&nbsp;0&nbsp;-1 }T</span> <br>\n        <span class=\"tt\">T{ MID-UINT&nbsp;MID-UINT+1&nbsp;GD2 -&gt; MID-UINT+1&nbsp;MID-UINT }T</span>\n        <p>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> gditerations <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> gdincrement\n        </p><p>\n        <a href=\"../core/Colon\">:</a> gd7 <a href=\"../core/p\">(</a> limit start increment -- ) <br>\n        &nbsp;&nbsp; gdincrement <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp; 0 gditerations <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/DO\">DO</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; 1 gditerations <a href=\"../core/PlusStore\">+!</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; gditerations <a href=\"../core/Fetch\">@</a>  6 <a href=\"../core/Equal\">=</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/LEAVE\">LEAVE</a> <a href=\"../core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; gdincrement <a href=\"../core/Fetch\">@</a> <br>\n        &nbsp;&nbsp; <strong>+LOOP</strong> gditerations <a href=\"../core/Fetch\">@</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;3&nbsp;&nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;-2&nbsp;&nbsp;-3&nbsp;&nbsp;-4&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;1&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;4&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;1&nbsp;&nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;-1&nbsp;&nbsp;-1&nbsp;gd7 -&gt; -1&nbsp;-2&nbsp;-3&nbsp;-4&nbsp;&nbsp;-5&nbsp;&nbsp;-6&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;-1&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; -1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;&nbsp;-1&nbsp;&nbsp;-1&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;2&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;7&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;-1&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; -1&nbsp;0&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;-20&nbsp;30&nbsp;-10&nbsp;gd7 -&gt; 30&nbsp;20&nbsp;10&nbsp;&nbsp;0&nbsp;-10&nbsp;-20&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;-20&nbsp;31&nbsp;-10&nbsp;gd7 -&gt; 31&nbsp;21&nbsp;11&nbsp;&nbsp;1&nbsp;&nbsp;-9&nbsp;-19&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;-20&nbsp;29&nbsp;-10&nbsp;gd7 -&gt; 29&nbsp;19&nbsp;&nbsp;9&nbsp;-1&nbsp;-11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp; }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">With large and small increments</span>\n        </p><p>\n        MAX-UINT 8 RSHIFT 1+ CONSTANT ustep <br>\n        ustep NEGATE CONSTANT -ustep <br>\n        MAX-INT 7 RSHIFT 1+ CONSTANT step <br>\n        step NEGATE CONSTANT -step\n        </p><p>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> bump\n        </p><p>\n        <span class=\"tt\">T{ &nbsp;<a href=\"../core/Colon\">:</a>&nbsp;gd8&nbsp;bump&nbsp;<a href=\"../core/Store\">!</a>&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;bump&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>+LOOP</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n        </p><p>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;MAX-UINT&nbsp;0&nbsp;ustep&nbsp;gd8 -&gt; 256 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;0&nbsp;MAX-UINT&nbsp;-ustep&nbsp;gd8 -&gt; 256 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;MAX-INT&nbsp;MIN-INT&nbsp;step&nbsp;gd8 -&gt; 256 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;MIN-INT&nbsp;MAX-INT&nbsp;-step&nbsp;gd8 -&gt; 256 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "PlusStore": {
                    "id": "core:+!",
                    "number": "6.1.0130",
                    "name": "+!",
                    "english": "plus-store",
                    "list": "CORE",
                    "basename": "PlusStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n | u a-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( n | u a-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n | u a-addr</em> -- )\n      <p>\n      Add <em>n | u</em> to the single-cell number at <em>a-addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0130 +! -->\n      <span class=\"tt\">T{ &nbsp;0&nbsp;1ST&nbsp;<a href=\"../core/Store\">!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;1ST&nbsp;<strong>+!</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;1ST&nbsp;<strong>+!</strong>&nbsp;1ST&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "QUIT": {
                    "id": "core:QUIT",
                    "number": "6.1.2050",
                    "name": "QUIT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "QUIT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )\n      ( R: <em>i * x</em> -- )"
                        },
                        "plain": {
                            " ": "( -- )\n( R: i * x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      ( R: <em>i * x</em> -- )\n      <p>\n      Empty the return stack, store zero in <a href=\"../core/SOURCE-ID\">SOURCE-ID</a> if it is\n      present, make the user input device the input source, and enter\n      interpretation state. Do not display a message. Repeat the\n      following:\n      </p><ul>\n      <li> Accept a line from the input source into the input buffer,\n      set <a href=\"../core/toIN\">&gt;IN</a> to zero, and interpret.\n      </li>\n      <li> Display the implementation-defined system prompt if in\n      interpretation state, all processing has been completed,\n      and no ambiguous condition exists.\n      </li>\n</ul>\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>QUIT</strong> <br>\n      &nbsp;&nbsp; <a href=\"../core/p\">(</a> <span class=\"rm\">empty the return stack and set the input source to the user input device</span> ) <br>\n      &nbsp;&nbsp; <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/Bracket\">[</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/REFILL\">REFILL</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/BracketTick\">[']</a> INTERPRET <a href=\"../exception/CATCH\">CATCH</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;  0 <a href=\"../core/OF\">OF</a> <a href=\"../core/STATE\">STATE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a>\n      <a href=\"../core/Dotq\">.\"</a> OK\" <a href=\"../core/THEN\">THEN</a> <a href=\"../core/CR\">CR</a> <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; -1 <a href=\"../core/OF\">OF</a> <a href=\"../core/p\">(</a> <span class=\"rm\">Aborted</span> ) <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; -2 <a href=\"../core/OF\">OF</a> <a href=\"../core/p\">(</a> <span class=\"rm\">display message from <a href=\"../core/ABORTq\">ABORT\"</a></span> ) <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> <span class=\"rm\">default</span> ) <a href=\"../core/DUP\">DUP</a> <a href=\"../core/Dotq\">.\"</a> Exception # \" <a href=\"../core/d\">.</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../tools/BYE\">BYE</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      <p>\n            </p><div class=\"rm\">\nThis assumes the existence of a system-implementation word\n        <code>INTERPRET</code> that embodies the text interpreter semantics\n        described in <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>.\n        Further discussion of the interpret loop can be found in\n        <a href=\"../rationale#rat:core:COMPILE,\">A.6.2.0945 COMPILE,</a>.\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "RECURSE": {
                    "id": "core:RECURSE",
                    "number": "6.1.2120",
                    "name": "RECURSE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "RECURSE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Append the execution semantics of the current definition to\n      the current definition. An ambiguous condition exists if\n      <strong>RECURSE</strong> appears in a definition after <a href=\"../core/DOES\">DOES&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/DOES\">6.1.1250 DOES&gt;</a>,\n      <a href=\"../core/RECURSE\">6.1.2120 RECURSE</a>,\n      <a href=\"../rationale#rat:core:RECURSE\">A.6.1.2120 RECURSE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2120 RECURSE -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ... <strong>RECURSE</strong> ... <a href=\"../core/Semi\">;</a>\n      <p>\n      This is Forth's recursion operator; in some implementations it\n      is called <code>MYSELF</code>. The usual example is the coding of\n      the factorial function.\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> FACTORIAL <a href=\"../core/p\">(</a> +n1 -- +n2) <br>\n          &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> 2 <a href=\"../core/less\">&lt;</a> <a href=\"../core/IF\">IF</a> \n          <a href=\"../core/DROP\">DROP</a> 1 <a href=\"../core/EXIT\">EXIT</a> \n          <a href=\"../core/THEN\">THEN</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> 1-  <strong>RECURSE</strong>  <a href=\"../core/Times\">*</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      <p>\n      <em>n<sub>2</sub> = n<sub>1</sub>(n<sub>1</sub>-1)(n<sub>1</sub>-2)...(2)(1)</em>, the product of <em>n<sub>1</sub></em>\n      with all positive integers less than itself (as a special case,\n      zero factorial equals one). While beloved of computer scientists,\n      recursion makes unusually heavy use of both stacks and should\n      therefore be used with caution. See alternate definition in\n      <a href=\"../rationale#rat:core:REPEAT\">A.6.1.2140 REPEAT</a>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2120 RECURSE -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GI6&nbsp;<a href=\"../core/p\">(</a>&nbsp;N&nbsp;--&nbsp;0,1,..N&nbsp;)&nbsp;<br>\n      \n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/IF\">IF</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/toR\">&gt;R</a>&nbsp;<a href=\"../core/OneMinus\">1-</a>&nbsp;<strong>RECURSE</strong>&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>\n      <a href=\"../core/THEN\">THEN</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;GI6 -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;GI6 -&gt; 0&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;GI6 -&gt; 0&nbsp;1&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;GI6 -&gt; 0&nbsp;1&nbsp;2&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;GI6 -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4 }T</span>\n      <p>\n      <a href=\"../core/DECIMAL\">DECIMAL</a> <br>\n      <span class=\"tt\">T{ <a href=\"../core/ColonNONAME\">:NONAME</a>&nbsp;<a href=\"../core/p\">(</a>&nbsp;n&nbsp;--&nbsp;0,&nbsp;1,&nbsp;..,&nbsp;n&nbsp;)&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/IF\">IF</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/toR\">&gt;R</a>&nbsp;<a href=\"../core/OneMinus\">1-</a>&nbsp;<strong>RECURSE</strong>&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/CONSTANT\">CONSTANT</a>&nbsp;rn1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;rn1&nbsp;EXECUTE -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;rn1&nbsp;EXECUTE -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4 }T</span>\n      </p><p>\n      <a href=\"../core/ColonNONAME\">:NONAME</a>  <a href=\"../core/p\">(</a> n -- n1 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/OneMinus\">1-</a> <a href=\"../core/DUP\">DUP</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> 0 <a href=\"../core/OF\">OF</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 1 <a href=\"../core/OF\">OF</a> 11 <a href=\"../core/SWAP\">SWAP</a> <strong>RECURSE</strong> <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 2 <a href=\"../core/OF\">OF</a> 22 <a href=\"../core/SWAP\">SWAP</a> <strong>RECURSE</strong> <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 3 <a href=\"../core/OF\">OF</a> 33 <a href=\"../core/SWAP\">SWAP</a> <strong>RECURSE</strong> <a href=\"../core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> <a href=\"../core/ABS\">ABS</a> <strong>RECURSE</strong> <a href=\"../core/EXIT\">EXIT</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n      <a href=\"../core/Semi\">;</a> <a href=\"../core/CONSTANT\">CONSTANT</a> rn2\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;rn2&nbsp;EXECUTE -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;2&nbsp;rn2&nbsp;EXECUTE -&gt; 11&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;rn2&nbsp;EXECUTE -&gt; 33&nbsp;22&nbsp;11&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 25&nbsp;rn2&nbsp;EXECUTE -&gt; 33&nbsp;22&nbsp;11&nbsp;0 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "REFILL": {
                    "id": "core:REFILL",
                    "number": "6.2.2125",
                    "name": "REFILL",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "REFILL",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      Attempt to fill the input buffer from the input source,\n      returning a true flag if successful.\n      </p><p>\n      When the input source is the user input device, attempt to\n      receive input into the terminal input buffer. If successful,\n      make the result the input buffer, set <a href=\"../core/toIN\">&gt;IN</a> to zero, and\n      return <em>true</em>. Receipt of a line containing no characters\n      is considered successful. If there is no input available from\n      the current input source, return <em>false</em>.\n      </p><p>\n      When the input source is a string from <a href=\"../core/EVALUATE\">EVALUATE</a>, return\n      <em>false</em> and perform no other action.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../block/REFILL\">7.6.2.2125 REFILL</a>,\n      <a href=\"../file/REFILL\">11.6.2.2125 REFILL</a>,\n      <a href=\"../rationale#rat:core:REFILL\">A.6.2.2125 REFILL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2125 REFILL -->\n      <strong>REFILL</strong> is designed to behave reasonably for all possible\n      input sources. If the input source is coming from the user,\n      <strong>REFILL</strong> could still return a false value if, for instance,\n      a communication channel closes so that the system knows that no\n      more input will be available.\n      \n      \n      "
                        }
                    }
                },
                "REPEAT": {
                    "id": "core:REPEAT",
                    "number": "6.1.2140",
                    "name": "REPEAT",
                    "english": " ",
                    "list": "CORE",
                    "basename": "REPEAT",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>orig dest</em> -- )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: orig dest -- )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>orig dest</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition, resolving the backward reference <em>dest</em>.\n      Resolve the forward reference <em>orig</em> using the location\n      following the appended run-time semantics.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution at the location given by <em>dest</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/BEGIN\">6.1.0760 BEGIN</a>,\n      <a href=\"../core/WHILE\">6.1.2430 WHILE</a>,\n      <a href=\"../rationale#rat:core:REPEAT\">A.6.1.2140 REPEAT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2140 REPEAT -->\n      Typical use:\n            <div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> FACTORIAL <a href=\"../core/p\">(</a> +n1 -- +n2 ) <br>\n          &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> 2 <a href=\"../core/less\">&lt;</a> <a href=\"../core/IF\">IF</a> \n          <a href=\"../core/DROP\">DROP</a> 1 <a href=\"../core/EXIT\">EXIT</a>  <a href=\"../core/THEN\">THEN</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a>  <a href=\"../core/DUP\">DUP</a> 2 <a href=\"../core/more\">&gt;</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n          &nbsp;&nbsp;   1-  <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Times\">*</a>  <a href=\"../core/SWAP\">SWAP</a> <br>\n          &nbsp;&nbsp; <strong>REPEAT</strong> <a href=\"../core/DROP\">DROP</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2140 REPEAT -->\n      See <a href=\"../testsuite#test:core:WHILE\">F.6.1.2430 WHILE</a>.\n      \n      \n      "
                        }
                    }
                },
                "RESTORE-INPUT": {
                    "id": "core:RESTORE-INPUT",
                    "number": "6.2.2148",
                    "name": "RESTORE-INPUT",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "RESTORE-INPUT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>n</sub> ... x<sub>1</sub> n</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( xn ... x1 n -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>n</sub> ... x<sub>1</sub> n</em> -- <em>flag</em> )\n      <p>\n      Attempt to restore the input source specification to the state\n      described by <em>x<sub>1</sub></em> through <em>x<sub>n</sub></em>. <em>flag</em> is\n      true if the input source specification cannot be so restored.\n      </p><p>\n      An ambiguous condition exists if the input source represented\n      by the arguments is not the same as the current input source.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../tools/NtoR\">15.6.2.1908 N&gt;R</a>, <a href=\"../tools/NRfrom\">15.6.2.1940 NR&gt;</a>,\n      <a href=\"../rationale#rat:core:SAVE-INPUT\">A.6.2.2182 SAVE-INPUT</a>.\n      \n      "
                        }
                    }
                },
                "RFetch": {
                    "id": "core:R@",
                    "number": "6.1.2070",
                    "name": "R@",
                    "english": "r-fetch",
                    "list": "CORE",
                    "basename": "RFetch",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>x</em> )\n      ( R: <em>x</em> -- <em>x</em> )"
                        },
                        "plain": {
                            "Execution:": "( -- x )\n( R: x -- x )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      ( R: <em>x</em> -- <em>x</em> )\n      <p>\n      Copy <em>x</em> from the return stack to the data stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/toR\">6.1.0580 &gt;R</a>,\n      <a href=\"../core/Rfrom\">6.1.2060 R&gt;</a>,\n      <a href=\"../core/TwotoR\">6.2.0340 2&gt;R</a>,\n      <a href=\"../core/TwoRfrom\">6.2.0410 2R&gt;</a>,\n      <a href=\"../core/TwoRFetch\">6.2.0415 2R@</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2070 R@ -->\n      See <a href=\"../testsuite#test:core:toR\">F.6.1.0580 &gt;R</a>.\n      \n      \n      "
                        }
                    }
                },
                "ROLL": {
                    "id": "core:ROLL",
                    "number": "6.2.2150",
                    "name": "ROLL",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "ROLL",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>u</sub> x<sub>u-1</sub> ... x<sub>0</sub> u</em> -- <em>x<sub>u-1</sub> ... x<sub>0</sub> x<sub>u</sub></em> )"
                        },
                        "plain": {
                            " ": "( xu xu-1 ... x0 u -- xu-1 ... x0 xu )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>u</sub> x<sub>u-1</sub> ... x<sub>0</sub> u</em> -- <em>x<sub>u-1</sub> ... x<sub>0</sub> x<sub>u</sub></em> )\n      <p>\n      Remove <em>u</em>. Rotate <em>u</em>+1 items on the top of the stack.\n      An ambiguous condition exists if there are less than <em>u</em>+2\n      items on the stack before <strong>ROLL</strong> is executed.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:ROLL\">A.6.2.2150 ROLL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2150 ROLL -->\n      <code>2</code> <strong>ROLL</strong> is equivalent to <a href=\"../core/ROT\">ROT</a>,\n      <code>1</code> <strong>ROLL</strong> is equivalent to <a href=\"../core/SWAP\">SWAP</a> and\n      <code>0</code> <strong>ROLL</strong> is a null operation.\n      \n      \n      "
                        }
                    }
                },
                "ROT": {
                    "id": "core:ROT",
                    "number": "6.1.2160",
                    "name": "ROT",
                    "english": "rote",
                    "list": "CORE",
                    "basename": "ROT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub></em> -- <em>x<sub>2</sub> x<sub>3</sub> x<sub>1</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 x3 -- x2 x3 x1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub></em> -- <em>x<sub>2</sub> x<sub>3</sub> x<sub>1</sub></em> )\n      <p>\n      Rotate the top three stack entries.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2160 ROT -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;<strong>ROT</strong> -&gt; 2&nbsp;3&nbsp;1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "RSHIFT": {
                    "id": "core:RSHIFT",
                    "number": "6.1.2162",
                    "name": "RSHIFT",
                    "english": "r-shift",
                    "list": "CORE",
                    "basename": "RSHIFT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> u</em> -- <em>x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 u -- x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> u</em> -- <em>x<sub>2</sub></em> )\n      <p>\n      Perform a logical right shift of <em>u</em> bit-places on\n      <em>x<sub>1</sub></em>, giving <em>x<sub>2</sub></em>. Put zeroes into the most\n      significant bits vacated by the shift. An ambiguous condition\n      exists if <em>u</em> is greater than or equal to the number of\n      bits in a cell.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2162 RSHIFT -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;0&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;1&nbsp;<strong>RSHIFT</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;1&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;2&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ 8000&nbsp;F&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span>\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Biggest</span> <br>\n      <span class=\"tt\">T{ &nbsp;MSB&nbsp;1&nbsp;<strong>RSHIFT</strong>&nbsp;MSB&nbsp;<a href=\"../core/AND\">AND</a> -&gt; &nbsp;&nbsp;0 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> RSHIFT <span class=\"rm\">zero fills MSBs</span> <br>\n      <span class=\"tt\">T{ &nbsp;MSB&nbsp;1&nbsp;<strong>RSHIFT</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/TwoTimes\">2*</a>&nbsp; -&gt; MSB }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Rfrom": {
                    "id": "core:Rfrom",
                    "number": "6.1.2060",
                    "name": "R>",
                    "english": "r-from",
                    "list": "CORE",
                    "basename": "Rfrom",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>x</em> )\n      ( R: <em>x</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( -- x )\n( R: x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      ( R: <em>x</em> -- )\n      <p>\n      Move <em>x</em> from the return stack to the data stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/toR\">6.1.0580 &gt;R</a>,\n      <a href=\"../core/RFetch\">6.1.2070 R@</a>,\n      <a href=\"../core/TwotoR\">6.2.0340 2&gt;R</a>,\n      <a href=\"../core/TwoRfrom\">6.2.0410 2R&gt;</a>,\n      <a href=\"../core/TwoRFetch\">6.2.0415 2R@</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2060 R> -->\n      See <a href=\"../testsuite#test:core:toR\">F.6.1.0580 &gt;R</a>.\n      \n      \n      "
                        }
                    }
                },
                "SAVE-INPUT": {
                    "id": "core:SAVE-INPUT",
                    "number": "6.2.2182",
                    "name": "SAVE-INPUT",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "SAVE-INPUT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>x<sub>n</sub> ... x<sub>1</sub> n</em> )"
                        },
                        "plain": {
                            " ": "( -- xn ... x1 n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>x<sub>n</sub> ... x<sub>1</sub> n</em> )\n      <p>\n      <em>x<sub>1</sub></em> through <em>x<sub>n</sub></em> describe the current state of the\n      input source specification for later use by <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../tools/NtoR\">15.6.2.1908 N&gt;R</a>, <a href=\"../tools/NRfrom\">15.6.2.1940 NR&gt;</a>,\n      <a href=\"../rationale#rat:core:SAVE-INPUT\">A.6.2.2182 SAVE-INPUT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2182 SAVE-INPUT -->\n      <strong>SAVE-INPUT</strong> and <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> allow the same\n      degree of input source repositioning within a text file as is\n      available with <a href=\"../block/BLOCK\">BLOCK</a> input. <strong>SAVE-INPUT</strong>\n      and <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> \"hide the details\" of the operations\n      necessary to accomplish this repositioning, and are used the\n      same way with all input sources. This makes it easier for\n      programs to reposition the input source, because they do not\n      have to inspect several variables and take different action\n      depending on the values of those variables.\n      <p>\n      <strong>SAVE-INPUT</strong> and <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> are intended for\n      repositioning within a single input source; for example, the\n      following scenario is NOT allowed for a Standard Program:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> XX <br>\n          &nbsp;&nbsp; <strong>SAVE-INPUT</strong>   <a href=\"../core/CREATE\">CREATE</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/Sq\">S\"</a> RESTORE-INPUT\" <a href=\"../core/EVALUATE\">EVALUATE</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/ABORTq\">ABORT\"</a> couldn't restore input\" <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      <p>\n      This is incorrect because, at the time <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> is\n      executed, the input source is the string via <a href=\"../core/EVALUATE\">EVALUATE</a>,\n      which is not the same input source that was in effect when\n      <strong>SAVE-INPUT</strong> was executed.\n      </p><p>\n      The following code is allowed:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> XX <br>\n          &nbsp;&nbsp; <strong>SAVE-INPUT</strong>   <a href=\"../core/CREATE\">CREATE</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/Sq\">S\"</a> <a href=\"../core/Dotp\">.(</a> Hello)\" <a href=\"../core/EVALUATE\">EVALUATE</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> <a href=\"../core/ABORTq\">ABORT\"</a> couldn't restore input\" <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      <p>\n      After <a href=\"../core/EVALUATE\">EVALUATE</a> returns, the input source specification\n      is restored to its previous state, thus\n      <a href=\"core:SAVE-INPUT\"><strong><code>SAVE-</code></strong></a>\n      <a href=\"core:SAVE-INPUT\"><strong><code>INPUT</code></strong></a>\n      and <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> are called with the same input source\n      in effect.\n      </p><p>\n      In the above examples, the <a href=\"../core/EVALUATE\">EVALUATE</a> phrase could have\n      been replaced by a phrase involving <a href=\"../file/INCLUDE-FILE\">INCLUDE-FILE</a>\n      and the same rules would apply.\n      </p><p>\n      The standard does not specify what happens if a program\n      violates the above rules. A Standard System might check for\n      the violation and return an exception indication from\n      <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a>, or it might fail in an unpredictable\n      way.\n      </p><p>\n      The return value from <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> is primarily\n      intended to report the case where the program attempts to\n      restore the position of an input source whose position cannot\n      be restored. The keyboard might be such an input source.\n      </p><p>\n      Nesting of <strong>SAVE-INPUT</strong> and <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> is\n      allowed. For example, the following situation works as\n      expected:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> XX <br>\n          &nbsp;&nbsp; <strong>SAVE-INPUT</strong> <br>\n          &nbsp;&nbsp;   <a href=\"../core/Sq\">S\"</a> f1\" <a href=\"../file/INCLUDED\">INCLUDED</a> <br>\n          &nbsp;&nbsp;   <a href=\"../core/bs\">\\</a> The file \"f1\" includes: <br>\n          &nbsp;&nbsp;   <a href=\"../core/bs\">\\</a>    ... SAVE-INPUT ... RESTORE-INPUT ... <br>\n          &nbsp;&nbsp;   <a href=\"../core/bs\">\\</a> End of file \"f1\" <br>\n          &nbsp;&nbsp; <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a>   <a href=\"../core/ABORTq\">ABORT\"</a> couldn't restore input\" <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      <p>\n      In principle, <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> could be implemented to\n      \"always fail\", e.g.:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> <a href=\"../core/p\">(</a> x1 ... xn n -- flag ) <br>\n          &nbsp;&nbsp; 0 <a href=\"../core/qDO\">?DO</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/TRUE\">TRUE</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      <p>\n      Such an implementation would not be useful in most cases. It\n      would be preferable for a system to leave <strong>SAVE-INPUT</strong>\n      and <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> undefined, rather than to create a\n      useless implementation. In the absence of the words, the\n      application programmer could choose whether or not to create\n      \"dummy\" implementations or to work-around the problem in\n      some other way.\n      </p><p>\n      Examples of how an implementation might use the return values\n      from <strong>SAVE-INPUT</strong> to accomplish the save/restore function:\n      </p><p>\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n        <tr valign=\"top\"><td>Input Source </td><td colspan=\"4\">possible stack values </td></tr>\n        <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n        <tr valign=\"top\"><td>block\t\t\t</td><td><a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Fetch\">@</a> </td><td><a href=\"../block/BLK\">BLK</a> <a href=\"../core/Fetch\">@</a> </td><td><code>2</code> </td></tr>\n        <tr valign=\"top\"><td><a href=\"../core/EVALUATE\">EVALUATE</a>\t</td><td><a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Fetch\">@</a> </td><td><code>1</code> </td></tr>\n        <tr valign=\"top\"><td>keyboard\t\t</td><td><a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Fetch\">@</a> </td><td><code>1</code> </td></tr>\n        <tr valign=\"top\"><td>text file\t\t</td><td><a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Fetch\">@</a> </td><td><code>lo-pos</code> </td><td><code>hi-pos</code> </td><td><code>3</code> </td></tr>\n        <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n        <tr valign=\"top\"><td></td></tr>\n        </tbody></table>\n        \n        </div>\n      <p>\n      These are examples only; a Standard Program may not assume any\n      particular meaning for the individual stack items returned by\n      <strong>SAVE-INPUT</strong>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"rm\">Testing with a file source</span> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> siv -1 siv <a href=\"../core/Store\">!</a>\n        <p>\n        <a href=\"../core/Colon\">:</a> NeverExecuted <br>\n        &nbsp;&nbsp; <a href=\"../core/Dotq\">.\"</a> This should never be executed<code>\"</code> <a href=\"../core/ABORT\">ABORT</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        11111 <strong>SAVE-INPUT</strong>\n        </p><p>\n        siv <a href=\"../core/Fetch\">@</a>\n        </p><p>\n        <a href=\"../tools/BracketIF\">[IF]</a> <br>\n        &nbsp;&nbsp; 0 siv <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> <br>\n        &nbsp;&nbsp; NeverExecuted <br>\n        <a href=\"../tools/BracketELSE\">[ELSE]</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Testing the ELSE part is executed</span> <br>\n        &nbsp;&nbsp; 22222 <br>\n        <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        </p><p>\n        <span class=\"tt\">T{  -&gt; 11111&nbsp;0&nbsp;22222 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">0 comes from <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a></span>\n        </p><p>\n        <span class=\"rm\">Testing with a string source</span> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> si_inc 0 si_inc <a href=\"../core/Store\">!</a>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> si1 <br>\n        &nbsp;&nbsp; si_inc <a href=\"../core/Fetch\">@</a> <a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/PlusStore\">+!</a> <br>\n        &nbsp;&nbsp; 15 si_inc <a href=\"../core/Store\">!</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> s$ <a href=\"../core/Sq\">S\"</a> <strong>SAVE-INPUT</strong> si1 <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> 12345<code>\"</code> <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ s$&nbsp;<a href=\"../core/EVALUATE\">EVALUATE</a>&nbsp;si_inc&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 0&nbsp;2345&nbsp;15 }T</span>\n        </p><p>\n        <span class=\"rm\">Testing nesting</span> <br>\n        <a href=\"../core/Colon\">:</a> read_a_line <br>\n        &nbsp;&nbsp; <a href=\"../core/REFILL\">REFILL</a> <a href=\"../core/ZeroEqual\">0=</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/ABORTq\">ABORT\"</a> <a href=\"../core/REFILL\">REFILL</a> failed<code>\"</code> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        0 si_inc <a href=\"../core/Store\">!</a> <br>\n        <a href=\"../double/TwoVARIABLE\">2VARIABLE</a> 2res -1. 2res <a href=\"../core/TwoStore\">2!</a>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> si2 <br>\n        &nbsp;&nbsp; read_a_line <br>\n        &nbsp;&nbsp; read_a_line <br>\n        &nbsp;&nbsp; <strong>SAVE-INPUT</strong> <br>\n        &nbsp;&nbsp; read_a_line <br>\n        &nbsp;&nbsp; read_a_line <br>\n        &nbsp;&nbsp; s$ <a href=\"../core/EVALUATE\">EVALUATE</a> 2res <a href=\"../core/TwoStore\">2!</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"rm\"><strong>WARNING:</strong> do not delete or insert lines of\n        text after si2 is called otherwise the next test will\n        fail</span>\n        </p><p>\n        si2 <br>\n        33333 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">This line should be ignored</span> <br>\n        2res 2@ 44444 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\"><a href=\"../core/RESTORE-INPUT\">RESTORE-INPUT</a> should return to this line</span>\n        </p><p>\n        55555\n        </p><p>\n        <span class=\"tt\">T{  -&gt; 0&nbsp;0&nbsp;2345&nbsp;44444&nbsp;55555 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "SIGN": {
                    "id": "core:SIGN",
                    "number": "6.1.2210",
                    "name": "SIGN",
                    "english": " ",
                    "list": "CORE",
                    "basename": "SIGN",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- )"
                        },
                        "plain": {
                            " ": "( n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- )\n      <p>\n      If <em>n</em> is negative, add a minus sign to the beginning of\n      the pictured numeric output string. An ambiguous condition exists\n      if <strong>SIGN</strong> executes outside of a <a href=\"../core/num-start\">&lt;#</a> <a href=\"../core/num-end\">#&gt;</a>\n      delimited number conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2210 SIGN -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> GP2  <a href=\"../core/num-start\">&lt;#</a> -1 <strong>SIGN</strong> 0 <strong>SIGN</strong> -1 <strong>SIGN</strong> 0 0 <a href=\"../core/num-end\">#&gt;</a> <a href=\"../core/Sq\">S\"</a> --\" S= <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GP2 -&gt; &lt;TRUE&gt; }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "SMDivREM": {
                    "id": "core:SM/REM",
                    "number": "6.1.2214",
                    "name": "SM/REM",
                    "english": "s-m-slash-rem",
                    "list": "CORE",
                    "basename": "SMDivREM",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> n<sub>1</sub></em> -- <em>n<sub>2</sub> n<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 n1 -- n2 n3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> n<sub>1</sub></em> -- <em>n<sub>2</sub> n<sub>3</sub></em> )\n      <p>\n      Divide <em>d<sub>1</sub></em> by <em>n<sub>1</sub></em>, giving the symmetric quotient\n      <em>n<sub>3</sub></em> and the remainder <em>n<sub>2</sub></em>. Input and output stack\n      arguments are signed. An ambiguous condition exists if <em>n<sub>1</sub></em>\n      is zero or if the quotient lies outside the range of a single-cell\n      signed integer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>,\n      <a href=\"../core/FMDivMOD\">6.1.1561 FM/MOD</a>,\n      <a href=\"../core/UMDivMOD\">6.1.2370 UM/MOD</a>,\n      <a href=\"../rationale#rat:core:SM/REM\">A.6.1.2214 SM/REM</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2214 SM/REM -->\n      See the previous discussion of division under <a href=\"../core/FMDivMOD\">FM/MOD</a>.\n      <strong>SM/REM</strong> is the symmetric-division primitive, which allows\n      programs to define the following symmetric-division operators:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> /-REM <a href=\"../core/p\">(</a> n1 n2 -- n3 n4 )\n          <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../core/Rfrom\">R&gt;</a> <strong>SM/REM</strong>\n          <a href=\"../core/Semi\">;</a>\n          <p>\n          <a href=\"../core/Colon\">:</a> /- <a href=\"../core/p\">(</a> n1 n2 -- n3 )\n          /-REM <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> -REM <a href=\"../core/p\">(</a> n1 n2 -- n3 )\n          /-REM <a href=\"../core/DROP\">DROP</a>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> */-REM <a href=\"../core/p\">(</a> n1 n2 n3 -- n4 n5 )\n          <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <strong>SM/REM</strong>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> */- <a href=\"../core/p\">(</a> n1 n2 n3 -- n4 )\n          */-REM <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>\n          <a href=\"../core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2214 SM/REM -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>SM/REM</strong> -&gt; -1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1S&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;3&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<a href=\"../core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "SOURCE-ID": {
                    "id": "core:SOURCE-ID",
                    "number": "6.2.2218",
                    "name": "SOURCE-ID",
                    "english": "source-i-d",
                    "list": "CORE EXT",
                    "basename": "SOURCE-ID",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>0  |  -1 </em> )"
                        },
                        "plain": {
                            " ": "( -- 0  |  -1  )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>0  |  -1 </em> )\n      <p>\n      Identifies the input source as follows:\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td class=\"c\"><strong>SOURCE-ID</strong> </td><td>Input source </td></tr>\n        <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td class=\"c\">-1\t</td><td>String (via <a href=\"../core/EVALUATE\">EVALUATE</a>) </td></tr>\n        <tr valign=\"top\"><td class=\"c\">0\t</td><td>User input device </td></tr>\n        <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td class=\"c\"></td></tr>\n        </tbody></table>\n        \n        </div>\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/SOURCE-ID\">11.6.1.2218 SOURCE-ID</a>.\n      \n      "
                        }
                    }
                },
                "SOURCE": {
                    "id": "core:SOURCE",
                    "number": "6.1.2216",
                    "name": "SOURCE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "SOURCE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            " ": "( -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>c-addr u</em> )\n      <p>\n      <em>c-addr</em> is the address of, and <em>u</em> is the number of\n      characters in, the input buffer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:SOURCE\">A.6.1.2216 SOURCE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2216 SOURCE -->\n      <strong>SOURCE</strong> simplifies the process of directly accessing the\n      input buffer by hiding the differences between its location\n      for different input sources. This also gives implementors more\n      flexibility in their implementation of buffering mechanisms\n      for different input sources. The committee moved away from an\n      input buffer specification consisting of a collection of\n      individual variables.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2216 SOURCE -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> GS1 <a href=\"../core/Sq\">S\"</a> <strong>SOURCE</strong>\" <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/EVALUATE\">EVALUATE</a>\n        <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GS1 -&gt; &lt;TRUE&gt;&nbsp;&lt;TRUE&gt; }T</span>\n        <p>\n        <a href=\"../core/Colon\">:</a> GS4 <strong>SOURCE</strong> <a href=\"../core/toIN\">&gt;IN</a> <a href=\"../core/Store\">!</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GS4&nbsp;123&nbsp;456&nbsp;<br>\n        &nbsp;&nbsp;&nbsp; -&gt;  }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "SPACE": {
                    "id": "core:SPACE",
                    "number": "6.1.2220",
                    "name": "SPACE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "SPACE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Display one space.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2220 SPACE -->\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      "
                        }
                    }
                },
                "SPACES": {
                    "id": "core:SPACES",
                    "number": "6.1.2230",
                    "name": "SPACES",
                    "english": " ",
                    "list": "CORE",
                    "basename": "SPACES",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- )"
                        },
                        "plain": {
                            " ": "( n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- )\n      <p>\n      If <em>n</em> is greater than zero, display <em>n</em> spaces.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2230 SPACES -->\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      "
                        }
                    }
                },
                "STATE": {
                    "id": "core:STATE",
                    "number": "6.1.2250",
                    "name": "STATE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "STATE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of a cell containing the\n      compilation-state flag. <strong>STATE</strong> is <em>true</em> when in\n      compilation state, <em>false</em> otherwise. The <em>true</em> value\n      in <strong>STATE</strong> is non-zero, but is otherwise\n      implementation-defined. Only the following standard words alter\n      the value in <strong>STATE</strong>:\n      <a href=\"../core/Colon\">:</a> (colon),\n      <a href=\"../core/Semi\">;</a> (semicolon),\n      <a href=\"../core/ABORT\">ABORT</a>,\n      <a href=\"../core/QUIT\">QUIT</a>,\n      <a href=\"../core/ColonNONAME\">:NONAME</a>,\n      <a href=\"../core/Bracket\">[</a> (left-bracket),\n      <a href=\"../right-bracket\">]</a> (right-bracket).\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n\n      A program shall not directly alter the contents of <strong>STATE</strong>.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>,\n      <a href=\"../core/Colon\">6.1.0450 :</a>,\n      <a href=\"../core/Semi\">6.1.0460 ;</a>\n      <a href=\"../core/ABORT\">6.1.0670 ABORT</a>,\n      <a href=\"../core/QUIT\">6.1.2050 QUIT</a>,\n      <a href=\"../core/Bracket\">6.1.2500 [</a>,\n      <a href=\"../right-bracket\">6.1.2540 ]</a>,\n      <a href=\"../core/ColonNONAME\">6.2.0455 :NONAME</a>,\n      <a href=\"../tools/STATE\">15.6.2.2250 STATE</a>,\n      <a href=\"../rationale#rat:core:STATE\">A.6.1.2250 STATE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2250 STATE -->\n      Although\n      <a href=\"../core/EVALUATE\">EVALUATE</a>,\n      <a href=\"../block/LOAD\">LOAD</a>,\n      <a href=\"../file/INCLUDE-FILE\">INCLUDE-FILE</a> and\n      <a href=\"../file/INCLUDED\">INCLUDED</a>\n      are not listed as words which alter <strong>STATE</strong>, the text\n      interpreted by any one of these words could include one or\n      more words which explicitly alter <strong>STATE</strong>.\n      <a href=\"../core/EVALUATE\">EVALUATE</a>,\n      <a href=\"../block/LOAD\">LOAD</a>,\n      <a href=\"../file/INCLUDE-FILE\">INCLUDE-FILE</a> and\n      <a href=\"../file/INCLUDED\">INCLUDED</a>\n      do not in themselves alter <strong>STATE</strong>.\n      <p>\n      <strong>STATE</strong> does not nest with text interpreter nesting. For\n      example, the code sequence:\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>FOO</code> \n      <a href=\"../core/Sq\">S\"</a> <code>]\"</code> <a href=\"../core/EVALUATE\">EVALUATE</a>\n      <a href=\"../core/Semi\">;</a>\n      &nbsp;&nbsp;&nbsp;&nbsp;\n      <code>FOO</code>\n      </p><p>\n      will leave the system in compilation state. Similarly, after\n      <a href=\"../block/LOAD\">LOAD</a>ing a block containing <a href=\"../right-bracket\">]</a>, the system\n      will be in compilation state.\n      </p><p>\n      Note that <a href=\"../right-bracket\">]</a> does not affect the parse area and that the\n      only effect that <a href=\"../core/Colon\">:</a> has on the parse area is to parse a\n      word. This entitles a program to use these words to set the\n      state with known side-effects on the parse area. For example:\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>NOP</code> \n      <a href=\"../core/Colon\">:</a> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      &nbsp;&nbsp; <code>NOP</code> <a href=\"../core/ALIGN\">ALIGN</a> <br>\n      &nbsp;&nbsp; <code>NOP</code> <a href=\"../core/ALIGNED\">ALIGNED</a>\n      </p><p>\n      Some non-compliant systems have <a href=\"../right-bracket\">]</a> invoke a\n      compiler loop in addition to setting <strong>STATE</strong>. Such a\n      system would inappropriately attempt to compile the second\n      use of <code>NOP</code>.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2250 STATE -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT8&nbsp;<strong>STATE</strong>&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GT8 -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT9&nbsp;GT8&nbsp;<a href=\"../core/LITERAL\">LITERAL</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GT9&nbsp;<a href=\"../core/ZeroEqual\">0=</a> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "SWAP": {
                    "id": "core:SWAP",
                    "number": "6.1.2260",
                    "name": "SWAP",
                    "english": " ",
                    "list": "CORE",
                    "basename": "SWAP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>2</sub> x<sub>1</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x2 x1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>2</sub> x<sub>1</sub></em> )\n      <p>\n      Exchange the top two stack items.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2260 SWAP -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>SWAP</strong> -&gt; 2&nbsp;1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Semi": {
                    "id": "core:;",
                    "number": "6.1.0460",
                    "name": ";",
                    "english": "semicolon",
                    "list": "CORE",
                    "basename": "Semi",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>colon-sys</em> -- )",
                            "Run-time:": "( -- )\n      ( R: <em>nest-sys</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: colon-sys -- )",
                            "Run-time:": "( -- )\n( R: nest-sys -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>colon-sys</em> -- )\n      <p>\n      Append the run-time semantics below to the current definition. End\n      the current definition, allow it to be found in the dictionary and\n      enter interpretation state, consuming <em>colon-sys</em>. If the\n      data-space pointer is not aligned, reserve enough data space to\n      align it.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>nest-sys</em> -- )\n      <p>\n      Return to the calling definition specified by <em>nest-sys</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>,\n      <strong><a href=\"../usage#usage:compilation\">3.4.5 Compilation</a></strong>,\n      <a href=\"../rationale#rat:core:;\">A.6.1.0460 ;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0460 ; -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <em>name</em> ... <strong>;</strong>\n      <p>\n      One function performed by both <strong>;</strong> and <a href=\"../tools/SemiCODE\">;CODE</a>\n      is to allow the current definition to be found in the\n      dictionary. If the current definition was created by\n      <a href=\"../core/ColonNONAME\">:NONAME</a> the current definition has no definition name\n      and thus cannot be found in the dictionary. If <a href=\"../core/ColonNONAME\">:NONAME</a>\n      is implemented the Forth compiler must maintain enough\n      information about the current definition to allow <strong>;</strong> and\n      <a href=\"../tools/SemiCODE\">;CODE</a> to determine whether or not any action must\n      be taken to allow it to be found.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0460 ; -->\n      See <a href=\"../testsuite#test:core::\">F.6.1.0450 :</a>.\n      \n      \n      "
                        }
                    }
                },
                "Seq": {
                    "id": "core:Seq",
                    "number": "6.2.2266",
                    "name": "S\\\"",
                    "english": "s-backslash-quote",
                    "list": "CORE EXT",
                    "basename": "Seq",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- ) <br>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double-quote), using the\n      translation rules below. Append the run-time semantics given below to\n      the current definition.",
                            "Run-time:": "( -- <em>c-addr u</em> ) <br>\n      Return <em>c-addr</em> and <em>u</em> describing a string consisting of\n      the translation of the characters <em>ccc</em>.  A program shall not\n      alter the returned string."
                        },
                        "plain": {
                            "Compilation:": "( \"ccc<quote>\" -- ) \nParse ccc delimited by \" (double-quote), using the\ntranslation rules below. Append the run-time semantics given below to\nthe current definition.",
                            "Run-time:": "( -- c-addr u ) \nReturn c-addr and u describing a string consisting of\nthe translation of the characters ccc.  A program shall not\nalter the returned string."
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n ( <em>\"ccc&lt;quote&gt;\"</em> -- ) <br>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double-quote), using the\n      translation rules below. Append the run-time semantics given below to\n      the current definition.\n      <p>\n        \n      </p>"
                        },
                        "Translation rules:": {
                            "name": "Translation rules:",
                            "html": "\n\n\n      Characters are processed one at a time and appended to the compiled\n      string. If the character is a `\\' character it is processed by\n      parsing and substituting one or more  characters as follows, where\n      the character after the backslash is case sensitive:\n      <p>\n      </p><table>\n      <tbody><tr valign=\"top\"><td><code>\\a</code>\t</td><td>BEL\t\t</td><td>(alert,\t\t</td><td>ASCII 7) </td></tr>\n      <tr valign=\"top\"><td><code>\\b</code>\t</td><td>BS\t\t</td><td>(backspace,\t</td><td>ASCII 8) </td></tr>\n      <tr valign=\"top\"><td><code>\\e</code>\t</td><td>ESC\t\t</td><td>(escape,\t\t</td><td>ASCII 27) </td></tr>\n      <tr valign=\"top\"><td><code>\\f</code>\t</td><td>FF\t\t</td><td>(form feed,\t</td><td>ASCII 12) </td></tr>\n      <tr valign=\"top\"><td><code>\\l</code>\t</td><td>LF\t\t</td><td>(line feed,\t</td><td>ASCII 10) </td></tr>\n      <tr valign=\"top\"><td><code>\\m</code>\t</td><td>CR/LF\t</td><td>pair\t\t\t</td><td>(ASCII 13, 10) </td></tr>\n      <tr valign=\"top\"><td><code>\\n</code>\t</td><td>newline</td><td colspan=\"2\">(implementation dependent , e.g., CR/LF, CR, LF, LF/CR) </td></tr>\n      <tr valign=\"top\"><td><code>\\q</code>\t</td><td colspan=\"2\">double-quote </td><td>(ASCII 34) </td></tr>\n      <tr valign=\"top\"><td><code>\\r</code>\t</td><td>CR\t\t</td><td>(carriage return,\t</td><td>ASCII 13) </td></tr>\n      <tr valign=\"top\"><td><code>\\t</code>\t</td><td>HT\t\t</td><td>(horizontal tab,\t</td><td>ASCII 9) </td></tr>\n      <tr valign=\"top\"><td><code>\\v</code>\t</td><td>VT\t\t</td><td>(vertical tab,\t\t</td><td>ASCII 11) </td></tr>\n      <tr valign=\"top\"><td><code>\\z</code>\t</td><td>NUL\t\t</td><td>(no character,\t\t</td><td>ASCII 0) </td></tr>\n      <tr valign=\"top\"><td><code>\\\"</code>\t</td><td colspan=\"2\">double-quote </td><td>(ASCII 34) </td></tr>\n      <tr valign=\"top\"><td colspan=\"3\"><code>\\x</code>&lt;<em>hexdigit</em>&gt;&lt;<em>hexdigit</em>&gt; </td></tr>\n      <tr valign=\"top\"><td></td><td></td><td colspan=\"2\" style=\"width: 27em\"><div>\n      \n        The resulting character is the conversion of these two hexadecimal\n        digits. An ambiguous conditions exists if <code>\\x</code> is not\n        followed by two hexadecimal characters.\n        </div> </td></tr>\n      <tr valign=\"top\"><td><code>\\\\</code> </td><td colspan=\"2\">backslash itself </td><td>(ASCII 92) \t\t</td></tr></tbody></table>\n      <p>\n      An ambiguous condition exists if a \\ is placed before any character,\n      other than those defined in here.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n ( -- <em>c-addr u</em> ) <br>\n      Return <em>c-addr</em> and <em>u</em> describing a string consisting of\n      the translation of the characters <em>ccc</em>.  A program shall not\n      alter the returned string.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/Cq\">6.2.0855 C\"</a>,\n      <a href=\"../file/Sq\">11.6.1.2165 S\"</a>,\n      <a href=\"../rationale#rat:core:Sq\">A.6.1.2165 S\"</a>.\n      \n      "
                        }
                    }
                },
                "Sq": {
                    "id": "core:Sq",
                    "number": "6.1.2165",
                    "name": "S\"",
                    "english": "s-quote",
                    "list": "CORE",
                    "basename": "Sq",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( -- c-addr u )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double-quote).\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>c-addr u</em> )\n      <p>\n      Return <em>c-addr</em> and <em>u</em> describing a string\n      consisting of the characters <em>ccc</em>. A program shall\n      not alter the returned string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/Cq\">6.2.0855 C\"</a>,\n      <a href=\"../file/Sq\">11.6.1.2165 S\"</a>,\n      <a href=\"../core/Seq\">6.2.2266 S\\\"</a>,\n      <a href=\"../rationale#rat:core:Sq\">A.6.1.2165 S\"</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2165 S\" -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <strong>S\"</strong> <em>ccc</em><code>\"</code>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- A.6.1.2165 S\" -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GC4&nbsp;<strong>S\"</strong>&nbsp;XY\"&nbsp;<a href=\"../core/Semi\">;</a> -&gt; &nbsp; }T</span> <br>\n      <span class=\"tt\">T{ GC4&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp; -&gt; 2 }T</span> <br>\n      <span class=\"tt\">T{ GC4&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/CFetch\">C@</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/CHARPlus\">CHAR+</a>&nbsp;<a href=\"../core/CFetch\">C@</a> -&gt; 58&nbsp;59 }T</span>\n      <p>\n      <a href=\"../core/Colon\">:</a> GC5 <strong>S\"</strong> A String\"<a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">There is no space between the \" and <a href=\"../core/TwoDROP\">2DROP</a></span> <br>\n      <span class=\"tt\">T{ GC5 -&gt;  }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "StoD": {
                    "id": "core:StoD",
                    "number": "6.1.2170",
                    "name": "S>D",
                    "english": "s-to-d",
                    "list": "CORE",
                    "basename": "StoD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- <em>d</em> )"
                        },
                        "plain": {
                            " ": "( n -- d )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- <em>d</em> )\n      <p>\n      Convert the number <em>n</em> to the double-cell number <em>d</em>\n      with the same numerical value.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2170 S>D -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<strong>S&gt;D</strong> -&gt; MIN-INT&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;<strong>S&gt;D</strong> -&gt; MAX-INT&nbsp;&nbsp;0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Store": {
                    "id": "core:!",
                    "number": "6.1.0010",
                    "name": "!",
                    "english": "store",
                    "list": "CORE",
                    "basename": "Store",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x a-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( x a-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x a-addr</em> -- )\n      <p>\n      Store <em>x</em> at <em>a-addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0010 ! -->\n      See <a href=\"../testsuite#test:core:,\">F.6.1.0150 ,</a>.\n      \n      \n      "
                        }
                    }
                },
                "THEN": {
                    "id": "core:THEN",
                    "number": "6.1.2270",
                    "name": "THEN",
                    "english": " ",
                    "list": "CORE",
                    "basename": "THEN",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>orig</em> -- )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: orig -- )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>orig</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition. Resolve the forward reference <em>orig</em> using\n      the location of the appended run-time semantics.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ELSE\">6.1.1310 ELSE</a>,\n      <a href=\"../core/IF\">6.1.1700 IF</a>,\n      <a href=\"../rationale#rat:core:THEN\">A.6.1.2270 THEN</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2270 THEN -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <a href=\"../core/IF\">IF</a> ... <strong>THEN</strong>\n      ... <a href=\"../core/Semi\">;</a>\n      </p><p>\n      or\n      </p><p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <em>test</em> <a href=\"../core/IF\">IF</a> ... <a href=\"../core/ELSE\">ELSE</a> ... <strong>THEN</strong>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2270 THEN -->\n      See <a href=\"../testsuite#test:core:IF\">F.6.1.1700 IF</a>.\n      \n      \n      "
                        }
                    }
                },
                "TO": {
                    "id": "core:TO",
                    "number": "6.2.2295",
                    "name": "TO",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "TO",
                    "stackEffect": {
                        "html": {
                            "Interpretation:": "( <em>i * x \"&lt;spaces&gt;name\"</em> -- )",
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )"
                        },
                        "plain": {
                            "Interpretation:": "( i * x \"<spaces>name\" -- )",
                            "Compilation:": "( \"<spaces>name\" -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      ( <em>i * x \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading spaces and parse <em>name</em> delimited by a space.\n      Perform the \"TO <em>name</em> run-time\" semantics given in the\n      definition for the defining word of <em>name</em>.\n      An ambiguous condition exists if <em>name</em> was not defined\n      by a word with \"TO <em>name</em> run-time\" semantics.\n      </p><p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading spaces and parse <em>name</em> delimited by a\n      space. Append the \"TO <em>name</em> run-time\" semantics given\n      in the definition for the defining word\tof <em>name</em> to the\n      current definition.\n      An ambiguous condition exists if <em>name</em> was not defined\n      by a word with \"TO <em>name</em> run-time\" semantics.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n\n      An ambiguous condition exists if any of\t<a href=\"../core/POSTPONE\">POSTPONE</a>,\n      <a href=\"../core/BracketCOMPILE\">[COMPILE]</a>, <a href=\"../core/Tick\">'</a> or <a href=\"../core/BracketTick\">[']</a> are applied to\n      <strong>TO</strong>.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/VALUE\">6.2.2405 VALUE</a>,\n      <a href=\"../double/TwoVALUE\">8.6.2.0435 2VALUE</a>,\n      <a href=\"../float/FVALUE\">12.6.2.1628 FVALUE</a>,\n      <a href=\"../locals/LOCAL\">13.6.1.0086 (LOCAL)</a>,\n      <a href=\"../rationale#rat:core:TO\">A.6.2.2295 TO</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2295 TO -->\n      Typical use: <code>x</code> <strong>TO</strong> <em>name</em>\n      <p>\n      Some implementations of <strong>TO</strong> do not parse; instead they set\n      a mode flag that is tested by the subsequent execution of\n      <em>name</em>.  Standard programs must use <strong>TO</strong> as if it\n      parses.  Therefore <strong>TO</strong> and <em>name</em> must be\n      contiguous and on the same line in the source text.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.2295 TO -->\n      See <a href=\"../testsuite#test:core:VALUE\">F.6.2.2405 VALUE</a>.\n      \n      \n      "
                        }
                    }
                },
                "TRUE": {
                    "id": "core:TRUE",
                    "number": "6.2.2298",
                    "name": "TRUE",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "TRUE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>true</em> )"
                        },
                        "plain": {
                            " ": "( -- true )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>true</em> )\n      <p>\n      Return a <em>true</em> flag, a single-cell value with all\n      bits set.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:flags\">3.1.3.1 Flags</a></strong>,\n      <a href=\"../rationale#rat:core:TRUE\">A.6.2.2298 TRUE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2298 TRUE -->\n      <strong>TRUE</strong> is equivalent to the phrase\n      <code>0</code> <a href=\"../core/ZeroEqual\">0=</a>.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>TRUE</strong> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ <strong>TRUE</strong> -&gt; 0&nbsp;INVERT }T</span> <br>\n      \n      \n      "
                        }
                    }
                },
                "TUCK": {
                    "id": "core:TUCK",
                    "number": "6.2.2300",
                    "name": "TUCK",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "TUCK",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>2</sub> x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x2 x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>2</sub> x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Copy the first (top) stack item below the second stack item.\n      \n      </p>"
                        }
                    }
                },
                "TYPE": {
                    "id": "core:TYPE",
                    "number": "6.1.2310",
                    "name": "TYPE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "TYPE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, display the character string\n      specified by <em>c-addr</em> and <em>u</em>.\n      </p><p>\n      When passed a character in a character string whose\n      character-defining bits have a value between hex 20 and 7E\n      inclusive, the corresponding standard character, specified\n      by <strong><a href=\"../usage#usage:ASCII\">3.1.2.1 Graphic characters</a></strong>, is displayed.\n      Because different output devices can respond differently to\n      control characters, programs that use control characters to\n      perform specific functions have an environmental dependency.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/EMIT\">6.1.1320 EMIT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2310 TYPE -->\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      "
                        }
                    }
                },
                "Tick": {
                    "id": "core:'",
                    "number": "6.1.0070",
                    "name": "'",
                    "english": "tick",
                    "list": "CORE",
                    "basename": "Tick",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- <em>xt</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- xt )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- <em>xt</em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Find <em>name</em> and return <em>xt</em>, the execution\n      token for <em>name</em>. An ambiguous condition exists if\n      <em>name</em> is not found. When interpreting,\n      <code>' xyz EXECUTE</code> is equivalent to <code>xyz</code>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../rationale#rat:interpret\">A.3.4.3.2 Interpretation semantics</a></strong>,\n      <a href=\"../rationale#rat:core:FIND\">A.6.1.1550 FIND</a>.\n        \n      "
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0070 ' -->\n      Typical use: ... <strong>'</strong> <em>name</em>.\n      <p>\n      Many Forth systems use a state-smart tick. Many do not.\n      Forth-2012 follows the usage of Forth 94.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0070 ' -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GT1&nbsp;123&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ <strong>'</strong>&nbsp;GT1&nbsp;<a href=\"../core/EXECUTE\">EXECUTE</a> -&gt; 123 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Times": {
                    "id": "core:*",
                    "number": "6.1.0090",
                    "name": "*",
                    "english": "star",
                    "list": "CORE",
                    "basename": "Times",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- <em>n<sub>3</sub> | u<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 | u1 n2 | u2 -- n3 | u3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- <em>n<sub>3</sub> | u<sub>3</sub></em> )\n      <p>\n      Multiply <em>n<sub>1</sub> | u<sub>1</sub></em> by <em>n<sub>2</sub> | u<sub>2</sub></em> giving the product\n      <em>n<sub>3</sub> | u<sub>3</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0090 * -->\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;<strong>*</strong> -&gt; &nbsp;0 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> TEST IDENTITIE\\S <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;<strong>*</strong> -&gt; &nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;0&nbsp;<strong>*</strong> -&gt; &nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;2&nbsp;<strong>*</strong> -&gt; &nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;2&nbsp;&nbsp;1&nbsp;<strong>*</strong> -&gt; &nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;3&nbsp;&nbsp;3&nbsp;<strong>*</strong> -&gt; &nbsp;9 }T</span> <br>\n      <span class=\"tt\">T{ -3&nbsp;&nbsp;3&nbsp;<strong>*</strong> -&gt; -9 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;3&nbsp;-3&nbsp;<strong>*</strong> -&gt; -9 }T</span> <br>\n      <span class=\"tt\">T{ -3&nbsp;-3&nbsp;<strong>*</strong> -&gt; &nbsp;9 }T</span>\n      <p>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;1&nbsp;<a href=\"../core/RSHIFT\">RSHIFT</a>&nbsp;2&nbsp;<strong>*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; MID-UINT+1 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;2&nbsp;<a href=\"../core/RSHIFT\">RSHIFT</a>&nbsp;4&nbsp;<strong>*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; MID-UINT+1 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;1&nbsp;<a href=\"../core/RSHIFT\">RSHIFT</a>&nbsp;MID-UINT+1&nbsp;<a href=\"../core/OR\">OR</a>&nbsp;2&nbsp;<strong>*</strong> -&gt; MID-UINT+1 }T</span> <br>\n      \n      \n      </p>"
                        }
                    }
                },
                "TimesDiv": {
                    "id": "core:*/",
                    "number": "6.1.0100",
                    "name": "*/",
                    "english": "star-slash",
                    "list": "CORE",
                    "basename": "TimesDiv",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub> n<sub>3</sub></em> -- <em>n<sub>4</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 n3 -- n4 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub> n<sub>3</sub></em> -- <em>n<sub>4</sub></em> )\n      <p>\n      Multiply <em>n<sub>1</sub></em> by <em>n<sub>2</sub></em> producing the intermediate\n      double-cell result <em>d</em>. Divide <em>d</em> by <em>n<sub>3</sub></em> giving the\n      single-cell quotient <em>n<sub>4</sub></em>. An ambiguous condition exists\n      if <em>n<sub>3</sub></em> is zero or if the quotient <em>n<sub>4</sub></em> lies\n      outside the range of a signed number. If <em>d</em> and <em>n<sub>3</sub></em>\n      differ in sign, the implementation-defined result returned will\n      be the same as that returned by either the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>\n      or the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0100 */ -->\n            <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;\t<a href=\"../core/Colon\">:</a> T*/ T*/MOD <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a> <br>\n        IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/Colon\">:</a> T*/ T*/MOD <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;<strong>*/</strong> -&gt; MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;T*/ }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;<strong>*/</strong> -&gt; MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;T*/ }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "TimesDivMOD": {
                    "id": "core:*/MOD",
                    "number": "6.1.0110",
                    "name": "*/MOD",
                    "english": "star-slash-mod",
                    "list": "CORE",
                    "basename": "TimesDivMOD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub> n<sub>3</sub></em> -- <em>n<sub>4</sub> n<sub>5</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 n3 -- n4 n5 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub> n<sub>3</sub></em> -- <em>n<sub>4</sub> n<sub>5</sub></em> )\n      <p>\n      Multiply <em>n<sub>1</sub></em> by <em>n<sub>2</sub></em> producing the intermediate\n      double-cell result <em>d</em>. Divide <em>d</em> by <em>n<sub>3</sub></em> producing the\n      single-cell remainder <em>n<sub>4</sub></em> and the single-cell quotient\n      <em>n<sub>5</sub></em>. An ambiguous condition exists if <em>n<sub>3</sub></em> is\n      zero, or if the quotient <em>n<sub>5</sub></em> lies outside the range of a\n      single-cell signed integer. If <em>d</em> and <em>n<sub>3</sub></em> differ in\n      sign, the implementation-defined result returned will be the\n      same as that returned by either the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a> or the phrase\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0110 */MOD -->\n            <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;\t<a href=\"../core/Colon\">:</a> T*/MOD <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FMDivMOD\">FM/MOD</a> <a href=\"../core/Semi\">;</a> <br>\n        IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/Colon\">:</a> T*/MOD <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/MTimes\">M*</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SMDivREM\">SM/REM</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;<strong>*/MOD</strong> -&gt; MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;T*/MOD }T</span> <br>\n        <span class=\"tt\">T{ MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;<strong>*/MOD</strong> -&gt; MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;T*/MOD }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "TwoDROP": {
                    "id": "core:2DROP",
                    "number": "6.1.0370",
                    "name": "2DROP",
                    "english": "two-drop",
                    "list": "CORE",
                    "basename": "TwoDROP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- )\n      <p>\n      Drop cell pair <em>x<sub>1</sub> x<sub>2</sub></em> from the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0370 2DROP -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2DROP</strong> -&gt;  }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwoDUP": {
                    "id": "core:2DUP",
                    "number": "6.1.0380",
                    "name": "2DUP",
                    "english": "two-dupe",
                    "list": "CORE",
                    "basename": "TwoDUP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub> x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x1 x2 x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub> x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Duplicate cell pair <em>x<sub>1</sub> x<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0380 2DUP -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2DUP</strong> -&gt; 1&nbsp;2&nbsp;1&nbsp;2 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwoDiv": {
                    "id": "core:2/",
                    "number": "6.1.0330",
                    "name": "2/",
                    "english": "two-slash",
                    "list": "CORE",
                    "basename": "TwoDiv",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub></em> -- <em>x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 -- x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub></em> -- <em>x<sub>2</sub></em> )\n      <p>\n      <em>x<sub>2</sub></em> is the result of shifting <em>x<sub>1</sub></em> one bit toward\n      the least-significant bit, leaving the most-significant bit\n      unchanged.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0330 2/ -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0S&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;0S }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4000&nbsp;<strong>2/</strong> -&gt; 2000 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1S&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;1S }T</span> <a href=\"../core/bs\">\\</a> MSB PROPOGATED <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1S&nbsp;1&nbsp;<a href=\"../core/XOR\">XOR</a>&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;1S }T</span> <br>\n      <span class=\"tt\">T{ MSB&nbsp;<strong>2/</strong>&nbsp;MSB&nbsp;<a href=\"../core/AND\">AND</a> -&gt; &nbsp;MSB }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwoFetch": {
                    "id": "core:2@",
                    "number": "6.1.0350",
                    "name": "2@",
                    "english": "two-fetch",
                    "list": "CORE",
                    "basename": "TwoFetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>a-addr</em> -- <em>x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( a-addr -- x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>a-addr</em> -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Fetch the cell pair <em>x<sub>1</sub> x<sub>2</sub></em> stored at <em>a-addr</em>.\n      <em>x<sub>2</sub></em> is stored at <em>a-addr</em> and <em>x<sub>1</sub></em> at the\n      next consecutive cell. It is equivalent to the sequence\n      <a href=\"../core/DUP\">DUP</a> <a href=\"../core/CELLPlus\">CELL+</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/Fetch\">@</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>,\n      <a href=\"../core/TwoStore\">6.1.0310 2!</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0350 2@ -->\n      See <a href=\"../testsuite#test:core:,\">F.6.1.0150 ,</a>.\n      \n      \n      "
                        }
                    }
                },
                "TwoOVER": {
                    "id": "core:2OVER",
                    "number": "6.1.0400",
                    "name": "2OVER",
                    "english": "two-over",
                    "list": "CORE",
                    "basename": "TwoOVER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub> x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub> x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Copy cell pair <em>x<sub>1</sub> x<sub>2</sub></em> to the top of the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0400 2OVER -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;4&nbsp;<strong>2OVER</strong> -&gt; 1&nbsp;2&nbsp;3&nbsp;4&nbsp;1&nbsp;2 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwoRFetch": {
                    "id": "core:2R@",
                    "number": "6.2.0415",
                    "name": "2R@",
                    "english": "two-r-fetch",
                    "list": "CORE EXT",
                    "basename": "TwoRFetch",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      ( R: <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            "Execution:": "( -- x1 x2 )\n( R: x1 x2 -- x1 x2 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      ( R: <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Copy cell pair <em>x<sub>1</sub> x<sub>2</sub></em> from the return stack.\n      Semantically equivalent to <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/TwoDUP\">2DUP</a>\n      <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/SWAP\">SWAP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/toR\">6.1.0580 &gt;R</a>,\n      <a href=\"../core/Rfrom\">6.1.2060 R&gt;</a>,\n      <a href=\"../core/RFetch\">6.1.2070 R@</a>,\n      <a href=\"../core/TwotoR\">6.2.0340 2&gt;R</a>,\n      <a href=\"../core/TwoRfrom\">6.2.0410 2R&gt;</a>.\n      \n      "
                        }
                    }
                },
                "TwoRfrom": {
                    "id": "core:2Rfrom",
                    "number": "6.2.0410",
                    "name": "2R>",
                    "english": "two-r-from",
                    "list": "CORE EXT",
                    "basename": "TwoRfrom",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      ( R: <em>x<sub>1</sub> x<sub>2</sub></em> -- )"
                        },
                        "plain": {
                            "Execution:": "( -- x1 x2 )\n( R: x1 x2 -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      ( R: <em>x<sub>1</sub> x<sub>2</sub></em> -- )\n      <p>\n      Transfer cell pair <em>x<sub>1</sub> x<sub>2</sub></em> from the return stack.\n      Semantically equivalent to <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/toR\">6.1.0580 &gt;R</a>\n      <a href=\"../core/Rfrom\">6.1.2060 R&gt;</a>\n      <a href=\"../core/RFetch\">6.1.2070 R@</a>\n      <a href=\"../core/TwotoR\">6.2.0340 2&gt;R</a>,\n      <a href=\"../core/TwoRFetch\">6.2.0415 2R@</a>,\n      <a href=\"../rationale#rat:core:2Rfrom\">A.6.2.0410 2R&gt;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0410 2R> -->\n      Note that <strong>2R&gt;</strong> is not equivalent to <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a>.\n      Instead, it mirrors the action of <a href=\"../core/TwotoR\">2&gt;R</a>\n      (see <a href=\"core#rat:core:2toR\">A.6.2.0340</a>).\n      \n      \n      "
                        }
                    }
                },
                "TwoSWAP": {
                    "id": "core:2SWAP",
                    "number": "6.1.0430",
                    "name": "2SWAP",
                    "english": "two-swap",
                    "list": "CORE",
                    "basename": "TwoSWAP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub></em> -- <em>x<sub>3</sub> x<sub>4</sub> x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 x3 x4 -- x3 x4 x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub></em> -- <em>x<sub>3</sub> x<sub>4</sub> x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Exchange the top two cell pairs.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0430 2SWAP -->\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;4&nbsp;<strong>2SWAP</strong> -&gt; 3&nbsp;4&nbsp;1&nbsp;2 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwoStore": {
                    "id": "core:2!",
                    "number": "6.1.0310",
                    "name": "2!",
                    "english": "two-store",
                    "list": "CORE",
                    "basename": "TwoStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> a-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( x1 x2 a-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> a-addr</em> -- )\n      <p>\n      Store the cell pair <em>x<sub>1</sub> x<sub>2</sub></em> at <em>a-addr</em>, with\n      <em>x<sub>2</sub></em> at <em>a-addr</em> and <em>x<sub>1</sub></em> at the next\n      consecutive cell. It is equivalent to the sequence\n      <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Store\">!</a> <a href=\"../core/CELLPlus\">CELL+</a> <a href=\"../core/Store\">!</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0310 2! -->\n      See <a href=\"../testsuite#test:core:,\">F.6.1.0150 ,</a>.\n      \n      \n      "
                        }
                    }
                },
                "TwoTimes": {
                    "id": "core:2*",
                    "number": "6.1.0320",
                    "name": "2*",
                    "english": "two-star",
                    "list": "CORE",
                    "basename": "TwoTimes",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub></em> -- <em>x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 -- x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub></em> -- <em>x<sub>2</sub></em> )\n      <p>\n      <em>x<sub>2</sub></em> is the result of shifting <em>x<sub>1</sub></em> one bit toward\n      the most-significant bit, filling the vacated least-significant\n      bit with zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0320 2* -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;0S&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;&nbsp;0S }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ 4000&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 8000 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1S&nbsp;<strong>2*</strong>&nbsp;1&nbsp;<a href=\"../core/XOR\">XOR</a> -&gt; &nbsp;&nbsp;1S }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;MSB&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;&nbsp;0S }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwotoR": {
                    "id": "core:2toR",
                    "number": "6.2.0340",
                    "name": "2>R",
                    "english": "two-to-r",
                    "list": "CORE EXT",
                    "basename": "TwotoR",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- )\n      ( R: -- <em>x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            "Execution:": "( x1 x2 -- )\n( R: -- x1 x2 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>x<sub>1</sub> x<sub>2</sub></em> -- )\n      ( R: -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Transfer cell pair <em>x<sub>1</sub> x<sub>2</sub></em> to the return stack.\n      Semantically equivalent to <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/toR\">&gt;R</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/toR\">6.1.0580 &gt;R</a>,\n      <a href=\"../core/Rfrom\">6.1.2060 R&gt;</a>,\n      <a href=\"../core/RFetch\">6.1.2070 R@</a>,\n      <a href=\"../core/TwoRfrom\">6.2.0410 2R&gt;</a>,\n      <a href=\"../core/TwoRFetch\">6.2.0415 2R@</a>,\n      <a href=\"../rationale#rat:core:2toR\">A.6.2.0340 2&gt;R</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0340 2>R -->\n      The primary advantage of <strong>2&gt;R</strong> is that it puts the top\n      stack entry on the top of the return stack. For instance, a\n      double-cell number may be transferred to the return stack and\n      still have the most significant cell accessible on the top of\n      the return stack.\n      \n      \n      "
                        }
                    }
                },
                "UDotR": {
                    "id": "core:U.R",
                    "number": "6.2.2330",
                    "name": "U.R",
                    "english": "u-dot-r",
                    "list": "CORE EXT",
                    "basename": "UDotR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u n</em> -- )"
                        },
                        "plain": {
                            " ": "( u n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u n</em> -- )\n      <p>\n      Display <em>u</em> right aligned in a field <em>n</em> characters\n      wide. If the number of characters required to display <em>u</em>\n      is greater than <em>n</em>, all digits are displayed with no leading\n      spaces in a field as wide as necessary.\n      \n      </p>"
                        }
                    }
                },
                "UMDivMOD": {
                    "id": "core:UM/MOD",
                    "number": "6.1.2370",
                    "name": "UM/MOD",
                    "english": "u-m-slash-mod",
                    "list": "CORE",
                    "basename": "UMDivMOD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud u<sub>1</sub></em> -- <em>u<sub>2</sub> u<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( ud u1 -- u2 u3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud u<sub>1</sub></em> -- <em>u<sub>2</sub> u<sub>3</sub></em> )\n      <p>\n      Divide <em>ud</em> by <em>u<sub>1</sub></em>, giving the quotient <em>u<sub>3</sub></em>\n      and the remainder <em>u<sub>2</sub></em>. All values and arithmetic are\n      unsigned. An ambiguous condition exists if <em>u<sub>1</sub></em> is zero or\n      if the quotient lies outside the range of a single-cell unsigned\n      integer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:div\">3.2.2.1 Integer division</a></strong>,\n      <a href=\"../core/FMDivMOD\">6.1.1561 FM/MOD</a>,\n      <a href=\"../core/SMDivREM\">6.1.2214 SM/REM</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2370 UM/MOD -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM/MOD</strong> -&gt; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM/MOD</strong> -&gt; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/UMTimes\">UM*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;MAX-UINT }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"../core/UMTimes\">UM*</a>&nbsp;MAX-UINT&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;MAX-UINT&nbsp;<a href=\"../core/UMTimes\">UM*</a>&nbsp;MAX-UINT&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;MAX-UINT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "UMTimes": {
                    "id": "core:UM*",
                    "number": "6.1.2360",
                    "name": "UM*",
                    "english": "u-m-star",
                    "list": "CORE",
                    "basename": "UMTimes",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u<sub>1</sub> u<sub>2</sub></em> -- <em>ud</em> )"
                        },
                        "plain": {
                            " ": "( u1 u2 -- ud )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u<sub>1</sub> u<sub>2</sub></em> -- <em>ud</em> )\n      <p>\n      Multiply <em>u<sub>1</sub></em> by <em>u<sub>2</sub></em>, giving the unsigned double-cell\n      product <em>ud</em>. All values and arithmetic are unsigned.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2360 UM* -->\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;<strong>UM*</strong> -&gt; 0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;1&nbsp;<strong>UM*</strong> -&gt; 0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;0&nbsp;<strong>UM*</strong> -&gt; 0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>UM*</strong> -&gt; 2&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;1&nbsp;<strong>UM*</strong> -&gt; 2&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;3&nbsp;<strong>UM*</strong> -&gt; 9&nbsp;0 }T</span>\n      <p>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;1&nbsp;<a href=\"../core/RSHIFT\">RSHIFT</a>&nbsp;2&nbsp;<strong>UM*</strong> -&gt; &nbsp;MID-UINT+1&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT+1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<strong>UM*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM*</strong> -&gt; 1S&nbsp;1&nbsp;<a href=\"../core/LSHIFT\">LSHIFT</a>&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;MAX-UINT&nbsp;&nbsp;&nbsp;MAX-UINT&nbsp;<strong>UM*</strong> -&gt; &nbsp;&nbsp;&nbsp;1&nbsp;1&nbsp;<a href=\"../core/INVERT\">INVERT</a> }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "UNLOOP": {
                    "id": "core:UNLOOP",
                    "number": "6.1.2380",
                    "name": "UNLOOP",
                    "english": " ",
                    "list": "CORE",
                    "basename": "UNLOOP",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- )\n      ( R: <em>loop-sys</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( -- )\n( R: loop-sys -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>loop-sys</em> -- )\n      <p>\n      Discard the loop-control parameters for the current nesting\n      level. An <strong>UNLOOP</strong> is required for each nesting level\n      before the definition may be <a href=\"../core/EXIT\">EXIT</a>ed. An ambiguous\n      condition exists if the loop-control parameters are unavailable.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../rationale#rat:core:UNLOOP\">A.6.1.2380 UNLOOP</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2380 UNLOOP -->\n      Typical use:\n            <div class=\"quote\">\n\n        <a href=\"../core/Colon\">:</a> <code>X</code> ... <br>\n        &nbsp;&nbsp; <em>limit</em> <em>first</em> <a href=\"../core/DO\">DO</a> <br>\n        &nbsp;&nbsp;   ... <em>test</em> <a href=\"../core/IF\">IF</a>\n        ... <strong>UNLOOP</strong> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> ... <br>\n        &nbsp;&nbsp; <a href=\"../core/LOOP\">LOOP</a> ... <br>\n        <a href=\"../core/Semi\">;</a>\n        \n        </div>\n      <p>\n      <strong>UNLOOP</strong> allows the use of <a href=\"../core/EXIT\">EXIT</a> within the context\n      of <a href=\"../core/DO\">DO</a> ... <a href=\"../core/LOOP\">LOOP</a> and related do-loop constructs.\n      <strong>UNLOOP</strong> as a function has been called <code>UNDO</code>.\n      <strong>UNLOOP</strong> is more indicative of the action: nothing gets\n      undone — we simply stop doing it.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2380 UNLOOP -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GD6&nbsp;<a href=\"../core/p\">(</a>&nbsp;PAT:&nbsp;{0&nbsp;0},{0&nbsp;0}{1&nbsp;0}{1&nbsp;1},{0&nbsp;0}{1&nbsp;0}{1&nbsp;1}{2&nbsp;0}{2&nbsp;1}{2&nbsp;2}&nbsp;)&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;0&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/I\">I</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;0&nbsp;<a href=\"../core/DO\">DO</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/I\">I</a>&nbsp;<a href=\"../core/J\">J</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;3&nbsp;<a href=\"../core/Equal\">=</a>&nbsp;<a href=\"../core/IF\">IF</a>\n      <a href=\"../core/I\">I</a>&nbsp;<strong>UNLOOP</strong>&nbsp;<a href=\"../core/I\">I</a>&nbsp;<strong>UNLOOP</strong>&nbsp;<a href=\"../core/EXIT\">EXIT</a>&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/LOOP\">LOOP</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/LOOP\">LOOP</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;GD6 -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;GD6 -&gt; 3 }T</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;GD6 -&gt; 4&nbsp;1&nbsp;2 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "UNTIL": {
                    "id": "core:UNTIL",
                    "number": "6.1.2390",
                    "name": "UNTIL",
                    "english": " ",
                    "list": "CORE",
                    "basename": "UNTIL",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>dest</em> -- )",
                            "Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: dest -- )",
                            "Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>dest</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition, resolving the backward reference <em>dest</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      If all bits of <em>x</em> are zero, continue execution at the\n      location specified by <em>dest</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/BEGIN\">6.1.0760 BEGIN</a>,\n      <a href=\"../rationale#rat:core:UNTIL\">A.6.1.2390 UNTIL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2390 UNTIL -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/BEGIN\">BEGIN</a> ... <em>test</em> <strong>UNTIL</strong>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2390 UNTIL -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GI4&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;5&nbsp;<a href=\"../core/more\">&gt;</a>&nbsp;<strong>UNTIL</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;GI4 -&gt; 3&nbsp;4&nbsp;5&nbsp;6 }T</span> <br>\n      <span class=\"tt\">T{ 5&nbsp;GI4 -&gt; 5&nbsp;6 }T</span> <br>\n      <span class=\"tt\">T{ 6&nbsp;GI4 -&gt; 6&nbsp;7 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "UNUSED": {
                    "id": "core:UNUSED",
                    "number": "6.2.2395",
                    "name": "UNUSED",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "UNUSED",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      <em>u</em> is the amount of space remaining in the region addressed\n      by <a href=\"../core/HERE\">HERE</a>, in address units.\n      \n      </p>"
                        }
                    }
                },
                "Ud": {
                    "id": "core:Ud",
                    "number": "6.1.2320",
                    "name": "U.",
                    "english": "u-dot",
                    "list": "CORE",
                    "basename": "Ud",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- )"
                        },
                        "plain": {
                            " ": "( u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- )\n      <p>\n      Display <em>u</em> in free field format.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2320 U. -->\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      "
                        }
                    }
                },
                "Uless": {
                    "id": "core:Uless",
                    "number": "6.1.2340",
                    "name": "U<",
                    "english": "u-less-than",
                    "list": "CORE",
                    "basename": "Uless",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u<sub>1</sub> u<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( u1 u2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u<sub>1</sub> u<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>u<sub>1</sub></em> is less than\n      <em>u<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/less\">6.1.0480 &lt;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2340 U< -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MID-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT&nbsp;MAX-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;MID-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Umore": {
                    "id": "core:Umore",
                    "number": "6.2.2350",
                    "name": "U>",
                    "english": "u-greater-than",
                    "list": "CORE EXT",
                    "basename": "Umore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u<sub>1</sub> u<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( u1 u2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u<sub>1</sub> u<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>u<sub>1</sub></em> is greater than\n      <em>u<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/more\">6.1.0540 &gt;</a>.\n      \n      "
                        }
                    }
                },
                "VALUE": {
                    "id": "core:VALUE",
                    "number": "6.2.2405",
                    "name": "VALUE",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "VALUE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>x</em> )",
                            "TO name Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            " ": "( x \"<spaces>name\" -- )",
                            "name Execution:": "( -- x )",
                            "TO name Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Create a definition for <em>name</em> with the execution\n      semantics defined below, with an initial value equal to <em>x</em>.\n      </p><p>\n      <em>name</em> is referred to as a \"value\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      <p>\n      Place <em>x</em> on the stack. The value of <em>x</em> is that\n      given when <em>name</em> was created, until the phrase <em>x</em>\n      <a href=\"../core/TO\">TO</a> <em>name</em> is executed, causing a new value of\n      <em>x</em> to be assigned to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "TO name Run-time:": {
                            "name": "TO name Run-time:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      Assign the value <em>x</em> to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/TO\">6.2.2295 TO</a>,\n      <a href=\"../rationale#rat:core:VALUE\">A.6.2.2405 VALUE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2405 VALUE -->\n      Typical use:\n            <div class=\"quote\">\n        <div class=\"tt\">\n0 <strong>VALUE</strong> data\n          <p>\n          <a href=\"../core/Colon\">:</a> EXCHANGE <a href=\"../core/p\">(</a> n1 -- n2 )\n          data <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/TO\">TO</a> data\n          <a href=\"../core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n      <code>EXCHANGE</code> leaves <em>n<sub>1</sub></em> in <code>data</code> and\n      returns the prior value <em>n<sub>2</sub></em>.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.2.2405 VALUE -->\n      <span class=\"tt\">T{ &nbsp;111&nbsp;VALUE&nbsp;v1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ -999&nbsp;VALUE&nbsp;v2 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ v1 -&gt; &nbsp;111 }T</span> <br>\n      <span class=\"tt\">T{ v2 -&gt; -999 }T</span> <br>\n      <span class=\"tt\">T{ 222&nbsp;TO&nbsp;v1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ v1 -&gt; 222 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;vd1&nbsp;v1&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ vd1 -&gt; 222 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;vd2&nbsp;<a href=\"../core/TO\">TO</a>&nbsp;v2&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ v2 -&gt; -999 }T</span> <br>\n      <span class=\"tt\">T{ -333&nbsp;vd2 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ v2 -&gt; -333 }T</span> <br>\n      <span class=\"tt\">T{ v1 -&gt; &nbsp;222 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "VARIABLE": {
                    "id": "core:VARIABLE",
                    "number": "6.1.2410",
                    "name": "VARIABLE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "VARIABLE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Create a definition for <em>name</em> with the execution\n      semantics defined below. Reserve one cell of data space at an\n      aligned address.\n      </p><p>\n      <em>name</em> is referred to as a \"variable\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of the reserved cell. A program\n      is responsible for initializing the contents of the reserved\n      cell.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:core:VARIABLE\">A.6.1.2410 VARIABLE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2410 VARIABLE -->\n      Typical use:\n      <strong>VARIABLE</strong> <code>XYZ</code>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2410 VARIABLE -->\n      <span class=\"tt\">T{ <strong>VARIABLE</strong>&nbsp;V1 -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;123&nbsp;V1&nbsp;<a href=\"../core/Store\">!</a> -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V1&nbsp;<a href=\"../core/Fetch\">@</a> -&gt; 123 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "WHILE": {
                    "id": "core:WHILE",
                    "number": "6.1.2430",
                    "name": "WHILE",
                    "english": " ",
                    "list": "CORE",
                    "basename": "WHILE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>dest</em> -- <em>orig dest</em> )",
                            "Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: dest -- orig dest )",
                            "Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>dest</em> -- <em>orig dest</em> )\n      <p>\n      Put the location of a new unresolved forward reference\n      <em>orig</em> onto the control flow stack, under the existing\n      <em>dest</em>. Append the run-time semantics given below to the\n      current definition. The semantics are incomplete until\n      <em>orig</em> and <em>dest</em> are resolved (e.g., by\n      <a href=\"../core/REPEAT\">REPEAT</a>).\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      If all bits of <em>x</em> are zero, continue execution at the\n      location specified by the resolution of <em>orig</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:WHILE\">A.6.1.2430 WHILE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2430 WHILE -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/BEGIN\">BEGIN</a> ...\n      <em>test</em> <strong>WHILE</strong>\n      ... <a href=\"../core/REPEAT\">REPEAT</a>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2430 WHILE -->\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GI3&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;5&nbsp;<a href=\"../core/less\">&lt;</a>&nbsp;<strong>WHILE</strong>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/REPEAT\">REPEAT</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;GI3 -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;GI3 -&gt; 4&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ 5&nbsp;GI3 -&gt; 5 }T</span> <br>\n      <span class=\"tt\">T{ 6&nbsp;GI3 -&gt; 6 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;GI5&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;2&nbsp;<a href=\"../core/more\">&gt;</a>&nbsp;<strong>WHILE</strong>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;5&nbsp;<a href=\"../core/less\">&lt;</a>&nbsp;<strong>WHILE</strong>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/REPEAT\">REPEAT</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;<a href=\"../core/ELSE\">ELSE</a>&nbsp;345&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;GI5 -&gt; 1&nbsp;345 }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;GI5 -&gt; 2&nbsp;345 }T</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;GI5 -&gt; 3&nbsp;4&nbsp;5&nbsp;123 }T</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;GI5 -&gt; 4&nbsp;5&nbsp;123 }T</span> <br>\n      <span class=\"tt\">T{ 5&nbsp;GI5 -&gt; 5&nbsp;123 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "WITHIN": {
                    "id": "core:WITHIN",
                    "number": "6.2.2440",
                    "name": "WITHIN",
                    "english": " ",
                    "list": "CORE EXT",
                    "basename": "WITHIN",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub> n<sub>3</sub> | u<sub>3</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( n1 | u1 n2 | u2 n3 | u3 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub> n<sub>3</sub> | u<sub>3</sub></em> -- <em>flag</em> )\n      <p>\n      Perform a comparison of a test value <em>n<sub>1</sub> | u<sub>1</sub></em> with a\n      lower limit <em>n<sub>2</sub> | u<sub>2</sub></em> and an upper limit\n      <em>n<sub>3</sub> | u<sub>3</sub></em>, returning <em>true</em> if either\n      (<em>n<sub>2</sub> | u<sub>2</sub></em> &lt;  <em>n<sub>3</sub> | u<sub>3</sub></em> and\n      (<em>n<sub>2</sub> | u<sub>2</sub></em> &lt;= <em>n<sub>1</sub> | u<sub>1</sub></em> and\n      <em>n<sub>1</sub> | u<sub>1</sub></em> &lt;  <em>n<sub>3</sub> | u<sub>3</sub></em>)) or\n      (<em>n<sub>2</sub> | u<sub>2</sub></em> &gt;  <em>n<sub>3</sub> | u<sub>3</sub></em> and\n      (<em>n<sub>2</sub> | u<sub>2</sub></em> &lt;= <em>n<sub>1</sub> | u<sub>1</sub></em> or\n      <em>n<sub>1</sub> | u<sub>1</sub></em> &lt;  <em>n<sub>3</sub> | u<sub>3</sub></em>)) is true, returning\n      <em>false</em> otherwise. An ambiguous condition exists\n      <em>n<sub>1</sub> | u<sub>1</sub></em>, <em>n<sub>2</sub> | u<sub>2</sub></em>, and <em>n<sub>3</sub> | u<sub>3</sub></em> are not\n      all the same type.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:core:WITHIN\">A.6.2.2440 WITHIN</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2440 WITHIN -->\n      We describe <strong>WITHIN</strong> without mentioning circular number\n      spaces (an undefined term) or providing the code. Here is a\n      number line with the overflow point (<em>o</em>) at the far right and\n      the underflow point (<em>u</em>) at the far left:\n      <div class=\"center\">\n\n        <em>u</em>---------------<em>o</em>\n        \n        </div>\n      There are two cases to consider: either the\n      <em>n<sub>2</sub> | u<sub>2</sub>... n<sub>3</sub> | u<sub>3</sub></em> range straddles the overflow/underflow\n      points or it does not. Lets examine the non-straddle case\n      first:\n      <div class=\"center\">\n\n        <em>u</em>-----[.....)-----<em>o</em>\n        \n        </div>\n      The [ denotes <em>n<sub>2</sub> | u<sub>2</sub></em>, the ) denotes <em>n<sub>3</sub> | u<sub>3</sub></em>,\n      and the dots and [ are numbers <strong>WITHIN</strong> the range.\n      <em>n<sub>3</sub> | u<sub>3</sub></em> is greater than <em>n<sub>2</sub> | u<sub>2</sub></em>, so the\n      following tests will determine if <em>n<sub>1</sub> | u<sub>1</sub></em> is\n      <strong>WITHIN</strong> <em>n<sub>2</sub> | u<sub>2</sub></em> and <em>n<sub>3</sub> | u<sub>3</sub></em>:\n      <div class=\"center\">\n\n        <em>n<sub>2</sub> | u<sub>2</sub></em> <em>&lt;=</em> <em>n<sub>1</sub> | u<sub>1</sub></em> and <em>n<sub>1</sub> | u<sub>1</sub></em> &lt; <em>n<sub>3</sub> | u<sub>3</sub></em>.\n        \n        </div>\n      In the case where the comparison range straddles the\n      overflow/underflow points:\n      <div class=\"center\">\n\n        <em>u</em>.....)-----[.....<em>o</em>\n        \n        </div>\n      <em>n<sub>3</sub> | u<sub>3</sub></em> is less than <em>n<sub>2</sub> | u<sub>2</sub></em> and the following\n      tests will determine if <em>n<sub>1</sub> | u<sub>1</sub></em> is <strong>WITHIN</strong>\n      <em>n<sub>2</sub> | u<sub>2</sub></em> and <em>n<sub>3</sub> | u<sub>3</sub></em>:\n      <div class=\"center\">\n\n        <em>n<sub>2</sub> | u<sub>2</sub></em> <em>&lt;=</em> <em>n<sub>1</sub> | u<sub>1</sub></em> or <em>n<sub>1</sub> | u<sub>1</sub></em> &lt; <em>n<sub>3</sub> | u<sub>3</sub></em>.\n        \n        </div>\n      <strong>WITHIN</strong> must work for both signed and unsigned arguments.\n      One obvious implementation does not work:\n            <div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <strong>WITHIN</strong> <a href=\"../core/p\">(</a> test low high -- flag ) <br>\n          &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/less\">&lt;</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/p\">(</a> test flag1 )\n          <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/less\">&lt;</a> <a href=\"../core/p\">(</a> flag1 flag2 )\n          <a href=\"../core/AND\">AND</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      Assume two's-complement arithmetic on a 16-bit machine, and\n      consider the following test:\n      <p>\n      &nbsp;&nbsp; <code>33000   32000   34000   WITHIN</code>\n      </p><p>\n      The above implementation returns <em>false</em> for that test,\n      even though the unsigned number 33000 is clearly within the\n      range {{32000 ... 34000}}.\n      </p><p>\n      The problem is that, in the incorrect implementation, the\n      signed comparison <a href=\"../core/less\">&lt;</a> gives the wrong answer when 32000\n      is compared to 33000, because when those numbers are treated\n      as signed numbers, 33000 is treated as negative 32536, while\n      32000 remains positive.\n      </p><p>\n      Replacing <a href=\"../core/less\">&lt;</a> with <a href=\"../core/Uless\">U&lt;</a> in the above implementation\n      makes it work with unsigned numbers, but causes problems with\n      certain signed number ranges; in particular, the test:\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n1   -5   5   WITHIN\n          \n          </div>\n        </div>\n      would give an incorrect answer.\n      <p>\n      For two's-complement machines that ignore arithmetic overflow\n      (most machines), the following implementation works in all\n      cases:\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <strong>WITHIN</strong> <a href=\"../core/p\">(</a> test low high -- flag )\t \n          <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Uless\">U&lt;</a>  \n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      \n      \n      "
                        }
                    }
                },
                "WORD": {
                    "id": "core:WORD",
                    "number": "6.1.2450",
                    "name": "WORD",
                    "english": " ",
                    "list": "CORE",
                    "basename": "WORD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>char \"&lt;chars&gt;ccc&lt;char&gt;\"</em> -- <em>c-addr</em> )"
                        },
                        "plain": {
                            " ": "( char \"<chars>ccc<char>\" -- c-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>char \"&lt;chars&gt;ccc&lt;char&gt;\"</em> -- <em>c-addr</em> )\n      <p>\n      Skip leading delimiters. Parse characters <em>ccc</em> delimited\n      by <em>char</em>.  An ambiguous condition exists if the length of\n      the parsed string is greater than the implementation-defined\n      length of a counted string.\n      </p><p>\n      <em>c-addr</em> is the address of a transient region containing\n      the parsed word as a counted string. If the parse area was\n      empty or contained no characters other than the delimiter, the\n      resulting string has a zero length.\n      A program may replace characters within the string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>,\n      <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:core:WORD\">A.6.1.2450 WORD</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.2450 WORD -->\n      Typical use: <em>char</em> <strong>WORD</strong> <em>ccc</em>&lt;<em>char</em>&gt;\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2450 WORD -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> GS3 <strong>WORD</strong> <a href=\"../core/COUNT\">COUNT</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ <a href=\"../core/BL\">BL</a>&nbsp;GS3&nbsp;HELLO -&gt; 5&nbsp;<a href=\"../core/CHAR\">CHAR</a>&nbsp;H }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/CHAR\">CHAR</a>&nbsp;\"&nbsp;GS3&nbsp;GOODBYE\" -&gt; 7&nbsp;<a href=\"../core/CHAR\">CHAR</a>&nbsp;G }T</span> <br>\n        <span class=\"tt\">T{ BL&nbsp;GS3&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/DROP\">DROP</a> -&gt; 0 }T</span>  <a href=\"../core/bs\">\\</a> <span class=\"rm\">Blank lines return zero-length strings</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "XOR": {
                    "id": "core:XOR",
                    "number": "6.1.2490",
                    "name": "XOR",
                    "english": "x-or",
                    "list": "CORE",
                    "basename": "XOR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- x3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>x<sub>3</sub></em> )\n      <p>\n      <em>x<sub>3</sub></em> is the bit-by-bit exclusive-or of <em>x<sub>1</sub></em> with\n      <em>x<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.2490 XOR -->\n      <span class=\"tt\">T{ 0S&nbsp;0S&nbsp;<strong>XOR</strong> -&gt; 0S }T</span> <br>\n      <span class=\"tt\">T{ 0S&nbsp;1S&nbsp;<strong>XOR</strong> -&gt; 1S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;0S&nbsp;<strong>XOR</strong> -&gt; 1S }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;1S&nbsp;<strong>XOR</strong> -&gt; 0S }T</span>\n      \n      \n      "
                        }
                    }
                },
                "ZeroEqual": {
                    "id": "core:0=",
                    "number": "6.1.0270",
                    "name": "0=",
                    "english": "zero-equals",
                    "list": "CORE",
                    "basename": "ZeroEqual",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( x -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>x</em> is equal to zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0270 0= -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>0=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Zeroless": {
                    "id": "core:0less",
                    "number": "6.1.0250",
                    "name": "0<",
                    "english": "zero-less",
                    "list": "CORE",
                    "basename": "Zeroless",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( n -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>n</em> is less than zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0250 0< -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<strong>0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;<strong>0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Zeromore": {
                    "id": "core:0more",
                    "number": "6.2.0280",
                    "name": "0>",
                    "english": "zero-greater",
                    "list": "CORE EXT",
                    "basename": "Zeromore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( n -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>n</em> is greater than\n      zero.\n      \n      </p>"
                        }
                    }
                },
                "Zerone": {
                    "id": "core:0ne",
                    "number": "6.2.0260",
                    "name": "0<>",
                    "english": "zero-not-equals",
                    "list": "CORE EXT",
                    "basename": "Zerone",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( x -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>x</em> is not equal to\n      zero.\n      \n      </p>"
                        }
                    }
                },
                "bs": {
                    "id": "core:bs",
                    "number": "6.2.2535",
                    "name": "\\",
                    "english": "backslash",
                    "list": "CORE EXT",
                    "basename": "bs",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"ccc&lt;eol&gt;\"</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( \"ccc<eol>\" -- )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;eol&gt;\"</em> -- )\n      <p>\n      Parse and discard the remainder of the parse area.\n      <strong>\\</strong> is an immediate word.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../block/bs\">7.6.2.2535 \\</a>,\n      <a href=\"../rationale#rat:core:bs\">A.6.2.2535 \\</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.2535 \\ -->\n      Typical use:\n            <div class=\"quote\">\n        <div class=\"tt\">\n5 <a href=\"../core/CONSTANT\">CONSTANT</a> THAT\n            <strong>\\</strong>   <span class=\"rm\">This is a comment about THAT</span>\n          \n          </div>\n        </div>\n      \n      \n      "
                        }
                    }
                },
                "d": {
                    "id": "core:d",
                    "number": "6.1.0180",
                    "name": ".",
                    "english": "dot",
                    "list": "CORE",
                    "basename": "d",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- )"
                        },
                        "plain": {
                            " ": "( n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- )\n      <p>\n      Display <em>n</em> in free field format.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:digits\">3.2.1.2 Digit conversion</a></strong>,\n      <strong><a href=\"../usage#usage:dot\">3.2.1.3 Free-field number display</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0180 . -->\n      See <a href=\"../testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n      \n      \n      "
                        }
                    }
                },
                "less": {
                    "id": "core:less",
                    "number": "6.1.0480",
                    "name": "<",
                    "english": "less-than",
                    "list": "CORE",
                    "basename": "less",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>n<sub>1</sub></em> is less than\n      <em>n<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/Uless\">6.1.2340 U&lt;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0480 < -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "more": {
                    "id": "core:more",
                    "number": "6.1.0540",
                    "name": ">",
                    "english": "greater-than",
                    "list": "CORE",
                    "basename": "more",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>n<sub>1</sub></em> is greater than <em>n<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/Umore\">6.2.2350 U&gt;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0540 > -->\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "ne": {
                    "id": "core:ne",
                    "number": "6.2.0500",
                    "name": "<>",
                    "english": "not-equals",
                    "list": "CORE EXT",
                    "basename": "ne",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>x<sub>1</sub></em> is not bit-for-bit\n      the same as <em>x<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "num-end": {
                    "id": "core:num-end",
                    "number": "6.1.0040",
                    "name": "#>",
                    "english": "number-sign-greater",
                    "list": "CORE",
                    "basename": "num-end",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xd</em> -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            " ": "( xd -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xd</em> -- <em>c-addr u</em> )\n      <p>\n      Drop <em>xd</em>. Make the pictured numeric output string\n      available as a character string. <em>c-addr</em> and <em>u</em>\n      specify the resulting character string. A program may replace\n      characters within the string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/num\">6.1.0030 #</a>,\n      <a href=\"../core/numS\">6.1.0050 #S</a>,\n      <a href=\"../core/num-start\">6.1.0490 &lt;#</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0040 #> -->\n      See <a href=\"../testsuite#test:core:num\">F.6.1.0030 #</a>,\n      <a href=\"../testsuite#test:core:numS\">F.6.1.0050 #S</a>,\n      <a href=\"../testsuite#test:core:HOLD\">F.6.1.1670 HOLD</a> and\n      <a href=\"../testsuite#test:core:SIGN\">F.6.1.2210 SIGN</a>.\n      \n      \n      "
                        }
                    }
                },
                "num-start": {
                    "id": "core:num-start",
                    "number": "6.1.0490",
                    "name": "<#",
                    "english": "less-number-sign",
                    "list": "CORE",
                    "basename": "num-start",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Initialize the pictured numeric output conversion process.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/num\">6.1.0030 #</a>,\n      <a href=\"../core/num-end\">6.1.0040 #&gt;</a>,\n      <a href=\"../core/numS\">6.1.0050 #S</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0490 <# -->\n      See <a href=\"../testsuite#test:core:num\">F.6.1.0030 #</a>,\n      <a href=\"../testsuite#test:core:numS\">F.6.1.0050 #S</a>,\n      <a href=\"../testsuite#test:core:HOLD\">F.6.1.1670 HOLD</a>,\n      <a href=\"../testsuite#test:core:SIGN\">F.6.1.2210 SIGN</a>.\n      \n      \n      "
                        }
                    }
                },
                "num": {
                    "id": "core:num",
                    "number": "6.1.0030",
                    "name": "#",
                    "english": "number-sign",
                    "list": "CORE",
                    "basename": "num",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud<sub>1</sub></em> -- <em>ud<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( ud1 -- ud2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud<sub>1</sub></em> -- <em>ud<sub>2</sub></em> )\n      <p>\n      Divide <em>ud<sub>1</sub></em> by the number in <a href=\"../core/BASE\">BASE</a> giving the\n      quotient <em>ud<sub>2</sub></em> and the remainder <em>n</em>. (<em>n</em> is\n      the least significant digit of <em>ud<sub>1</sub></em>.) Convert <em>n</em>\n      to external form and add the resulting character to the beginning\n      of the pictured numeric output string. An ambiguous condition\n      exists if <strong>#</strong> executes outside of a \n      <a href=\"../core/num-start\">&lt;#</a> <a href=\"../core/num-end\">#&gt;</a> delimited number conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/num-end\">6.1.0040 #&gt;</a>,\n      <a href=\"../core/numS\">6.1.0050 #S</a>,\n      <a href=\"../core/num-start\">6.1.0490 &lt;#</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0030 # -->\n      <code><a href=\"../core/Colon\">:</a> GP3  <a href=\"../core/num-start\">&lt;#</a> 1 0 <strong>#</strong> <strong>#</strong> <a href=\"../core/num-end\">#&gt;</a> <a href=\"../core/Sq\">S\"</a> 01\" S= <a href=\"../core/Semi\">;</a></code> <br>\n      <span class=\"tt\">T{ GP3 -&gt; &lt;TRUE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "numS": {
                    "id": "core:numS",
                    "number": "6.1.0050",
                    "name": "#S",
                    "english": "number-sign-s",
                    "list": "CORE",
                    "basename": "numS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud<sub>1</sub></em> -- <em>ud<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( ud1 -- ud2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud<sub>1</sub></em> -- <em>ud<sub>2</sub></em> )\n      <p>\n      Convert one digit of <em>ud<sub>1</sub></em> according to the rule for\n      <a href=\"../core/num\">#</a>. Continue conversion until the quotient is zero.\n      <em>ud<sub>2</sub></em> is zero. An ambiguous condition exists if\n      <strong>#S</strong> executes outside of a <a href=\"../core/num-start\">&lt;#</a> <a href=\"../core/num-end\">#&gt;</a>\n      delimited number conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/num\">6.1.0030 #</a>,\n      <a href=\"../core/num-end\">6.1.0040 #&gt;</a>,\n      <a href=\"../core/num-start\">6.1.0490 &lt;#</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0050 #S -->\n            <div class=\"tt\">\n<code><a href=\"../core/Colon\">:</a> GP4  <a href=\"../core/num-start\">&lt;#</a> 1 0 <strong>#S</strong> <a href=\"../core/num-end\">#&gt;</a> <a href=\"../core/Sq\">S\"</a> 1\" S= <a href=\"../core/Semi\">;</a></code> <br>\n        <span class=\"tt\">T{ GP4 -&gt; &lt;TRUE&gt; }T</span>\n        <p>\n        <a href=\"../core/Colon\">:</a> GP5 <br>\n        &nbsp;&nbsp; <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Fetch\">@</a> &lt;TRUE&gt; <br>\n        &nbsp;&nbsp; MAX-BASE <a href=\"../core/OnePlus\">1+</a> 2 <a href=\"../core/DO\">DO</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> FOR EACH POSSIBLE BASE <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> TBD: ASSUMES BASE WORKS <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> 0 <a href=\"../core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"../core/num-end\">#&gt;</a> <a href=\"../core/Sq\">S\"</a> 10\" S= <a href=\"../core/AND\">AND</a> <br>\n        &nbsp;&nbsp;    <a href=\"../core/LOOP\">LOOP</a> <br>\n        &nbsp;&nbsp;    <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GP5 -&gt; &lt;TRUE&gt; }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> GP6 <br>\n        &nbsp;&nbsp;\t<a href=\"../core/BASE\">BASE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/toR\">&gt;R</a>  2 <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp;\tMAX-UINT MAX-UINT <a href=\"../core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"../core/num-end\">#&gt;</a>\t&nbsp;&nbsp;\t\t<a href=\"../core/bs\">\\</a> MAXIMUM UD TO BINARY <br>\n        &nbsp;&nbsp;\t<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> S: C-ADDR U <br>\n        &nbsp;&nbsp;\t<a href=\"../core/DUP\">DUP</a> #BITS-UD <a href=\"../core/Equal\">=</a> <a href=\"../core/SWAP\">SWAP</a> <br>\n        &nbsp;&nbsp;\t0 <a href=\"../core/DO\">DO</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> S: C-ADDR FLAG <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/OVER\">OVER</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> 1 <a href=\"../core/Equal\">=</a> <a href=\"../core/AND\">AND</a>\t&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> ALL ONES <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/toR\">&gt;R</a> <a href=\"../core/CHARPlus\">CHAR+</a> <a href=\"../core/Rfrom\">R&gt;</a> <br>\n        &nbsp;&nbsp;\t<a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GP6 -&gt; &lt;TRUE&gt; }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> GP7 <br>\n        &nbsp;&nbsp;\t<a href=\"../core/BASE\">BASE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/toR\">&gt;R</a>\t\tMAX-BASE <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp;\t&lt;TRUE&gt; <br>\n        &nbsp;&nbsp;\tA 0 <a href=\"../core/DO\">DO</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/I\">I</a> 0 <a href=\"../core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"../core/num-end\">#&gt;</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t\t1 <a href=\"../core/Equal\">=</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/I\">I</a> 30 <a href=\"../core/Plus\">+</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/AND\">AND</a> <a href=\"../core/AND\">AND</a> <br>\n        &nbsp;&nbsp;\t<a href=\"../core/LOOP\">LOOP</a> <br>\n        &nbsp;&nbsp;\tMAX-BASE A <a href=\"../core/DO\">DO</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/I\">I</a> 0 <a href=\"../core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"../core/num-end\">#&gt;</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t\t1 <a href=\"../core/Equal\">=</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/CFetch\">C@</a> 41 <a href=\"../core/I\">I</a> A <a href=\"../core/Minus\">-</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/AND\">AND</a> <a href=\"../core/AND\">AND</a> <br>\n        &nbsp;&nbsp;\t<a href=\"../core/LOOP\">LOOP</a> <br>\n        &nbsp;&nbsp;\t<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GP7 -&gt; &lt;TRUE&gt; }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "p": {
                    "id": "core:p",
                    "number": "6.1.0080",
                    "name": "(",
                    "english": "paren",
                    "list": "CORE",
                    "basename": "p",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"ccc&lt;paren&gt;\"</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( \"ccc<paren>\" -- )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;paren&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by <code>)</code>\n      (right parenthesis).\n      <strong>(</strong> is an immediate word.\n      </p><p>\n      The number of characters in <em>ccc</em> may be zero to the\n      number of characters in the parse area.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <strong><a href=\"../file/p\">11.6.1.0080 (</a></strong>,\n      <a href=\"../rationale#rat:core:p\">A.6.1.0080 (</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0080 ( -->\n      Typical use: ... <strong>(</strong> <em>ccc</em><code>)</code> ...\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">There is no space either side of the ).</span><br>\n      \n      <span class=\"tt\">T{ <strong>(</strong>&nbsp;A&nbsp;comment)1234 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pc1&nbsp;<strong>(</strong>&nbsp;A&nbsp;comment)1234&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;pc1 -&gt; 1234 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "qDO": {
                    "id": "core:qDO",
                    "number": "6.2.0620",
                    "name": "?DO",
                    "english": "question-do",
                    "list": "CORE EXT",
                    "basename": "qDO",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>do-sys</em> )",
                            "Run-time:": "( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- )\n      ( R: -- <em>loop-sys</em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- do-sys )",
                            "Run-time:": "( n1 | u1 n2 | u2 -- )\n( R: -- loop-sys )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>do-sys</em> )\n      <p>\n      Put <em>do-sys</em> onto the control-flow stack. Append the\n      run-time semantics given below to the current definition. The\n      semantics are incomplete until resolved by a consumer of\n      <em>do-sys</em> such as <a href=\"../core/LOOP\">LOOP</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>n<sub>1</sub> | u<sub>1</sub> n<sub>2</sub> | u<sub>2</sub></em> -- )\n      ( R: -- <em>loop-sys</em> )\n      <p>\n      If <em>n<sub>1</sub> | u<sub>1</sub></em> is equal to <em>n<sub>2</sub> | u<sub>2</sub></em>, continue\n      execution at the location given by the consumer of\n      <em>do-sys</em>. Otherwise set up loop control parameters with\n      index <em>n<sub>2</sub> | u<sub>2</sub></em> and limit <em>n<sub>1</sub> | u<sub>1</sub></em> and continue\n      executing immediately following <strong>?DO</strong>. Anything already\n      on the return stack becomes unavailable until the loop\n      control parameters are discarded. An ambiguous condition\n      exists if <em>n<sub>1</sub> | u<sub>1</sub></em> and <em>n<sub>2</sub> | u<sub>2</sub></em> are not both of\n      the same type.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:controlstack\">3.2.3.2 Control-flow stack</a></strong>,\n      <a href=\"../core/PlusLOOP\">6.1.0140 +LOOP</a>,\n      <a href=\"../core/DO\">6.1.1240 DO</a>,\n      <a href=\"../core/I\">6.1.1680 I</a>, <br>\n      <a href=\"../core/LEAVE\">6.1.1760 LEAVE</a>,\n      <a href=\"../core/LOOP\">6.1.1800 LOOP</a>,\n      <a href=\"../core/UNLOOP\">6.1.2380 UNLOOP</a>,\n      <a href=\"../rationale#rat:core:qDO\">A.6.2.0620 ?DO</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.2.0620 ?DO -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ... <strong>?DO</strong> ... <a href=\"../core/LOOP\">LOOP</a> ... <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/DECIMAL\">DECIMAL</a>\n        <p>\n        <a href=\"../core/Colon\">:</a> qd <strong>?DO</strong> <a href=\"../core/I\">I</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;789&nbsp;&nbsp;&nbsp;789&nbsp;qd -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ -9876&nbsp;-9876&nbsp;qd -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;qd -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> qd1 <strong>?DO</strong> <a href=\"../core/I\">I</a> 10 <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ 50&nbsp;1&nbsp;qd1 -&gt; 1&nbsp;11&nbsp;21&nbsp;31&nbsp;41 }T</span> <br>\n        <span class=\"tt\">T{ 50&nbsp;0&nbsp;qd1 -&gt; 0&nbsp;10&nbsp;20&nbsp;30&nbsp;40 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> qd2 <strong>?DO</strong> <a href=\"../core/I\">I</a> 3 <a href=\"../core/more\">&gt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/LEAVE\">LEAVE</a> <a href=\"../core/ELSE\">ELSE</a> <a href=\"../core/I\">I</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ 5&nbsp;-1&nbsp;qd2 -&gt; -1&nbsp;0&nbsp;1&nbsp;2&nbsp;3 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> qd3 <strong>?DO</strong> <a href=\"../core/I\">I</a> 1 <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ 4&nbsp;&nbsp;4&nbsp;qd3 -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ 4&nbsp;&nbsp;1&nbsp;qd3 -&gt; &nbsp;1&nbsp;2&nbsp;3 }T</span> <br>\n        <span class=\"tt\">T{ 2&nbsp;-1&nbsp;qd3 -&gt; -1&nbsp;0&nbsp;1 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> qd4 <strong>?DO</strong> <a href=\"../core/I\">I</a> -1 <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ &nbsp;4&nbsp;4&nbsp;qd4 -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;1&nbsp;4&nbsp;qd4 -&gt; 4&nbsp;3&nbsp;2&nbsp;&nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ -1&nbsp;2&nbsp;qd4 -&gt; 2&nbsp;1&nbsp;0&nbsp;-1 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> qd5 <strong>?DO</strong> <a href=\"../core/I\">I</a> -10 <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;50&nbsp;qd5 -&gt; 50&nbsp;40&nbsp;30&nbsp;20&nbsp;10&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;50&nbsp;qd5 -&gt; 50&nbsp;40&nbsp;30&nbsp;20&nbsp;10&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ -25&nbsp;10&nbsp;qd5 -&gt; 10&nbsp;0&nbsp;-10&nbsp;-20&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n        </p><p>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> qditerations <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> qdincrement\n        </p><p>\n        <a href=\"../core/Colon\">:</a> qd6 <a href=\"../core/p\">(</a> limit start increment -- )\n        &nbsp;&nbsp; qdincrement <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp; 0 qditerations <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp; <strong>?DO</strong> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; 1 qditerations <a href=\"../core/PlusStore\">+!</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; qditerations <a href=\"../core/Fetch\">@</a>  6 <a href=\"../core/Equal\">=</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/LEAVE\">LEAVE</a> <a href=\"../core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; qdincrement <a href=\"../core/Fetch\">@</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/PlusLOOP\">+LOOP</a> qditerations <a href=\"../core/Fetch\">@</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;4&nbsp;-1&nbsp;qd6 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;4&nbsp;-1&nbsp;qd6 -&gt; &nbsp;4&nbsp;&nbsp;3&nbsp;&nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;1&nbsp;-1&nbsp;qd6 -&gt; &nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;-2&nbsp;-3&nbsp;-4&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;&nbsp;8&nbsp;&nbsp;9&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;1&nbsp;&nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;2&nbsp;-1&nbsp;-1&nbsp;qd6 -&gt; -1&nbsp;-2&nbsp;-3&nbsp;-4&nbsp;-5&nbsp;-6&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ -1&nbsp;&nbsp;2&nbsp;-1&nbsp;qd6 -&gt; &nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;2&nbsp;-1&nbsp;&nbsp;0&nbsp;qd6 -&gt; -1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ -1&nbsp;&nbsp;2&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ -1&nbsp;&nbsp;2&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;6&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;2&nbsp;-1&nbsp;&nbsp;1&nbsp;qd6 -&gt; -1&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "qDUP": {
                    "id": "core:qDUP",
                    "number": "6.1.0630",
                    "name": "?DUP",
                    "english": "question-dupe",
                    "list": "CORE",
                    "basename": "qDUP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>0  |  x x</em> )"
                        },
                        "plain": {
                            " ": "( x -- 0  |  x x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>0  |  x x</em> )\n      <p>\n      Duplicate <em>x</em> if it is non-zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0630 ?DUP -->\n      <span class=\"tt\">T{ -1&nbsp;<strong>?DUP</strong> -&gt; -1&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;<strong>?DUP</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;<strong>?DUP</strong> -&gt; &nbsp;1&nbsp;&nbsp;1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "toBODY": {
                    "id": "core:toBODY",
                    "number": "6.1.0550",
                    "name": ">BODY",
                    "english": "to-body",
                    "list": "CORE",
                    "basename": "toBODY",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xt</em> -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( xt -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xt</em> -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the data-field address corresponding to\n      <em>xt</em>. An ambiguous condition exists if <em>xt</em> is not\n      for a word defined via <a href=\"../core/CREATE\">CREATE</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:dataspace\">3.3.3 Data space</a></strong>,\n      <a href=\"../rationale#rat:core:toBODY\">A.6.1.0550 &gt;BODY</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.6.1.0550 >BODY -->\n      <em>a-addr</em> is the address that <a href=\"../core/HERE\">HERE</a> would have\n      returned had it been executed immediately after the execution\n      of the <a href=\"../core/CREATE\">CREATE</a> that defined <em>xt</em>.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0550 >BODY -->\n      <span class=\"tt\">T{ &nbsp;<a href=\"../core/CREATE\">CREATE</a>&nbsp;CR0 -&gt; &nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;CR0&nbsp;<strong>&gt;BODY</strong> -&gt; <a href=\"../core/HERE\">HERE</a> }T</span>\n      \n      \n      "
                        }
                    }
                },
                "toIN": {
                    "id": "core:toIN",
                    "number": "6.1.0560",
                    "name": ">IN",
                    "english": "to-in",
                    "list": "CORE",
                    "basename": "toIN",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of a cell containing the offset in\n      characters from the start of the input buffer to the start of\n      the parse area.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0560 >IN -->\n            <div class=\"tt\">\n<a href=\"../core/VARIABLE\">VARIABLE</a> SCANS <br>\n        <a href=\"../core/Colon\">:</a> RESCAN?  -1 SCANS <a href=\"../core/PlusStore\">+!</a> SCANS <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a> 0 <strong>&gt;IN</strong> <a href=\"../core/Store\">!</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;2&nbsp;SCANS&nbsp;<a href=\"../core/Store\">!</a>&nbsp;<br>\n        \n        345&nbsp;RESCAN?&nbsp;<br>\n         -&gt; 345&nbsp;345 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> GS2  5 SCANS <a href=\"../core/Store\">!</a> <a href=\"../core/Sq\">S\"</a> 123 RESCAN?\" <a href=\"../core/EVALUATE\">EVALUATE</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ GS2 -&gt; 123&nbsp;123&nbsp;123&nbsp;123&nbsp;123 }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">These tests must start on a new line</span> <br>\n        <a href=\"../core/DECIMAL\">DECIMAL</a> <br>\n        T{ 123456 <a href=\"../core/DEPTH\">DEPTH</a> <a href=\"../core/OVER\">OVER</a> 9 <a href=\"../core/less\">&lt;</a> 35 <a href=\"../core/AND\">AND</a> <a href=\"../core/Plus\">+</a> 3 <a href=\"../core/Plus\">+</a> <strong>&gt;IN</strong> <a href=\"../core/Store\">!</a> <br>\n        -&gt; 123456 23456 3456 456 56 6 }T <br>\n        T{ 14145 8115 <a href=\"../core/qDUP\">?DUP</a> <a href=\"../core/ZeroEqual\">0=</a> 34 <a href=\"../core/AND\">AND</a> <strong>&gt;IN</strong> <a href=\"../core/PlusStore\">+!</a> <a href=\"../core/TUCK\">TUCK</a> <a href=\"../core/MOD\">MOD</a> 14 <strong>&gt;IN</strong> <a href=\"../core/Store\">!</a> GCD calculation <br>\n        -&gt; 15 }T\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "toNUMBER": {
                    "id": "core:toNUMBER",
                    "number": "6.1.0570",
                    "name": ">NUMBER",
                    "english": "to-number",
                    "list": "CORE",
                    "basename": "toNUMBER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud<sub>1</sub> c-addr<sub>1</sub> u<sub>1</sub></em> -- <em>ud<sub>2</sub> c-addr<sub>2</sub> u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( ud1 c-addr1 u1 -- ud2 c-addr2 u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud<sub>1</sub> c-addr<sub>1</sub> u<sub>1</sub></em> -- <em>ud<sub>2</sub> c-addr<sub>2</sub> u<sub>2</sub></em> )\n      <p>\n      <em>ud<sub>2</sub></em> is the unsigned result of converting the characters\n      within the string specified by <em>c-addr<sub>1</sub> u<sub>1</sub></em> into digits,\n      using the number in <a href=\"../core/BASE\">BASE</a>, and adding each into <em>ud<sub>1</sub></em>\n      after multiplying <em>ud<sub>1</sub></em> by the number in <a href=\"../core/BASE\">BASE</a>.\n      Conversion continues left-to-right until a character that is not\n      convertible, including any \"+\" or \"-\", is encountered or the\n      string is entirely converted.\n      <em>c-addr<sub>2</sub></em> is the location of the first unconverted character\n      or the first character past the end of the string if the string was\n      entirely converted. <em>u<sub>2</sub></em> is the number of unconverted\n      characters in the string. An ambiguous condition exists if\n      <em>ud<sub>2</sub></em> overflows during the conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:digits\">3.2.1.2 Digit conversion</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0570 >NUMBER -->\n            <div class=\"tt\">\n<a href=\"../core/CREATE\">CREATE</a> GN-BUF 0 <a href=\"../core/CComma\">C,</a> <br>\n        <a href=\"../core/Colon\">:</a> GN-STRING\t GN-BUF 1 <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> GN-CONSUMED GN-BUF <a href=\"../core/CHARPlus\">CHAR+</a> 0 <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> GN'\t\t <a href=\"../core/BracketCHAR\">[CHAR]</a> ' <a href=\"../core/WORD\">WORD</a> <a href=\"../core/CHARPlus\">CHAR+</a> <a href=\"../core/CFetch\">C@</a> GN-BUF <a href=\"../core/CStore\">C!</a>  GN-STRING <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;0'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;1'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n        <span class=\"tt\">T{ 1&nbsp;0&nbsp;GN'&nbsp;1'&nbsp;<strong>&gt;NUMBER</strong> -&gt; BASE&nbsp;@&nbsp;1+&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n        <a href=\"../core/bs\">\\</a> FOLLOWING SHOULD FAIL TO CONVERT <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;-'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;+'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;.'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> &gt;NUMBER-BASED <br>\n        &nbsp;&nbsp; <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <strong>&gt;NUMBER</strong> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;2'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;2&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;2'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;F'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;F&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;G'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;G'&nbsp;MAX-BASE&nbsp;&gt;NUMBER-BASED -&gt; 10&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n        <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;Z'&nbsp;MAX-BASE&nbsp;&gt;NUMBER-BASED -&gt; 23&nbsp;0&nbsp;GN-CONSUMED }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> GN1 <a href=\"../core/p\">(</a> UD BASE -- UD' LEN ) <br>\n        &nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> UD SHOULD EQUAL UD' AND LEN SHOULD BE ZERO. <br>\n        &nbsp;&nbsp;\t<a href=\"../core/BASE\">BASE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <br>\n        &nbsp;&nbsp;\t<a href=\"../core/num-start\">&lt;#</a> <a href=\"../core/numS\">#S</a> <a href=\"../core/num-end\">#&gt;</a> <br>\n        &nbsp;&nbsp;\t0 0 <a href=\"../core/TwoSWAP\">2SWAP</a> <strong>&gt;NUMBER</strong> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> RETURN LENGTH ONLY <br>\n        &nbsp;&nbsp;\t<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/BASE\">BASE</a> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GN1 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GN1 -&gt; MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ MAX-UINT&nbsp;DUP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GN1 -&gt; MAX-UINT&nbsp;DUP&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;MAX-BASE&nbsp;GN1 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;MAX-BASE&nbsp;GN1 -&gt; MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ MAX-UINT&nbsp;DUP&nbsp;MAX-BASE&nbsp;GN1 -&gt; MAX-UINT&nbsp;DUP&nbsp;0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "toR": {
                    "id": "core:toR",
                    "number": "6.1.0580",
                    "name": ">R",
                    "english": "to-r",
                    "list": "CORE",
                    "basename": "toR",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>x</em> -- )\n      ( R: -- <em>x</em> )"
                        },
                        "plain": {
                            "Execution:": "( x -- )\n( R: -- x )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      ( R: -- <em>x</em> )\n      <p>\n      Move <em>x</em> to the return stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>,\n      <a href=\"../core/Rfrom\">6.1.2060 R&gt;</a>,\n      <a href=\"../core/RFetch\">6.1.2070 R@</a>,\n      <a href=\"../core/TwotoR\">6.2.0340 2&gt;R</a>,\n      <a href=\"../core/TwoRfrom\">6.2.0410 2R&gt;</a>,\n      <a href=\"../core/TwoRFetch\">6.2.0415 2R@</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.6.1.0580 >R -->\n      <span class=\"tt\">T{ :&nbsp;GR1&nbsp;<strong>&gt;R</strong>&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;; -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ :&nbsp;GR2&nbsp;<strong>&gt;R</strong>&nbsp;<a href=\"../core/RFetch\">R@</a>&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;; -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 123&nbsp;GR1 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ 123&nbsp;GR2 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1S&nbsp;GR1 -&gt; &nbsp;1S }T</span> &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> <span class=\"rm\">Return stack holds cells</span> )\n      \n      \n      "
                        }
                    }
                }
            }
        },
        "double": {
            "name": "double",
            "words": {
                "DABS": {
                    "id": "double:DABS",
                    "number": "8.6.1.1160",
                    "name": "DABS",
                    "english": "d-abs",
                    "list": "DOUBLE",
                    "basename": "DABS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d</em> -- <em>ud</em> )"
                        },
                        "plain": {
                            " ": "( d -- ud )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d</em> -- <em>ud</em> )\n      <p>\n      <em>ud</em> is the absolute value of <em>d</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DABS</strong> -&gt; 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DABS</strong> -&gt; 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;<strong>DABS</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;1.&nbsp;<a href=\"../double/DPlus\">D+</a>&nbsp;<strong>DABS</strong> -&gt; MAX-2INT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DDotR": {
                    "id": "double:D.R",
                    "number": "8.6.1.1070",
                    "name": "D.R",
                    "english": "d-dot-r",
                    "list": "DOUBLE",
                    "basename": "DDotR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d n</em> -- )"
                        },
                        "plain": {
                            " ": "( d n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d n</em> -- )\n      <p>\n      Display <em>d</em> right aligned in a field <em>n</em> characters\n      wide. If the number of characters required to display <em>d</em>\n      is greater than <em>n</em>, all digits are displayed with no\n      leading spaces in a field as wide as necessary.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:double:D.R\">A.8.6.1.1070 D.R</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.1070 D.R -->\n      In <strong>D.R</strong>, the \"R\" is short for RIGHT.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n\n        MAX-2INT 71 73 <a href=\"../double/MTimesDiv\">M*/</a> <a href=\"../double/TwoCONSTANT\">2CONSTANT</a> dbl1 <br>\n        MIN-2INT 73 79 <a href=\"../double/MTimesDiv\">M*/</a> <a href=\"../double/TwoCONSTANT\">2CONSTANT</a> dbl2\n        <p>\n        <a href=\"../core/Colon\">:</a> d&gt;ascii  <a href=\"../core/p\">(</a> d -- caddr u ) <br>\n        &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/num-start\">&lt;#</a> <a href=\"../double/DABS\">DABS</a> <a href=\"../core/numS\">#S</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SIGN\">SIGN</a> <a href=\"../core/num-end\">#&gt;</a> &nbsp;&nbsp; <a href=\"../core/p\">(</a> -- caddr1 u ) <br>\n        &nbsp;&nbsp; <a href=\"../core/HERE\">HERE</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/TwotoR\">2&gt;R</a> <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/ALLOT\">ALLOT</a> <a href=\"../core/MOVE\">MOVE</a> <a href=\"../core/TwoRfrom\">2R&gt;</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        dbl1 d&gt;ascii <a href=\"../double/TwoCONSTANT\">2CONSTANT</a> \"dbl1\" <br>\n        dbl2 d&gt;ascii <a href=\"../double/TwoCONSTANT\">2CONSTANT</a> \"dbl2\"\n        </p><p>\n        <a href=\"../core/Colon\">:</a> DoubleOutput <br>\n        &nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotq\">.\"</a> You should see lines duplicated:\" <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  5 <a href=\"../core/SPACES\">SPACES</a> \"dbl1\" <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  5 <a href=\"../core/SPACES\">SPACES</a>  dbl1  <a href=\"../double/Dd\">D.</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  8 <a href=\"../core/SPACES\">SPACES</a> \"dbl1\" <a href=\"../core/DUP\">DUP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  5 <a href=\"../core/SPACES\">SPACES</a>  dbl1  <a href=\"../core/Rfrom\">R&gt;</a> 3 <a href=\"../core/Plus\">+</a> <strong>D.R</strong> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  5 <a href=\"../core/SPACES\">SPACES</a> \"dbl2\" <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  5 <a href=\"../core/SPACES\">SPACES</a>  dbl2  <a href=\"../double/Dd\">D.</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp; 10 <a href=\"../core/SPACES\">SPACES</a> \"dbl2\" <a href=\"../core/DUP\">DUP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/CR\">CR</a> <br>\n        &nbsp;&nbsp;  5 <a href=\"../core/SPACES\">SPACES</a>  dbl2  <a href=\"../core/Rfrom\">R&gt;</a> 5 <a href=\"../core/Plus\">+</a> <strong>D.R</strong> <a href=\"../core/CR\">CR</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ DoubleOutput -&gt;  }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "DEqual": {
                    "id": "double:D=",
                    "number": "8.6.1.1120",
                    "name": "D=",
                    "english": "d-equals",
                    "list": "DOUBLE",
                    "basename": "DEqual",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xd<sub>1</sub> xd<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( xd1 xd2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xd<sub>1</sub> xd<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>xd<sub>1</sub></em> is bit-for-bit\n      the same as <em>xd<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;-1&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;-1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;-1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;1&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MAX-2INT&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;HI-2INT&nbsp;&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MIN-2INT&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;LO-2INT&nbsp;&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DMAX": {
                    "id": "double:DMAX",
                    "number": "8.6.1.1210",
                    "name": "DMAX",
                    "english": "d-max",
                    "list": "DOUBLE",
                    "basename": "DMAX",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> d<sub>2</sub></em> -- <em>d<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 d2 -- d3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> d<sub>2</sub></em> -- <em>d<sub>3</sub></em> )\n      <p>\n      <em>d<sub>3</sub></em> is the greater of <em>d<sub>1</sub></em> and <em>d<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>DMAX</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n      <p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;HI-2INT&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>DMAX</strong> -&gt; LO-2INT&nbsp; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DMIN": {
                    "id": "double:DMIN",
                    "number": "8.6.1.1220",
                    "name": "DMIN",
                    "english": "d-min",
                    "list": "DOUBLE",
                    "basename": "DMIN",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> d<sub>2</sub></em> -- <em>d<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 d2 -- d3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> d<sub>2</sub></em> -- <em>d<sub>3</sub></em> )\n      <p>\n      <em>d<sub>3</sub></em> is the lesser of <em>d<sub>1</sub></em> and <em>d<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>DMIN</strong> -&gt; -2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n      <p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;HI-2INT&nbsp;<strong>DMIN</strong> -&gt; HI-2INT&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span>\n      </p><p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DMinus": {
                    "id": "double:D-",
                    "number": "8.6.1.1050",
                    "name": "D-",
                    "english": "d-minus",
                    "list": "DOUBLE",
                    "basename": "DMinus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> | ud<sub>1</sub> d<sub>2</sub> | ud<sub>2</sub></em> -- <em>d<sub>3</sub> | ud<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 | ud1 d2 | ud2 -- d3 | ud3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> | ud<sub>1</sub> d<sub>2</sub> | ud<sub>2</sub></em> -- <em>d<sub>3</sub> | ud<sub>3</sub></em> )\n      <p>\n      Subtract <em>d<sub>2</sub> | ud<sub>2</sub></em> from <em>d<sub>1</sub> | ud<sub>1</sub></em>, giving the\n      difference <em>d<sub>3</sub> | ud<sub>3</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;0.&nbsp;&nbsp;5.&nbsp;<strong>D-</strong> -&gt; -5. }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> small integers <br>\n      <span class=\"tt\">T{ &nbsp;5.&nbsp;&nbsp;0.&nbsp;<strong>D-</strong> -&gt; &nbsp;5. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0.&nbsp;-5.&nbsp;<strong>D-</strong> -&gt; &nbsp;5. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1.&nbsp;&nbsp;2.&nbsp;<strong>D-</strong> -&gt; -1. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1.&nbsp;-2.&nbsp;<strong>D-</strong> -&gt; &nbsp;3. }T</span> <br>\n      <span class=\"tt\">T{ -1.&nbsp;&nbsp;2.&nbsp;<strong>D-</strong> -&gt; -3. }T</span> <br>\n      <span class=\"tt\">T{ -1.&nbsp;-2.&nbsp;<strong>D-</strong> -&gt; &nbsp;1. }T</span> <br>\n      <span class=\"tt\">T{ -1.&nbsp;-1.&nbsp;<strong>D-</strong> -&gt; &nbsp;0. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-5 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> mid-range integers <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;<strong>D-</strong> -&gt; -1&nbsp;&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;-1&nbsp;-5&nbsp;<strong>D-</strong> -&gt; &nbsp;1&nbsp;&nbsp;4 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-5&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D-</strong> -&gt; -1&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;-1&nbsp;-2&nbsp;<strong>D-</strong> -&gt; &nbsp;1&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;&nbsp;0&nbsp;-2&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-1 }T</span>\n      <p>\n      <span class=\"tt\">T{ MIN-INT&nbsp;0&nbsp;<a href=\"../core/TwoDUP\">2DUP</a>&nbsp;<strong>D-</strong> -&gt; 0. }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;MAX-INT&nbsp;0<strong>D-</strong> -&gt; 1&nbsp;1s }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;max-2INT&nbsp;<strong>D-</strong> -&gt; 0. }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> large integers <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;min-2INT&nbsp;<strong>D-</strong> -&gt; 0. }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;hi-2INT&nbsp;<strong>D-</strong> -&gt; lo-2INT&nbsp;<a href=\"../double/DNEGATE\">DNEGATE</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;&nbsp;lo-2INT&nbsp;<strong>D-</strong> -&gt; max-2INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;LO-2INT&nbsp;&nbsp;hi-2INT&nbsp;<strong>D-</strong> -&gt; min-2INT&nbsp;1.&nbsp;<a href=\"../double/DPlus\">D+</a> }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;min-2INT&nbsp;<strong>D-</strong> -&gt; 0. }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;lo-2INT&nbsp;<strong>D-</strong> -&gt; lo-2INT }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DNEGATE": {
                    "id": "double:DNEGATE",
                    "number": "8.6.1.1230",
                    "name": "DNEGATE",
                    "english": "d-negate",
                    "list": "DOUBLE",
                    "basename": "DNEGATE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub></em> -- <em>d<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 -- d2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub></em> -- <em>d<sub>2</sub></em> )\n      <p>\n      <em>d<sub>2</sub></em> is the negation of <em>d<sub>1</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;0. <strong>DNEGATE</strong> -&gt; &nbsp;0. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1. <strong>DNEGATE</strong> -&gt; -1. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;-1. <strong>DNEGATE</strong> -&gt; &nbsp;1. }T</span> <br>\n      <span class=\"tt\">T{ max-2int&nbsp;<strong>DNEGATE</strong> -&gt; min-2int&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a> }T</span> <br>\n      <span class=\"tt\">T{ min-2int&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<strong>DNEGATE</strong> -&gt; max-2int }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DPlus": {
                    "id": "double:D+",
                    "number": "8.6.1.1040",
                    "name": "D+",
                    "english": "d-plus",
                    "list": "DOUBLE",
                    "basename": "DPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> | ud<sub>1</sub> d<sub>2</sub> | ud<sub>2</sub></em> -- <em>d<sub>3</sub> | ud<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 | ud1 d2 | ud2 -- d3 | ud3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> | ud<sub>1</sub> d<sub>2</sub> | ud<sub>2</sub></em> -- <em>d<sub>3</sub> | ud<sub>3</sub></em> )\n      <p>\n      Add <em>d<sub>2</sub> | ud<sub>2</sub></em> to <em>d<sub>1</sub> | ud<sub>1</sub></em>, giving the sum\n      <em>d<sub>3</sub> | ud<sub>3</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;0.&nbsp;&nbsp;5.&nbsp;<strong>D+</strong> -&gt; &nbsp;5. }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> small integers <br>\n      <span class=\"tt\">T{ -5.&nbsp;&nbsp;0.&nbsp;<strong>D+</strong> -&gt; -5. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1.&nbsp;&nbsp;2.&nbsp;<strong>D+</strong> -&gt; &nbsp;3. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1.&nbsp;-2.&nbsp;<strong>D+</strong> -&gt; -1. }T</span> <br>\n      <span class=\"tt\">T{ -1.&nbsp;&nbsp;2.&nbsp;<strong>D+</strong> -&gt; &nbsp;1. }T</span> <br>\n      <span class=\"tt\">T{ -1.&nbsp;-2.&nbsp;<strong>D+</strong> -&gt; -3. }T</span> <br>\n      <span class=\"tt\">T{ -1.&nbsp;&nbsp;1.&nbsp;<strong>D+</strong> -&gt; &nbsp;0. }T</span>\n      <p>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;&nbsp;5 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> mid range integers <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;<strong>D+</strong> -&gt; -1&nbsp;&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;-5&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-5&nbsp;-1&nbsp;&nbsp;0&nbsp;<strong>D+</strong> -&gt; -1&nbsp;-5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;-2&nbsp;<strong>D+</strong> -&gt; -1&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;-1&nbsp;-2&nbsp;<strong>D+</strong> -&gt; -1&nbsp;-3 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;-1&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;<strong>D+</strong> -&gt; -1&nbsp;&nbsp;0 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ MIN-INT&nbsp;0&nbsp;<a href=\"../core/TwoDUP\">2DUP</a>&nbsp;<strong>D+</strong> -&gt; 0&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"../core/StoD\">S&gt;D</a>&nbsp;MIN-INT&nbsp;0&nbsp;<strong>D+</strong> -&gt; 0&nbsp;0 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. <strong>D+</strong> -&gt; 0&nbsp;HI-INT&nbsp;<a href=\"../core/OnePlus\">1+</a> }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> large double integers <br>\n      <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDUP\">2DUP</a>&nbsp;<strong>D+</strong> -&gt; 1S&nbsp;<a href=\"../core/OneMinus\">1-</a>&nbsp;MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D+</strong> -&gt; -1. }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>D+</strong> -&gt; HI-2INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;LO-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDUP\">2DUP</a>&nbsp;<strong>D+</strong> -&gt; MIN-2INT }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;MIN-2INT&nbsp;<strong>D+</strong>&nbsp;1. <strong>D+</strong> -&gt; LO-2INT }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DTwoDiv": {
                    "id": "double:D2/",
                    "number": "8.6.1.1100",
                    "name": "D2/",
                    "english": "d-two-slash",
                    "list": "DOUBLE",
                    "basename": "DTwoDiv",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xd<sub>1</sub></em> -- <em>xd<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xd1 -- xd2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xd<sub>1</sub></em> -- <em>xd<sub>2</sub></em> )\n      <p>\n      <em>xd<sub>2</sub></em> is the result of shifting <em>xd<sub>1</sub></em> one bit\n      toward the least-significant bit, leaving the most-significant\n      bit unchanged.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D2/</strong> -&gt; 0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D2/</strong> -&gt; 0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;1&nbsp;<strong>D2/</strong> -&gt; MIN-INT&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;<strong>D2/</strong> -&gt; HI-2INT&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D2/</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;<strong>D2/</strong> -&gt; LO-2INT&nbsp;&nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DTwoTimes": {
                    "id": "double:D2*",
                    "number": "8.6.1.1090",
                    "name": "D2*",
                    "english": "d-two-star",
                    "list": "DOUBLE",
                    "basename": "DTwoTimes",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xd<sub>1</sub></em> -- <em>xd<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xd1 -- xd2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xd<sub>1</sub></em> -- <em>xd<sub>2</sub></em> )\n      <p>\n      <em>xd<sub>2</sub></em> is the result of shifting <em>xd<sub>1</sub></em> one bit\n      toward the most-significant bit, filling the vacated\n      least-significant bit with zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D2*</strong> -&gt; 0.&nbsp;<strong>D2*</strong> }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D2*</strong> -&gt; 0&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HI-2INT&nbsp;<strong>D2*</strong> -&gt; MAX-2INT&nbsp;1.&nbsp;<a href=\"../double/DMinus\">D-</a> }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LO-2INT&nbsp;<strong>D2*</strong> -&gt; MIN-2INT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DUless": {
                    "id": "double:DUless",
                    "number": "8.6.2.1270",
                    "name": "DU<",
                    "english": "d-u-less",
                    "list": "DOUBLE EXT",
                    "basename": "DUless",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud<sub>1</sub> ud<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( ud1 ud2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud<sub>1</sub> ud<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>ud<sub>1</sub></em> is less than\n      <em>ud<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n      <p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;HI-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;MAX-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DZeroEqual": {
                    "id": "double:D0=",
                    "number": "8.6.1.1080",
                    "name": "D0=",
                    "english": "d-zero-equals",
                    "list": "DOUBLE",
                    "basename": "DZeroEqual",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xd</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( xd -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xd</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>xd</em> is equal to zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-2INT&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;MAX-INT&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D0=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;MIN-INT&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DZeroless": {
                    "id": "double:D0less",
                    "number": "8.6.1.1075",
                    "name": "D0<",
                    "english": "d-zero-less",
                    "list": "DOUBLE",
                    "basename": "DZeroless",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( d -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>d</em> is less than zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;MAX-INT&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-2INT&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN-2INT&nbsp;<strong>D0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Dd": {
                    "id": "double:Dd",
                    "number": "8.6.1.1060",
                    "name": "D.",
                    "english": "d-dot",
                    "list": "DOUBLE",
                    "basename": "Dd",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d</em> -- )"
                        },
                        "plain": {
                            " ": "( d -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d</em> -- )\n      <p>\n      Display <em>d</em> in free field format.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      See <a href=\"../testsuite#test:double:D.R\">F.8.6.1.1070 D.R</a>.\n      \n      \n      "
                        }
                    }
                },
                "Dless": {
                    "id": "double:Dless",
                    "number": "8.6.1.1110",
                    "name": "D<",
                    "english": "d-less-than",
                    "list": "DOUBLE",
                    "basename": "Dless",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> d<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( d1 d2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> d<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>d<sub>1</sub></em> is less than\n      <em>d<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;MAX-2INT&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n      <p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;<a href=\"../core/TwoDUP\">2DUP</a>&nbsp;-1.&nbsp;<a href=\"../double/DPlus\">D+</a>&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;<a href=\"../core/TwoDUP\">2DUP</a>&nbsp;&nbsp;1.&nbsp;<a href=\"../double/DPlus\">D+</a>&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "DtoS": {
                    "id": "double:DtoS",
                    "number": "8.6.1.1140",
                    "name": "D>S",
                    "english": "d-to-s",
                    "list": "DOUBLE",
                    "basename": "DtoS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d</em> -- <em>n</em> )"
                        },
                        "plain": {
                            " ": "( d -- n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d</em> -- <em>n</em> )\n      <p>\n      <em>n</em> is the equivalent of <em>d</em>. An ambiguous condition\n      exists if <em>d</em> lies outside the range of a signed single-cell\n      number.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:double:DtoS\">A.8.6.1.1140 D&gt;S</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.1140 D>S -->\n      There exist number representations, e.g., the sign-magnitude\n      representation, where reduction from double- to single-precision\n      cannot simply be done with <a href=\"../core/DROP\">DROP</a>. This word,\n      equivalent to <a href=\"../core/DROP\">DROP</a> on two's complement systems,\n      desensitizes application code to number representation and\n      facilitates portability.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1234&nbsp;&nbsp;0&nbsp;<strong>D&gt;S</strong> -&gt; &nbsp;1234&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;-1234&nbsp;-1&nbsp;<strong>D&gt;S</strong> -&gt; -1234&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;0&nbsp;<strong>D&gt;S</strong> -&gt; MAX-INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;-1&nbsp;<strong>D&gt;S</strong> -&gt; MIN-INT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "MPlus": {
                    "id": "double:M+",
                    "number": "8.6.1.1830",
                    "name": "M+",
                    "english": "m-plus",
                    "list": "DOUBLE",
                    "basename": "MPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> | ud<sub>1</sub> n</em> -- <em>d<sub>2</sub> | ud<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 | ud1 n -- d2 | ud2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> | ud<sub>1</sub> n</em> -- <em>d<sub>2</sub> | ud<sub>2</sub></em> )\n      <p>\n      Add <em>n</em> to <em>d<sub>1</sub> | ud<sub>1</sub></em>, giving the sum <em>d<sub>2</sub> | ud<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:double:M+\">A.8.6.1.1830 M+</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.1830 M+ -->\n      <strong>M+</strong> is the classical method for integrating.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ HI-2INT&nbsp;&nbsp;&nbsp;1&nbsp;<strong>M+</strong> -&gt; HI-2INT&nbsp;&nbsp;&nbsp;1.&nbsp;<a href=\"../double/DPlus\">D+</a> }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;-1&nbsp;<strong>M+</strong> -&gt; MAX-2INT&nbsp;-1.&nbsp;<a href=\"../double/DPlus\">D+</a> }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;1&nbsp;<strong>M+</strong> -&gt; MIN-2INT&nbsp;&nbsp;1.&nbsp;<a href=\"../double/DPlus\">D+</a> }T</span> <br>\n      <span class=\"tt\">T{ LO-2INT&nbsp;&nbsp;-1&nbsp;<strong>M+</strong> -&gt; LO-2INT&nbsp;&nbsp;-1.&nbsp;<a href=\"../double/DPlus\">D+</a> }T</span>\n      \n      \n      "
                        }
                    }
                },
                "MTimesDiv": {
                    "id": "double:M*/",
                    "number": "8.6.1.1820",
                    "name": "M*/",
                    "english": "m-star-slash",
                    "list": "DOUBLE",
                    "basename": "MTimesDiv",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d<sub>1</sub> n<sub>1</sub> +n<sub>2</sub></em> -- <em>d<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( d1 n1 +n2 -- d2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d<sub>1</sub> n<sub>1</sub> +n<sub>2</sub></em> -- <em>d<sub>2</sub></em> )\n      <p>\n      Multiply <em>d<sub>1</sub></em> by <em>n<sub>1</sub></em> producing the triple-cell\n      intermediate result <em>t</em>. Divide <em>t</em> by <em>+n<sub>2</sub></em> giving the\n      double-cell quotient <em>d<sub>2</sub></em>. An ambiguous condition exists\n      if <em>+n<sub>2</sub></em> is zero or negative, or the quotient lies outside\n      of the range of a double-precision signed integer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:double:M*/\">A.8.6.1.1820 M*/</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.1820 M*/ -->\n      <strong>M*/</strong> was once described by Chuck Moore as the most\n      useful arithmetic operator in Forth. It is the main workhorse\n      in most computations involving double-cell numbers. Note that\n      some systems allow signed divisors. This can cost a lot in\n      performance on some CPUs. The requirement for a positive\n      divisor has not proven to be a problem.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"rm\">To correct the result if the division is floored,\n        only used when necessary, i.e., negative quotient and\n        remainder <em>&lt;&gt;=</em> 0.</span>\n        <p>\n        <a href=\"../core/Colon\">:</a> ?floored <a href=\"../core/Bracket\">[</a> -3 2 <a href=\"../core/Div\">/</a> -2 <a href=\"../core/Equal\">=</a> <a href=\"../right-bracket\">]</a> <a href=\"../core/LITERAL\">LITERAL</a> <a href=\"../core/IF\">IF</a> 1. <a href=\"../double/DMinus\">D-</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n        </p><p>\n         \n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; &nbsp;3. }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; -3.&nbsp;?floored }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; -3.&nbsp;?floored }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; &nbsp;3. }T</span> <br>\n        <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; HI-2INT }T</span> <br>\n        <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; HI-2INT&nbsp;<a href=\"../double/DNEGATE\">DNEGATE</a>&nbsp;?floored }T</span> <br>\n        <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; LO-2INT }T</span> <br>\n        <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; LO-2INT&nbsp;<a href=\"../double/DNEGATE\">DNEGATE</a> }T</span>\n        </p><p>\n        <span class=\"tt\">T{ MAX-2INT&nbsp;MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>M*/</strong> -&gt; MAX-2INT }T</span> <br>\n        <span class=\"tt\">T{ MAX-2INT&nbsp;MAX-INT&nbsp;<a href=\"../core/TwoDiv\">2/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>M*/</strong> -&gt; MAX-INT&nbsp;1-&nbsp;HI-2INT&nbsp;<a href=\"../core/NIP\">NIP</a> }T</span> <br>\n        <span class=\"tt\">T{ MIN-2INT&nbsp;LO-2INT&nbsp;<a href=\"../core/NIP\">NIP</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/NEGATE\">NEGATE</a>&nbsp;<strong>M*/</strong> -&gt; MIN-2INT }T</span> <br>\n        <span class=\"tt\">T{ MIN-2INT&nbsp;LO-2INT&nbsp;<a href=\"../core/NIP\">NIP</a>&nbsp;<a href=\"../core/OneMinus\">1-</a>&nbsp;MAX-INT&nbsp;<strong>M*/</strong> -&gt; MIN-INT&nbsp;3&nbsp;+&nbsp;HI-2INT&nbsp;<a href=\"../core/NIP\">NIP</a>&nbsp;2&nbsp;<a href=\"../core/Plus\">+</a> }T</span> <br>\n        <span class=\"tt\">T{ MAX-2INT&nbsp;LO-2INT&nbsp;<a href=\"../core/NIP\">NIP</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<a href=\"../core/NEGATE\">NEGATE</a>&nbsp;<strong>M*/</strong> -&gt; MAX-2INT&nbsp;<a href=\"../double/DNEGATE\">DNEGATE</a> }T</span> <br>\n        <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;<strong>M*/</strong> -&gt; MIN-2INT }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "TwoCONSTANT": {
                    "id": "double:2CONSTANT",
                    "number": "8.6.1.0360",
                    "name": "2CONSTANT",
                    "english": "two-constant",
                    "list": "DOUBLE",
                    "basename": "TwoCONSTANT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 \"<spaces>name\" -- )",
                            "name Execution:": "( -- x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. Create a definition for <em>name</em> with the execution\n      semantics defined below.\n      </p><p>\n      <em>name</em> is referred to as a \"two-constant\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Place cell pair <em>x<sub>1</sub> x<sub>2</sub></em> on the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:double:2CONSTANT\">A.8.6.1.0360 2CONSTANT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.0360 2CONSTANT -->\n      Typical use:\n      <code>x1</code> <code>x2</code> <strong>2CONSTANT</strong> <em>name</em>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2CONSTANT</strong>&nbsp;2c1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2c1 -&gt; 1&nbsp;2 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd1&nbsp;2c1&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ cd1 -&gt; 1&nbsp;2 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd2&nbsp;<strong>2CONSTANT</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;-2&nbsp;cd2&nbsp;2c2 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2c2 -&gt; -1&nbsp;-2 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ 4&nbsp;5&nbsp;<strong>2CONSTANT</strong>&nbsp;2c3&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a>&nbsp;2c3 -&gt; 4&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd6&nbsp;2c3&nbsp;<a href=\"../double/TwoLITERAL\">2LITERAL</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;cd6 -&gt; 4&nbsp;5 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "TwoLITERAL": {
                    "id": "double:2LITERAL",
                    "number": "8.6.1.0390",
                    "name": "2LITERAL",
                    "english": "two-literal",
                    "list": "DOUBLE",
                    "basename": "TwoLITERAL",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- )",
                            "Run-time:": "( -- <em>x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            "Compilation:": "( x1 x2 -- )",
                            "Run-time:": "( -- x1 x2 )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>x<sub>1</sub> x<sub>2</sub></em> -- )\n      <p>\n      Append the run-time semantics below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Place cell pair <em>x<sub>1</sub> x<sub>2</sub></em> on the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:double:2LITERAL\">A.8.6.1.0390 2LITERAL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.0390 2LITERAL -->\n      \n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/Bracket\">[</a> <code>x1</code> <code>x2</code> <a href=\"../right-bracket\">]</a> <a href=\"../double/TwoLITERAL\">2LITERAL</a>\n      ... <a href=\"../core/Semi\">;</a>\n      \n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd1&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;MAX-2INT&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<strong>2LITERAL</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span><br>\n      <span class=\"tt\">T{ cd1 -&gt; MAX-2INT }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../double/TwoVARIABLE\">2VARIABLE</a>&nbsp;2v4&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a>&nbsp;5&nbsp;6&nbsp;2v4&nbsp;<a href=\"../core/TwoStore\">2!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd7&nbsp;2v4&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;<a href=\"../core/TwoFetch\">2@</a>&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<strong>2LITERAL</strong>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;cd7 -&gt; 5&nbsp;6 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd8&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;6&nbsp;7&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;2v4&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;<a href=\"../core/TwoStore\">2!</a>&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;2v4&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 6&nbsp;7 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "TwoROT": {
                    "id": "double:2ROT",
                    "number": "8.6.2.0420",
                    "name": "2ROT",
                    "english": "two-rote",
                    "list": "DOUBLE EXT",
                    "basename": "TwoROT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub> x<sub>5</sub> x<sub>6</sub></em> -- <em>x<sub>3</sub> x<sub>4</sub> x<sub>5</sub> x<sub>6</sub> x<sub>1</sub> x<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> x<sub>3</sub> x<sub>4</sub> x<sub>5</sub> x<sub>6</sub></em> -- <em>x<sub>3</sub> x<sub>4</sub> x<sub>5</sub> x<sub>6</sub> x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Rotate the top three cell pairs on the stack bringing cell pair\n      <em>x<sub>1</sub> x<sub>2</sub></em> to the top of the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;3.&nbsp;<strong>2ROT</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;1.&nbsp;<strong>2ROT</strong> -&gt; MIN-2INT&nbsp;1.&nbsp;MAX-2INT }T</span>\n      \n      \n      "
                        }
                    }
                },
                "TwoVALUE": {
                    "id": "double:2VALUE",
                    "number": "8.6.2.0435",
                    "name": "2VALUE",
                    "english": "two-value",
                    "list": "DOUBLE EXT",
                    "basename": "TwoVALUE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x<sub>1</sub> x<sub>2</sub> \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>x<sub>1</sub> x<sub>2</sub></em> )",
                            "TO name Run-time:": "( <em>x<sub>1</sub> x<sub>2</sub></em> -- )"
                        },
                        "plain": {
                            " ": "( x1 x2 \"<spaces>name\" -- )",
                            "name Execution:": "( -- x1 x2 )",
                            "TO name Run-time:": "( x1 x2 -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x<sub>1</sub> x<sub>2</sub> \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters.  Parse <em>name</em> delimited by a\n      space.  Create a definition for <em>name</em> with the execution\n      semantics defined below, with an initial value of <em>x<sub>1</sub> x<sub>2</sub></em>.\n      </p><p>\n      <em>name</em> is referred to as a \"two-value\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>x<sub>1</sub> x<sub>2</sub></em> )\n      <p>\n      Place cell pair <em>x<sub>1</sub> x<sub>2</sub></em> on the stack.  The value of\n      <em>x<sub>1</sub> x<sub>2</sub></em> is that given when <em>name</em> was created,\n      until the phrase \"<em>x<sub>1</sub> x<sub>2</sub></em> <a href=\"../core/TO\">TO</a> <em>name</em>\" is\n      executed, causing a new cell pair <em>x<sub>1</sub> x<sub>2</sub></em> to be assigned\n      to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "TO name Run-time:": {
                            "name": "TO name Run-time:",
                            "html": "\n\n\n      ( <em>x<sub>1</sub> x<sub>2</sub></em> -- )\n      <p>\n      Assign the cell pair <em>x<sub>1</sub> x<sub>2</sub></em> to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong> and <a href=\"../core/TO\">6.2.2295 TO</a>,\n      <a href=\"../rationale#rat:double:2VALUE\">A.8.6.2.0435 2VALUE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      Typical use:\n            <div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> fn1 <a href=\"../core/Sq\">S\"</a> filename\" <a href=\"../core/Semi\">;</a> <br>\n          fn1 <strong>2VALUE</strong> myfile <br>\n          myfile <a href=\"../file/INCLUDED\">INCLUDED</a> <br>\n          \n          <a href=\"../core/Colon\">:</a> fn2 <a href=\"../core/Sq\">S\"</a> filename2\" <a href=\"../core/Semi\">;</a> <br>\n          fn2 <a href=\"../core/TO\">TO</a> myfile <br>\n          myfile <a href=\"../file/INCLUDED\">INCLUDED</a>\n          \n          </div>\n        </div>\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n            <div class=\"rm\">\nThe implementation of <a href=\"../core/TO\">TO</a> to include <strong>2VALUE</strong>s\n        requires detailed knowledge of the host implementation of\n        <a href=\"../core/VALUE\">VALUE</a> and <a href=\"../core/TO\">TO</a>, which is the main reason why\n        <strong>2VALUE</strong> should be standardized.  The order in which\n        the two cells are stored in memory is not specified in the\n        definition for <strong>2VALUE</strong> but this reference implementation\n        has to assume one ordering — this is not intended to be\n        definitive.\n        <p>\n                </p><div class=\"quote\">\n          <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <strong>2VALUE</strong> <a href=\"../core/p\">(</a> x1 x2 -- ) <br>\n            &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/Comma\">,</a> <a href=\"../core/Comma\">,</a> <br>\n            &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> <a href=\"../core/TwoFetch\">2@</a> <a href=\"../core/p\">(</a> -- x1 x2 ) <br>\n            <a href=\"../core/Semi\">;</a>\n            \n            </div>\n          </div>\n        <p>\n        The corresponding implementation of <a href=\"../core/TO\">TO</a> disregards the\n        issue that <a href=\"../core/TO\">TO</a> must also work for integer <a href=\"../core/VALUE\">VALUE</a>s\n        and locals.\n        </p><p>\n                </p><div class=\"quote\">\n          <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <a href=\"../core/TO\">TO</a> <a href=\"../core/p\">(</a> x1 x2 \"&lt;spaces&gt;name\" -- ) <br>\n            &nbsp;&nbsp; <a href=\"../core/Tick\">'</a> <a href=\"../core/toBODY\">&gt;BODY</a> <br>\n            &nbsp;&nbsp; <a href=\"../core/STATE\">STATE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../double/TwoLITERAL\">2LITERAL</a> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/TwoStore\">2!</a> <br>\n            &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoStore\">2!</a> <br>\n            &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n            <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n            \n            </div>\n          </div>\n          \n        </div>\n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2VALUE</strong>&nbsp;t2val -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ t2val -&gt; 1&nbsp;2 }T</span> <br>\n        \n        <span class=\"tt\">T{ 3&nbsp;4&nbsp;<a href=\"../core/TO\">TO</a>&nbsp;t2val -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ t2val -&gt; 3&nbsp;4 }T</span> <br>\n        \n        <a href=\"../core/Colon\">:</a> sett2val t2val <a href=\"../core/TwoSWAP\">2SWAP</a> <a href=\"../core/TO\">TO</a> t2val <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ 5&nbsp;6&nbsp;sett2val&nbsp;t2val -&gt; 3&nbsp;4&nbsp;5&nbsp;6 }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "TwoVARIABLE": {
                    "id": "double:2VARIABLE",
                    "number": "8.6.1.0440",
                    "name": "2VARIABLE",
                    "english": "two-variable",
                    "list": "DOUBLE",
                    "basename": "TwoVARIABLE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Create a definition for <em>name</em> with the execution\n      semantics defined below. Reserve two consecutive cells of data\n      space.\n      </p><p>\n      <em>name</em> is referred to as a \"two-variable\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>a-addr</em> )\n      <p>\n      <em>a-addr</em> is the address of the first (lowest address)\n      cell of two consecutive cells in data space reserved by\n      <strong>2VARIABLE</strong> when it defined <em>name</em>. A program is\n      responsible for initializing the contents.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/VARIABLE\">6.1.2410 VARIABLE</a>,\n      <a href=\"../rationale#rat:double:2VARIABLE\">A.8.6.1.0440 2VARIABLE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.8.6.1.0440 2VARIABLE -->\n      Typical use:\n      <strong>2VARIABLE</strong> <em>name</em>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>2VARIABLE</strong>&nbsp;2v1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 0.&nbsp;2v1&nbsp;<a href=\"../core/TwoStore\">2!</a> -&gt; &nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2v1&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 0. }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;-2&nbsp;2v1&nbsp;<a href=\"../core/TwoStore\">2!</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2v1&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; -1&nbsp;-2 }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd2&nbsp;<strong>2VARIABLE</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ cd2&nbsp;2v2 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;cd3&nbsp;2v2&nbsp;<a href=\"../core/TwoStore\">2!</a>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ -2&nbsp;-1&nbsp;cd3 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2v2&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; -2&nbsp;-1 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <strong>2VARIABLE</strong>&nbsp;2v3&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a>&nbsp;5&nbsp;6&nbsp;2v3&nbsp;<a href=\"../core/TwoStore\">2!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 2v3&nbsp;<a href=\"../core/TwoFetch\">2@</a> -&gt; 5&nbsp;6 }T</span>\n      \n      \n      </p>"
                        }
                    }
                }
            }
        },
        "exception": {
            "name": "exception",
            "words": {
                "ABORT": {
                    "id": "exception:ABORT",
                    "number": "9.6.2.0670",
                    "name": "ABORT",
                    "english": " ",
                    "list": "EXCEPTION EXT",
                    "basename": "ABORT",
                    "stackEffect": {
                        "html": {
                            " ": "Extend the semantics of <a href=\"../core/ABORT\">6.1.0670 ABORT</a> to be:\n      ( <em>i * x</em> -- )\n      ( R: <em>j * x</em> -- )"
                        },
                        "plain": {
                            " ": "Extend the semantics of <a href=\"../core/ABORT\">6.1.0670 ABORT to be:\n( i * x -- )\n( R: j * x -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n Extend the semantics of <a href=\"../core/ABORT\">6.1.0670 ABORT</a> to be:\n      ( <em>i * x</em> -- )\n      ( R: <em>j * x</em> -- )\n      <p>\n      Perform the function of <code>-1</code> <a href=\"../exception/THROW\">THROW</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/ABORT\">6.1.0670 ABORT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.9.1.0875 CATCH -->\n      <a href=\"../core/Colon\">:</a> <strong>ABORT</strong>   -1 <a href=\"../exception/THROW\">THROW</a>   <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      See <a href=\"../testsuite#test:exception:ABORTq\">F.9.6.2.0680 ABORT\"</a>.\n      \n      \n      "
                        }
                    }
                },
                "ABORTq": {
                    "id": "exception:ABORTq",
                    "number": "9.6.2.0680",
                    "name": "ABORT\"",
                    "english": "abort-quote",
                    "list": "EXCEPTION EXT",
                    "basename": "ABORTq",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( <em>i * x x<sub>1</sub></em> -- <em> |  i * x</em> )\n      ( R: <em>j * x</em> -- <em> |  j * x</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( i * x x1 --  |  i * x )\n( R: j * x --  |  j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n Extend the semantics of <a href=\"../core/ABORTq\">6.1.0680 ABORT\"</a> to be:\n        \n      "
                        },
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by a <code>\"</code> (double-quote).\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>i * x x<sub>1</sub></em> -- <em> |  i * x</em> )\n      ( R: <em>j * x</em> -- <em> |  j * x</em> )\n      <p>\n      Remove <em>x<sub>1</sub></em> from the stack. If any bit of <em>x<sub>1</sub></em>\n      is not zero, perform the function of <code>-2</code> <a href=\"../exception/THROW\">THROW</a>,\n      displaying <em>ccc</em> if there is no exception frame on the\n      exception stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/ABORTq\">6.1.0680 ABORT\"</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/DECIMAL\">DECIMAL</a> <br>\n         -1\t<a href=\"../core/CONSTANT\">CONSTANT</a> exc_abort <br>\n         -2 <a href=\"../core/CONSTANT\">CONSTANT</a> exc_abort\" <br>\n        -13 <a href=\"../core/CONSTANT\">CONSTANT</a> exc_undef <br>\n        <a href=\"../core/Colon\">:</a> t6 <a href=\"../exception/ABORT\">ABORT</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"rm\">The 77 in <code>t10</code> is necessary for the second\n        <strong>ABORT\"</strong> test as the data stack is restored to a\n        depth of 2 when <a href=\"../exception/THROW\">THROW</a> is executed.  The 77 ensures\n        the top of stack value is known for the results check.</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> t10 77 <a href=\"../core/SWAP\">SWAP</a> <strong>ABORT\"</strong> This should not be displayed\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c6 <a href=\"../exception/CATCH\">CATCH</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> exc_abort  <a href=\"../core/OF\">OF</a> 11 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t exc_abort\" <a href=\"../core/OF\">OF</a> 12 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t exc_undef  <a href=\"../core/OF\">OF</a> 13 <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ 1&nbsp;2&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;&nbsp;t6&nbsp;c6 -&gt; 1&nbsp;2&nbsp;11&nbsp; }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Test that ABORT is caught</span> <br>\n        <span class=\"tt\">T{ 3&nbsp;0&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;t10&nbsp;c6 -&gt; 3&nbsp;77&nbsp;&nbsp;&nbsp; }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">ABORT\" does nothing</span> <br>\n        <span class=\"tt\">T{ 4&nbsp;5&nbsp;<a href=\"../core/Tick\">'</a>&nbsp;t10&nbsp;c6 -&gt; 4&nbsp;77&nbsp;12 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">ABORT\" caught, no message</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "CATCH": {
                    "id": "exception:CATCH",
                    "number": "9.6.1.0875",
                    "name": "CATCH",
                    "english": " ",
                    "list": "EXCEPTION",
                    "basename": "CATCH",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x xt</em> -- <em>j * x 0  |  i * x n</em> )"
                        },
                        "plain": {
                            " ": "( i * x xt -- j * x 0  |  i * x n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x xt</em> -- <em>j * x 0  |  i * x n</em> )\n      <p>\n      Push an exception frame on the exception stack and then execute\n      the execution token <em>xt</em> (as with <a href=\"../core/EXECUTE\">EXECUTE</a>) in\n      such a way that control can be transferred to a point just after\n      <strong>CATCH</strong> if <a href=\"../exception/THROW\">THROW</a> is executed during the execution of\n      <em>xt</em>.\n      </p><p>\n      If the execution of <em>xt</em> completes normally (i.e., the\n      exception frame pushed by this <strong>CATCH</strong> is not popped by an\n      execution of <a href=\"../exception/THROW\">THROW</a>) pop the exception frame and return\n      zero on top of the data stack, above whatever stack items would\n      have been returned by <em>xt</em> <a href=\"../core/EXECUTE\">EXECUTE</a>. Otherwise,\n      the remainder of the execution semantics are given by\n      <a href=\"../exception/THROW\">THROW</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:exception:THROW\">A.9.6.1.2275 THROW</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.9.1.0875 CATCH -->\n            <div class=\"rm\">\nThis sample implementation of <strong>CATCH</strong> uses the non-standard\n        words described below.  They or their equivalents are available in many\n        systems.  Other implementation strategies, including directly saving the\n        value of <a href=\"../core/DEPTH\">DEPTH</a>, are possible if such words are not available.\n        <p>\n        </p><dl class=\"desc\">\n        <dt><code>SP@</code></dt><dd> ( -- <em>addr</em> ) <br>\n        returns the address corresponding to the top of data stack.\n        <p>\n        </p></dd>\n        <dt><code>SP!</code></dt><dd> ( <em>addr</em> -- ) <br>\n        sets the stack pointer to <em>addr</em>, thus restoring the stack\n        depth to the same depth that existed just before <em>addr</em> was\n        acquired by executing <code>SP@</code>.\n        <p>\n        </p></dd>\n        <dt><code>RP@</code></dt><dd> ( -- <em>addr</em> ) <br>\n        returns the address corresponding to the top of return stack.\n        <p>\n        </p></dd>\n        <dt><code>RP!</code></dt><dd> ( <em>addr</em> -- ) <br>\n        sets the return stack pointer to <em>addr</em>, thus restoring the\n        return stack depth to the same depth that existed just before\n        <em>addr</em> was acquired by executing <code>RP@</code>.\n        </dd></dl>\n        <br class=\"clear\">\n\n        <p>\n                </p><div class=\"tt\">\n<div class=\"tabbing\">\n            <a href=\"../core/VARIABLE\">VARIABLE</a> HANDLER   0 HANDLER <a href=\"../core/Store\">!</a>   <a href=\"../core/bs\">\\</a> <span class=\"rm\">last exception handler</span> <br><br>\n             <a href=\"../core/Colon\">:</a> <strong>CATCH</strong>   <a href=\"../core/p\">(</a> xt -- exception# | 0  <a href=\"../core/bs\">\\</a> <span class=\"rm\">return addr on stack</span> <br>\n            &nbsp;&nbsp;&nbsp;SP@ <a href=\"../core/toR\">&gt;R</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> xt )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">save data stack pointer</span> <br>\n            &nbsp;&nbsp;&nbsp;HANDLER <a href=\"../core/Fetch\">@</a> <a href=\"../core/toR\">&gt;R</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> xt )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">and previous handler</span> <br>\n            &nbsp;&nbsp;&nbsp;RP@ HANDLER <a href=\"../core/Store\">!</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> xt )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">set current handler</span> <br>\n            &nbsp;&nbsp;&nbsp;<a href=\"../core/EXECUTE\">EXECUTE</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> )\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">execute returns if no</span> THROW <br>\n            &nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> HANDLER <a href=\"../core/Store\">!</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">restore previous handler</span> <br>\n            &nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/DROP\">DROP</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">discard saved stack ptr</span> <br>\n            &nbsp;&nbsp;&nbsp;\t0\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> 0 ) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">normal completion</span> <br>\n            <a href=\"../core/Semi\">;</a>\n            <br>\n            \n            </div>\n          <p>\n                    </p><div class=\"rm\">\nIn a multi-tasking system, the <code>HANDLER</code> variable should be in\n            the per-task variable area (i.e., a user variable).\n            <p>\n            This sample implementation does not explicitly handle the case in\n            which <strong>CATCH</strong> has never been called (i.e., the <a href=\"../exception/ABORT\">ABORT</a>\n            behavior). One solution would be to execute a <strong>CATCH</strong> within\n            <a href=\"../core/QUIT\">QUIT</a>, so that there is always an \"exception handler of last\n            resort\" present, as shown in <a href=\"../implement#imp:core:QUIT\">E.6.1.2050 QUIT</a>.\n              \n            </p></div>\n          </div>\n        </div>\n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      See <a href=\"../testsuite#test:exception:THROW\">F.9.6.1.2275 THROW</a>.\n      \n      \n      "
                        }
                    }
                },
                "THROW": {
                    "id": "exception:THROW",
                    "number": "9.6.1.2275",
                    "name": "THROW",
                    "english": " ",
                    "list": "EXCEPTION",
                    "basename": "THROW",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>k * x n</em> -- <em>k * x  |  i * x n</em> )"
                        },
                        "plain": {
                            " ": "( k * x n -- k * x  |  i * x n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>k * x n</em> -- <em>k * x  |  i * x n</em> )\n      <p>\n      If any bits of <em>n</em> are non-zero, pop the topmost exception\n      frame from the exception stack, along with everything on the\n      return stack above that frame. Then restore the input source\n      specification in use before the corresponding <a href=\"../exception/CATCH\">CATCH</a>\n      and adjust the depths of all stacks defined by this standard\n      so that they are the same as the depths saved in the exception\n      frame (<em>i</em> is the same number as the <em>i</em> in the input\n      arguments to the corresponding <a href=\"../exception/CATCH\">CATCH</a>), put <em>n</em> on\n      top of the data stack, and transfer control to a point just after\n      the <a href=\"../exception/CATCH\">CATCH</a> that pushed that exception frame.\n      </p><p>\n      If the top of the stack is non zero and there is no exception\n      frame on the exception stack, the behavior is as follows:\n      </p><p>\n      If <em>n</em> is minus-one (-1), perform the function of\n      <a href=\"../core/ABORT\">6.1.0670 ABORT</a> (the version of <a href=\"../core/ABORT\">ABORT</a> in\n      the Core word set), displaying no message.\n      </p><p>\n      If <em>n</em> is minus-two, perform the function of\n      <a href=\"../core/ABORTq\">6.1.0680 ABORT\"</a> (the version of <a href=\"../core/ABORTq\">ABORT\"</a>\n      in the Core word set), displaying the characters <em>ccc</em>\n      associated with the <a href=\"../exception/ABORTq\">ABORT\"</a> that generated the\n      <strong>THROW</strong>.\n      </p><p>\n      Otherwise, the system may display an implementation-dependent\n      message giving information about the condition associated with\n      the <strong>THROW</strong> code <em>n</em>. Subsequently, the system shall\n      perform the function of <a href=\"../core/ABORT\">6.1.0670 ABORT</a> (the version\n      of <a href=\"../core/ABORT\">ABORT</a> in the Core word set).\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:exception:THROW\">A.9.6.1.2275 THROW</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.9.6.1.2275 THROW -->\n      If <strong>THROW</strong> is executed with a non zero argument, the effect\n      is as if the corresponding <a href=\"../exception/CATCH\">CATCH</a> had returned it. In that\n      case, the stack depth is the same as it was just before <a href=\"../exception/CATCH\">CATCH</a>\n      began execution. The values of the <em>i * x</em> stack arguments could\n      have been modified arbitrarily during the execution of <em>xt</em>.\n      In general, nothing useful may be done with those stack items, but\n      since their number is known (because the stack depth is deterministic),\n      the application may <a href=\"../core/DROP\">DROP</a> them to return to a predictable\n      stack state.\n      <p>\n      Typical use:\n      \n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> could-fail <a href=\"../core/p\">(</a> -- char ) <br>\n          &nbsp;&nbsp; <a href=\"../core/KEY\">KEY</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> Q <a href=\"../core/Equal\">=</a> \n          <a href=\"../core/IF\">IF</a>  1 <a href=\"../exception/THROW\">THROW</a>\n          <a href=\"../core/THEN\">THEN</a>\n          <a href=\"../core/Semi\">;</a>\n          <p>\n          <a href=\"../core/Colon\">:</a> do-it <a href=\"../core/p\">(</a> a b -- c)  \n          <a href=\"../core/TwoDROP\">2DROP</a> could-fail <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> try-it <a href=\"../core/p\">(</a> --) <br>\n          &nbsp;&nbsp; 1 2 <a href=\"../core/BracketTick\">[']</a> do-it  <a href=\"../exception/CATCH\">CATCH</a>  <a href=\"../core/IF\">IF</a> <br>\n          &nbsp;&nbsp;   <a href=\"../core/p\">(</a> x1 x2 ) <a href=\"../core/TwoDROP\">2DROP</a>\n          <a href=\"../core/Dotq\">.\"</a>  There was an exception\" <a href=\"../core/CR\">CR</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a>\n          <a href=\"../core/Dotq\">.\"</a> The character was \" <a href=\"../core/EMIT\">EMIT</a> <a href=\"../core/CR\">CR</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Semi\">;</a> retry-it <a href=\"../core/p\">(</a> -- ) <br>\n          &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a>  1 2 <a href=\"../core/BracketTick\">[']</a> do-it <a href=\"../exception/CATCH\">CATCH</a> \n          <a href=\"../core/WHILE\">WHILE</a> <br>\n          &nbsp;&nbsp;   <a href=\"../core/p\">(</a> x1 x2) <a href=\"../core/TwoDROP\">2DROP</a>\n          <a href=\"../core/Dotq\">.\"</a> Exception, keep trying\" <a href=\"../core/CR\">CR</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/p\">(</a> char ) <br>\n          &nbsp;&nbsp; <a href=\"../core/Dotq\">.\"</a> The character was \" <a href=\"../core/EMIT\">EMIT</a> <a href=\"../core/CR\">CR</a> <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n      \n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">This is the counter part to <a href=\"../implement#imp:exception:CATCH\">E.9.6.1.0875 CATCH</a>.</span>\n      <p>\n      </p><div class=\"tabbing\">\n         <a href=\"../core/Colon\">:</a> <strong>THROW</strong> <a href=\"../core/p\">(</a> ??? exception# -- ??? exception# ) <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/qDUP\">?DUP</a> <a href=\"../core/IF\">IF</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> 0 THROW <span class=\"rm\">is no-op</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HANDLER <a href=\"../core/Fetch\">@</a> RP!\t\t\t\t&nbsp; <a href=\"../core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">restore prev return stack</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> HANDLER <a href=\"../core/Store\">!</a>\t\t&nbsp;&nbsp; <a href=\"../core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">restore prev handler</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a>\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> saved-sp )\t <a href=\"../core/bs\">\\</a> exc# <span class=\"rm\">on return stack</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SP! <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Rfrom\">R&gt;</a>\t\t&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">restore stack</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> <span class=\"rm\">Return to the caller of CATCH because return</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> <span class=\"rm\">stack is restored to the state that existed</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> <span class=\"rm\">when CATCH began execution</span> <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n        <a href=\"../core/Semi\">;</a>\n        <br>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n       <div class=\"tt\">\n<a href=\"../core/DECIMAL\">DECIMAL</a>\n        <p>\n        <a href=\"../core/Colon\">:</a> t1 9 <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c1 1 2 3 <a href=\"../core/BracketTick\">[']</a> t1 <a href=\"../exception/CATCH\">CATCH</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ c1 -&gt; 1&nbsp;2&nbsp;3&nbsp;9&nbsp;0 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">No THROW executed</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> t2 8 0 <strong>THROW</strong> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c2 1 2 <a href=\"../core/BracketTick\">[']</a> t2 <a href=\"../exception/CATCH\">CATCH</a> <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ c2 -&gt; 1&nbsp;2&nbsp;8&nbsp;0 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">0 THROW does nothing</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> t3 7 8 9 99 <strong>THROW</strong> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c3 1 2 <a href=\"../core/BracketTick\">[']</a> t3 <a href=\"../exception/CATCH\">CATCH</a> <a href=\"../core/Semi\">;</a><br>\n        <span class=\"tt\">T{ c3 -&gt; 1&nbsp;2&nbsp;99 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Restores stack to <a href=\"../exception/CATCH\">CATCH</a> depth</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> t4 <a href=\"../core/OneMinus\">1-</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/Zeromore\">0&gt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/RECURSE\">RECURSE</a> <a href=\"../core/ELSE\">ELSE</a> 999 <strong>THROW</strong> -222 <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c4 3 4 5 10 <a href=\"../core/BracketTick\">[']</a> t4 <a href=\"../exception/CATCH\">CATCH</a> -111 <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ c4 -&gt; 3&nbsp;4&nbsp;5&nbsp;0&nbsp;999&nbsp;-111 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Test return stack unwinding</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> t5 <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/TwoDROP\">2DROP</a> 9999 <strong>THROW</strong> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c5 1 2 3 4 <a href=\"../core/BracketTick\">[']</a> t5 <a href=\"../exception/CATCH\">CATCH</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Test depth restored correctly</span> <br>\n        &nbsp;&nbsp; <a href=\"../core/DEPTH\">DEPTH</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Semi\">;</a> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">after stack has been emptied</span> <br>\n        <span class=\"tt\">T{ c5 -&gt; 5 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                }
            }
        },
        "facility": {
            "name": "facility",
            "words": {
                "AT-XY": {
                    "id": "facility:AT-XY",
                    "number": "10.6.1.0742",
                    "name": "AT-XY",
                    "english": "at-x-y",
                    "list": "FACILITY",
                    "basename": "AT-XY",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u<sub>1</sub> u<sub>2</sub></em> -- )"
                        },
                        "plain": {
                            " ": "( u1 u2 -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u<sub>1</sub> u<sub>2</sub></em> -- )\n      <p>\n      Perform implementation-dependent steps so that the next\n      character displayed will appear in column <em>u<sub>1</sub></em>, row\n      <em>u<sub>2</sub></em> of the user output device, the upper left corner\n      of which is column zero, row zero. An ambiguous condition exists\n      if the operation cannot be performed on the user output device\n      with the specified parameters.\n      \n      </p>"
                        }
                    }
                },
                "BEGIN-STRUCTURE": {
                    "id": "facility:BEGIN-STRUCTURE",
                    "number": "10.6.2.0763",
                    "name": "BEGIN-STRUCTURE",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "BEGIN-STRUCTURE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- <em>struct-sys 0</em> )",
                            "name Execution:": "( -- <em>+n</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- struct-sys 0 )",
                            "name Execution:": "( -- +n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- <em>struct-sys 0</em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited\n      by a space. Create a definition for <em>name</em> with the\n      execution semantics defined below.  Return a <em>struct-sys</em>\n      (zero or more implementation dependent items) that will be\n      used by <a href=\"../facility/END-STRUCTURE\">END-STRUCTURE</a> and an initial offset of 0.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>+n</em> )\n      <p>\n      <em>+n</em> is the size in memory expressed in address units of\n      the data structure.  An ambiguous condition exists if\n      <em>name</em> is executed prior to the associated\n      <a href=\"../facility/END-STRUCTURE\">END-STRUCTURE</a> being executed.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>, <br>\n      <a href=\"../rationale#rat:facility:BEGIN-STRUCTURE\">A.10.6.2.0763 BEGIN-STRUCTURE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.---- BEGIN-STRUCTURE -->\n      There are two schools of thought regarding named data\n      structures: name first and name last.  The name last\n      school can define a named data structure as follows:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n0 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> initial total byte count <br>\n          &nbsp;&nbsp; 1 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../facility/PlusFIELD\">+FIELD</a> p.x\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> A single cell filed named p.x <br>\n          &nbsp;&nbsp; 1 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../facility/PlusFIELD\">+FIELD</a> p.y   &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> A single cell field named p.y <br>\n          <a href=\"../core/CONSTANT\">CONSTANT</a> point &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> save structure size\n          \n          </div>\n        </div>\n      <p>\n      While the name first school would define the same data\n      structure as:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<strong>BEGIN-STRUCTURE</strong> point  <a href=\"../core/bs\">\\</a> create the named structure <br>\n          &nbsp;&nbsp; 1 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../facility/PlusFIELD\">+FIELD</a> p.x\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> A single cell filed named p.x <br>\n          &nbsp;&nbsp; 1 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../facility/PlusFIELD\">+FIELD</a> p.y   &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> A single cell field named p.y <br>\n          <a href=\"../facility/END-STRUCTURE\">END-STRUCTURE</a>\n          \n          </div>\n        </div>\n      <p>\n      Although many systems provide a name first structure there\n      is no common practice to the words used.  The words\n      <strong>BEGIN-STRUCTURE</strong> and <a href=\"../facility/END-STRUCTURE\">END-STRUCTURE</a> have been\n      defied as a means of providing a portable notation that does\n      not conflict with existing systems.\n      </p><p>\n      The field defining words (<em>x</em><code>FIELD:</code> and\n      <a href=\"../facility/PlusFIELD\">+FIELD</a>) are defined so they can be used by both\n      schools.  Compatibility between the two schools comes from\n      defining a new stack item <em>struct-sys</em>, which is\n      implementation dependent and can be 0 or more cells.\n      The name first school would provide an address (<em>addr</em>)\n      as the <em>struct-sys</em> parameter, while the name last\n      school would defined <em>struct-sys</em> as being empty.\n      </p><p>\n      Executing the name of the data structure, returns the size of\n      the data structure.  This allows the data stricture to be used\n      within another data structure:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<strong>BEGIN-STRUCTURE</strong> point  <a href=\"../core/bs\">\\</a> -- a-addr 0 ; -- lenp <br>\n          &nbsp;&nbsp; <a href=\"../facility/FIELDColon\">FIELD:</a> p.x\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> -- a-addr cell <br>\n          &nbsp;&nbsp; <a href=\"../facility/FIELDColon\">FIELD:</a> p.y      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> -- a-addr cell*2 <br>\n          <a href=\"../facility/END-STRUCTURE\">END-STRUCTURE</a> <br>\n          <strong>BEGIN-STRUCTURE</strong> rect  &nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> -- a-addr 0 ; -- lenr <br>\n          &nbsp;&nbsp; point <a href=\"../facility/PlusFIELD\">+FIELD</a> r.tlhc   &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> -- a-addr cell*2 <br>\n          &nbsp;&nbsp; point <a href=\"../facility/PlusFIELD\">+FIELD</a> r.brhc   &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> -- a-addr cell*4 <br>\n          <a href=\"../facility/END-STRUCTURE\">END-STRUCTURE</a>\n          \n          </div>\n        </div>\n      <p>\n        \n      </p>"
                        },
                        "Alignment:": {
                            "name": "Alignment:",
                            "html": "\n\n  In practice, structures are used for two different purposes\n      with incompatible requirements:\n      <ol style=\"list-style-type: decimal\">\n      <li> For collecting related internal-use data into a\n      convenient \"package\" that can be referred to by a\n      single \"handle\". For this use, alignment is important,\n      so that efficient native fetch and store instructions\n      can be used.\n      <p>\n      </p></li>\n      <li> For mapping external data structures like hardware\n      register maps and protocol packets. For this use,\n      automatic alignment is inappropriate, because the\n      alignment of the external data structure often doesn't\n      match the rules for a given processor.\n      </li>\n</ol>\n      <p>\n      Many languages cater for the first use, but ignore the\n      second.  This leads to various customized solutions, usage\n      requirements, portability problems, bugs, etc.\n      <a href=\"../facility/PlusFIELD\">+FIELD</a> is defined to be non-aligning, while the\n      named field defining words (<em>x</em><code>FIELD:</code>) are\n      aligning.  This is intentional and allows for both uses.\n      </p><p>\n      The standard currently defines an aligned field defining\n      word for each of the standard data types:\n      </p><p>\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td class=\"r\"><a href=\"../facility/CFIELDColon\">CFIELD:</a>\t\t\t\t\t</td><td>a character </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><a href=\"../facility/FIELDColon\">FIELD:</a>\t\t\t\t\t</td><td>a native integer (single cell) </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><a href=\"../float/FFIELDColon\">FFIELD:</a>\t</td><td>a native float </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><a href=\"../float/SFFIELDColon\">SFFIELD:</a>\t</td><td>a 32 bit float </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><a href=\"../float/DFFIELDColon\">DFFIELD:</a>\t</td><td>a 64 bit float\n        </td></tr></tbody></table>\n        \n        </div>\n      <p>\n      Although this is a sufficient set, most systems provide\n      facilities to define field defining words for standard\n      data types.\n        \n      </p>"
                        },
                        "Future:": {
                            "name": "Future:",
                            "html": "\n\n  The following cannot be defined until the required addressing\n      has been defined. The names should be considered reserved\n      until then.\n      <p>\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td class=\"r\"><code>BFIELD:</code> </td><td>1 byte (8 bit) field </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><code>WFIELD:</code> </td><td>16 bit field </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><code>LFIELD:</code> </td><td>32 bit field </td></tr>\n        <tr valign=\"top\"><td class=\"r\"><code>XFIELD:</code> </td><td>64 bit field </td></tr>\n        <tr valign=\"top\"><td class=\"r\"></td></tr>\n        </tbody></table>\n        \n        </div>\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.10.6.2.---- BEGIN-STRUCTURE -->\n      <span class=\"rm\">Begin definition of a new structure. Use in the\n      form <strong>BEGIN-STRUCTURE</strong> &lt;<em>name</em>&gt;.  At run time\n      &lt;<em>name</em>&gt; returns the size of the structure.</span>\n      <p>\n      <a href=\"../core/Colon\">:</a> <strong>BEGIN-STRUCTURE</strong>&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> -- addr 0 ; -- size <br>\n      &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/HERE\">HERE</a> 0  0 <a href=\"../core/Comma\">,</a> &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a>  mark stack, lay dummy <br>\n      &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> <a href=\"../core/Fetch\">@</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> -- rec-len <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      </p>"
                        }
                    }
                },
                "CFIELDColon": {
                    "id": "facility:CFIELD:",
                    "number": "10.6.2.0893",
                    "name": "CFIELD:",
                    "english": "c-field-colon",
                    "list": "FACILITY EXT",
                    "basename": "CFIELDColon",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )",
                            "name Execution:": "( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 \"<spaces>name\" -- n2 )",
                            "name Execution:": "( addr1 -- addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. <em>Offset</em> is the first character aligned value\n      greater than or equal to <em>n<sub>1</sub></em>.  <em>n<sub>2</sub> = offset + 1</em>\n      character.\n      </p><p>\n      Create a definition for <em>name</em> with the execution semantics\n      given below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )\n      <p>\n      Add the <em>offset</em> calculated during the compile-time action to\n      <em>addr<sub>1</sub></em> giving the address <em>addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>, <br>\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>,\n      <a href=\"../rationale#rat:facility:FIELD:\">A.10.6.2.1518 FIELD:</a>.\n      \n      "
                        }
                    }
                },
                "EKEY": {
                    "id": "facility:EKEY",
                    "number": "10.6.2.1305",
                    "name": "EKEY",
                    "english": "e-key",
                    "list": "FACILITY EXT",
                    "basename": "EKEY",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>x</em> )"
                        },
                        "plain": {
                            " ": "( -- x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>x</em> )\n      <p>\n      Receive one keyboard event <em>x</em>. The encoding of keyboard events\n      is implementation defined.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/KEY\">6.1.1750 KEY</a>,\n      <a href=\"../facility/KEYq\">10.6.1.1755 KEY?</a>,\n      <a href=\"../rationale#rat:facility:EKEY\">A.10.6.2.1305 EKEY</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.1305 EKEY -->\n      For some input devices, such as keyboards, more information is\n      available than can be returned by a single execution of\n      <a href=\"../core/KEY\">KEY</a>.  <strong>EKEY</strong> provides a standard word to access a\n      system-dependent set of events.\n      <p>\n      <strong>EKEY</strong> and <a href=\"../facility/EKEYq\">EKEY?</a> are implementation specific; no\n      assumption can be made regarding the interaction between the\n      pairs <strong>EKEY</strong>/<a href=\"../facility/EKEYq\">EKEY?</a> and <a href=\"../core/KEY\">KEY</a>/<a href=\"../facility/KEYq\">KEY?</a>.\n      This standard does not define a timing relationship between\n      <a href=\"../facility/KEYq\">KEY?</a> and <a href=\"../facility/EKEYq\">EKEY?</a>.  Undefined results may be\n      avoided by using only one pairing of <a href=\"../core/KEY\">KEY</a>/ <a href=\"../facility/KEYq\">KEY?</a>\n      or <strong>EKEY</strong>/<a href=\"../facility/EKEYq\">EKEY?</a> in a program for each input\n      stream.\n      </p><p>\n      <strong>EKEY</strong> assumes no particular numerical correspondence\n      between particular event code values and the values\n      representing standard characters.  On some systems, this may\n      allow two separate keys that correspond to the same standard\n      character to be distinguished from one another.  A standard\n      program may only interpret the results of <strong>EKEY</strong> via the\n      translation words provided for that purpose\n      (<a href=\"../facility/EKEYtoCHAR\">EKEY&gt;CHAR</a> and <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a>).\n      </p><p>\n      See: <a href=\"../rationale#rat:core:KEY\">A.6.1.1750 KEY</a>, <a href=\"../facility/EKEYtoCHAR\">10.6.2.1306 EKEY&gt;CHAR</a> and\n      <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "EKEYq": {
                    "id": "facility:EKEYq",
                    "number": "10.6.2.1307",
                    "name": "EKEY?",
                    "english": "e-key-question",
                    "list": "FACILITY EXT",
                    "basename": "EKEYq",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      If a keyboard event is available, return <em>true</em>. Otherwise\n      return <em>false</em>. The event shall be returned by the next\n      execution of <a href=\"../facility/EKEY\">EKEY</a>.\n      </p><p>\n      After <strong>EKEY?</strong> returns with a value of <em>true</em>,\n      subsequent executions of <strong>EKEY?</strong> prior to the execution of\n      <a href=\"../core/KEY\">KEY</a>, <a href=\"../facility/KEYq\">KEY?</a> or <a href=\"../facility/EKEY\">EKEY</a> also return\n      <em>true</em>, referring to the same event.\n      \n      </p>"
                        }
                    }
                },
                "EKEYtoCHAR": {
                    "id": "facility:EKEYtoCHAR",
                    "number": "10.6.2.1306",
                    "name": "EKEY>CHAR",
                    "english": "e-key-to-char",
                    "list": "FACILITY EXT",
                    "basename": "EKEYtoCHAR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>x false  |  char true</em> )"
                        },
                        "plain": {
                            " ": "( x -- x false  |  char true )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>x false  |  char true</em> )\n      <p>\n      If the keyboard event <em>x</em> corresponds to a character in the\n      implementation-defined character set, return that character and\n      <em>true</em>. Otherwise return <em>x</em> and <em>false</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:facility:EKEYtoCHAR\">A.10.6.2.1306 EKEY&gt;CHAR</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.1306 EKEY>CHAR -->\n      <strong>EKEY&gt;CHAR</strong> translates a keyboard event into the\n      corresponding member of the character set, if such a\n      correspondence exists for that event.\n      <p>\n      It is possible that several different keyboard events may\n      correspond to the same character, and other keyboard events\n      may correspond to no character.\n      \n      \n      </p>"
                        }
                    }
                },
                "EKEYtoFKEY": {
                    "id": "facility:EKEYtoFKEY",
                    "number": "10.6.2.1306.40",
                    "name": "EKEY>FKEY",
                    "english": "e-key-to-f-key",
                    "list": "FACILITY EXT",
                    "basename": "EKEYtoFKEY",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>u flag</em> )"
                        },
                        "plain": {
                            " ": "( x -- u flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>u flag</em> )\n      <p>\n      If the keyboard event <em>x</em> corresponds to a keypress in the\n      implementation-defined special key set, return that key's id\n      <em>u</em> and <em>true</em>. Otherwise return <em>x</em> and\n      <em>false</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n\n      The keyboard may lack some of the keys, or the capability to report\n      them. Programs should be written such that they also work (although\n      less conveniently or with less functionality) if these key numbers\n      cannot be produced.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n\n      <a href=\"../facility/EKEY\">10.6.2.1305 EKEY</a>,\n      <a href=\"../facility/K-ALT-MASK\">10.6.2.1740.01 K-ALT-MASK</a>,\n      <a href=\"../facility/K-CTRL-MASK\">10.6.2.1740.02 K-CTRL-MASK</a>, \n      <a href=\"../facility/K-DELETE\">10.6.2.1740.03 K-DELETE</a>,\n      <a href=\"../facility/K-DOWN\">10.6.2.1740.04 K-DOWN</a>,\n      <a href=\"../facility/K-END\">10.6.2.1740.05 K-END</a>, \n      <a href=\"../facility/K-FOne\">10.6.2.1740.06 K-F1</a>,\n      <a href=\"../facility/K-FOneZero\">10.6.2.1740.07 K-F10</a>,\n      <a href=\"../facility/K-FOneOne\">10.6.2.1740.08 K-F11</a>, \n      <a href=\"../facility/K-FOneTwo\">10.6.2.1740.09 K-F12</a>,\n      <a href=\"../facility/K-FTwo\">10.6.2.1740.10 K-F2</a>,\n      <a href=\"../facility/K-F3\">10.6.2.1740.11 K-F3</a>, \n      <a href=\"../facility/K-F4\">10.6.2.1740.12 K-F4</a>,\n      <a href=\"../facility/K-F5\">10.6.2.1740.13 K-F5</a>,\n      <a href=\"../facility/K-F6\">10.6.2.1740.14 K-F6</a>, \n      <a href=\"../facility/K-F7\">10.6.2.1740.15 K-F7</a>,\n      <a href=\"../facility/K-F8\">10.6.2.1740.16 K-F8</a>,\n      <a href=\"../facility/K-F9\">10.6.2.1740.17 K-F9</a>, \n      <a href=\"../facility/K-HOME\">10.6.2.1740.18 K-HOME</a>,\n      <a href=\"../facility/K-INSERT\">10.6.2.1740.19 K-INSERT</a>,\n      <a href=\"../facility/K-LEFT\">10.6.2.1740.20 K-LEFT</a>, \n      <a href=\"../facility/K-NEXT\">10.6.2.1740.21 K-NEXT</a>,\n      <a href=\"../facility/K-PRIOR\">10.6.2.1740.22 K-PRIOR</a>,\n      <a href=\"../facility/K-RIGHT\">10.6.2.1740.23 K-RIGHT</a>, \n      <a href=\"../facility/K-SHIFT-MASK\">10.6.2.1740.24 K-SHIFT-MASK</a>,\n      <a href=\"../facility/K-UP\">10.6.2.1740.25 K-UP</a>, \n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.---- EKEY>FKEY -->\n      <a href=\"../facility/EKEY\">EKEY</a> produces an abstract cell type for a keyboard\n      event (e.g., a keyboard scan code).  <strong>EKEY&gt;FKEY</strong> checks\n      if such an event corresponds to a special (non-graphic) key\n      press, and if so, returns a code for the special key press.\n      The encoding of special keys (returned by <strong>EKEY&gt;FKEY</strong>)\n      may be different from the encoding of these keys as keyboard\n      events (input to <strong>EKEY&gt;FKEY</strong>).\n      <p>\n      Typical Use:\n      </p><p>\n            </p><div class=\"quote\">\n\n        ... <a href=\"../facility/EKEY\">EKEY</a> <strong>EKEY&gt;FKEY</strong> <a href=\"../core/IF\">IF</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/CASE\">CASE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../facility/K-UP\">K-UP</a> <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../facility/K-FOne\">K-F1</a> <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../facility/K-LEFT\">K-LEFT</a> <a href=\"../facility/K-SHIFT-MASK\">K-SHIFT-MASK</a> <a href=\"../core/OR\">OR</a>\n        <a href=\"../facility/K-CTRL-MASK\">K-CTRL-MASK</a> <a href=\"../core/OR\">OR</a>\n        <a href=\"../core/OF\">OF</a> ... <a href=\"../core/ENDOF\">ENDOF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n        &nbsp;&nbsp; <a href=\"../core/ENDCASE\">ENDCASE</a> <br>\n        <a href=\"../core/ELSE\">ELSE</a> <br>\n        &nbsp;&nbsp; ... <br>\n        <a href=\"../core/THEN\">THEN</a>\n        \n        </div>\n      <p>\n      The codes for the special keys are system-dependent, but this\n      standard provides words for getting the key codes for a number\n      of keys:\n      </p><p>\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n        <tr valign=\"top\"><td>Word </td><td>Key </td><td class=\"c\">&nbsp;&nbsp;&nbsp;&nbsp; </td><td>Word </td><td>Key </td></tr>\n        <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-FOne\">K-F1</a>\t\t</td><td>F1\t</td><td class=\"c\"></td><td><a href=\"../facility/K-LEFT\">K-LEFT</a>\t</td><td>cursor left\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-FTwo\">K-F2</a>\t\t</td><td>F2\t</td><td class=\"c\"></td><td><a href=\"../facility/K-RIGHT\">K-RIGHT</a>\t</td><td>cursor right\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F3\">K-F3</a>\t\t</td><td>F3\t</td><td class=\"c\"></td><td><a href=\"../facility/K-UP\">K-UP</a>\t\t</td><td>cursor up\t\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F4\">K-F4</a>\t\t</td><td>F4\t</td><td class=\"c\"></td><td><a href=\"../facility/K-DOWN\">K-DOWN</a>\t</td><td>cursor down\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F5\">K-F5</a>\t\t</td><td>F5\t</td><td class=\"c\"></td><td><a href=\"../facility/K-HOME\">K-HOME</a>\t</td><td>home or Pos1\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F6\">K-F6</a>\t\t</td><td>F6\t</td><td class=\"c\"></td><td><a href=\"../facility/K-END\">K-END</a>\t</td><td>End\t\t\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F7\">K-F7</a>\t\t</td><td>F7\t</td><td class=\"c\"></td><td><a href=\"../facility/K-PRIOR\">K-PRIOR</a>\t</td><td>PgUp or Prior\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F8\">K-F8</a>\t\t</td><td>F8\t</td><td class=\"c\"></td><td><a href=\"../facility/K-NEXT\">K-NEXT</a>\t</td><td>PgDn or Next\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-F9\">K-F9</a>\t\t</td><td>F9\t</td><td class=\"c\"></td><td><a href=\"../facility/K-INSERT\">K-INSERT</a>\t</td><td>Insert\t\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-FOneZero\">K-F10</a>\t</td><td>F10\t</td><td class=\"c\"></td><td><a href=\"../facility/K-DELETE\">K-DELETE</a>\t</td><td>Delete\t\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-FOneOne\">K-F11</a>\t</td><td>F11\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-FOneTwo\">K-F12</a>\t</td><td>F12\t</td></tr>\n        <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n        <tr valign=\"top\"><td></td></tr>\n        </tbody></table>\n        \n        </div>\n      <p>\n      In addition, you can get codes for shifted variants of these\n      keys by <a href=\"../core/OR\">OR</a>ing with <a href=\"../facility/K-SHIFT-MASK\">K-SHIFT-MASK</a>, <a href=\"../facility/K-CTRL-MASK\">K-CTRL-MASK</a>\n      and/or <a href=\"../facility/K-ALT-MASK\">K-ALT-MASK</a>, e.g. <a href=\"../facility/K-CTRL-MASK\">K-CTRL-MASK</a>\n      <a href=\"../facility/K-ALT-MASK\">K-ALT-MASK</a> <a href=\"../core/OR\">OR</a> <a href=\"../facility/K-DELETE\">K-DELETE</a> <a href=\"../core/OR\">OR</a>.\n      The masks for the shift keys are:\n      </p><p>\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td>Word \t\t\t\t</td><td>Key\t</td></tr>\n        <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-SHIFT-MASK\">K-SHIFT-MASK</a>\t</td><td>Shift\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-CTRL-MASK\">K-CTRL-MASK</a>\t</td><td>Ctrl\t</td></tr>\n        <tr valign=\"top\"><td><a href=\"../facility/K-ALT-MASK\">K-ALT-MASK</a>\t</td><td>Alt\t</td></tr>\n        <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td></td></tr>\n        </tbody></table>\n        \n        </div>\n      <p>\n      Note that not all of these keys are available on all systems, and not\n      all combinations of keys and shift keys are available.  Therefore\n      programs should be written such that they continue to work (although\n      less conveniently or with less functionality) if these key combinations\n      cannot be produced.\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.10.6.2.--- EKEY>FKEY -->\n      <span class=\"rm\">The implementation is closely tied to the implementation\n      of <a href=\"../facility/EKEY\">EKEY</a> and therefore unportable.</span>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.10.6.2.---- EKEY>FKEY -->\n            <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> TFKEY\" <a href=\"../core/p\">(</a> \"ccc&lt;quote&gt;\" -- u flag ) <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotq\">.\"</a> Please press \" <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/Dotq\">.\"</a> <a href=\"../facility/EKEY\">EKEY</a> <strong>EKEY&gt;FKEY</strong> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;left&gt;\"&nbsp; -&gt; <a href=\"../facility/K-LEFT\">K-LEFT</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;right&gt;\" -&gt; <a href=\"../facility/K-RIGHT\">K-RIGHT</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;up&gt;\"&nbsp;&nbsp;&nbsp; -&gt; <a href=\"../facility/K-UP\">K-UP</a>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;down&gt;\"&nbsp; -&gt; <a href=\"../facility/K-DOWN\">K-DOWN</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;home&gt;\"&nbsp; -&gt; <a href=\"../facility/K-HOME\">K-HOME</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;end&gt;\"&nbsp;&nbsp; -&gt; <a href=\"../facility/K-END\">K-END</a>&nbsp;&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;prior&gt;\" -&gt; <a href=\"../facility/K-PRIOR\">K-PRIOR</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;next&gt;\"&nbsp; -&gt; <a href=\"../facility/K-NEXT\">K-NEXT</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span>\n        </p><p>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F1&gt;\"&nbsp; -&gt; <a href=\"../facility/K-FOne\">K-F1</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F2&gt;\"&nbsp; -&gt; <a href=\"../facility/K-FTwo\">K-F2</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F3&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F3\">K-F3</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F4&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F4\">K-F4</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F5&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F5\">K-F5</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F6&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F6\">K-F6</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F7&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F7\">K-F7</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F8&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F8\">K-F8</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F9&gt;\"&nbsp; -&gt; <a href=\"../facility/K-F9\">K-F9</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F10&gt;\" -&gt; <a href=\"../facility/K-FOneZero\">K-F10</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F11&gt;\" -&gt; <a href=\"../facility/K-FOneOne\">K-F11</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F11&gt;\" -&gt; <a href=\"../facility/K-FOneTwo\">K-F12</a>&nbsp;&lt;TRUE&gt; }T</span>\n        </p><p>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;shift-left&gt;\" -&gt; <a href=\"../facility/K-LEFT\">K-LEFT</a>&nbsp;<a href=\"../facility/K-SHIFT-MASK\">K-SHIFT-MASK</a>&nbsp;<a href=\"../core/OR\">OR</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;ctrl-left&gt;\"&nbsp; -&gt; <a href=\"../facility/K-LEFT\">K-LEFT</a>&nbsp;<a href=\"../facility/K-CTRL-MASK\">K-CTRL-MASK</a>&nbsp;&nbsp;<a href=\"../core/OR\">OR</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;alt-left&gt;\"&nbsp;&nbsp; -&gt; <a href=\"../facility/K-LEFT\">K-LEFT</a>&nbsp;<a href=\"../facility/K-ALT-MASK\">K-ALT-MASK</a>&nbsp;&nbsp;&nbsp;<a href=\"../core/OR\">OR</a>&nbsp;&lt;TRUE&gt; }T</span>\n        </p><p>\n        <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;a&gt;\"&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../facility/EKEYtoCHAR\">EKEY&gt;CHAR</a> -&gt; &lt;FALSE&gt;&nbsp;CHAR&nbsp;a&nbsp;&lt;TRUE&gt; }T</span> <br>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "EMITq": {
                    "id": "facility:EMITq",
                    "number": "10.6.2.1325",
                    "name": "EMIT?",
                    "english": "emit-question",
                    "list": "FACILITY EXT",
                    "basename": "EMITq",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if the user output device is ready to\n      accept data and the execution of <a href=\"../core/EMIT\">EMIT</a> in place of\n      <strong>EMIT?</strong> would not have suffered an indefinite delay. If\n      the device status is indeterminate, <em>flag</em> is true.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:facility:EMITq\">A.10.6.2.1325 EMIT?</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.1325 EMIT? -->\n      An indefinite delay is a device related condition, such as\n      printer off-line, that requires operator intervention before\n      the device will accept new data.\n      \n      \n      "
                        }
                    }
                },
                "END-STRUCTURE": {
                    "id": "facility:END-STRUCTURE",
                    "number": "10.6.2.1336",
                    "name": "END-STRUCTURE",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "END-STRUCTURE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>struct-sys +n</em> -- )"
                        },
                        "plain": {
                            " ": "( struct-sys +n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>struct-sys +n</em> -- )\n      <p>\n      Terminate definition of a structure started by\n      <a href=\"../facility/BEGIN-STRUCTURE\">BEGIN-STRUCTURE</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.10.6.2.---- END-STRUCTURE -->\n      <span class=\"rm\">Terminate definition of a structure.</span>\n      <p>\n      <a href=\"../core/Colon\">:</a> <strong>END-STRUCTURE</strong>&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> addr n -- <br>\n      &nbsp;&nbsp; <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> set len\n      \n      \n      </p>"
                        }
                    }
                },
                "FIELDColon": {
                    "id": "facility:FIELD:",
                    "number": "10.6.2.1518",
                    "name": "FIELD:",
                    "english": "field-colon",
                    "list": "FACILITY EXT",
                    "basename": "FIELDColon",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )",
                            "name Execution:": "( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 \"<spaces>name\" -- n2 )",
                            "name Execution:": "( addr1 -- addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. <em>Offset</em> is the first cell aligned value greater\n      than or equal to <em>n<sub>1</sub></em>.  <em>n<sub>2</sub> = offset + 1</em> cell.\n      </p><p>\n      Create a definition for <em>name</em> with the execution semantics\n      given below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )\n      <p>\n      Add the <em>offset</em> calculated during the compile-time action\n      to <em>addr<sub>1</sub></em> giving the address <em>addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>, <br>\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>,\n      <a href=\"../rationale#rat:facility:FIELD:\">A.10.6.2.1518 FIELD:</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      Create an aligned single-cell field in a data structure.\n      <p>\n      The various <em>x</em><code>FIELD:</code> words provide for different\n      alignment and size allocation.\n      </p><p>\n      The <em>x</em><code>FIELD:</code> words could be defined as:\n      </p><p>\n      </p><div class=\"tabbing\">\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <strong>FIELD:</strong>   &nbsp;&nbsp;&nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ALIGNED\">ALIGNED</a>    1 <a href=\"../core/CELLS\">CELLS</a>    <a href=\"../facility/PlusFIELD\">+FIELD</a> <a href=\"../core/Semi\">;</a> <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <a href=\"../facility/CFIELDColon\">CFIELD:</a>  &nbsp;&nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   1 <a href=\"../core/CHARS\">CHARS</a>   &nbsp; <a href=\"../facility/PlusFIELD\">+FIELD</a> <a href=\"../core/Semi\">;</a> <br>\n        \n        &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <a href=\"../float/FFIELDColon\">FFIELD:</a>  &nbsp;&nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../float/FALIGNED\">FALIGNED</a>   1 <a href=\"../float/FLOATS\">FLOATS</a>   <a href=\"../facility/PlusFIELD\">+FIELD</a> <a href=\"../core/Semi\">;</a> <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <a href=\"../float/SFFIELDColon\">SFFIELD:</a> &nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../float/SFALIGNED\">SFALIGNED</a>  1 <a href=\"../float/SFLOATS\">SFLOATS</a>  <a href=\"../facility/PlusFIELD\">+FIELD</a> <a href=\"../core/Semi\">;</a> <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <a href=\"../float/DFFIELDColon\">DFFIELD:</a> &nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../float/DFALIGNED\">DFALIGNED</a>  1 <a href=\"../float/DFLOATS\">DFLOATS</a>  <a href=\"../facility/PlusFIELD\">+FIELD</a> <a href=\"../core/Semi\">;</a>\n        \n        <br>\n        \n        </div>\n      \n      \n      "
                        }
                    }
                },
                "K-ALT-MASK": {
                    "id": "facility:K-ALT-MASK",
                    "number": "10.6.2.1740.01",
                    "name": "K-ALT-MASK",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-ALT-MASK",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Mask for the <span class=\"sc\">Alt</span> key, that can be <a href=\"../core/OR\">OR</a>ed with the\n      key value to produce a value that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> may produce when the user presses the\n      corresponding key combination.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-CTRL-MASK": {
                    "id": "facility:K-CTRL-MASK",
                    "number": "10.6.2.1740.02",
                    "name": "K-CTRL-MASK",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-CTRL-MASK",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Mask for the <span class=\"sc\">Ctrl</span> key, that can be <a href=\"../core/OR\">OR</a>ed with the\n      key value to produce a value that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> may produce when the user presses the\n      corresponding key combination.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-DELETE": {
                    "id": "facility:K-DELETE",
                    "number": "10.6.2.1740.03",
                    "name": "K-DELETE",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-DELETE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"Delete\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-DOWN": {
                    "id": "facility:K-DOWN",
                    "number": "10.6.2.1740.04",
                    "name": "K-DOWN",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-DOWN",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"cursor down\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-END": {
                    "id": "facility:K-END",
                    "number": "10.6.2.1740.05",
                    "name": "K-END",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-END",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"End\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F3": {
                    "id": "facility:K-F3",
                    "number": "10.6.2.1740.11",
                    "name": "K-F3",
                    "english": "k-f-3",
                    "list": "FACILITY EXT",
                    "basename": "K-F3",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F3\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F4": {
                    "id": "facility:K-F4",
                    "number": "10.6.2.1740.12",
                    "name": "K-F4",
                    "english": "k-f-4",
                    "list": "FACILITY EXT",
                    "basename": "K-F4",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F4\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F5": {
                    "id": "facility:K-F5",
                    "number": "10.6.2.1740.13",
                    "name": "K-F5",
                    "english": "k-f-5",
                    "list": "FACILITY EXT",
                    "basename": "K-F5",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F5\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F6": {
                    "id": "facility:K-F6",
                    "number": "10.6.2.1740.14",
                    "name": "K-F6",
                    "english": "k-f-6",
                    "list": "FACILITY EXT",
                    "basename": "K-F6",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F6\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F7": {
                    "id": "facility:K-F7",
                    "number": "10.6.2.1740.15",
                    "name": "K-F7",
                    "english": "k-f-7",
                    "list": "FACILITY EXT",
                    "basename": "K-F7",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F7\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F8": {
                    "id": "facility:K-F8",
                    "number": "10.6.2.1740.16",
                    "name": "K-F8",
                    "english": "k-f-8",
                    "list": "FACILITY EXT",
                    "basename": "K-F8",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F8\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-F9": {
                    "id": "facility:K-F9",
                    "number": "10.6.2.1740.17",
                    "name": "K-F9",
                    "english": "k-f-9",
                    "list": "FACILITY EXT",
                    "basename": "K-F9",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F9\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-FOne": {
                    "id": "facility:K-F1",
                    "number": "10.6.2.1740.06",
                    "name": "K-F1",
                    "english": "k-f-1",
                    "list": "FACILITY EXT",
                    "basename": "K-FOne",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F1\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-FOneOne": {
                    "id": "facility:K-F11",
                    "number": "10.6.2.1740.08",
                    "name": "K-F11",
                    "english": "k-f-11",
                    "list": "FACILITY EXT",
                    "basename": "K-FOneOne",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F11\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-FOneTwo": {
                    "id": "facility:K-F12",
                    "number": "10.6.2.1740.09",
                    "name": "K-F12",
                    "english": "k-f-12",
                    "list": "FACILITY EXT",
                    "basename": "K-FOneTwo",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F12\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-FOneZero": {
                    "id": "facility:K-F10",
                    "number": "10.6.2.1740.07",
                    "name": "K-F10",
                    "english": "k-f-10",
                    "list": "FACILITY EXT",
                    "basename": "K-FOneZero",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F10\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-FTwo": {
                    "id": "facility:K-F2",
                    "number": "10.6.2.1740.10",
                    "name": "K-F2",
                    "english": "k-f-2",
                    "list": "FACILITY EXT",
                    "basename": "K-FTwo",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"F2\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-HOME": {
                    "id": "facility:K-HOME",
                    "number": "10.6.2.1740.18",
                    "name": "K-HOME",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-HOME",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"home\" or \"Pos1\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-INSERT": {
                    "id": "facility:K-INSERT",
                    "number": "10.6.2.1740.19",
                    "name": "K-INSERT",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-INSERT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"Insert\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-LEFT": {
                    "id": "facility:K-LEFT",
                    "number": "10.6.2.1740.20",
                    "name": "K-LEFT",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-LEFT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"cursor left\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-NEXT": {
                    "id": "facility:K-NEXT",
                    "number": "10.6.2.1740.21",
                    "name": "K-NEXT",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-NEXT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"PgDn\" (Page Down) or \"Next\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-PRIOR": {
                    "id": "facility:K-PRIOR",
                    "number": "10.6.2.1740.22",
                    "name": "K-PRIOR",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-PRIOR",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"PgUp\" (Page Up) or \"Prior\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-RIGHT": {
                    "id": "facility:K-RIGHT",
                    "number": "10.6.2.1740.23",
                    "name": "K-RIGHT",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-RIGHT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"cursor right\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-SHIFT-MASK": {
                    "id": "facility:K-SHIFT-MASK",
                    "number": "10.6.2.1740.24",
                    "name": "K-SHIFT-MASK",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-SHIFT-MASK",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Mask for the <span class=\"sc\">Shift</span> key, that can be <a href=\"../core/OR\">OR</a>ed with the\n      key value to produce a value that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> may produce when the user presses the\n      corresponding key combination.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "K-UP": {
                    "id": "facility:K-UP",
                    "number": "10.6.2.1740.25",
                    "name": "K-UP",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "K-UP",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Leaves the value <em>u</em> that the sequence <a href=\"../facility/EKEY\">EKEY</a>\n      <a href=\"../facility/EKEYtoFKEY\">EKEY&gt;FKEY</a> would produce when the user presses the\n      \"cursor up\" key.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>,\n      <a href=\"../rationale#rat:facility:EKEYtoFKEY\">A.10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "KEYq": {
                    "id": "facility:KEYq",
                    "number": "10.6.1.1755",
                    "name": "KEY?",
                    "english": "key-question",
                    "list": "FACILITY",
                    "basename": "KEYq",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      If a character is available, return <em>true</em>. Otherwise,\n      return <em>false</em>. If non-character keyboard events are\n      available before the first valid character, they are discarded\n      and are subsequently unavailable. The character shall be\n      returned by the next execution of <a href=\"../core/KEY\">KEY</a>.\n      </p><p>\n      After <strong>KEY?</strong> returns with a value of <em>true</em>,\n      subsequent executions of <strong>KEY?</strong> prior to the execution\n      of <a href=\"../core/KEY\">KEY</a> or <a href=\"../facility/EKEY\">EKEY</a> also return <em>true</em>,\n      without discarding keyboard events.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:facility:KEYq\">A.10.6.1.1755 KEY?</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.1.1755 KEY? -->\n      The committee has gone around several times on the\n      stack effects. Whatever is decided will violate somebody's\n      practice and penalize some machine. This way doesn't interfere\n      with type-ahead on some systems, while requiring the\n      implementation of a single-character buffer on machines where\n      polling the keyboard inevitably results in the destruction of\n      the character.\n      <p>\n      Use of <a href=\"../core/KEY\">KEY</a> or <strong>KEY?</strong> indicates that the\n      application does not wish to process non-character events,\n      so they are discarded, in anticipation of eventually receiving\n      a valid character. Applications wishing to handle non-character\n      events must use <a href=\"../facility/EKEY\">EKEY</a> and <a href=\"../facility/EKEYq\">EKEY?</a>. It is possible\n      to mix uses of <strong>KEY?</strong>/<a href=\"../core/KEY\">KEY</a> and\n      <a href=\"../facility/EKEYq\">EKEY?</a>/<a href=\"../facility/EKEY\">EKEY</a> within a single application, but\n      the application must use <strong>KEY?</strong> and <a href=\"../core/KEY\">KEY</a> only\n      when it wishes to discard non-character events until a valid\n      character is received.\n      \n      \n      </p>"
                        }
                    }
                },
                "MS": {
                    "id": "facility:MS",
                    "number": "10.6.2.1905",
                    "name": "MS",
                    "english": " ",
                    "list": "FACILITY EXT",
                    "basename": "MS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- )"
                        },
                        "plain": {
                            " ": "( u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- )\n      <p>\n      Wait at least <em>u</em> milliseconds.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n\n      The actual length and variability of the time period depends\n      upon the implementation-defined resolution of the system clock\n      and upon other system and computer characteristics beyond the\n      scope of this standard.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:facility:MS\">A.10.6.2.1905 MS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.1905 MS -->\n      Although their frequencies vary, every system has a clock.\n      Since many programs need to time intervals, this word is\n      offered. Use of milliseconds as an internal unit of time is\n      a practical \"least common denominator\" external unit. It\n      is assumed implementors will use \"clock ticks\" (whatever\n      size they are) as an internal unit and convert as appropriate.\n      \n      \n      "
                        }
                    }
                },
                "PAGE": {
                    "id": "facility:PAGE",
                    "number": "10.6.1.2005",
                    "name": "PAGE",
                    "english": " ",
                    "list": "FACILITY",
                    "basename": "PAGE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Move to another page for output. Actual function depends on the\n      output device. On a terminal, <strong>PAGE</strong> clears the screen and\n      resets the cursor position to the upper left corner. On a\n      printer, <strong>PAGE</strong> performs a form feed.\n      \n      </p>"
                        }
                    }
                },
                "PlusFIELD": {
                    "id": "facility:+FIELD",
                    "number": "10.6.2.0135",
                    "name": "+FIELD",
                    "english": "plus-field",
                    "list": "FACILITY EXT",
                    "basename": "PlusFIELD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> n<sub>2</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>3</sub></em> )",
                            "name Execution:": "( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 n2 \"<spaces>name\" -- n3 )",
                            "name Execution:": "( addr1 -- addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> n<sub>2</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>3</sub></em> )\n      <p>\n      Skip leading space delimiters.  Parse <em>name</em> delimited\n      by a space.  Create a definition for <em>name</em> with the\n      execution semantics defined below.  Return <em>n<sub>3</sub></em> =\n      <em>n<sub>1</sub></em> + <em>n<sub>2</sub></em> where <em>n<sub>1</sub></em> is the offset\n      in the data structure before <strong>+FIELD</strong> executes, and\n      <em>n<sub>2</sub></em> is the size of the data to be added to the data\n      structure. <em>n<sub>1</sub></em> and <em>n<sub>2</sub></em> are in address units.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )\n      <p>\n      Add <em>n<sub>1</sub></em> to <em>addr<sub>1</sub></em> giving <em>addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>,\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>, <br>\n      <a href=\"../facility/CFIELDColon\">10.6.2.0893 CFIELD:</a>,\n      <a href=\"../facility/FIELDColon\">10.6.2.1518 FIELD:</a>,\n      <a href=\"../float/FFIELDColon\">12.6.2.1517 FFIELD:</a>, <br>\n      <a href=\"../float/SFFIELDColon\">12.6.2.2206.40 SFFIELD:</a>,\n      <a href=\"../float/DFFIELDColon\">12.6.2.1207.40 DFFIELD:</a>,\n      <a href=\"../rationale#rat:facility:+FIELD\">A.10.6.2.0135 +FIELD</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.---- +FIELD -->\n      <strong>+FIELD</strong> is not required to align items.  This is\n      deliberate and allows the construction of unaligned data\n      structures for communication with external elements such\n      as a hardware register map or protocol packet.\n      Field alignment has been left to the appropriate\n      <em>x</em><code>FIELD:</code> definition.\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.10.6.2.---- +FIELD -->\n      <span class=\"rm\">Create a new field within a structure definition\n      of size <em>n</em> bytes.</span>\n      <p>\n      <a href=\"../core/Colon\">:</a> +FIELD&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> n &lt;\"name\"&gt; -- ; Exec: addr -- 'addr <br>\n      &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Comma\">,</a> <a href=\"../core/Plus\">+</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/Plus\">+</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      </p>"
                        }
                    }
                },
                "TIMEandDATE": {
                    "id": "facility:TIMEandDATE",
                    "number": "10.6.2.2292",
                    "name": "TIME&DATE",
                    "english": "time-and-date",
                    "list": "FACILITY EXT",
                    "basename": "TIMEandDATE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>+n<sub>1</sub> +n<sub>2</sub> +n<sub>3</sub> +n<sub>4</sub> +n<sub>5</sub> +n<sub>6</sub></em> )"
                        },
                        "plain": {
                            " ": "( -- +n1 +n2 +n3 +n4 +n5 +n6 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>+n<sub>1</sub> +n<sub>2</sub> +n<sub>3</sub> +n<sub>4</sub> +n<sub>5</sub> +n<sub>6</sub></em> )\n      <p>\n      Return the current time and date.\n      <em>+n<sub>1</sub></em> is the second {0...59},\n      <em>+n<sub>2</sub></em> is the minute {0...59},\n      <em>+n<sub>3</sub></em> is the hour {0...23},\n      <em>+n<sub>4</sub></em> is the day {1...31},\n      <em>+n<sub>5</sub></em> is the month {1...12} and\n      <em>+n<sub>6</sub></em> is the year (e.g., 1991).\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:facility:TIMEandDATE\">A.10.6.2.2292 TIME&amp;DATE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.10.6.2.2292 TIME&DATE -->\n      Most systems have a real-time clock/calendar.\n      This word gives portable access to it.\n      \n      \n      "
                        }
                    }
                }
            }
        },
        "file": {
            "name": "file",
            "words": {
                "BIN": {
                    "id": "file:BIN",
                    "number": "11.6.1.0765",
                    "name": "BIN",
                    "english": " ",
                    "list": "FILE",
                    "basename": "BIN",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>fam<sub>1</sub></em> -- <em>fam<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( fam1 -- fam2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>fam<sub>1</sub></em> -- <em>fam<sub>2</sub></em> )\n      <p>\n      Modify the implementation-defined file access method\n      <em>fam<sub>1</sub></em> to additionally select a \n      \"binary\", i.e., not line oriented, file access method,\n      giving access method <em>fam<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/RDivO\">11.6.1.2054 R/O</a>,\n      <a href=\"../file/RDivW\">11.6.1.2056 R/W</a>,\n      <a href=\"../file/WDivO\">11.6.1.2425 W/O</a>,\n      <a href=\"../rationale#rat:file:BIN\">A.11.6.1.0765 BIN</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.0765 BIN -->\n      Some operating systems require that files be opened in a\n      different mode to access their contents as an unstructured\n      stream of binary data rather than as a sequence of lines.\n      <p>\n      The arguments to <a href=\"../file/READ-FILE\">READ-FILE</a> and <a href=\"../file/WRITE-FILE\">WRITE-FILE</a> are\n      arrays of character storage elements, each element consisting\n      of at least 8 bits. The committee intends that, in\n      <strong>BIN</strong> mode, the contents of these storage elements can be\n      written to a file and later read back without alteration.\n      \n      \n      </p>"
                        }
                    }
                },
                "CLOSE-FILE": {
                    "id": "file:CLOSE-FILE",
                    "number": "11.6.1.0900",
                    "name": "CLOSE-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "CLOSE-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>fileid</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( fileid -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>fileid</em> -- <em>ior</em> )\n      <p>\n      Close the file identified by <em>fileid</em>. <em>ior</em> is the\n      implementation-defined I/O result code.\n      \n      </p>"
                        }
                    }
                },
                "CREATE-FILE": {
                    "id": "file:CREATE-FILE",
                    "number": "11.6.1.1010",
                    "name": "CREATE-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "CREATE-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u fam</em> -- <em>fileid ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u fam -- fileid ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u fam</em> -- <em>fileid ior</em> )\n      <p>\n      Create the file named in the character string specified by\n      <em>c-addr</em> and <em>u</em>, and open it with file access method\n      <em>fam</em>. The meaning of values of <em>fam</em> is\n      implementation defined. If a file with the same name already\n      exists, recreate it as an empty file.\n      </p><p>\n      If the file was successfully created and opened, <em>ior</em> is\n      zero, <em>fileid</em> is its identifier, and the file has been\n      positioned to the start of the file.\n      </p><p>\n      Otherwise, <em>ior</em> is the implementation-defined I/O result\n      code and <em>fileid</em> is undefined.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:file:CREATE-FILE\">A.11.6.1.1010 CREATE-FILE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.1010 CREATE-FILE -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../file/Sq\">S\"</a> <code>TEST.FTH\"</code> <a href=\"../file/RDivW\">R/W</a>\n      <strong>CREATE-FILE</strong>\n      <a href=\"../core/ABORTq\">ABORT\"</a> <code>CREATE-FILE FAILED\"</code>\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> fn1 <a href=\"../file/Sq\">S\"</a> fatest1.txt\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> fid1\n        <p>\n        <span class=\"tt\">T{ fn1&nbsp;<a href=\"../file/RDivW\">R/W</a>&nbsp;<strong>CREATE-FILE</strong>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "DELETE-FILE": {
                    "id": "file:DELETE-FILE",
                    "number": "11.6.1.1190",
                    "name": "DELETE-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "DELETE-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- <em>ior</em> )\n      <p>\n      Delete the file named in the character string specified by\n      <em>c-addr u</em>. <em>ior</em> is the implementation-defined\n      I/O result code.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ fn2&nbsp;<strong>DELETE-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fn2&nbsp;<a href=\"../file/RDivW\">R/W</a>&nbsp;<a href=\"../file/BIN\">BIN</a>&nbsp;<a href=\"../file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fn2&nbsp;<strong>DELETE-FILE</strong> -&gt; 0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "FILE-POSITION": {
                    "id": "file:FILE-POSITION",
                    "number": "11.6.1.1520",
                    "name": "FILE-POSITION",
                    "english": " ",
                    "list": "FILE",
                    "basename": "FILE-POSITION",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>fileid</em> -- <em>ud ior</em> )"
                        },
                        "plain": {
                            " ": "( fileid -- ud ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>fileid</em> -- <em>ud ior</em> )\n      <p>\n      <em>ud</em> is the current file position for the file identified\n      by <em>fileid</em>. <em>ior</em> is the implementation-defined I/O\n      result code. <em>ud</em> is undefined if <em>ior</em> is non-zero.\n      \n      </p>"
                        }
                    }
                },
                "FILE-SIZE": {
                    "id": "file:FILE-SIZE",
                    "number": "11.6.1.1522",
                    "name": "FILE-SIZE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "FILE-SIZE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>fileid</em> -- <em>ud ior</em> )"
                        },
                        "plain": {
                            " ": "( fileid -- ud ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>fileid</em> -- <em>ud ior</em> )\n      <p>\n      <em>ud</em> is the size, in characters, of the file identified by\n      <em>fileid</em>. <em>ior</em> is the implementation-defined I/O\n      result code. This operation does not affect the value returned\n      by\n      <a href=\"file:FILE-POSITION\"><strong><code>FILE-</code></strong></a>\n      <a href=\"file:FILE-POSITION\"><strong><code>POSITION</code></strong></a>.\n      <em>ud</em> is undefined if <em>ior</em> is non-zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> cbuf buf bsize 0 <a href=\"../core/FILL\">FILL</a> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> fn2 <a href=\"../file/Sq\">S\"</a> fatest2.txt\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> fid2 <br>\n        <a href=\"../core/Colon\">:</a> setpad <a href=\"../core/PAD\">PAD</a> 50 0 <a href=\"../core/DO\">DO</a> <a href=\"../core/I\">I</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CStore\">C!</a> <a href=\"../core/CHARPlus\">CHAR+</a> <a href=\"../core/LOOP\">LOOP</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        setpad\n        </p><p>\n        <span class=\"rm\"><strong>Note:</strong> If anything else is defined\n        <code>setpad</code> must be called again as the pad may move</span>\n        </p><p>\n        <span class=\"tt\">T{ fn2&nbsp;<a href=\"../file/RDivW\">R/W</a>&nbsp;<a href=\"../file/BIN\">BIN</a>&nbsp;<a href=\"../file/CREATE-FILE\">CREATE-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid2&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;50&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/WRITE-FILE\">WRITE-FILE</a>&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FLUSH-FILE\">FLUSH-FILE</a> -&gt; 0&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>FILE-SIZE</strong> -&gt; 50.&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ 0.&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/REPOSITION-FILE\">REPOSITION-FILE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;29&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/READ-FILE\">READ-FILE</a> -&gt; 29&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;29&nbsp;buf&nbsp;29&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;30&nbsp;buf&nbsp;30&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 1 }T</span> <br>\n        <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;29&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/READ-FILE\">READ-FILE</a> -&gt; 21&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;29&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;21&nbsp;buf&nbsp;21&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>FILE-SIZE</strong>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-POSITION\">FILE-POSITION</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<a href=\"../double/DEqual\">D=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ buf&nbsp;10&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/READ-FILE\">READ-FILE</a> -&gt; 0&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "FILE-STATUS": {
                    "id": "file:FILE-STATUS",
                    "number": "11.6.2.1524",
                    "name": "FILE-STATUS",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "FILE-STATUS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- <em>x ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u -- x ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- <em>x ior</em> )\n      <p>\n      Return the status of the file identified by the character string\n      <em>c-addr u</em>. If the file exists, <em>ior</em> is zero;\n      otherwise <em>ior</em> is the implementation-defined I/O result\n      code. <em>x</em> contains implementation-defined information about\n      the file.\n      \n      </p>"
                        }
                    }
                },
                "FLUSH-FILE": {
                    "id": "file:FLUSH-FILE",
                    "number": "11.6.2.1560",
                    "name": "FLUSH-FILE",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "FLUSH-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>fileid</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( fileid -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>fileid</em> -- <em>ior</em> )\n      <p>\n      Attempt to force any buffered information written to the file\n      referred to by <em>fileid</em> to be written to mass storage, and\n      the size information for the file to be recorded in the storage\n      directory if changed. If the operation is successful, <em>ior</em>\n      is zero. Otherwise, it is an implementation-defined I/O result\n      code.\n      \n      </p>"
                        }
                    }
                },
                "INCLUDE-FILE": {
                    "id": "file:INCLUDE-FILE",
                    "number": "11.6.1.1717",
                    "name": "INCLUDE-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "INCLUDE-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x fileid</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x fileid -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x fileid</em> -- <em>j * x</em> )\n      <p>\n      Remove <em>fileid</em> from the stack. Save the current input\n      source specification, including the current value of\n      <a href=\"../file/SOURCE-ID\">SOURCE-ID</a>. Store <em>fileid</em> in <a href=\"../file/SOURCE-ID\">SOURCE-ID</a>.\n      Make the file specified by <em>fileid</em> the input source. Store\n      zero in <a href=\"../block/BLK\">BLK</a>. Other stack effects are due to the\n      words included.\n      </p><p>\n      Repeat until end of file: read a line from the file, fill the\n      input buffer from the contents of that line, set <a href=\"../core/toIN\">&gt;IN</a>\n      to zero, and interpret.\n      </p><p>\n      Text interpretation begins at the file position where the next\n      file read would occur.\n      </p><p>\n      When the end of the file is reached, close the file and restore\n      the input source specification to its saved value.\n      </p><p>\n      An ambiguous condition exists if <em>fileid</em> is invalid, if\n      there is an I/O exception reading <em>fileid</em>, or if an I/O\n      exception occurs while closing <em>fileid</em>. When an ambiguous\n      condition exists, the status (open or closed) of any files that\n      were being interpreted is implementation-defined.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../file#file:source\">11.3.3 Input source</a></strong>,\n      <a href=\"../rationale#rat:file:INCLUDE-FILE\">A.11.6.1.1717 INCLUDE-FILE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.1717 INCLUDE-FILE -->\n      Here are two implementation alternatives for saving the input\n      source specification in the presence of text file input:\n      <p>\n      </p><ol style=\"list-style-type: decimal\">\n      <li> Save the file position (as returned by\n      <a href=\"../file/FILE-POSITION\">FILE-POSITION</a>) of the beginning of the line being\n      interpreted. To restore the input source specification,\n      seek to that position and re-read the line into the input\n      buffer.\n      <p>\n      </p></li>\n      <li> Allocate a separate line buffer for each active text\n      input file, using that buffer as the input buffer. This\n      method avoids the \"seek and reread\" step, and allows the\n      use of \"pseudo-files\" such as pipes and other\n      sequential-access-only communication channels.\n      </li>\n</ol>\n      \n      \n      "
                        }
                    }
                },
                "INCLUDE": {
                    "id": "file:INCLUDE",
                    "number": "11.6.2.1714",
                    "name": "INCLUDE",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "INCLUDE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x \"name\"</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x \"name\" -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x \"name\"</em> -- <em>j * x</em> )\n      <p>\n      Skip leading white space and parse <em>name</em> delimited by a\n      white space character. Push the address and length of the\n      <em>name</em> on the stack and perform the function of\n      <a href=\"../file/INCLUDED\">INCLUDED</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/INCLUDED\">11.6.1.1718 INCLUDED</a>,\n      <a href=\"../rationale#rat:file:INCLUDE\">A.11.6.2.1714 INCLUDE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.2.---- INCLUDE -->\n      Typical use:\n            <div class=\"quote\">\n\n        <strong>INCLUDE</strong> <code>filename</code>\n        \n        </div>\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.11.6.2.---- INCLUDE -->\n      <a href=\"../core/Colon\">:</a> <strong>INCLUDE</strong> <a href=\"../file/p\">(</a> i*x \"name\" -- j*x ) <br>\n      &nbsp;&nbsp; <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <a href=\"../file/INCLUDED\">INCLUDED</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.11.6.2.---- INCLUDE -->\n      See <a href=\"../testsuite#test:file:REQUIRED\">F.11.6.2.2144.50 REQUIRED</a>.\n      \n      \n      "
                        }
                    }
                },
                "INCLUDED": {
                    "id": "file:INCLUDED",
                    "number": "11.6.1.1718",
                    "name": "INCLUDED",
                    "english": " ",
                    "list": "FILE",
                    "basename": "INCLUDED",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x c-addr u</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x c-addr u -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x c-addr u</em> -- <em>j * x</em> )\n      <p>\n      Remove <em>c-addr u</em> from the stack. Save the current input\n      source specification, including the current value of\n      <a href=\"../file/SOURCE-ID\">SOURCE-ID</a>. Open the file specified by <em>c-addr u</em>,\n      store the resulting <em>fileid</em> in <a href=\"../file/SOURCE-ID\">SOURCE-ID</a>, and make\n      it the input source. Store zero in <a href=\"../block/BLK\">BLK</a>. Other\n      stack effects are due to the words included.\n      </p><p>\n      Repeat until end of file: read a line from the file, fill the\n      input buffer from the contents of that line, set <a href=\"../core/toIN\">&gt;IN</a>\n      to zero, and interpret.\n      </p><p>\n      Text interpretation begins at the start of the file.\n      </p><p>\n      When the end of the file is reached, close the file and restore\n      the input source specification to its saved value.\n      </p><p>\n      An ambiguous condition exists if the named file can not be\n      opened, if an I/O exception occurs reading the file, or if an\n      I/O exception occurs while closing the file. When an ambiguous\n      condition exists, the status (open or closed) of any files that\n      were being interpreted is implementation-defined.\n      </p><p>\n      <strong>INCLUDED</strong> may allocate memory in data space before it\n      starts interpreting the file.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/INCLUDE-FILE\">11.6.1.1717 INCLUDE-FILE</a>,\n      <a href=\"../rationale#rat:file:INCLUDED\">A.11.6.1.1718 INCLUDED</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.1718 INCLUDED -->\n      Typical use:\n      ... <a href=\"../file/Sq\">S\"</a> <code>filename\"</code> <strong>INCLUDED</strong> ...\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.11.6.1.1718 INCLUDED -->\n      See <a href=\"../testsuite#test:file:REQUIRED\">F.11.6.2.2144.50 REQUIRED</a>.\n      \n      \n      "
                        }
                    }
                },
                "OPEN-FILE": {
                    "id": "file:OPEN-FILE",
                    "number": "11.6.1.1970",
                    "name": "OPEN-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "OPEN-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u fam</em> -- <em>fileid ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u fam -- fileid ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u fam</em> -- <em>fileid ior</em> )\n      <p>\n      Open the file named in the character string specified by\n      <em>c-addr u</em>, with file access method indicated by\n      <em>fam</em>. The meaning of values of <em>fam</em> is\n      implementation \tdefined.\n      </p><p>\n      If the file is successfully opened, <em>ior</em> is zero,\n      <em>fileid</em> is its identifier, and the file has been\n      positioned to the start of the file.\n      </p><p>\n      Otherwise, <em>ior</em> is the implementation-defined I/O\n      result code and <em>fileid</em> is undefined.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:file:OPEN-FILE\">A.11.6.1.1970 OPEN-FILE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.1970 OPEN-FILE -->\n      Typical use:\n      <p>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../file/Sq\">S\"</a> <code> TEST.FTH\"</code> <a href=\"../file/RDivW\">R/W</a>\n      <strong>OPEN-FILE</strong>  <a href=\"../core/ABORTq\">ABORT\"</a> <code>OPEN-FILE FAILED\"</code>\n      ... <a href=\"../core/Semi\">;</a>\n      \n      \n      </p>"
                        }
                    }
                },
                "RDivO": {
                    "id": "file:R/O",
                    "number": "11.6.1.2054",
                    "name": "R/O",
                    "english": "r-o",
                    "list": "FILE",
                    "basename": "RDivO",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>fam</em> )"
                        },
                        "plain": {
                            " ": "( -- fam )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>fam</em> )\n      <p>\n      <em>fam</em> is the implementation-defined value for selecting\n      the \"read only\" file access method.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/CREATE-FILE\">11.6.1.1010 CREATE-FILE</a>,\n      <a href=\"../file/OPEN-FILE\">11.6.1.1970 OPEN-FILE</a>.\n      \n      "
                        }
                    }
                },
                "RDivW": {
                    "id": "file:R/W",
                    "number": "11.6.1.2056",
                    "name": "R/W",
                    "english": "r-w",
                    "list": "FILE",
                    "basename": "RDivW",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>fam</em> )"
                        },
                        "plain": {
                            " ": "( -- fam )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>fam</em> )\n      <p>\n      <em>fam</em> is the implementation-defined value for selecting\n      the \"read/write\" file access method.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/CREATE-FILE\">11.6.1.1010 CREATE-FILE</a>,\n      <a href=\"../file/OPEN-FILE\">11.6.1.1970 OPEN-FILE</a>.\n      \n      "
                        }
                    }
                },
                "READ-FILE": {
                    "id": "file:READ-FILE",
                    "number": "11.6.1.2080",
                    "name": "READ-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "READ-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u<sub>1</sub> fileid</em> -- <em>u<sub>2</sub> ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u1 fileid -- u2 ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u<sub>1</sub> fileid</em> -- <em>u<sub>2</sub> ior</em> )\n      <p>\n      Read <em>u<sub>1</sub></em> consecutive characters to <em>c-addr</em> from the\n      current position of the file identified by <em>fileid</em>.\n      </p><p>\n      If <em>u<sub>1</sub></em> characters are read without an exception, <em>ior</em>\n      is zero and <em>u<sub>2</sub></em> is equal to <em>u<sub>1</sub></em>.\n      </p><p>\n      If the end of the file is reached before <em>u<sub>1</sub></em> characters are\n      read, <em>ior</em> is zero and <em>u<sub>2</sub></em> is the number of characters\n      actually read.\n      </p><p>\n      If the operation is initiated when the value returned by\n      <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> is equal to the value returned by\n      <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> for the file identified by <em>fileid</em>,\n      <em>ior</em> is zero and <em>u<sub>2</sub></em> is zero.\n      </p><p>\n      If an exception occurs, <em>ior</em> is the implementation-defined\n      I/O result code, and <em>u<sub>2</sub></em> is the number of characters\n      transferred to <em>c-addr</em> without an exception.\n      </p><p>\n      An ambiguous condition exists if the operation is initiated when\n      the value returned by <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> is greater than the\n      value returned by <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> for the file identified by\n      <em>fileid</em>, or if the requested operation attempts to read\n      portions of the file not written.\n      </p><p>\n      At the conclusion of the operation, <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> returns\n      the next file position after the last character read.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:file:READ-FILE\">A.11.6.1.2080 READ-FILE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.2080 READ-FILE -->\n      A typical sequential file-processing algorithm might look like:\n            <div class=\"quote\">\n        <div class=\"tt\">\n\n          <div class=\"tabbing\">\n            <a href=\"../core/BEGIN\">BEGIN</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> ) <br>\n            &nbsp;&nbsp;&nbsp; ... <a href=\"../file/READ-FILE\">READ-FILE</a> <a href=\"../exception/THROW\">THROW</a>\n            &nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"../core/p\">(</a> length ) <br>\n            <a href=\"../core/qDUP\">?DUP</a> <a href=\"../core/WHILE\">WHILE</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> length ) <br>\n            &nbsp;&nbsp;&nbsp; ...\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"../core/p\">(</a> ) <br>\n            <a href=\"../core/REPEAT\">REPEAT</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> )\n            <br>\n            \n            </div>\n          \n          </div>\n        </div>In this example, <a href=\"../exception/THROW\">THROW</a> is used to handle\n      exception conditions, which are reported as\n      non-zero values of the <em>ior</em> return value from\n      <strong>READ-FILE</strong>. End-of-file is reported as a zero value of\n      the \"length\" return value.\n      \n      \n      "
                        }
                    }
                },
                "READ-LINE": {
                    "id": "file:READ-LINE",
                    "number": "11.6.1.2090",
                    "name": "READ-LINE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "READ-LINE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u<sub>1</sub> fileid</em> -- <em>u<sub>2</sub> flag ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u1 fileid -- u2 flag ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u<sub>1</sub> fileid</em> -- <em>u<sub>2</sub> flag ior</em> )\n      <p>\n      Read the next line from the file specified by <em>fileid</em> into\n      memory at the address <em>c-addr</em>. At most <em>u<sub>1</sub></em> characters\n      are read. Up to two implementation-defined line-terminating\n      characters may be read into memory at the end of the line, but\n      are not included in the count <em>u<sub>2</sub></em>. The line buffer provided\n      by <em>c-addr</em> should be at least <em>u<sub>1</sub>+2</em> characters long.\n      </p><p>\n      If the operation succeeded, <em>flag</em> is true and <em>ior</em>\n      is zero. If a line terminator was received before <em>u<sub>1</sub></em>\n      characters were read, then <em>u<sub>2</sub></em> is the number of characters,\n      not including the line terminator, actually read (<em>0 &lt;=</em> <em>u<sub>2</sub></em>\n      <em>&lt;=</em> <em>u<sub>1</sub></em>). When <em>u<sub>1</sub></em> = <em>u<sub>2</sub></em> the line\n      terminator has yet to be reached.\n      </p><p>\n      If the operation is initiated when the value returned by\n      <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> is equal to the value returned by\n      <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> for the file identified by <em>fileid</em>,\n      <em>flag</em> is false, <em>ior</em> is zero, and <em>u<sub>2</sub></em> is zero.\n      If <em>ior</em> is non-zero, an exception occurred during the\n      operation and <em>ior</em> is the implementation-defined I/O\n      result code.\n      </p><p>\n      An ambiguous condition exists if the operation is initiated when\n      the value returned by <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> is greater than the\n      value returned by <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> for the file identified by\n      <em>fileid</em>, or if the requested operation attempts to read\n      portions of the file not written.\n      </p><p>\n      At the conclusion of the operation, <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> returns\n      the next file position after the last character read.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:file:READ-LINE\">A.11.6.1.2090 READ-LINE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.2090 READ-LINE -->\n      Implementations are allowed to store the line terminator in\n      the memory buffer in order to allow the use of line reading\n      functions provided by host operating systems, some of which\n      store the terminator. Without this provision, a transient\n      buffer might be needed. The two-character limitation is\n      sufficient for the vast majority of existing operating\n      systems. Implementations on host operating systems whose line\n      terminator sequence is longer than two characters may have to\n      take special action to prevent the storage of more than two\n      terminator characters.\n      <p>\n      Standard Programs may not depend on the presence of any such\n      terminator sequence in the buffer.\n      </p><p>\n      A typical line-oriented sequential file-processing algorithm\n      might look like:\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n\n          <div class=\"tabbing\">\n            <a href=\"../core/BEGIN\">BEGIN</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> ) <br>\n            &nbsp;&nbsp;&nbsp; ... <a href=\"../file/READ-LINE\">READ-LINE</a> <a href=\"../exception/THROW\">THROW</a>\n            &nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"../core/p\">(</a> length not-eof-flag ) <br>\n            <a href=\"../core/WHILE\">WHILE</a> \t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> length ) <br>\n            &nbsp;&nbsp;&nbsp; ...\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"../core/p\">(</a> ) <br>\n            <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/DROP\">DROP</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> ) <br>\n            \n            </div>\n          \n          </div>\n        </div><strong>READ-LINE</strong> needs a separate end-of-file flag because\n      empty (zero-length) lines are a routine occurrence, so a\n      zero-length line cannot be used to signify end-of-file.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n200 <a href=\"../core/CONSTANT\">CONSTANT</a> bsize <br>\n        <a href=\"../core/CREATE\">CREATE</a> buf bsize <a href=\"../core/ALLOT\">ALLOT</a> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> #chars\n        <p>\n        <span class=\"tt\">T{ fn1&nbsp;<a href=\"../file/RDivO\">R/O</a>&nbsp;<a href=\"../file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-POSITION\">FILE-POSITION</a> -&gt; 0.&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ buf&nbsp;100&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>READ-LINE</strong>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;#chars&nbsp;<a href=\"../core/Store\">!</a> -&gt; <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&lt;TRUE&gt;&nbsp;0&nbsp;line1&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a> }T</span> <br>\n        <span class=\"tt\">T{ buf&nbsp;#chars&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;line1&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "REFILL": {
                    "id": "file:REFILL",
                    "number": "11.6.2.2125",
                    "name": "REFILL",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "REFILL",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      Extend the execution semantics of <a href=\"../core/REFILL\">6.2.2125 REFILL</a>\n      with the following:\n      </p><p>\n      When the input source is a text file, attempt to read the next\n      line from the text-input file. If successful, make the result\n      the current input buffer, set <a href=\"../core/toIN\">&gt;IN</a> to zero, and\n      return <em>true</em>. Otherwise return <em>false</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/REFILL\">6.2.2125 REFILL</a>,\n      <a href=\"../block/REFILL\">7.6.2.2125 REFILL</a>.\n      \n      "
                        }
                    }
                },
                "RENAME-FILE": {
                    "id": "file:RENAME-FILE",
                    "number": "11.6.2.2130",
                    "name": "RENAME-FILE",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "RENAME-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 c-addr2 u2 -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>ior</em> )\n      <p>\n      Rename the file named by the character string <em>c-addr<sub>1</sub> u<sub>1</sub></em>\n      to the name in the character string <em>c-addr<sub>2</sub> u<sub>2</sub></em>.\n      <em>ior</em> is the implementation-defined I/O result code.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> fn3 <a href=\"../file/Sq\">S\"</a> fatest3.txt\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> &gt;end fid1 <a href=\"../core/Fetch\">@</a> <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> <a href=\"../core/DROP\">DROP</a> fid1 <a href=\"../core/Fetch\">@</a> <a href=\"../file/REPOSITION-FILE\">REPOSITION-FILE</a> <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ fn3&nbsp;<a href=\"../file/DELETE-FILE\">DELETE-FILE</a>&nbsp;<a href=\"../core/DROP\">DROP</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ fn1&nbsp;fn3&nbsp;<strong>RENAME-FILE</strong> -&gt; 0 }T</span> <br>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\"> Return value is undefined</span> <br>\n        <span class=\"tt\">T{ fn1&nbsp;<a href=\"../file/FILE-STATUS\">FILE-STATUS</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<a href=\"../core/ZeroEqual\">0=</a> -&gt; &lt;FALSE&gt; }T</span> <br>\n        <span class=\"tt\">T{ fn3&nbsp;<a href=\"../file/FILE-STATUS\">FILE-STATUS</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<a href=\"../core/ZeroEqual\">0=</a> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ fn3&nbsp;<a href=\"../file/RDivW\">R/W</a>&nbsp;<a href=\"../file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ &gt;end -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../file/Sq\">S\"</a>&nbsp;Final&nbsp;line\"&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/WRITE-LINE\">WRITE-LINE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FLUSH-FILE\">FLUSH-FILE</a> -&gt; 0 }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Can only test <a href=\"../file/FLUSH-FILE\">FLUSH-FILE</a> doesn't fail</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Tidy the test folder</span> <br>\n        <span class=\"tt\">T{ fn3&nbsp;<a href=\"../file/DELETE-FILE\">DELETE-FILE</a>&nbsp;<a href=\"../core/DROP\">DROP</a> -&gt;  }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "REPOSITION-FILE": {
                    "id": "file:REPOSITION-FILE",
                    "number": "11.6.1.2142",
                    "name": "REPOSITION-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "REPOSITION-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud fileid</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( ud fileid -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud fileid</em> -- <em>ior</em> )\n      <p>\n      Reposition the file identified by <em>fileid</em> to <em>ud</em>.\n      <em>ior</em> is the implementation-defined I/O result code. An\n      ambiguous condition exists if the file is positioned outside\n      the file boundaries.\n      </p><p>\n      At the conclusion of the operation, <a href=\"../file/FILE-POSITION\">FILE-POSITION</a>\n      returns the value <em>ud</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> line2 <a href=\"../file/Sq\">S\"</a> Line 2 blah blah blah\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> rl1 buf 100 fid1 <a href=\"../core/Fetch\">@</a> <a href=\"../file/READ-LINE\">READ-LINE</a> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../double/TwoVARIABLE\">2VARIABLE</a> fp\n        <p>\n        <span class=\"tt\">T{ fn1&nbsp;<a href=\"../file/RDivW\">R/W</a>&nbsp;<a href=\"../file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-SIZE\">FILE-SIZE</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-SIZE\">FILE-SIZE</a> -&gt; fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-POSITION\">FILE-POSITION</a> }T</span>\n        </p><p>\n        <span class=\"tt\">T{ line2&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/WRITE-FILE\">WRITE-FILE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ 10.&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-POSITION\">FILE-POSITION</a> -&gt; 10.&nbsp;0 }T</span>\n        </p><p>\n        <span class=\"tt\">T{ 0.&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ rl1 -&gt; line1&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;&lt;TRUE&gt;&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ rl1 -&gt; <a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;#chars&nbsp;<a href=\"../core/Store\">!</a> }T</span>&lt;TRUE&gt; 0 line2 <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/DROP\">DROP</a> <br>\n        <span class=\"tt\">T{ buf&nbsp;#chars&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;line2&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;FALSE&gt;&nbsp;0 }T</span>\n        </p><p>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-POSITION\">FILE-POSITION</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;fp&nbsp;<a href=\"../core/TwoStore\">2!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fp&nbsp;<a href=\"../core/TwoFetch\">2@</a>&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-SIZE\">FILE-SIZE</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<a href=\"../double/DEqual\">D=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../file/Sq\">S\"</a>&nbsp;\"&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/WRITE-LINE\">WRITE-LINE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../file/Sq\">S\"</a>&nbsp;\"&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/WRITE-LINE\">WRITE-LINE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fp&nbsp;<a href=\"../core/TwoFetch\">2@</a>&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;TRUE&gt;&nbsp;&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;TRUE&gt;&nbsp;&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;FALSE&gt;&nbsp;0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "REQUIRE": {
                    "id": "file:REQUIRE",
                    "number": "11.6.2.2144.10",
                    "name": "REQUIRE",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "REQUIRE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x \"name\"</em> -- <em>i * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x \"name\" -- i * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x \"name\"</em> -- <em>i * x</em> )\n      <p>\n      Skip leading white space and parse <em>name</em> delimited by a\n      white space character. Push the address and length of the\n      <em>name</em> on the stack and perform the function of\n      <a href=\"../file/REQUIRED\">REQUIRED</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/REQUIRED\">11.6.2.2144.50 REQUIRED</a>,\n      <a href=\"../rationale#rat:file:REQUIRE\">A.11.6.2.2144.10 REQUIRE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.2.---- REQUIRE -->\n      Typical use:\n            <div class=\"quote\">\n\n        <strong>REQUIRE</strong> <code>filename</code>\n        \n        </div>\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.11.6.2.---- REQUIRE -->\n      <a href=\"../core/Colon\">:</a> <strong>REQUIRE</strong> <a href=\"../file/p\">(</a> i*x \"name\" -- i*x ) <br>\n      &nbsp;&nbsp; <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <a href=\"../file/REQUIRED\">REQUIRED</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.11.6.2.---- REQUIRE -->\n      See <a href=\"../testsuite#test:file:REQUIRED\">F.11.6.2.2144.50 REQUIRED</a>.\n      \n      \n      "
                        }
                    }
                },
                "REQUIRED": {
                    "id": "file:REQUIRED",
                    "number": "11.6.2.2144.50",
                    "name": "REQUIRED",
                    "english": " ",
                    "list": "FILE EXT",
                    "basename": "REQUIRED",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x c-addr u</em> -- <em>i * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x c-addr u -- i * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x c-addr u</em> -- <em>i * x</em> )\n      <p>\n      If the file specified by <em>c-addr u</em> has been <a href=\"../file/INCLUDED\">INCLUDED</a>\n      or <strong>REQUIRED</strong> already, but not between the definition and\n      execution of a marker (or equivalent usage of <a href=\"../tools/FORGET\">FORGET</a>),\n      discard <em>c-addr u</em>; otherwise, perform the function of\n      <a href=\"../file/INCLUDED\">INCLUDED</a>.\n      </p><p>\n      An ambiguous condition exists if a file is <strong>REQUIRED</strong> while\n      it is being <strong>REQUIRED</strong> or <a href=\"../file/INCLUDED\">INCLUDED</a>.\n      </p><p>\n      An ambiguous condition exists, if a marker is defined outside and\n      executed inside a file or vice versa, and the file is\n      <strong>REQUIRED</strong> again.\n      </p><p>\n      An ambiguous condition exists if the same file is <strong>REQUIRED</strong>\n      twice using different names (e.g., through symbolic links), or\n      different files with the same name are <strong>REQUIRED</strong> (by doing\n      some renaming between the invocations of <strong>REQUIRED</strong>).\n      </p><p>\n      An ambiguous condition exists if the stack effect of including the\n      file is not ( <em>i * x</em> -- <em>i * x</em> ).\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:file:REQUIRED\">A.11.6.2.2144.50 REQUIRED</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.2.---- REQUIRED -->\n      Typical use:\n            <div class=\"quote\">\n\n        <a href=\"../file/Sq\">S\"</a> <code>filename\"</code> <strong>REQUIRED</strong>\n        \n        </div>\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n            <div class=\"rm\">\nThis implementation does not implement the requirements with\n        regard to <a href=\"../core/MARKER\">MARKER</a> and <a href=\"../tools/FORGET\">FORGET</a> (<strong>REQUIRED</strong>\n        only includes each file once, whether a marker was executed or\n        not), so it is not a correct implementation on systems that\n        support these words. It extends the definition of <a href=\"../file/INCLUDED\">INCLUDED</a>\n        to record the name of files which have been either included or\n        required previously. The names are recorded in a linked list\n        held in the <code>included-names</code> variable.\n        <p>\n                </p><div class=\"tt\">\n<a href=\"../core/Colon\">:</a> save-mem\t<a href=\"../file/p\">(</a> addr1 u -- addr2 u ) <a href=\"../core/bs\">\\</a> gforth <br>\n          <a href=\"../core/bs\">\\</a> <span class=\"rm\">copy a memory block into a newly allocated region in the heap</span> <br>\n          &nbsp;&nbsp; <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <a href=\"../memory/ALLOCATE\">ALLOCATE</a> <a href=\"../exception/THROW\">THROW</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/ROT\">ROT</a> <a href=\"../core/ROT\">ROT</a> <a href=\"../core/MOVE\">MOVE</a> <a href=\"../core/Semi\">;</a>\n          <p>\n          <a href=\"../core/Colon\">:</a> name-add <a href=\"../file/p\">(</a> addr u listp -- ) <br>\n          &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> save-mem <a href=\"../file/p\">(</a> addr1 u ) <br>\n          &nbsp;&nbsp; 3 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../memory/ALLOCATE\">ALLOCATE</a> <a href=\"../exception/THROW\">THROW</a> <a href=\"../core/bs\">\\</a> allocate list node <br>\n          &nbsp;&nbsp; <a href=\"../core/RFetch\">R@</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Store\">!</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">set next pointer</span> <br>\n          &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Store\">!</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">store current node in list var</span> <br>\n          &nbsp;&nbsp; <a href=\"../core/CELLPlus\">CELL+</a> <a href=\"../core/TwoStore\">2!</a> <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> name-present? <a href=\"../file/p\">(</a> addr u list -- f ) <br>\n          &nbsp;&nbsp; <a href=\"../core/ROT\">ROT</a> <a href=\"../core/ROT\">ROT</a> <a href=\"../core/TwotoR\">2&gt;R</a> <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../file/p\">(</a> list R: addr u ) <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/WHILE\">WHILE</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <a href=\"../core/CELLPlus\">CELL+</a> <a href=\"../core/TwoFetch\">2@</a> <a href=\"../core/TwoRFetch\">2R@</a> <a href=\"../string/COMPARE\">COMPARE</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/DROP\">DROP</a> <a href=\"../core/TwoRfrom\">2R&gt;</a> <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/TRUE\">TRUE</a> <a href=\"../core/EXIT\">EXIT</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/THEN\">THEN</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Fetch\">@</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <br>\n          &nbsp;&nbsp; <a href=\"../file/p\">(</a> <a href=\"../core/DROP\">DROP</a> 0 ) <a href=\"../core/TwoRfrom\">2R&gt;</a> <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> name-join <a href=\"../file/p\">(</a> addr u list -- ) <br>\n          &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/Fetch\">@</a> name-present? <a href=\"../core/IF\">IF</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/TwoDROP\">2DROP</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> name-add <br>\n          &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/VARIABLE\">VARIABLE</a> included-names 0 included-names <a href=\"../core/Store\">!</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> included <a href=\"../file/p\">(</a> i*x addr u -- j*x ) <br>\n          &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> included-names name-join <br>\n          &nbsp;&nbsp; <a href=\"../file/INCLUDED\">INCLUDED</a> <a href=\"../core/Semi\">;</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> <strong>REQUIRED</strong> <a href=\"../file/p\">(</a> i*x addr u -- i*x ) <br>\n          &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> included-names <a href=\"../core/Fetch\">@</a> name-present? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; included <br>\n          &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDROP\">2DROP</a> <br>\n          &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n            \n          </p></div>\n        </div>\n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n <!-- T.11.6.2.---- REQUIRED -->\n      This test requires two additional files:\n      <code>required-helper1.fs</code> and\n      <code>required-helper2.fs</code>.\n      Both of which hold the text:\n            <div class=\"quote\">\n\n        <a href=\"../core/OnePlus\">1+</a>\n        \n        </div>\n      As for the test themselves:\n      <p>\n      <span class=\"tt\">T{ 0&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/Sq\">S\"</a>&nbsp;required-helper1.fs\"&nbsp;<strong>REQUIRED</strong>&nbsp;<a href=\"../core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/REQUIRE\">REQUIRE</a>&nbsp;required-helper1.fs\t\t\t\t<a href=\"../core/bs\">\\</a>&nbsp;Ignore&nbsp;-&nbsp;already&nbsp;loaded&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/INCLUDE\">INCLUDE</a>&nbsp;required-helper1.fs\t\t\t\t<a href=\"../core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n       -&gt; 2 }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/INCLUDE\">INCLUDE</a>&nbsp;required-helper2.fs\t\t\t\t<a href=\"../core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/Sq\">S\"</a>&nbsp;required-helper2.fs\"&nbsp;<strong>REQUIRED</strong>&nbsp;<a href=\"../core/bs\">\\</a>&nbsp;Ignored&nbsp;-&nbsp;already&nbsp;loaded&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/REQUIRE\">REQUIRE</a>&nbsp;required-helper2.fs\t\t\t\t<a href=\"../core/bs\">\\</a>&nbsp;Ignored&nbsp;-&nbsp;already&nbsp;loaded&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../file/Sq\">S\"</a>&nbsp;required-helper2.fs\"&nbsp;<a href=\"../file/INCLUDED\">INCLUDED</a>\t<a href=\"../core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n       -&gt; 2 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "RESIZE-FILE": {
                    "id": "file:RESIZE-FILE",
                    "number": "11.6.1.2147",
                    "name": "RESIZE-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "RESIZE-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>ud fileid</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( ud fileid -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>ud fileid</em> -- <em>ior</em> )\n      <p>\n      Set the size of the file identified by <em>fileid</em> to\n      <em>ud</em>. <em>ior</em> is the implementation-defined I/O result\n      code.\n      </p><p>\n      If the resultant file is larger than the file before the\n      operation, the portion of the file added as a result of the\n      operation might not have been written.\n      </p><p>\n      At the conclusion of the operation, <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> returns\n      the value <em>ud</em> and\n      <a href=\"file:FILE-POSITION\"><strong><code>FILE-</code></strong></a> \n      <a href=\"file:FILE-POSITION\"><strong><code>POSITION</code></strong></a>\n      returns an unspecified value.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/READ-FILE\">11.6.1.2080 READ-FILE</a>,\n      <a href=\"../file/READ-LINE\">11.6.1.2090 READ-LINE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <code>setpad</code> <br>\n      <span class=\"tt\">T{ fn2&nbsp;<a href=\"../file/RDivW\">R/W</a>&nbsp;<a href=\"../file/BIN\">BIN</a>&nbsp;<a href=\"../file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid2&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 37.&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>RESIZE-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-SIZE\">FILE-SIZE</a> -&gt; 37.&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 0.&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/REPOSITION-FILE\">REPOSITION-FILE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;100&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/READ-FILE\">READ-FILE</a> -&gt; 37&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;37&nbsp;buf&nbsp;37&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;38&nbsp;buf&nbsp;38&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ 500.&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>RESIZE-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/FILE-SIZE\">FILE-SIZE</a> -&gt; 500.&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 0.&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/REPOSITION-FILE\">REPOSITION-FILE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;100&nbsp;fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/READ-FILE\">READ-FILE</a> -&gt; 100&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;37&nbsp;buf&nbsp;37&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "SOURCE-ID": {
                    "id": "file:SOURCE-ID",
                    "number": "11.6.1.2218",
                    "name": "SOURCE-ID",
                    "english": "source-i-d",
                    "list": "FILE",
                    "basename": "SOURCE-ID",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>0  |  -1  |  fileid</em> )"
                        },
                        "plain": {
                            " ": "( -- 0  |  -1  |  fileid )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>0  |  -1  |  fileid</em> )\n      <p>\n      Extend <a href=\"../core/SOURCE-ID\">6.2.2218 SOURCE-ID</a> to include text-file\n      input as follows:\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td class=\"c\"><strong>SOURCE-ID</strong> </td><td>Input source </td></tr>\n        <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td class=\"c\"><em>fileid</em>\t</td><td>Text file \"<em>fileid</em>\" </td></tr>\n        <tr valign=\"top\"><td class=\"c\"><em>-1</em>\t\t</td><td>String (via <a href=\"../core/EVALUATE\">EVALUATE</a>) </td></tr>\n        <tr valign=\"top\"><td class=\"c\"><em>0</em>\t\t</td><td>User input device </td></tr>\n        <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n        <tr valign=\"top\"><td class=\"c\"></td></tr>\n        </tbody></table>\n        \n        </div>\n      <p>\n      An ambiguous condition exists if <strong>SOURCE-ID</strong> is used when\n      <a href=\"../block/BLK\">BLK</a> contains a non-zero value.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>SOURCE-ID</strong>&nbsp;<a href=\"../core/DUP\">DUP</a>&nbsp;-1&nbsp;<a href=\"../core/Equal\">=</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/ZeroEqual\">0=</a>&nbsp;<a href=\"../core/OR\">OR</a> -&gt; &lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "Seq": {
                    "id": "file:Seq",
                    "number": "11.6.2.2266",
                    "name": "S\\\"",
                    "english": "s-backslash-quote",
                    "list": "FILE EXT",
                    "basename": "Seq",
                    "stackEffect": {
                        "html": {
                            "Interpretation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- <em>c-addr u</em> )",
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            "Interpretation:": "( \"ccc<quote>\" -- c-addr u )",
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n\n      Extend the semantics of <a href=\"../core/Seq\">6.2.2266 S\\\"</a> to be:\n      <p>\n        \n      </p>"
                        },
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n ( <em>\"ccc&lt;quote&gt;\"</em> -- <em>c-addr u</em> )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double quote) according to the\n      translation rules given in <a href=\"../core/Seq\">6.2.2266 S\\\"</a>.  Store the resulting string in a\n      transient buffer <em>c-addr u</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double quote) according to the\n      translation rules given in <a href=\"../core/Seq\">6.2.2266 S\\\"</a>.  Append the run-time semantics\n      given below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n ( -- <em>c-addr u</em> )\n      <p>\n      Return a string <em>c-addr u</em> describing the translation of <em>ccc</em>.\n      A program shall not alter the returned string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/Seq\">6.2.2266 S\\\"</a> <strong><a href=\"../file#file:buffers\">11.3.4 Other transient regions</a></strong>,\n      <a href=\"../file/Sq\">11.6.1.2165 S\"</a>, <strong><a href=\"../rationale#rat:file:buffers\">A.11.3.4 Other transient regions</a></strong>.\n      \n      "
                        }
                    }
                },
                "Sq": {
                    "id": "file:Sq",
                    "number": "11.6.1.2165",
                    "name": "S\"",
                    "english": "s-quote",
                    "list": "FILE",
                    "basename": "Sq",
                    "stackEffect": {
                        "html": {
                            "Interpretation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- <em>c-addr u</em> )",
                            "Compilation:": "( <em>\"ccc&lt;quote&gt;\"</em> -- )",
                            "Run-time:": "( -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            "Interpretation:": "( \"ccc<quote>\" -- c-addr u )",
                            "Compilation:": "( \"ccc<quote>\" -- )",
                            "Run-time:": "( -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n Extend the semantics of <a href=\"../core/Sq\">6.1.2165 S\"</a> to be:\n        \n      "
                        },
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- <em>c-addr u</em> )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double quote). Store\n      the resulting string in a transient buffer <em>c-addr u</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"ccc&lt;quote&gt;\"</em> -- )\n      <p>\n      Parse <em>ccc</em> delimited by <code>\"</code> (double quote). Append\n      the run-time semantics given below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>c-addr u</em> )\n      <p>\n      Return <em>c-addr</em> and <em>u</em> that describe a string\n      consisting of the characters <em>ccc</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/Cq\">6.2.0855 C\"</a>,\n      <a href=\"../core/Sq\">6.1.2165 S\"</a>,\n      <strong><a href=\"../file#file:buffers\">11.3.4 Other transient regions</a></strong>, <br>\n      <a href=\"../file/Seq\">11.6.2.2266 S\\\"</a>,\n      <strong><a href=\"../rationale#rat:file:buffers\">A.11.3.4 Other transient regions</a></strong>,\n      <a href=\"../rationale#rat:file:Sq\">A.11.6.1.2165 S\"</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.11.6.1.2165 S\" -->\n      Typical use:\n      ... <strong>S\"</strong> <em>ccc</em><code>\"</code> ...\n      <p>\n      The interpretation semantics for <strong>S\"</strong> are intended to\n      provide a simple mechanism for entering a string in the\n      interpretation state. Since an implementation may choose to\n      provide only one buffer for interpreted strings, an\n      interpreted string is subject to being overwritten by the\n      next execution of <strong>S\"</strong> in interpretation state. It is\n      intended that no standard words other than <strong>S\"</strong> should\n      in themselves cause the interpreted string to be overwritten.\n      However, since words such as <a href=\"../core/EVALUATE\">EVALUATE</a>,\n      <a href=\"../block/LOAD\">LOAD</a>, <a href=\"../file/INCLUDE-FILE\">INCLUDE-FILE</a> and\n      <a href=\"../file/INCLUDED\">INCLUDED</a> can result in the interpretation of arbitrary\n      text, possibly including instances of <strong>S\"</strong>, the\n      interpreted string may be invalidated by some uses of these\n      words.\n      </p><p>\n      When the possibility of overwriting a string can arise, it is\n      prudent to copy the string to a \"safe\" buffer allocated by\n      the application.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>S\"</strong>&nbsp;A&nbsp;String\"<a href=\"../core/TwoDROP\">2DROP</a> -&gt;  }T</span>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">There is no space between the \" and <a href=\"../core/TwoDROP\">2DROP</a></span>\n      \n      \n      "
                        }
                    }
                },
                "WDivO": {
                    "id": "file:W/O",
                    "number": "11.6.1.2425",
                    "name": "W/O",
                    "english": "w-o",
                    "list": "FILE",
                    "basename": "WDivO",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>fam</em> )"
                        },
                        "plain": {
                            " ": "( -- fam )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>fam</em> )\n      <p>\n      <em>fam</em> is the implementation-defined value for selecting\n      the \"write only\" file access method.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/CREATE-FILE\">11.6.1.1010 CREATE-FILE</a>,\n      <a href=\"../file/OPEN-FILE\">11.6.1.1970 OPEN-FILE</a>.\n      \n      "
                        }
                    }
                },
                "WRITE-FILE": {
                    "id": "file:WRITE-FILE",
                    "number": "11.6.1.2480",
                    "name": "WRITE-FILE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "WRITE-FILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u fileid</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u fileid -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u fileid</em> -- <em>ior</em> )\n      <p>\n      Write <em>u</em> characters from <em>c-addr</em> to the file\n      identified by <em>fileid</em> starting at its current position.\n      <em>ior</em> is the implementation-defined I/O result code.\n      </p><p>\n      At the conclusion of the operation, <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> returns\n      the next file position after the last character written to the\n      file, and <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> returns a value greater than or equal\n      to the value returned by <a href=\"../file/FILE-POSITION\">FILE-POSITION</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/READ-FILE\">11.6.1.2080 READ-FILE</a>,\n      <a href=\"../file/READ-LINE\">11.6.1.2090 READ-LINE</a>.\n      \n      "
                        }
                    }
                },
                "WRITE-LINE": {
                    "id": "file:WRITE-LINE",
                    "number": "11.6.1.2485",
                    "name": "WRITE-LINE",
                    "english": " ",
                    "list": "FILE",
                    "basename": "WRITE-LINE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u fileid</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u fileid -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u fileid</em> -- <em>ior</em> )\n      <p>\n      Write <em>u</em> characters from <em>c-addr</em> followed by the\n      implementation-dependent line terminator to the file identified\n      by <em>fileid</em> starting at its current position. <em>ior</em> is\n      the implementation-defined I/O result code.\n      </p><p>\n      At the conclusion of the operation, <a href=\"../file/FILE-POSITION\">FILE-POSITION</a> returns\n      the next file position after the last character written to the\n      file, and <a href=\"../file/FILE-SIZE\">FILE-SIZE</a> returns a value greater than or equal\n      to the value returned by <a href=\"../file/FILE-POSITION\">FILE-POSITION</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../file/READ-FILE\">11.6.1.2080 READ-FILE</a>,\n      <a href=\"../file/READ-LINE\">11.6.1.2090 READ-LINE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> line1 <a href=\"../file/Sq\">S\"</a> Line 1\" <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ fn1&nbsp;<a href=\"../file/WDivO\">W/O</a>&nbsp;<a href=\"../file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ line1&nbsp;fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>WRITE-LINE</strong> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ fid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "p": {
                    "id": "file:p",
                    "number": "11.6.1.0080",
                    "name": "(",
                    "english": "paren",
                    "list": "FILE",
                    "basename": "p",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"ccc&lt;paren&gt;\"</em> -- )"
                        },
                        "plain": {
                            " ": "( \"ccc<paren>\" -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"ccc&lt;paren&gt;\"</em> -- )\n      <p>\n      Extend the semantics of <a href=\"../core/p\">6.1.0080 (</a> to include:\n      </p><p>\n      When parsing from a text file, if the end of the parse area is\n      reached before a right parenthesis is found, refill the input\n      buffer from the next line of the file, set <a href=\"../core/toIN\">&gt;IN</a> to\n      zero, and resume parsing, repeating this process until either a\n      right parenthesis is found or the end of the file is reached.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>(</strong>&nbsp;1&nbsp;2&nbsp;3&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;5&nbsp;6&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;8&nbsp;9&nbsp;)&nbsp;11&nbsp;22&nbsp;33 -&gt; 11&nbsp;22&nbsp;33 }T</span>\n      \n      \n      "
                        }
                    }
                }
            }
        },
        "float": {
            "name": "float",
            "words": {
                "DFALIGN": {
                    "id": "float:DFALIGN",
                    "number": "12.6.2.1205",
                    "name": "DFALIGN",
                    "english": "d-f-align",
                    "list": "FLOATING EXT",
                    "basename": "DFALIGN",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      If the data-space pointer is not double-float aligned, reserve\n      enough data space to make it so.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "DFALIGNED": {
                    "id": "float:DFALIGNED",
                    "number": "12.6.2.1207",
                    "name": "DFALIGNED",
                    "english": "d-f-aligned",
                    "list": "FLOATING EXT",
                    "basename": "DFALIGNED",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr</em> -- <em>df-addr</em> )"
                        },
                        "plain": {
                            " ": "( addr -- df-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr</em> -- <em>df-addr</em> )\n      <p>\n      <em>df-addr</em> is the first double-float-aligned address greater\n      than or equal to <em>addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "DFFIELDColon": {
                    "id": "float:DFFIELD:",
                    "number": "12.6.2.1207.40",
                    "name": "DFFIELD:",
                    "english": "d-f-field-colon",
                    "list": "FLOATING EXT",
                    "basename": "DFFIELDColon",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )",
                            "name Execution:": "( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 \"<spaces>name\" -- n2 )",
                            "name Execution:": "( addr1 -- addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. <em>Offset</em> is the first double-float aligned value\n      greater than or equal to <em>n<sub>1</sub></em>.  <em>n<sub>2</sub> = offset + 1</em>\n      double-float.\n      </p><p>\n      Create a definition for <em>name</em> with the execution semantics\n      given below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )\n      <p>\n      Add the <em>offset</em> calculated during the compile-time action to\n      <em>addr<sub>1</sub></em> giving the address <em>addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>, <br>\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>,\n      <a href=\"../rationale#rat:facility:FIELD:\">A.10.6.2.1518 FIELD:</a>.\n      \n      "
                        }
                    }
                },
                "DFFetch": {
                    "id": "float:DF@",
                    "number": "12.6.2.1204",
                    "name": "DF@",
                    "english": "d-f-fetch",
                    "list": "FLOATING EXT",
                    "basename": "DFFetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>df-addr</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>df-addr</em> -- <em>r</em> )"
                        },
                        "plain": {
                            " ": "( df-addr -- ) ( F: -- r ) or\n( df-addr -- r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>df-addr</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>df-addr</em> -- <em>r</em> )\n      <p>\n      Fetch the 64-bit IEEE double-precision number stored at\n      <em>df-addr</em> to the floating-point stack as <em>r</em> in the\n      internal representation. If the IEEE double-precision\n      significand has more precision than the internal representation\n      it will be rounded to the internal representation using the\n      \"round to nearest\" rule. An ambiguous condition exists if the\n      exponent of the IEEE double-precision representation is too\n      large to be accommodated by the internal representation.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>.\n      \n      "
                        }
                    }
                },
                "DFLOATPlus": {
                    "id": "float:DFLOAT+",
                    "number": "12.6.2.1208",
                    "name": "DFLOAT+",
                    "english": "d-float-plus",
                    "list": "FLOATING EXT",
                    "basename": "DFLOATPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>df-addr<sub>1</sub></em> -- <em>df-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( df-addr1 -- df-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>df-addr<sub>1</sub></em> -- <em>df-addr<sub>2</sub></em> )\n      <p>\n      Add the size in address units of a 64-bit IEEE double-precision\n      number to <em>df-addr<sub>1</sub></em>, giving <em>df-addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "DFLOATS": {
                    "id": "float:DFLOATS",
                    "number": "12.6.2.1209",
                    "name": "DFLOATS",
                    "english": "d-floats",
                    "list": "FLOATING EXT",
                    "basename": "DFLOATS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 -- n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )\n      <p>\n      <em>n<sub>2</sub></em> is the size in address units of <em>n<sub>1</sub></em> 64-bit\n      IEEE double-precision numbers.\n      \n      </p>"
                        }
                    }
                },
                "DFStore": {
                    "id": "float:DF!",
                    "number": "12.6.2.1203",
                    "name": "DF!",
                    "english": "d-f-store",
                    "list": "FLOATING EXT",
                    "basename": "DFStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>df-addr</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r df-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( df-addr -- ) ( F: r -- ) or\n( r df-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>df-addr</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r df-addr</em> -- )\n      <p>\n      Store the floating-point number <em>r</em> as a 64-bit IEEE\n      double-precision number at <em>df-addr</em>. If the significand\n      of the internal representation of <em>r</em> has more precision than\n      the IEEE double-precision format, it will be rounded using the\n      \"round to nearest\" rule. An ambiguous condition exists if the\n      exponent of <em>r</em> is too large to be accommodated in IEEE\n      double-precision format.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>.\n      \n      "
                        }
                    }
                },
                "DtoF": {
                    "id": "float:DtoF",
                    "number": "12.6.1.1130",
                    "name": "D>F",
                    "english": "d-to-f",
                    "list": "FLOATING",
                    "basename": "DtoF",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>d</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>d</em> -- <em>r</em> )"
                        },
                        "plain": {
                            " ": "( d -- ) ( F: -- r ) or\n( d -- r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>d</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>d</em> -- <em>r</em> )\n      <p>\n      <em>r</em> is the floating-point equivalent of <em>d</em>. An ambiguous\n      condition exists if <em>d</em> cannot be precisely represented as a\n      floating-point value.\n      \n      </p>"
                        }
                    }
                },
                "FABS": {
                    "id": "float:FABS",
                    "number": "12.6.2.1474",
                    "name": "FABS",
                    "english": "f-abs",
                    "list": "FLOATING EXT",
                    "basename": "FABS",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the absolute value of <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FACOS": {
                    "id": "float:FACOS",
                    "number": "12.6.2.1476",
                    "name": "FACOS",
                    "english": "f-a-cos",
                    "list": "FLOATING EXT",
                    "basename": "FACOS",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the principal radian angle whose cosine is\n      <em>r<sub>1</sub></em>. An ambiguous condition exists if <em> | r<sub>1</sub> | </em> is\n      greater than one.\n      \n      </p>"
                        }
                    }
                },
                "FACOSH": {
                    "id": "float:FACOSH",
                    "number": "12.6.2.1477",
                    "name": "FACOSH",
                    "english": "f-a-cosh",
                    "list": "FLOATING EXT",
                    "basename": "FACOSH",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the floating-point value whose hyperbolic cosine is\n      <em>r<sub>1</sub></em>. An ambiguous condition exists if <em>r<sub>1</sub></em> is less\n      than one.\n      \n      </p>"
                        }
                    }
                },
                "FALIGN": {
                    "id": "float:FALIGN",
                    "number": "12.6.1.1479",
                    "name": "FALIGN",
                    "english": "f-align",
                    "list": "FLOATING",
                    "basename": "FALIGN",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      If the data-space pointer is not float aligned, reserve enough\n      data space to make it so.\n      \n      </p>"
                        }
                    }
                },
                "FALIGNED": {
                    "id": "float:FALIGNED",
                    "number": "12.6.1.1483",
                    "name": "FALIGNED",
                    "english": "f-aligned",
                    "list": "FLOATING",
                    "basename": "FALIGNED",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr</em> -- <em>f-addr</em> )"
                        },
                        "plain": {
                            " ": "( addr -- f-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr</em> -- <em>f-addr</em> )\n      <p>\n      <em>f-addr</em> is the first float-aligned address greater than\n      or equal to <em>addr</em>.\n      \n      </p>"
                        }
                    }
                },
                "FALOG": {
                    "id": "float:FALOG",
                    "number": "12.6.2.1484",
                    "name": "FALOG",
                    "english": "f-a-log",
                    "list": "FLOATING EXT",
                    "basename": "FALOG",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      Raise ten to the power <em>r<sub>1</sub></em>, giving <em>r<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FASIN": {
                    "id": "float:FASIN",
                    "number": "12.6.2.1486",
                    "name": "FASIN",
                    "english": "f-a-sine",
                    "list": "FLOATING EXT",
                    "basename": "FASIN",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the principal radian angle whose sine is <em>r<sub>1</sub></em>.\n      An ambiguous condition exists if <em> | r<sub>1</sub> | </em> is greater than one.\n      \n      </p>"
                        }
                    }
                },
                "FASINH": {
                    "id": "float:FASINH",
                    "number": "12.6.2.1487",
                    "name": "FASINH",
                    "english": "f-a-cinch",
                    "list": "FLOATING EXT",
                    "basename": "FASINH",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the floating-point value whose hyperbolic sine is\n      <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FATAN": {
                    "id": "float:FATAN",
                    "number": "12.6.2.1488",
                    "name": "FATAN",
                    "english": "f-a-tan",
                    "list": "FLOATING EXT",
                    "basename": "FATAN",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the principal radian angle whose tangent is\n      <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FATANH": {
                    "id": "float:FATANH",
                    "number": "12.6.2.1491",
                    "name": "FATANH",
                    "english": "f-a-tan-h",
                    "list": "FLOATING EXT",
                    "basename": "FATANH",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the floating-point value whose hyperbolic tangent is\n      <em>r<sub>1</sub></em>. An ambiguous condition exists if <em>r<sub>1</sub></em> is outside\n      the range of -1E0 to 1E0.\n      \n      </p>"
                        }
                    }
                },
                "FATANTwo": {
                    "id": "float:FATAN2",
                    "number": "12.6.2.1489",
                    "name": "FATAN2",
                    "english": "f-a-tan-two",
                    "list": "FLOATING EXT",
                    "basename": "FATANTwo",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      <em>r<sub>3</sub></em> is the principal radian angle (between -<em>π</em> and <em>π</em>)\n      whose tangent is <em>r<sub>1</sub>/r<sub>2</sub></em>.\n      A system that returns false for \"<code>-0E 0E 0E <a href=\"../float/Ftilde\">F~</a></code>\"\n      shall return a value (approximating) <em>-π</em> when <em>r<sub>1</sub></em> <em>=</em> 0E\n      and <em>r<sub>2</sub></em> is negative.\n      An ambiguous condition exists if <em>r<sub>1</sub></em> and <em>r<sub>2</sub></em> are\n      zero.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:FATAN2\">A.12.6.2.1489 FATAN2</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1489 FATAN2 -->\n      <a href=\"../float/FSINCOS\">FSINCOS</a> and <strong>FATAN2</strong> are a complementary pair of\n      operators which convert angles to 2-vectors and vice-versa.\n      They are essential to most geometric and physical applications\n      since they correctly and unambiguously handle this conversion\n      in all cases except null vectors, even when the tangent of the\n      angle would be infinite.\n      <p>\n      <a href=\"../float/FSINCOS\">FSINCOS</a> returns a Cartesian unit vector in the direction\n      of the given angle, measured counter-clockwise from the positive\n      X-axis. The order of results on the stack, namely <em>y</em> underneath\n      <em>x</em>, permits the 2-vector data type to be additionally viewed\n      and used as a ratio approximating the tangent of the angle.\n      Thus the phrase <a href=\"../float/FSINCOS\">FSINCOS</a> <a href=\"../float/FDiv\">F/</a> is functionally\n      equivalent to <a href=\"../float/FTAN\">FTAN</a>, but is useful over only a limited\n      and discontinuous range of angles, whereas <a href=\"../float/FSINCOS\">FSINCOS</a> and\n      <strong>FATAN2</strong> are useful for all angles.\n      </p><p>\n      The argument order for <strong>FATAN2</strong> is the same, converting a\n      vector in the conventional representation to a scalar angle.\n      Thus, for all angles, <a href=\"../float/FSINCOS\">FSINCOS</a> <strong>FATAN2</strong> is an identity\n      within the accuracy of the arithmetic and the argument range of\n      <a href=\"../float/FSINCOS\">FSINCOS</a>. Note that while <a href=\"../float/FSINCOS\">FSINCOS</a> always returns a\n      valid unit vector, <strong>FATAN2</strong> will accept any non-null vector.\n      An ambiguous condition exists if the vector argument to\n      <strong>FATAN2</strong> has zero magnitude.\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a>  NaN <a href=\"../tools/BracketIF\">[IF]</a>  0e 0e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>  NaN <a href=\"../tools/BracketTHEN\">[THEN]</a> <br>\n        <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> +Inf <a href=\"../tools/BracketIF\">[IF]</a>  1e 0e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a> +Inf <a href=\"../tools/BracketTHEN\">[THEN]</a> <br>\n        <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> -Inf <a href=\"../tools/BracketIF\">[IF]</a> -1e 0e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a> -Inf <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        <p>\n        <a href=\"../core/TRUE\">TRUE</a> verbose <a href=\"../core/Store\">!</a> <br>\n        <a href=\"../core/DECIMAL\">DECIMAL</a>\n        </p><p>\n        <span class=\"rm\">The test harness default for <code>EXACT?</code> is TRUE.\n        Uncomment the following line if your system needs it to\n        be FALSE</span> <br>\n        <a href=\"../core/bs\">\\</a> SET-NEAR\n        </p><p>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> #errors    0 #errors <a href=\"../core/Store\">!</a>\n        </p><p>\n        <a href=\"../core/ColonNONAME\">:NONAME</a> <a href=\"../core/p\">(</a> c-addr u -- ) <br>\n        &nbsp;&nbsp; <a href=\"../core/p\">(</a> <span class=\"rm\">Display an error message followed by the\n        line that had the error@.</span> ) <br>\n        &nbsp;&nbsp; 1 #errors <a href=\"../core/PlusStore\">+!</a> error1 <a href=\"../core/Semi\">;</a> error-xt <a href=\"../core/Store\">!</a>\n        </p><p>\n        <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> pi <a href=\"../tools/BracketIF\">[IF]</a> <br>\n        &nbsp;&nbsp; 0.3141592653589793238463E1 <a href=\"../float/FCONSTANT\">FCONSTANT</a> pi <br>\n        <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        </p><p>\n        <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> -pi <a href=\"../tools/BracketIF\">[IF]</a> <br>\n        &nbsp;&nbsp; pi <a href=\"../float/FNEGATE\">FNEGATE</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a> -pi <br>\n        <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        </p><p>\n        <a href=\"../core/FALSE\">FALSE</a> <a href=\"../tools/BracketIF\">[IF]</a> <br>\n        &nbsp;&nbsp;  0.7853981633974483096157E0 <a href=\"../float/FCONSTANT\">FCONSTANT</a>   pi/4 <br>\n        &nbsp;&nbsp; -0.7853981633974483096157E0 <a href=\"../float/FCONSTANT\">FCONSTANT</a>  -pi/4 <br>\n        &nbsp;&nbsp;  0.1570796326794896619231E1 <a href=\"../float/FCONSTANT\">FCONSTANT</a>   pi/2 <br>\n        &nbsp;&nbsp; -0.1570796326794896619231E1 <a href=\"../float/FCONSTANT\">FCONSTANT</a>  -pi/2 <br>\n        &nbsp;&nbsp;  0.4712388980384689857694E1 <a href=\"../float/FCONSTANT\">FCONSTANT</a>  3pi/2 <br>\n        &nbsp;&nbsp;  0.2356194490192344928847E1 <a href=\"../float/FCONSTANT\">FCONSTANT</a>  3pi/4 <br>\n        &nbsp;&nbsp; -0.2356194490192344928847E1 <a href=\"../float/FCONSTANT\">FCONSTANT</a> -3pi/4 <br>\n        <a href=\"../tools/BracketELSE\">[ELSE]</a> <br>\n        &nbsp;&nbsp;  pi   4e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>   pi/4 <br>\n        &nbsp;&nbsp; -pi   4e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>  -pi/4 <br>\n        &nbsp;&nbsp;  pi   2e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>   pi/2 <br>\n        &nbsp;&nbsp; -pi   2e <a href=\"../float/FDiv\">F/</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>  -pi/2 <br>\n        &nbsp;&nbsp;  pi/2 3e <a href=\"../float/FTimes\">F*</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>  3pi/2 <br>\n        &nbsp;&nbsp;  pi/4 3e <a href=\"../float/FTimes\">F*</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a>  3pi/4 <br>\n        &nbsp;&nbsp; -pi/4 3e <a href=\"../float/FTimes\">F*</a> <a href=\"../float/FCONSTANT\">FCONSTANT</a> -3pi/4 <br>\n        <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        </p><p>\n        verbose <a href=\"../core/Fetch\">@</a> <a href=\"../tools/BracketIF\">[IF]</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/ColonNONAME\">:NONAME</a> <a href=\"../core/p\">(</a> -- fp.separate? ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DEPTH\">DEPTH</a> <a href=\"../core/toR\">&gt;R</a> 1e <a href=\"../core/DEPTH\">DEPTH</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../float/FDROP\">FDROP</a> <a href=\"../core/TwoRfrom\">2R&gt;</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/EXECUTE\">EXECUTE</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotp\">.(</a> <span class=\"rm\">floating-point and data stacks</span> ) <br>\n        &nbsp;&nbsp; <a href=\"../tools/BracketIF\">[IF]</a> <a href=\"../core/Dotp\">.(</a> <span class=\"rm\">*separate*</span> ) <a href=\"../tools/BracketELSE\">[ELSE]</a> <a href=\"../core/Dotp\">.(</a> <span class=\"rm\">*not separate*</span> ) <a href=\"../tools/BracketTHEN\">[THEN]</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <br>\n        <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        </p><p>\n        TESTING normal values\n        </p><p>\n        <a href=\"../core/bs\">\\</a>   y   x              rad         deg <br>\n        <span class=\"tt\">T{ &nbsp;0e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;0e&nbsp;&nbsp; R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a>   0 <br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;pi/4 R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a>  45 <br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;pi/2 R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a>  90 <br>\n        <span class=\"tt\">T{ -1e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; -3pi/4 R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> 135 <br>\n        <span class=\"tt\">T{ &nbsp;0e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;pi&nbsp;&nbsp; R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> 180 <br>\n        <span class=\"tt\">T{ -1e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;-pi/4 R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> 225 <br>\n        <span class=\"tt\">T{ -1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;-pi/2 R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> 270 <br>\n        <span class=\"tt\">T{ -1e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;-pi/4 R}T</span>&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> 315\n        </p><p>\n        TESTING Single UNIX 3 special values spec\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">ISO C / Single UNIX Specification Version 3:</span> <br>\n        <a href=\"../core/bs\">\\</a> &nbsp;&nbsp; <a href=\"http://www.unix.org/single_unix_specification/\">http://www.unix.org/single_unix_specification/</a> <br>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Select \"Topic\", then \"Math Interfaces\", then \"<code>atan2()</code>\":</span> <br>\n        <a href=\"../core/bs\">\\</a> &nbsp;&nbsp; <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atan2f.html\">http://www.opengroup.org/onlinepubs/009695399/</a> <br>\n        <a href=\"../core/bs\">\\</a> &nbsp;&nbsp; <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atan2f.html\">functions/atan2f.html</a>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is &lt; 0, +/-pi shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;0e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi R}T</span> <br>\n        <span class=\"tt\">T{ -0e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; -pi R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is &gt; 0, +/-0 shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;0e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;0e R}T</span><br>\n        <span class=\"tt\">T{ -0e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; -0e R}T</span><br>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is &lt; 0 and <em>x</em> is +/-0, -pi/2 shall be returned.</span> <br>\n        <span class=\"tt\">T{ -1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span> <br>\n        <span class=\"tt\">T{ -1e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span> <br>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is &gt; 0 and <em>x</em> is +/-0, pi/2 shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; pi/2 R}T</span> <br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; pi/2 R}T</span> <br>\n        TESTING Single UNIX 3 special values optional spec\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Optional ISO C / single UNIX specs:</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If either <em>x</em> or <em>y</em> is NaN, a NaN shall be returned.</span> <br>\n        <span class=\"tt\">T{ NaN&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; NaN R}T</span><br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;NaN&nbsp;<strong>FATAN2</strong> -&gt; NaN R}T</span><br>\n        <span class=\"tt\">T{ NaN&nbsp;NaN&nbsp;<strong>FATAN2</strong> -&gt; NaN R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is -0, +/-pi shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;0e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi R}T</span><br>\n        <span class=\"tt\">T{ -0e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; -pi R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is +0, +/-0 shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;0e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; +0e R}T</span><br>\n        <span class=\"tt\">T{ -0e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; -0e R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">For finite values of +/-<em>y</em> &gt; 0, if <em>x</em> is -Inf, +/-pi shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi R}T</span><br>\n        <span class=\"tt\">T{ -1e&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; -pi R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">For finite values of +/-<em>y</em> &gt; 0, if <em>x</em> is +Inf, +/-0 shall be returned.</span> <br>\n        <span class=\"tt\">T{ &nbsp;1e&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; +0e R}T</span><br>\n        <span class=\"tt\">T{ -1e&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; -0e R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">For finite values of <em>x</em>, if <em>y</em> is +/-Inf, +/-pi/2 shall be returned.</span> <br>\n        <span class=\"tt\">T{ +Inf&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n        <span class=\"tt\">T{ +Inf&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n        <span class=\"tt\">T{ +Inf&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n        <span class=\"tt\">T{ +Inf&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n        <span class=\"tt\">T{ -Inf&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span><br>\n        <span class=\"tt\">T{ -Inf&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span><br>\n        <span class=\"tt\">T{ -Inf&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span><br>\n        <span class=\"tt\">T{ -Inf&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-Inf and <em>x</em> is -Inf, +/-3pi/4 shall be returned.</span> <br>\n        <span class=\"tt\">T{ +Inf&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;3pi/4 R}T</span><br>\n        <span class=\"tt\">T{ -Inf&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; -3pi/4 R}T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-Inf and <em>x</em> is +Inf, +/-pi/4 shall be returned.</span> <br>\n        <span class=\"tt\">T{ +Inf&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/4 R}T</span><br>\n        <span class=\"tt\">T{ -Inf&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; -pi/4 R}T</span>\n        </p><p>\n        verbose <a href=\"../core/Fetch\">@</a> <a href=\"../tools/BracketIF\">[IF]</a> <br>\n        &nbsp;&nbsp; <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotp\">.(</a> <span class=\"rm\">#ERRORS:</span> ) #errors <a href=\"../core/Fetch\">@</a> <a href=\"../core/d\">.</a> <a href=\"../core/CR\">CR</a> <br>\n        <a href=\"../tools/BracketTHEN\">[THEN]</a>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "FCONSTANT": {
                    "id": "float:FCONSTANT",
                    "number": "12.6.1.1492",
                    "name": "FCONSTANT",
                    "english": "f-constant",
                    "list": "FLOATING",
                    "basename": "FCONSTANT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- ) ( F: -- <em>r</em> ) or\n      ( -- <em>r</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- ) ( F: r -- ) or\n( r \"<spaces>name\" -- )",
                            "name Execution:": "( -- ) ( F: -- r ) or\n( -- r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Create a definition for <em>name</em> with the execution\n      semantics defined below.\n      </p><p>\n      <em>name</em> is referred to as an \"f-constant\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- ) ( F: -- <em>r</em> ) or\n      ( -- <em>r</em> )\n      <p>\n      Place <em>r</em> on the floating-point stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:float:FCONSTANT\">A.12.6.1.1492 FCONSTANT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1492 FCONSTANT -->\n      Typical use: <code>r</code> <strong>FCONSTANT</strong> <em>name</em>\n      \n      \n      "
                        }
                    }
                },
                "FCOS": {
                    "id": "float:FCOS",
                    "number": "12.6.2.1493",
                    "name": "FCOS",
                    "english": "f-cos",
                    "list": "FLOATING EXT",
                    "basename": "FCOS",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the cosine of the radian angle <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FCOSH": {
                    "id": "float:FCOSH",
                    "number": "12.6.2.1494",
                    "name": "FCOSH",
                    "english": "f-cosh",
                    "list": "FLOATING EXT",
                    "basename": "FCOSH",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the hyperbolic cosine of <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FDEPTH": {
                    "id": "float:FDEPTH",
                    "number": "12.6.1.1497",
                    "name": "FDEPTH",
                    "english": "f-depth",
                    "list": "FLOATING",
                    "basename": "FDEPTH",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>+n</em> )"
                        },
                        "plain": {
                            " ": "( -- +n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>+n</em> )\n      <p>\n      <em>+n</em> is the number of values contained on the\n      floating-point stack. If the system has an environmental\n      restriction of keeping the floating-point numbers on the\n      data stack, <em>+n</em> is the current number of possible\n      floating-point values contained on the data stack.\n      \n      </p>"
                        }
                    }
                },
                "FDROP": {
                    "id": "float:FDROP",
                    "number": "12.6.1.1500",
                    "name": "FDROP",
                    "english": "f-drop",
                    "list": "FLOATING",
                    "basename": "FDROP",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )"
                        },
                        "plain": {
                            " ": "( F: r -- ) or\n( r -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )\n      <p>\n      Remove <em>r</em> from the floating-point stack.\n      \n      </p>"
                        }
                    }
                },
                "FDUP": {
                    "id": "float:FDUP",
                    "number": "12.6.1.1510",
                    "name": "FDUP",
                    "english": "f-dupe",
                    "list": "FLOATING",
                    "basename": "FDUP",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r</em> -- <em>r r</em> ) or\n      ( <em>r</em> -- <em>r r</em> )"
                        },
                        "plain": {
                            " ": "( F: r -- r r ) or\n( r -- r r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r</em> -- <em>r r</em> ) or\n      ( <em>r</em> -- <em>r r</em> )\n      <p>\n      Duplicate <em>r</em>.\n      \n      </p>"
                        }
                    }
                },
                "FDiv": {
                    "id": "float:F/",
                    "number": "12.6.1.1430",
                    "name": "F/",
                    "english": "f-slash",
                    "list": "FLOATING",
                    "basename": "FDiv",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      Divide <em>r<sub>1</sub></em> by <em>r<sub>2</sub></em>, giving the quotient\n      <em>r<sub>3</sub></em>. An ambiguous condition exists if <em>r<sub>2</sub></em> is\n      zero, or the quotient lies outside \tof the range of a\n      floating-point number.\n      \n      </p>"
                        }
                    }
                },
                "FEXP": {
                    "id": "float:FEXP",
                    "number": "12.6.2.1515",
                    "name": "FEXP",
                    "english": "f-e-x-p",
                    "list": "FLOATING EXT",
                    "basename": "FEXP",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      Raise <em>e</em> to the power <em>r<sub>1</sub></em>, giving <em>r<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FEXPMOne": {
                    "id": "float:FEXPM1",
                    "number": "12.6.2.1516",
                    "name": "FEXPM1",
                    "english": "f-e-x-p-m-one",
                    "list": "FLOATING EXT",
                    "basename": "FEXPMOne",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      Raise <em>e</em> to the power <em>r<sub>1</sub></em> and subtract one, giving <em>r<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:FEXPM1\">A.12.6.2.1516 FEXPM1</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1516 FEXPM1 -->\n      This function allows accurate computation when its arguments\n      are close to zero, and provides a useful base for the standard\n      exponential functions. Hyperbolic functions such as\n      <span class=\"sf\">sinh(<em>x</em>)</span> can be efficiently and accurately\n      implemented by using <strong>FEXPM1</strong>; accuracy is lost in this\n      function for small values of <em>x</em> if the word <a href=\"../float/FEXP\">FEXP</a> is\n      used.\n      <p>\n      An important application of this word is in finance; say a loan\n      is repaid at 15% per year; what is the daily rate? On a computer\n      with single-precision (six decimal digit) accuracy:\n      </p><p>\n      </p><ol style=\"list-style-type: decimal\">\n      <li> Using <a href=\"../float/FLN\">FLN</a> and <a href=\"../float/FEXP\">FEXP</a>:\n      <a href=\"../float/FLN\">FLN</a> of 1.15 = 0.139762, <br>\n      divide by 365 = 3.82910E-4, <br>\n      form the exponent using <a href=\"../float/FEXP\">FEXP</a> = 1.00038, and <br>\n      subtract one (1) and convert to percentage = 0.038%.\n      </li>\n</ol>\n      Thus we only have two-digit accuracy.\n      <ol style=\"list-style-type: decimal\">\n      <li> Using <a href=\"../float/FLNPOne\">FLNP1</a> and <strong>FEXPM1</strong>:\n      <a href=\"../float/FLNPOne\">FLNP1</a> of 0.15 = 0.139762, (this is the same value\n      as in the first example, although with the argument closer\n      to zero it may not be so) <br>\n      divide by 365 = 3.82910E-4, <br>\n      form the exponent and subtract one (1) using\n      <strong>FEXPM1</strong> = 3.82983E-4, and <br>\n      convert to percentage = 0.0382983%.\n      </li>\n</ol>\n      This calculation method allows the hyperbolic functions to be\n      computed with six-digit accuracy. For example, <span class=\"sf\">sinh</span>\n      can be defined as:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <a href=\"../float/FSINH\">FSINH</a>  <a href=\"../core/p\">(</a> r1 -- r2 ) <br>\n          &nbsp;&nbsp; <strong>FEXPM1</strong>  <a href=\"../float/FDUP\">FDUP</a> \n          <a href=\"../float/FDUP\">FDUP</a> 1.0E0 <a href=\"../float/FPlus\">F+</a>  <a href=\"../float/FDiv\">F/</a>  <a href=\"../float/FPlus\">F+</a> \n          2.0E0 <a href=\"../float/FDiv\">F/</a>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n      \n      \n      "
                        }
                    }
                },
                "FEd": {
                    "id": "float:FEd",
                    "number": "12.6.2.1513",
                    "name": "FE.",
                    "english": "f-e-dot",
                    "list": "FLOATING EXT",
                    "basename": "FEd",
                    "stackEffect": {
                        "html": {
                            " ": "( -- ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )"
                        },
                        "plain": {
                            " ": "( -- ) ( F: r -- ) or\n( r -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )\n      <p>\n      Display, with a trailing space, the top number on the\n      floating-point stack using engineering notation, where the\n      significand is greater than or equal to 1.0 and less than\n      1000.0 and the decimal exponent is a multiple of three.\n      </p><p>\n      An ambiguous condition exists if the value of <a href=\"../core/BASE\">BASE</a>\n      is not (decimal) ten or if the character string representation\n      exceeds the size of the pictured numeric output string buffer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/BASE\">6.1.0750 BASE</a>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>,\n      <a href=\"../float/REPRESENT\">12.6.1.2143 REPRESENT</a>.\n      \n      "
                        }
                    }
                },
                "FFIELDColon": {
                    "id": "float:FFIELD:",
                    "number": "12.6.2.1517",
                    "name": "FFIELD:",
                    "english": "f-field-colon",
                    "list": "FLOATING EXT",
                    "basename": "FFIELDColon",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )",
                            "name Execution:": "( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 \"<spaces>name\" -- n2 )",
                            "name Execution:": "( addr1 -- addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. <em>Offset</em> is the first float aligned value greater\n      than or equal to <em>n<sub>1</sub></em>.  <em>n<sub>2</sub> = offset + 1</em> float.\n      </p><p>\n      Create a definition for <em>name</em> with the execution semantics\n      given below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )\n      <p>\n      Add the <em>offset</em> calculated during the compile-time action to\n      <em>addr<sub>1</sub></em> giving the address <em>addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>, <br>\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>,\n      <a href=\"../rationale#rat:facility:FIELD:\">A.10.6.2.1518 FIELD:</a>.\n      \n      "
                        }
                    }
                },
                "FFetch": {
                    "id": "float:F@",
                    "number": "12.6.1.1472",
                    "name": "F@",
                    "english": "f-fetch",
                    "list": "FLOATING",
                    "basename": "FFetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>f-addr</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>f-addr</em> -- <em>r</em> )"
                        },
                        "plain": {
                            " ": "( f-addr -- ) ( F: -- r ) or\n( f-addr -- r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>f-addr</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>f-addr</em> -- <em>r</em> )\n      <p>\n      <em>r</em> is the value stored at <em>f-addr</em>.\n      \n      </p>"
                        }
                    }
                },
                "FLITERAL": {
                    "id": "float:FLITERAL",
                    "number": "12.6.1.1552",
                    "name": "FLITERAL",
                    "english": "f-literal",
                    "list": "FLOATING",
                    "basename": "FLITERAL",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )",
                            "Run-time:": "( F: -- <em>r</em> ) or\n      ( -- <em>r</em> )"
                        },
                        "plain": {
                            "Compilation:": "( F: r -- ) or\n( r -- )",
                            "Run-time:": "( F: -- r ) or\n( -- r )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( F: -- <em>r</em> ) or\n      ( -- <em>r</em> )\n      <p>\n      Place <em>r</em> on the floating-point stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:FLITERAL\">A.12.6.1.1552 FLITERAL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1552 FLITERAL -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/Bracket\">[</a> ... <a href=\"../core/p\">(</a> r ) <a href=\"../right-bracket\">]</a>\n      <strong>FLITERAL</strong> ...\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "FLN": {
                    "id": "float:FLN",
                    "number": "12.6.2.1553",
                    "name": "FLN",
                    "english": "f-l-n",
                    "list": "FLOATING EXT",
                    "basename": "FLN",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the natural logarithm of <em>r<sub>1</sub></em>. An ambiguous\n      condition exists if <em>r<sub>1</sub></em> is less than or equal to zero.\n      \n      </p>"
                        }
                    }
                },
                "FLNPOne": {
                    "id": "float:FLNP1",
                    "number": "12.6.2.1554",
                    "name": "FLNP1",
                    "english": "f-l-n-p-one",
                    "list": "FLOATING EXT",
                    "basename": "FLNPOne",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the natural logarithm of the quantity <em>r<sub>1</sub></em>\n      plus one. An ambiguous condition exists if <em>r<sub>1</sub></em> is less\n      than or equal to negative one.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:FEXPM1\">A.12.6.2.1516 FEXPM1</a>.\n      \n      \n      "
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1554 FLNP1 -->\n      This function allows accurate compilation when its arguments\n      are close to zero, and provides a useful base for the standard\n      logarithmic functions. For example, <a href=\"../float/FLN\">FLN</a> can be\n      implemented as:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <a href=\"../float/FLN\">FLN</a>  \n          1.0E0 <a href=\"../float/FMinus\">F-</a>   <strong>FLNP1</strong>\n          <a href=\"../core/Semi\">;</a>\n          \n          </div>\n        </div>\n        \n      "
                        }
                    }
                },
                "FLOATPlus": {
                    "id": "float:FLOAT+",
                    "number": "12.6.1.1555",
                    "name": "FLOAT+",
                    "english": "float-plus",
                    "list": "FLOATING",
                    "basename": "FLOATPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>f-addr<sub>1</sub></em> -- <em>f-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( f-addr1 -- f-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>f-addr<sub>1</sub></em> -- <em>f-addr<sub>2</sub></em> )\n      <p>\n      Add the size in address units of a floating-point number to\n      <em>f-addr<sub>1</sub></em>, giving <em>f-addr<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FLOATS": {
                    "id": "float:FLOATS",
                    "number": "12.6.1.1556",
                    "name": "FLOATS",
                    "english": " ",
                    "list": "FLOATING",
                    "basename": "FLOATS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 -- n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )\n      <p>\n      <em>n<sub>2</sub></em> is the size in address units of <em>n<sub>1</sub></em> floating-point\n      numbers.\n      \n      </p>"
                        }
                    }
                },
                "FLOG": {
                    "id": "float:FLOG",
                    "number": "12.6.2.1557",
                    "name": "FLOG",
                    "english": "f-log",
                    "list": "FLOATING EXT",
                    "basename": "FLOG",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the base-ten logarithm of <em>r<sub>1</sub></em>. An ambiguous\n      condition exists if <em>r<sub>1</sub></em> is less than or equal to zero.\n      \n      </p>"
                        }
                    }
                },
                "FLOOR": {
                    "id": "float:FLOOR",
                    "number": "12.6.1.1558",
                    "name": "FLOOR",
                    "english": " ",
                    "list": "FLOATING",
                    "basename": "FLOOR",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      Round <em>r<sub>1</sub></em> to an integral value using the \"round toward\n      negative infinity\" rule, giving <em>r<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>, <a href=\"../float/FROUND\">12.6.1.1612 FROUND</a>,\n      <a href=\"../float/FTRUNC\">12.6.2.1627 FTRUNC</a>.\n      \n      "
                        }
                    }
                },
                "FMAX": {
                    "id": "float:FMAX",
                    "number": "12.6.1.1562",
                    "name": "FMAX",
                    "english": "f-max",
                    "list": "FLOATING",
                    "basename": "FMAX",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      <em>r<sub>3</sub></em> is the greater of <em>r<sub>1</sub></em> and <em>r<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FMIN": {
                    "id": "float:FMIN",
                    "number": "12.6.1.1565",
                    "name": "FMIN",
                    "english": "f-min",
                    "list": "FLOATING",
                    "basename": "FMIN",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      <em>r<sub>3</sub></em> is the lesser of <em>r<sub>1</sub></em> and <em>r<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FMinus": {
                    "id": "float:F-",
                    "number": "12.6.1.1425",
                    "name": "F-",
                    "english": "f-minus",
                    "list": "FLOATING",
                    "basename": "FMinus",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      Subtract <em>r<sub>2</sub></em> from <em>r<sub>1</sub></em>, giving <em>r<sub>3</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FNEGATE": {
                    "id": "float:FNEGATE",
                    "number": "12.6.1.1567",
                    "name": "FNEGATE",
                    "english": "f-negate",
                    "list": "FLOATING",
                    "basename": "FNEGATE",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the negation of <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FOVER": {
                    "id": "float:FOVER",
                    "number": "12.6.1.1600",
                    "name": "FOVER",
                    "english": "f-over",
                    "list": "FLOATING",
                    "basename": "FOVER",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>1</sub> r<sub>2</sub> r<sub>1</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>1</sub> r<sub>2</sub> r<sub>1</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r1 r2 r1 ) or\n( r1 r2 -- r1 r2 r1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>1</sub> r<sub>2</sub> r<sub>1</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>1</sub> r<sub>2</sub> r<sub>1</sub></em> )\n      <p>\n      Place a copy of <em>r<sub>1</sub></em> on top of the floating-point stack.\n      \n      </p>"
                        }
                    }
                },
                "FPlus": {
                    "id": "float:F+",
                    "number": "12.6.1.1420",
                    "name": "F+",
                    "english": "f-plus",
                    "list": "FLOATING",
                    "basename": "FPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      Add <em>r<sub>1</sub></em> to <em>r<sub>2</sub></em> giving the sum <em>r<sub>3</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FROT": {
                    "id": "float:FROT",
                    "number": "12.6.1.1610",
                    "name": "FROT",
                    "english": "f-rote",
                    "list": "FLOATING",
                    "basename": "FROT",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub> r<sub>1</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub> r<sub>1</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 r3 -- r2 r3 r1 ) or\n( r1 r2 r3 -- r2 r3 r1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub> r<sub>1</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub> r<sub>1</sub></em> )\n      <p>\n      Rotate the top three floating-point stack entries.\n      \n      </p>"
                        }
                    }
                },
                "FROUND": {
                    "id": "float:FROUND",
                    "number": "12.6.1.1612",
                    "name": "FROUND",
                    "english": "f-round",
                    "list": "FLOATING",
                    "basename": "FROUND",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      Round <em>r<sub>1</sub></em> to an integral value using the \"round to nearest\"\n      rule, giving <em>r<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>,\n      <a href=\"../float/FLOOR\">12.6.1.1558 FLOOR</a>, <a href=\"../float/FTRUNC\">12.6.2.1627 FTRUNC</a>.\n      \n      "
                        }
                    }
                },
                "FSIN": {
                    "id": "float:FSIN",
                    "number": "12.6.2.1614",
                    "name": "FSIN",
                    "english": "f-sine",
                    "list": "FLOATING EXT",
                    "basename": "FSIN",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the sine of the radian angle <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FSINCOS": {
                    "id": "float:FSINCOS",
                    "number": "12.6.2.1616",
                    "name": "FSINCOS",
                    "english": "f-sine-cos",
                    "list": "FLOATING EXT",
                    "basename": "FSINCOS",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 r3 ) or\n( r1 -- r2 r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub> r<sub>3</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the sine of the radian angle <em>r<sub>1</sub></em>. <em>r<sub>3</sub></em>\n      is the cosine of the radian angle <em>r<sub>1</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:FATAN2\">A.12.6.2.1489 FATAN2</a>.\n      \n      "
                        }
                    }
                },
                "FSINH": {
                    "id": "float:FSINH",
                    "number": "12.6.2.1617",
                    "name": "FSINH",
                    "english": "f-cinch",
                    "list": "FLOATING EXT",
                    "basename": "FSINH",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the hyperbolic sine of <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FSQRT": {
                    "id": "float:FSQRT",
                    "number": "12.6.2.1618",
                    "name": "FSQRT",
                    "english": "f-square-root",
                    "list": "FLOATING EXT",
                    "basename": "FSQRT",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the square root of <em>r<sub>1</sub></em>. An ambiguous\n      condition exists if <em>r<sub>1</sub></em> is less than zero.\n      \n      </p>"
                        }
                    }
                },
                "FSWAP": {
                    "id": "float:FSWAP",
                    "number": "12.6.1.1620",
                    "name": "FSWAP",
                    "english": "f-swap",
                    "list": "FLOATING",
                    "basename": "FSWAP",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>2</sub> r<sub>1</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>2</sub> r<sub>1</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r2 r1 ) or\n( r1 r2 -- r2 r1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>2</sub> r<sub>1</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>2</sub> r<sub>1</sub></em> )\n      <p>\n      Exchange the top two floating-point stack items.\n      \n      </p>"
                        }
                    }
                },
                "FSd": {
                    "id": "float:FSd",
                    "number": "12.6.2.1613",
                    "name": "FS.",
                    "english": "f-s-dot",
                    "list": "FLOATING EXT",
                    "basename": "FSd",
                    "stackEffect": {
                        "html": {
                            " ": "( -- ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )"
                        },
                        "plain": {
                            " ": "( -- ) ( F: r -- ) or\n( r -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )\n      <p>\n      Display, with a trailing space, the top number on the\n      floating-point stack in scientific notation:\n      &lt;<em>significand</em>&gt;&lt;<em>exponent</em>&gt;\n      where:\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td class=\"r\">&lt;<em>significand</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>[<strong>-</strong>]&lt;<em>digit</em>&gt;<strong>.</strong>&lt;<em>digits0</em>&gt; </td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>exponent</em>&gt;\t  </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td><strong>E</strong>[<strong>-</strong>]&lt;<em>digits</em>&gt;\n        </td></tr></tbody></table>\n        \n        </div>\n      <p>\n      An ambiguous condition exists if the value of <a href=\"../core/BASE\">BASE</a>\n      is not (decimal) ten or if the character string representation\n      exceeds the size of the pictured numeric output string buffer.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/BASE\">6.1.0750 BASE</a>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>,\n      <a href=\"../float/REPRESENT\">12.6.1.2143 REPRESENT</a>.\n      \n      "
                        }
                    }
                },
                "FStore": {
                    "id": "float:F!",
                    "number": "12.6.1.1400",
                    "name": "F!",
                    "english": "f-store",
                    "list": "FLOATING",
                    "basename": "FStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>f-addr</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r f-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( f-addr -- ) ( F: r -- ) or\n( r f-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>f-addr</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r f-addr</em> -- )\n      <p>\n      Store <em>r</em> at <em>f-addr</em>.\n      \n      </p>"
                        }
                    }
                },
                "FTAN": {
                    "id": "float:FTAN",
                    "number": "12.6.2.1625",
                    "name": "FTAN",
                    "english": "f-tan",
                    "list": "FLOATING EXT",
                    "basename": "FTAN",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the tangent of the radian angle <em>r<sub>1</sub></em>. An\n      ambiguous condition exists if <em><span style=\"font-style: normal\"></span>(r<sub>1</sub>)</em> is zero.\n      \n      </p>"
                        }
                    }
                },
                "FTANH": {
                    "id": "float:FTANH",
                    "number": "12.6.2.1626",
                    "name": "FTANH",
                    "english": "f-tan-h",
                    "list": "FLOATING EXT",
                    "basename": "FTANH",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or\n( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or\n      ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      <em>r<sub>2</sub></em> is the hyperbolic tangent of <em>r<sub>1</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FTRUNC": {
                    "id": "float:FTRUNC",
                    "number": "12.6.2.1627",
                    "name": "FTRUNC",
                    "english": "f-trunc",
                    "list": "FLOATING EXT",
                    "basename": "FTRUNC",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 -- r2 ) or ( r1 -- r2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> ) or ( <em>r<sub>1</sub></em> -- <em>r<sub>2</sub></em> )\n      <p>\n      Round <em>r<sub>1</sub></em> to an integral value using the \"round\n      towards zero\" rule, giving <em>r<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>, <a href=\"../float/FROUND\">12.6.1.1612 FROUND</a>, <a href=\"../float/FLOOR\">12.6.1.1558 FLOOR</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>FTRUNC</strong>   <a href=\"../core/p\">(</a> r1 -- r2 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../float/FDUP\">FDUP</a> <a href=\"../float/FZeroEqual\">F0=</a> <a href=\"../core/ZeroEqual\">0=</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/IF\">IF</a>\t&nbsp;&nbsp; <a href=\"../float/FDUP\">FDUP</a> <a href=\"../float/FZeroless\">F0&lt;</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/IF\">IF</a>\t&nbsp;&nbsp; <a href=\"../float/FNEGATE\">FNEGATE</a> <a href=\"../float/FLOOR\">FLOOR</a> <a href=\"../float/FNEGATE\">FNEGATE</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a>&nbsp;&nbsp; <a href=\"../float/FLOOR\">FLOOR</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a>&nbsp;&nbsp; <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <code>SET-EXACT</code>\n      <p>\n      <span class=\"tt\">T{ -0E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"../float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ -1E-9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"../float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ -0.9E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"../float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ -1E&nbsp;&nbsp;1E-5&nbsp;F+&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"../float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ 0E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;0E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ 1E-9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;0E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ -1E&nbsp;-1E-5&nbsp;F+&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -1E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ 3.14E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;3E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ 3.99E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;3E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ 4E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;4E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ -4E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -4E&nbsp;&nbsp; R}T</span> <br>\n      <span class=\"tt\">T{ -4.1E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -4E&nbsp;&nbsp; R}T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "FTimes": {
                    "id": "float:F*",
                    "number": "12.6.1.1410",
                    "name": "F*",
                    "english": "f-star",
                    "list": "FLOATING",
                    "basename": "FTimes",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      Multiply <em>r<sub>1</sub></em> by <em>r<sub>2</sub></em> giving <em>r<sub>3</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FTimesTimes": {
                    "id": "float:F**",
                    "number": "12.6.2.1415",
                    "name": "F**",
                    "english": "f-star-star",
                    "list": "FLOATING EXT",
                    "basename": "FTimesTimes",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )"
                        },
                        "plain": {
                            " ": "( F: r1 r2 -- r3 ) or\n( r1 r2 -- r3 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>r<sub>3</sub></em> )\n      <p>\n      Raise <em>r<sub>1</sub></em> to the power <em>r<sub>2</sub></em>, giving the product\n      <em>r<sub>3</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "FVALUE": {
                    "id": "float:FVALUE",
                    "number": "12.6.2.1628",
                    "name": "FVALUE",
                    "english": "f-value",
                    "list": "FLOATING EXT",
                    "basename": "FVALUE",
                    "stackEffect": {
                        "html": {
                            " ": "( F: <em>r</em> -- ) ( <em>\"&lt;spaces&gt;name\"</em> -- ) or\n      ( <em>r \"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( F: -- <em>r</em> ) or ( -- <em>r</em> )",
                            "TO name Run-time:": "( F: <em>r</em> -- ) or ( <em>r</em> -- )"
                        },
                        "plain": {
                            " ": "( F: r -- ) ( \"<spaces>name\" -- ) or\n( r \"<spaces>name\" -- )",
                            "name Execution:": "( F: -- r ) or ( -- r )",
                            "TO name Run-time:": "( F: r -- ) or ( r -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( F: <em>r</em> -- ) ( <em>\"&lt;spaces&gt;name\"</em> -- ) or\n      ( <em>r \"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters.  Parse <em>name</em> delimited by a\n      space.  Create a definition for <em>name</em> with the execution\n      semantics defined below, with an initial value equal to <em>r</em>.\n      </p><p>\n      <em>name</em> is referred to as a \"f-value\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( F: -- <em>r</em> ) or ( -- <em>r</em> )\n      <p>\n      Place <em>r</em> on the floating point stack.  The value of\n      <em>r</em> is that given when <em>name</em> was created, until the\n      phrase \"<em>r</em> <a href=\"../core/TO\">TO</a> <em>name</em>\" is executed, causing\n      a new value of <em>r</em> to be assigned to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "TO name Run-time:": {
                            "name": "TO name Run-time:",
                            "html": "\n\n\n      ( F: <em>r</em> -- ) or ( <em>r</em> -- )\n      <p>\n      Assign the value <em>r</em> to <em>name</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>, <a href=\"../core/TO\">6.2.2295 TO</a>\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n            <div class=\"rm\">\nThe implementation of <strong>FVALUE</strong> requires detailed\n        knowledge of the host implementation of <a href=\"../core/VALUE\">VALUE</a> and\n        <a href=\"../core/TO\">TO</a>.\n        <p>\n                </p><div class=\"quote\">\n          <div class=\"tt\">\n<a href=\"../core/VARIABLE\">VARIABLE</a> %var <br>\n            <a href=\"../core/Colon\">:</a> <a href=\"../core/TO\">TO</a> 1 %var <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n            <p>\n            <a href=\"../core/Colon\">:</a> <strong>FVALUE</strong> <a href=\"../core/p\">(</a> F: r -- ) <a href=\"../core/p\">(</a> \"&lt;spaces&gt;name\" -- ) <br>\n            &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> F, <br>\n            &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> %var <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a> <a href=\"../float/FStore\">F!</a> <a href=\"../core/ELSE\">ELSE</a> <a href=\"../float/FFetch\">F@</a> <a href=\"../core/THEN\">THEN</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 %var <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n            </p><p>\n            <a href=\"../core/Colon\">:</a> <a href=\"../core/VALUE\">VALUE</a> <a href=\"../core/p\">(</a> x \"&lt;spaces&gt;name\" -- ) <br>\n            &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/Comma\">,</a> <br>\n            &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> %var <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a>  <a href=\"../core/Store\">!</a> <a href=\"../core/ELSE\">ELSE</a>  <a href=\"../core/Fetch\">@</a> <a href=\"../core/THEN\">THEN</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 %var <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n            \n            </p></div>\n          </div>\n          \n        </div>\n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ 0e0&nbsp;<strong>FVALUE</strong>&nbsp;Tval -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ Tval -&gt; 0e0 R}T</span> <br>\n        <span class=\"tt\">T{ 1e0&nbsp;<a href=\"../core/TO\">TO</a>&nbsp;Tval -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ Tval -&gt; 1e0 R}T</span> <br>\n        \n        <a href=\"../core/Colon\">:</a> setTval Tval <a href=\"../float/FSWAP\">FSWAP</a> <a href=\"../core/TO\">TO</a> Tval <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ 2e0&nbsp;setTval&nbsp;Tval -&gt; 1e0&nbsp;2e0 RR}T</span> <br>\n        \n        <span class=\"tt\">T{ 5e0&nbsp;<a href=\"../core/TO\">TO</a>&nbsp;Tval -&gt;  }T</span> <br>\n        <a href=\"../core/Colon\">:</a> [execute] <a href=\"../core/EXECUTE\">EXECUTE</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Tick\">'</a>&nbsp;Tval&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;[execute]&nbsp;<a href=\"../core/Bracket\">[</a> -&gt; 2e0 R}T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "FVARIABLE": {
                    "id": "float:FVARIABLE",
                    "number": "12.6.1.1630",
                    "name": "FVARIABLE",
                    "english": "f-variable",
                    "list": "FLOATING",
                    "basename": "FVARIABLE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( -- <em>f-addr</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( -- f-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Create a definition for <em>name</em> with the execution\n      semantics defined below. Reserve <code>1</code> <a href=\"../float/FLOATS\">FLOATS</a>\n      address units of data space at a float-aligned address.\n      </p><p>\n      <em>name</em> is referred to as an \"f-variable\".\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>f-addr</em> )\n      <p>\n      <em>f-addr</em> is the address of the data space reserved by\n      <strong>FVARIABLE</strong> when it created <em>name</em>. A program is\n      responsible for initializing the contents of the reserved\n      space.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:float:FVARIABLE\">A.12.6.1.1630 FVARIABLE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1630 FVARIABLE -->\n      Typical use:\n      <strong>FVARIABLE</strong> <em>name</em>\n      \n      \n      "
                        }
                    }
                },
                "FZeroEqual": {
                    "id": "float:F0=",
                    "number": "12.6.1.1450",
                    "name": "F0=",
                    "english": "f-zero-equals",
                    "list": "FLOATING",
                    "basename": "FZeroEqual",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag ) ( F: r -- ) or\n( r -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>r</em> is equal to\n      zero.\n      \n      </p>"
                        }
                    }
                },
                "FZeroless": {
                    "id": "float:F0less",
                    "number": "12.6.1.1440",
                    "name": "F0<",
                    "english": "f-zero-less-than",
                    "list": "FLOATING",
                    "basename": "FZeroless",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag ) ( F: r -- ) or\n( r -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>r</em> is less than\n      zero.\n      \n      </p>"
                        }
                    }
                },
                "Fd": {
                    "id": "float:Fd",
                    "number": "12.6.2.1427",
                    "name": "F.",
                    "english": "f-dot",
                    "list": "FLOATING EXT",
                    "basename": "Fd",
                    "stackEffect": {
                        "html": {
                            " ": "( -- ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )"
                        },
                        "plain": {
                            " ": "( -- ) ( F: r -- ) or\n( r -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- )\n      <p>\n      Display, with a trailing space, the top number on the\n      floating-point stack using fixed-point notation:\n            </p><div class=\"quote\">\n\n        [<strong>-</strong>] &lt;<em>digits</em>&gt;<strong>.</strong>&lt;<em>digits0</em>&gt;\n        \n        </div>\n      An ambiguous condition exists if the value of <a href=\"../core/BASE\">BASE</a>\n      is not (decimal) ten or if the character string representation\n      exceeds the size of the pictured numeric output string buffer.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../float/toFLOAT\">12.6.1.0558 &gt;FLOAT</a>,\n      <a href=\"../rationale#rat:float:Fd\">A.12.6.2.1427 F.</a>\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1427 F. -->\n      For example, <code>1E3</code> <strong>F.</strong> displays <code>1000.</code>\n      \n      \n      "
                        }
                    }
                },
                "Fless": {
                    "id": "float:Fless",
                    "number": "12.6.1.1460",
                    "name": "F<",
                    "english": "f-less-than",
                    "list": "FLOATING",
                    "basename": "Fless",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> ) ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag ) ( F: r1 r2 -- ) or\n( r1 r2 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> ) ( F: <em>r<sub>1</sub> r<sub>2</sub></em> -- ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub></em> -- <em>flag</em> )\n      <p>\n      <em>flag</em> is true if and only if <em>r<sub>1</sub></em> is less than\n      <em>r<sub>2</sub></em>.\n      \n      </p>"
                        }
                    }
                },
                "Ftilde": {
                    "id": "float:Ftilde",
                    "number": "12.6.2.1640",
                    "name": "F~",
                    "english": "f-proximate",
                    "list": "FLOATING EXT",
                    "basename": "Ftilde",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> ) ( F: <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag ) ( F: r1 r2 r3 -- ) or\n( r1 r2 r3 -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> ) ( F: <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- ) or\n      ( <em>r<sub>1</sub> r<sub>2</sub> r<sub>3</sub></em> -- <em>flag</em> )\n      <p>\n      If <em>r<sub>3</sub></em> is positive, <em>flag</em> is true if the absolute\n      value of (<em>r<sub>1</sub></em> minus <em>r<sub>2</sub></em>) is less than <em>r<sub>3</sub></em>.\n      </p><p>\n      If <em>r<sub>3</sub></em> is zero, <em>flag</em> is true if the\n      implementation-dependent encoding of <em>r<sub>1</sub></em> and <em>r<sub>2</sub></em>\n      are exactly identical (positive and negative zero are unequal if\n      they have distinct encodings).\n      </p><p>\n      If <em>r<sub>3</sub></em> is negative, <em>flag</em> is true if the absolute value\n      of (<em>r<sub>1</sub></em> minus <em>r<sub>2</sub></em>) is less than the absolute value of\n      <em>r<sub>3</sub></em> times the sum of the absolute values of <em>r<sub>1</sub></em> and\n      <em>r<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:Ftilde\">A.12.6.2.1640 F~</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.1640 F\\tilde -->\n      This provides the three types of \"floating point equality\"\n      in common use — \"close\" in absolute terms, exact equality\n      as represented, and \"relatively close\".\n      \n      \n      "
                        }
                    }
                },
                "FtoD": {
                    "id": "float:FtoD",
                    "number": "12.6.1.1470",
                    "name": "F>D",
                    "english": "f-to-d",
                    "list": "FLOATING",
                    "basename": "FtoD",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>d</em> ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- <em>d</em> )"
                        },
                        "plain": {
                            " ": "( -- d ) ( F: r -- ) or\n( r -- d )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>d</em> ) ( F: <em>r</em> -- ) or\n      ( <em>r</em> -- <em>d</em> )\n      <p>\n      <em>d</em> is the double-cell signed-integer equivalent of the\n      integer portion of <em>r</em>. The fractional portion of <em>r</em>\n      is discarded. An ambiguous condition exists if the integer portion\n      of <em>r</em> cannot be represented as a double-cell\n      signed integer.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n Rounding the floating-point value prior to calling <strong>F&gt;D</strong>\n      is advised, because <strong>F&gt;D</strong> rounds towards zero.\n      \n      "
                        }
                    }
                },
                "FtoS": {
                    "id": "float:FtoS",
                    "number": "12.6.2.1471",
                    "name": "F>S",
                    "english": "F to S",
                    "list": "FLOATING EXT",
                    "basename": "FtoS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>n</em> ) ( F: <em>r</em> -- ) or ( <em>r</em> -- <em>n</em> )"
                        },
                        "plain": {
                            " ": "( -- n ) ( F: r -- ) or ( r -- n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>n</em> ) ( F: <em>r</em> -- ) or ( <em>r</em> -- <em>n</em> )\n      <p>\n      <em>n</em> is the single-cell signed-integer equivalent of the\n      integer portion of <em>r</em>.  The fractional portion of\n      <em>r</em> is discarded.  An ambiguous condition exists if\n      the integer portion of <em>r</em> cannot be represented as a\n      single-cell signed integer.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n Rounding the floating-point value prior to calling <strong>F&gt;S</strong> is\n      advised, because <strong>F&gt;S</strong> rounds towards zero.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../float/StoF\">12.6.2.2175 S&gt;F</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>F&gt;S</strong> <a href=\"../core/p\">(</a> r -- n ) <br>\n      &nbsp;&nbsp; <a href=\"../float/FtoD\">F&gt;D</a> <a href=\"../double/DtoS\">D&gt;S</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "PRECISION": {
                    "id": "float:PRECISION",
                    "number": "12.6.2.2035",
                    "name": "PRECISION",
                    "english": " ",
                    "list": "FLOATING EXT",
                    "basename": "PRECISION",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>u</em> )\n      <p>\n      Return the number of significant digits currently used by\n      <a href=\"../float/Fd\">F.</a>, <a href=\"../float/FEd\">FE.</a>, or <a href=\"../float/FSd\">FS.</a> as <em>u</em>.\n      \n      </p>"
                        }
                    }
                },
                "REPRESENT": {
                    "id": "float:REPRESENT",
                    "number": "12.6.1.2143",
                    "name": "REPRESENT",
                    "english": " ",
                    "list": "FLOATING",
                    "basename": "REPRESENT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- <em>n flag<sub>1</sub> flag<sub>2</sub></em> ) ( F: <em>r</em> -- ) or\n      ( <em>r c-addr u</em> -- <em>n flag<sub>1</sub> flag<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( c-addr u -- n flag1 flag2 ) ( F: r -- ) or\n( r c-addr u -- n flag1 flag2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- <em>n flag<sub>1</sub> flag<sub>2</sub></em> ) ( F: <em>r</em> -- ) or\n      ( <em>r c-addr u</em> -- <em>n flag<sub>1</sub> flag<sub>2</sub></em> )\n      <p>\n      At <em>c-addr</em>, place the character-string external\n      representation of the significand of the floating-point number\n      <em>r</em>. Return the decimal-base exponent as <em>n</em>, the sign as\n      <em>flag<sub>1</sub></em> and \"valid result\" as <em>flag<sub>2</sub></em>.\n      The character string shall consist of the <em>u</em> most significant\n      digits of the significand represented as a decimal fraction with\n      the implied decimal point to the left of the first digit, and\n      the first digit zero only if all digits are zero. The significand\n      is rounded to <em>u</em> digits following the \"round to nearest\" rule;\n      <em>n</em> is adjusted, if necessary, to correspond to the rounded\n      magnitude of the significand. If <em>flag<sub>2</sub></em> is <em>true</em>\n      then <em>r</em> was in the implementation-defined range of floating-point\n      numbers. If <em>flag<sub>1</sub></em> is <em>true</em> then <em>r</em> is negative.\n      </p><p>\n      An ambiguous condition exists if the value of <a href=\"../core/BASE\">BASE</a>\n      is not decimal ten.\n      </p><p>\n      When <em>flag<sub>2</sub></em> is <em>false</em>, <em>n</em> and <em>flag<sub>1</sub></em>\n      are implementation defined, as are the contents of <em>c-addr</em>.\n      Under these circumstances, the string at <em>c-addr</em> shall\n      consist of graphic characters.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:digits\">3.2.1.2 Digit conversion</a></strong>,\n      <a href=\"../core/BASE\">6.1.0750 BASE</a>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>, <br>\n      <a href=\"../rationale#rat:float:REPRESENT\">A.12.6.1.2143 REPRESENT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.2143 REPRESENT -->\n      This word provides a primitive for floating-point display.\n      Some floating-point formats, including those specified by\n      IEEE-754, allow representations of numbers outside of an\n      implementation-defined range. These include plus and minus\n      infinities, denormalized numbers, and others. In these cases\n      we expect that <strong>REPRESENT</strong> will usually be implemented\n      to return appropriate character strings, such as \"+infinity\"\n      or \"nan\", possibly truncated.\n      \n      \n      "
                        }
                    }
                },
                "SET-PRECISION": {
                    "id": "float:SET-PRECISION",
                    "number": "12.6.2.2200",
                    "name": "SET-PRECISION",
                    "english": " ",
                    "list": "FLOATING EXT",
                    "basename": "SET-PRECISION",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- )"
                        },
                        "plain": {
                            " ": "( u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- )\n      <p>\n      Set the number of significant digits currently used by <a href=\"../float/Fd\">F.</a>,\n      <a href=\"../float/FEd\">FE.</a>, or <a href=\"../float/FSd\">FS.</a> to <em>u</em>.\n      \n      </p>"
                        }
                    }
                },
                "SFALIGN": {
                    "id": "float:SFALIGN",
                    "number": "12.6.2.2204",
                    "name": "SFALIGN",
                    "english": "s-f-align",
                    "list": "FLOATING EXT",
                    "basename": "SFALIGN",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      If the data-space pointer is not single-float aligned, reserve\n      enough data space to make it so.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "SFALIGNED": {
                    "id": "float:SFALIGNED",
                    "number": "12.6.2.2206",
                    "name": "SFALIGNED",
                    "english": "s-f-aligned",
                    "list": "FLOATING EXT",
                    "basename": "SFALIGNED",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr</em> -- <em>sf-addr</em> )"
                        },
                        "plain": {
                            " ": "( addr -- sf-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr</em> -- <em>sf-addr</em> )\n      <p>\n      <em>sf-addr</em> is the first single-float-aligned address greater\n      than or equal to <em>addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "SFFIELDColon": {
                    "id": "float:SFFIELD:",
                    "number": "12.6.2.2206.40",
                    "name": "SFFIELD:",
                    "english": "s-f-field-colon",
                    "list": "FLOATING EXT",
                    "basename": "SFFIELDColon",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )",
                            "name Execution:": "( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 \"<spaces>name\" -- n2 )",
                            "name Execution:": "( addr1 -- addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub> \"&lt;spaces&gt;name\"</em> -- <em>n<sub>2</sub></em> )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by\n      a space. <em>Offset</em> is the first single-float aligned value\n      greater than or equal to <em>n<sub>1</sub></em>.  <em>n<sub>2</sub> = offset + 1</em>\n      single-float.\n      </p><p>\n      Create a definition for <em>name</em> with the execution semantics\n      given below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>addr<sub>1</sub></em> -- <em>addr<sub>2</sub></em> )\n      <p>\n      Add the <em>offset</em> calculated during the compile-time action to\n      <em>addr<sub>1</sub></em> giving the address <em>addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/PlusFIELD\">10.6.2.0135 +FIELD</a>,\n      <a href=\"../facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>, <br>\n      <a href=\"../facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>,\n      <a href=\"../rationale#rat:facility:FIELD:\">A.10.6.2.1518 FIELD:</a>.\n      \n      "
                        }
                    }
                },
                "SFFetch": {
                    "id": "float:SF@",
                    "number": "12.6.2.2203",
                    "name": "SF@",
                    "english": "s-f-fetch",
                    "list": "FLOATING EXT",
                    "basename": "SFFetch",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>sf-addr</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>sf-addr</em> -- <em>r</em> )"
                        },
                        "plain": {
                            " ": "( sf-addr -- ) ( F: -- r ) or\n( sf-addr -- r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>sf-addr</em> -- ) ( F: -- <em>r</em> ) or\n      ( <em>sf-addr</em> -- <em>r</em> )\n      <p>\n      Fetch the 32-bit IEEE single-precision number stored at\n      <em>sf-addr</em> to the floating-point stack as <em>r</em> in the\n      internal representation. If the IEEE single-precision\n      significand has more precision than the internal representation,\n      it will be rounded to the internal representation using the\n      \"round to nearest\" rule. An ambiguous condition exists if the\n      exponent of the IEEE single-precision representation is too\n      large to be accommodated by the internal representation.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>.\n      \n      "
                        }
                    }
                },
                "SFLOATPlus": {
                    "id": "float:SFLOAT+",
                    "number": "12.6.2.2207",
                    "name": "SFLOAT+",
                    "english": "s-float-plus",
                    "list": "FLOATING EXT",
                    "basename": "SFLOATPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>sf-addr<sub>1</sub></em> -- <em>sf-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( sf-addr1 -- sf-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>sf-addr<sub>1</sub></em> -- <em>sf-addr<sub>2</sub></em> )\n      <p>\n      Add the size in address units of a 32-bit IEEE single-precision\n      number to <em>sf-addr<sub>1</sub></em>, giving <em>sf-addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "SFLOATS": {
                    "id": "float:SFLOATS",
                    "number": "12.6.2.2208",
                    "name": "SFLOATS",
                    "english": "s-floats",
                    "list": "FLOATING EXT",
                    "basename": "SFLOATS",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( n1 -- n2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n<sub>1</sub></em> -- <em>n<sub>2</sub></em> )\n      <p>\n      <em>n<sub>2</sub></em> is the size in address units of <em>n<sub>1</sub></em> 32-bit IEEE\n      single-precision numbers.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>.\n      \n      "
                        }
                    }
                },
                "SFStore": {
                    "id": "float:SF!",
                    "number": "12.6.2.2202",
                    "name": "SF!",
                    "english": "s-f-store",
                    "list": "FLOATING EXT",
                    "basename": "SFStore",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>sf-addr</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r sf-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( sf-addr -- ) ( F: r -- ) or\n( r sf-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>sf-addr</em> -- ) ( F: <em>r</em> -- ) or\n      ( <em>r sf-addr</em> -- )\n      <p>\n      Store the floating-point number <em>r</em> as a 32-bit IEEE\n      single-precision number at <em>sf-addr</em>. If the significand\n      of the internal representation of <em>r</em> has more precision\n      than the IEEE single-precision format, it will be rounded using\n      the \"round to nearest\" rule. An ambiguous condition exists if\n      the exponent of <em>r</em> is too large to be accommodated by the\n      IEEE single-precision format.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../float#float:addr\">12.3.1.1 Addresses</a></strong>,\n      <strong><a href=\"../float#float:ops\">12.3.2 Floating-point operations</a></strong>.\n      \n      "
                        }
                    }
                },
                "StoF": {
                    "id": "float:StoF",
                    "number": "12.6.2.2175",
                    "name": "S>F",
                    "english": "S to F",
                    "list": "FLOATING EXT",
                    "basename": "StoF",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>n</em> -- ) ( F: -- <em>r</em> ) or ( <em>n</em> -- <em>r</em> )"
                        },
                        "plain": {
                            " ": "( n -- ) ( F: -- r ) or ( n -- r )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>n</em> -- ) ( F: -- <em>r</em> ) or ( <em>n</em> -- <em>r</em> )\n      <p>\n      <em>r</em> is the floating-point equivalent of the single-cell\n      value <em>n</em>.  An ambiguous condition exists if <em>n</em>\n      can not be precisely represented as a floating-point value.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../float/FtoS\">12.6.2.1471 F&gt;S</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>S&gt;F</strong> <a href=\"../core/p\">(</a> n -- r ) <br>\n      &nbsp;&nbsp; <a href=\"../core/StoD\">S&gt;D</a> <a href=\"../float/DtoF\">D&gt;F</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "toFLOAT": {
                    "id": "float:toFLOAT",
                    "number": "12.6.1.0558",
                    "name": ">FLOAT",
                    "english": "to-float",
                    "list": "FLOATING",
                    "basename": "toFLOAT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- <em>true  |  false</em> )\n      ( F: -- <em>r  | ~</em> ) or\n      ( <em>c-addr u</em> -- <em>r true  |  false</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u -- true  |  false )\n( F: -- r  | ~ ) or\n( c-addr u -- r true  |  false )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- <em>true  |  false</em> )\n      ( F: -- <em>r  | ~</em> ) or\n      ( <em>c-addr u</em> -- <em>r true  |  false</em> )\n      <p>\n      An attempt is made to convert the string specified by <em>c-addr</em>\n      and <em>u</em> to internal floating-point representation. If the\n      string represents a valid floating-point number in the syntax below,\n      its value <em>r</em> and <em>true</em> are returned. If the string does\n      not represent a valid floating-point number only <em>false</em> is\n      returned.\n      </p><p>\n      A string of blanks should be treated as a special case\n      representing zero.\n      </p><p>\n      The syntax of a convertible string\n      </p><div class=\"center\">\n\n        <table class=\"center\">\n        <tbody><tr valign=\"top\"><td class=\"r\"></td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>&lt;<em>significand</em>&gt;[&lt;<em>exponent</em>&gt;] </td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>significand</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>[&lt;<em>sign</em>&gt;]{&lt;<em>digits</em>&gt;[<strong>.</strong>&lt;<em>digits0</em>&gt;]\n        | <strong>.</strong>&lt;<em>digits</em>&gt; } </td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>exponent</em>&gt;\t\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>&lt;<em>marker</em>&gt;&lt;<em>digits0</em>&gt; </td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>marker</em>&gt;\t\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{&lt;<em>e-form</em>&gt; | &lt;<em>sign-form</em>&gt;}</td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>e-form</em>&gt;\t\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>&lt;<em>e-char</em>&gt;[&lt;<em>sign-form</em>&gt;] </td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>sign-form</em>&gt; \t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ <strong>+</strong> | <strong>-</strong> } </td></tr>\n        <tr valign=\"top\"><td class=\"r\">&lt;<em>e-char</em>&gt;\t\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ <strong>D</strong> | <strong>d</strong> |\n        <strong>E</strong> | <strong>e</strong> } </td></tr>\n        <tr valign=\"top\"><td class=\"r\"></td></tr>\n        </tbody></table>\n        \n        </div>\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:float:toFLOAT\">A.12.6.1.0558 &gt;FLOAT</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.12.6.1.0558 >FLOAT -->\n      <strong>&gt;FLOAT</strong> enables programs to read floating-point data in\n      legible ASCII format. It accepts a much broader syntax than\n      does the text interpreter since the latter defines rules for\n      composing source programs whereas <strong>&gt;FLOAT</strong> defines rules\n      for accepting data. <strong>&gt;FLOAT</strong> is defined as broadly as is\n      feasible to permit input of data from Forth-2012 systems\n      as well as other widely used standard programming environments.\n      <p>\n      This is a synthesis of common FORTRAN practice. Embedded spaces\n      are explicitly forbidden in much scientific usage, as are other\n      field separators such as comma or slash.\n      </p><p>\n      While <strong>&gt;FLOAT</strong> is not required to treat a string of blanks\n      as zero, this behavior is strongly encouraged, since a future\n      version of this standard may include such a requirement.\n      \n      \n      </p>"
                        }
                    }
                }
            }
        },
        "locals": {
            "name": "locals",
            "words": {
                "LOCAL": {
                    "id": "locals:LOCAL",
                    "number": "13.6.1.0086",
                    "name": "(LOCAL)",
                    "english": "paren-local-paren",
                    "list": "LOCAL",
                    "basename": "LOCAL",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>c-addr u</em> -- )",
                            "local Execution:": "( -- <em>x</em> )",
                            "TO local Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( c-addr u -- )",
                            "local Execution:": "( -- x )",
                            "TO local Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>c-addr u</em> -- )\n      <p>\n      When executed during compilation, <strong>(LOCAL)</strong> passes a\n      message to the system that has one of two meanings. If <em>u</em>\n      is non-zero, the message identifies a new <em>local</em> whose\n      definition name is given by the string of characters identified\n      by <em>c-addr u</em>. If <em>u</em> is zero, the message is \"last\n      local\" and <em>c-addr</em> has no significance.\n      </p><p>\n      The result of executing <strong>(LOCAL)</strong> during compilation of a\n      definition is to create a set of named local identifiers, each\n      of which is a definition name, that only have execution\n      semantics within the scope of that definition's source.\n      </p><p>\n        \n      </p>"
                        },
                        "local Execution:": {
                            "name": "local Execution:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      <p>\n      Push the local's value, <em>x</em>, onto the stack. The local's\n      value is initialized as described in <strong><a href=\"../locals#local:locals\">13.3.3 Processing locals</a></strong> and may be changed by preceding the local's\n      name with <a href=\"../core/TO\">TO</a>. An ambiguous condition exists when local is\n      executed while in interpretation state.\n      </p><p>\n        \n      </p>"
                        },
                        "TO local Run-time:": {
                            "name": "TO local Run-time:",
                            "html": "\n\n ( <em>x</em> -- )\n      <p>\n      Assign the value <em>x</em> to the local value <em>local</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n\n      This word is not intended for direct use in a definition to\n      declare that definition's locals. It is instead used by system\n      or user compiling words. These compiling words in turn define\n      their own syntax, and may be used directly in definitions to\n      declare locals. In this context, the syntax for <strong>(LOCAL)</strong>\n      is defined in terms of a sequence of compile-time messages and\n      is described in detail in section <strong><a href=\"../locals#local:locals\">13.3.3 Processing locals</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong> and\n      <a href=\"../core/TO\">6.2.2295 TO</a>.\n      \n      "
                        }
                    }
                },
                "LOCALS": {
                    "id": "locals:LOCALS",
                    "number": "13.6.2.1795",
                    "name": "LOCALS|",
                    "english": "locals-bar",
                    "list": "LOCAL EXT",
                    "basename": "LOCALS",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"&lt;spaces&gt;name<sub>1</sub>\" \"&lt;spaces&gt;name<sub>2</sub>\" ... \"&lt;spaces&gt;name<sub>n</sub>\" \" | \"</em> -- )",
                            "Run-time:": "( <em>x<sub>n</sub> ... x<sub>2</sub> x<sub>1</sub></em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( \"<spaces>name1\" \"<spaces>name2\" ... \"<spaces>namen\" \" | \" -- )",
                            "Run-time:": "( xn ... x2 x1 -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name<sub>1</sub>\" \"&lt;spaces&gt;name<sub>2</sub>\" ... \"&lt;spaces&gt;name<sub>n</sub>\" \" | \"</em> -- )\n      <p>\n      Create up to eight local identifiers by repeatedly skipping\n      leading spaces, parsing <em>name</em>, and executing\n      <a href=\"../locals/LOCAL\">13.6.1.0086 (LOCAL)</a>. The list of locals to be defined\n      is terminated by <em> | </em>. Append the run-time semantics given\n      below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x<sub>n</sub> ... x<sub>2</sub> x<sub>1</sub></em> -- )\n      <p>\n      Initialize up to eight local identifiers as described in\n      <a href=\"../locals/LOCAL\">13.6.1.0086 (LOCAL)</a>, each of which takes as its\n      initial value the top stack item, removing it from the stack.\n      Identifier <em>name<sub>1</sub></em> is initialized with <em>x<sub>1</sub></em>,\n      identifier <em>name<sub>2</sub></em> with <em>x<sub>2</sub></em>, etc. When invoked,\n      each local will return its value. The value of a local may be\n      changed using <a href=\"../core/TO\">6.2.2295 TO</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n This word is obsolescent and is included as a concession to\n      existing implementations.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>LOCALS|</strong> <a href=\"../core/p\">(</a> \"name...name |\" -- ) <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <br>\n      &nbsp;&nbsp;  <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a>   <a href=\"../core/COUNT\">COUNT</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CFetch\">C@</a> <br>\n      &nbsp;&nbsp;  <a href=\"../core/BracketCHAR\">[CHAR]</a> | <a href=\"../core/Minus\">-</a> <a href=\"../core/OVER\">OVER</a> 1 <a href=\"../core/Minus\">-</a> <a href=\"../core/OR\">OR</a>   <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;  <a href=\"../locals/LOCAL\">(LOCAL)</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/TwoDROP\">2DROP</a>   0 0 <a href=\"../locals/LOCAL\">(LOCAL)</a> <br>\n      <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      \n      "
                        }
                    }
                },
                "bColon": {
                    "id": "locals:b:",
                    "number": "13.6.2.2550",
                    "name": "{:",
                    "english": "brace-colon",
                    "list": "LOCAL EXT",
                    "basename": "bColon",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>i * x \"&lt;spaces&gt;ccc <code>:}</code>\"</em> -- )",
                            "Run-time:": "( <em>x<sub>1</sub> ... x<sub>n</sub></em> -- )",
                            "name Execution:": "( -- <em>x</em> )",
                            "TO name Run-time:": "( <em>x</em> -- )"
                        },
                        "plain": {
                            "Compilation:": "( i * x \"<spaces>ccc :}\" -- )",
                            "Run-time:": "( x1 ... xn -- )",
                            "name Execution:": "( -- x )",
                            "TO name Run-time:": "( x -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>i * x \"&lt;spaces&gt;ccc <code>:}</code>\"</em> -- )\n      <p>\n      Parse <em>ccc</em> according to the following syntax:\n      </p><div class=\"center\">\n\n        <strong>{:</strong> &lt;<em>arg</em>&gt;* [<strong>|</strong> &lt;<em>val</em>&gt;*] [<strong>–&nbsp;–</strong> &lt;<em>out</em>&gt;*] <code>:}</code>\n        \n        </div>\n      where &lt;<em>arg</em>&gt;, &lt;<em>val</em>&gt; and &lt;<em>out</em>&gt; are local names, and\n      <em>i</em> is the number of &lt;<em>arg</em>&gt; names given.\n      <p>\n      The following ambiguous conditions exist when:\n      </p><ul>\n      <li> a local name ends in \"<code>:</code>\", \"<code>[</code>\", \"<code>^</code>\";\n      </li>\n      <li> a local name is a single non-alphabetic character;\n      </li>\n      <li> the text between <strong>{:</strong> and <code>:}</code> extends\n      over more than one line;\n      </li>\n      <li> <strong>{:</strong> ... <code>:}</code> is used more than once in a word.\n      </li>\n</ul>\n      <p>\n      Append the run-time semantics below. \n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( <em>x<sub>1</sub> ... x<sub>n</sub></em> -- )\n      <p>\n      Create locals for &lt;<em>arg</em>&gt;s and &lt;<em>val</em>&gt;s. &lt;<em>out</em>&gt;s are ignored.\n      </p><p>\n      </p><ol style=\"list-style-type: decimal\">\n      <li> names are initialized from the data stack, with the\n      top of the stack being assigned to the right most &lt;<em>arg</em>&gt; name.\n      <p>\n      </p></li>\n      <li> names are uninitialized.\n      </li>\n</ol>\n      <p>\n      &lt;<em>val</em>&gt; and &lt;<em>arg</em>&gt; names have the execution semantics\n      given below.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( -- <em>x</em> )\n      <p>\n      Place the value currently assigned to <em>name</em> on the stack.\n      An ambiguous condition exists when <em>name</em> is executed while\n      in interpretation state.\n      </p><p>\n        \n      </p>"
                        },
                        "TO name Run-time:": {
                            "name": "TO name Run-time:",
                            "html": "\n\n\n      ( <em>x</em> -- )\n      <p>\n      Set <em>name</em> to the value <em>x</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../notation#notation:BNF\">2.2.5 BNF notation</a></strong>,\n      <a href=\"../core/VALUE\">6.2.2405 VALUE</a>,\n      <a href=\"../core/TO\">6.2.2295 TO</a>,\n      <a href=\"../rationale#rat:locals:b:\">A.13.6.2.2550 {:</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      The Forth 94 Technical Committee was unable to identify any\n      common practice for locals.  It provided a way to define locals\n      and a method of parsing them in the hope that a common practice\n      would emerge.\n      <p>\n      Since then, common practice has emerged.  Most implementations that\n      provide <a href=\"../locals/LOCAL\">(LOCAL)</a> and  <a href=\"../locals/LOCALS\">LOCALS|</a> also provide some form of the\n      { ... } notation; however, the phrase { ... } conflicts with\n      other systems.  The <strong>{:</strong> ... <code>:}</code> notation is a compromise\n      to avoid name conflicts.\n      </p><p>\n      The notation provides for different kinds of local: those that are\n      initialized from the data stack at run-time, uninitialized locals, and\n      outputs.  Initialized locals are separated from uninitialized locals by\n      `<code>|</code>'.  The definition of locals is terminated by\n      `<code>--</code>' or `<code>:}</code>'.\n      </p><p>\n      All text between `<code>--</code>' and `<code>:}</code>' is ignored.  This eases\n      documentation by allowing a complete stack comment in the locals definition.\n      </p><p>\n      The `<code>|</code>' (ASCII $7C) character is widely used as the\n      separator between local arguments and local values.  Some implementations\n      have used `<code>\\</code>' (ASCII $5C) or `<code>¦</code>' ($A6).\n      Systems are free to continue to provide these alternative separators.\n      However, only the recognition of the `<code>|</code>' separator is\n      mandatory. Therefore portable programs must use the `<code>|</code>'\n      separator.\n      </p><p>\n      A number of systems extend the locals notation in various ways.  Some of\n      these extensions may emerge as common practice.  This standard has reserved\n      the notation used by these extensions to avoid difficulties when porting\n      code to these systems.  In particular local names ending in\n      `<code>:</code>' (colon),\n      `<code>[</code>' (open bracket), or\n      `<code>^</code>' (caret) are reserved.\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      12345 <a href=\"../core/CONSTANT\">CONSTANT</a> undefined-value\n      <p>\n      <a href=\"../core/Colon\">:</a> match-or-end? <a href=\"../core/p\">(</a> c-addr1 u1 c-addr2 u2 -- f ) <br>\n      &nbsp;&nbsp;&nbsp;2 <a href=\"../core/PICK\">PICK</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../string/COMPARE\">COMPARE</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/OR\">OR</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> scan-args <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> 0 c-addr1 u1 -- c-addr1 u1 ... c-addrn un n c-addrn+1 un+1<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> |\"    match-or-end? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> --\" match-or-end? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> :}\"  match-or-end? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/ROT\">ROT</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/AGAIN\">AGAIN</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> scan-locals <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> n c-addr1 u1 -- c-addr1 u1 ... c-addrn un n c-addrn+1 un+1 <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> |\" <a href=\"../string/COMPARE\">COMPARE</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/EXIT\">EXIT</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> --\" match-or-end? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> :}\"  match-or-end? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/ROT\">ROT</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/POSTPONE\">POSTPONE</a> undefined-value <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/AGAIN\">AGAIN</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> scan-end <a href=\"../core/p\">(</a> c-addr1 u1 -- c-addr2 u2 ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> :}\" match-or-end? <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> define-locals <a href=\"../core/p\">(</a> c-addr1 u1 ... c-addrn un n -- ) <br>\n      &nbsp;&nbsp;&nbsp;0 <a href=\"../core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../locals/LOCAL\">(LOCAL)</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/LOOP\">LOOP</a> <br>\n      &nbsp;&nbsp;&nbsp;0 0 <a href=\"../locals/LOCAL\">(LOCAL)</a> <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> {: <a href=\"../core/p\">(</a> -- ) <br>\n      &nbsp;&nbsp;&nbsp;0 <a href=\"../core/PARSE-NAME\">PARSE-NAME</a> <br>\n      &nbsp;&nbsp;&nbsp;scan-args scan-locals scan-end <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDROP\">2DROP</a> define-locals <br>\n      <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      \n      \n      </p>"
                        }
                    }
                }
            }
        },
        "memory": {
            "name": "memory",
            "words": {
                "ALLOCATE": {
                    "id": "memory:ALLOCATE",
                    "number": "14.6.1.0707",
                    "name": "ALLOCATE",
                    "english": " ",
                    "list": "MEMORY",
                    "basename": "ALLOCATE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>u</em> -- <em>a-addr ior</em> )"
                        },
                        "plain": {
                            " ": "( u -- a-addr ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>u</em> -- <em>a-addr ior</em> )\n      <p>\n      Allocate <em>u</em> address units of contiguous data space. The\n      data-space pointer is unaffected by this operation. The initial\n      content of the allocated space is undefined.\n      </p><p>\n      If the allocation succeeds, <em>a-addr</em> is the aligned\n      starting address of the allocated space and <em>ior</em> is\n      zero.\n      </p><p>\n      If the operation fails, <em>a-addr</em> does not represent a valid\n      address and <em>ior</em> is the implementation-defined I/O result\n      code.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/HERE\">6.1.1650 HERE</a>,\n      <a href=\"../memory/FREE\">14.6.1.1605 FREE</a>,\n      <a href=\"../memory/RESIZE\">14.6.1.2145 RESIZE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n            <div class=\"tt\">\n<a href=\"../core/VARIABLE\">VARIABLE</a> datsp <br>\n        <a href=\"../core/HERE\">HERE</a> datsp <a href=\"../core/Store\">!</a>\n        <p>\n        <span class=\"tt\">T{ 50&nbsp;<a href=\"../core/CELLS\">CELLS</a>&nbsp;<strong>ALLOCATE</strong>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/ALIGNED\">ALIGNED</a> -&gt; addr&nbsp;<a href=\"../core/Fetch\">@</a> }T</span>\t\t\t\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Test address is aligned</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/HERE\">HERE</a> -&gt; datsp&nbsp;<a href=\"../core/Fetch\">@</a> }T</span>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Check data space pointer is unaffected</span><br>\n        addr <a href=\"../core/Fetch\">@</a> 50 write-cell-mem <br>\n        addr <a href=\"../core/Fetch\">@</a> 50 check-cell-mem &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Check we can access the heap</span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../memory/FREE\">FREE</a> -&gt; 0 }T</span>\n        </p><p>\n        <span class=\"tt\">T{ 99&nbsp;<strong>ALLOCATE</strong>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/ALIGNED\">ALIGNED</a> -&gt; addr&nbsp;<a href=\"../core/Fetch\">@</a> }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Test address is aligned</span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../memory/FREE\">FREE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/HERE\">HERE</a> -&gt; datsp&nbsp;<a href=\"../core/Fetch\">@</a> }T</span>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Data space pointer unaffected by <a href=\"../memory/FREE\">FREE</a></span><br>\n        <span class=\"tt\">T{ -1&nbsp;<strong>ALLOCATE</strong>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<a href=\"../core/ZeroEqual\">0=</a> -&gt; &lt;FALSE&gt; }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Memory allocate failed</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "FREE": {
                    "id": "memory:FREE",
                    "number": "14.6.1.1605",
                    "name": "FREE",
                    "english": " ",
                    "list": "MEMORY",
                    "basename": "FREE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>a-addr</em> -- <em>ior</em> )"
                        },
                        "plain": {
                            " ": "( a-addr -- ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>a-addr</em> -- <em>ior</em> )\n      <p>\n      Return the contiguous region of data space indicated by\n      <em>a-addr</em> to the system for later allocation. <em>a-addr</em>\n      shall indicate a region of data space that was previously\n      obtained by <a href=\"../memory/ALLOCATE\">ALLOCATE</a> or <a href=\"../memory/RESIZE\">RESIZE</a>. The data-space\n      pointer is unaffected by this operation.\n      </p><p>\n      If the operation succeeds, <em>ior</em> is zero. If the operation\n      fails, <em>ior</em> is the implementation-defined I/O result code.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/HERE\">6.1.1650 HERE</a>,\n      <a href=\"../memory/ALLOCATE\">14.6.1.0707 ALLOCATE</a>,\n      <a href=\"../memory/RESIZE\">14.6.1.2145 RESIZE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"rm\">See <a href=\"../testsuite#test:memory:ALLOCATE\">F.14.6.1.0707 ALLOCATE</a></span>\n      \n      \n      "
                        }
                    }
                },
                "RESIZE": {
                    "id": "memory:RESIZE",
                    "number": "14.6.1.2145",
                    "name": "RESIZE",
                    "english": " ",
                    "list": "MEMORY",
                    "basename": "RESIZE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>a-addr<sub>1</sub> u</em> -- <em>a-addr<sub>2</sub> ior</em> )"
                        },
                        "plain": {
                            " ": "( a-addr1 u -- a-addr2 ior )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>a-addr<sub>1</sub> u</em> -- <em>a-addr<sub>2</sub> ior</em> )\n      <p>\n      Change the allocation of the contiguous data space starting at\n      the address <em>a-addr<sub>1</sub></em>, previously allocated by\n      <a href=\"../memory/ALLOCATE\">ALLOCATE</a> or <strong>RESIZE</strong>, to <em>u</em> address units.\n      <em>u</em> may be either larger or smaller than the current\n      size of the region. The data-space pointer is unaffected by\n      this operation.\n      </p><p>\n      If the operation succeeds, <em>a-addr<sub>2</sub></em> is the aligned\n      starting address of <em>u</em> address units of allocated memory\n      and <em>ior</em> is zero. <em>a-addr<sub>2</sub></em> may be, but need\n      not be, the same as <em>a-addr<sub>1</sub></em>. If they are not the same,\n      the values contained in the region at <em>a-addr<sub>1</sub></em> are copied\n      to <em>a-addr<sub>2</sub></em>, up to the minimum size of either of the\n      two regions. If they are the same, the values contained in the\n      region are preserved to the minimum of <em>u</em> or the original\n      size.  If <em>a-addr<sub>2</sub></em> is not the same as <em>a-addr<sub>1</sub></em>,\n      the region of memory at <em>a-addr<sub>1</sub></em> is returned to the system\n      according to the operation of <a href=\"../memory/FREE\">FREE</a>.\n      </p><p>\n      If the operation fails, <em>a-addr<sub>2</sub></em> equals <em>a-addr<sub>1</sub></em>,\n      the region of memory at <em>a-addr<sub>1</sub></em> is unaffected, and\n      <em>ior</em> is the implementation-defined I/O result code.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/HERE\">6.1.1650 HERE</a>,\n      <a href=\"../memory/ALLOCATE\">14.6.1.0707 ALLOCATE</a>,\n      <a href=\"../memory/FREE\">14.6.1.1605 FREE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ 50&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<a href=\"../memory/ALLOCATE\">ALLOCATE</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        addr <a href=\"../core/Fetch\">@</a> 50 write-char-mem addr <a href=\"../core/Fetch\">@</a> 50 check-char-mem\n        <p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Resize smaller does not change content.</span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;28&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>RESIZE</strong>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        addr <a href=\"../core/Fetch\">@</a> 28 check-char-mem\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Resize larger does not change original content.</span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;100&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<strong>RESIZE</strong>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"../core/Store\">!</a> -&gt; 0 }T</span> <br>\n        addr <a href=\"../core/Fetch\">@</a> 28 check-char-mem\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Resize error does not change <em>addr</em></span> <br>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;-1&nbsp;<strong>RESIZE</strong>&nbsp;<a href=\"../core/ZeroEqual\">0=</a> -&gt; addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;&lt;FALSE&gt; }T</span>\n        </p><p>\n        <span class=\"tt\">T{ addr&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../memory/FREE\">FREE</a> -&gt; 0 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/HERE\">HERE</a> -&gt; datsp&nbsp;<a href=\"../core/Fetch\">@</a> }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Data space pointer is unaffected</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                }
            }
        },
        "search": {
            "name": "search",
            "words": {
                "ALSO": {
                    "id": "search:ALSO",
                    "number": "16.6.2.0715",
                    "name": "ALSO",
                    "english": " ",
                    "list": "SEARCH EXT",
                    "basename": "ALSO",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Transform the search order consisting of <em>wid<sub>n</sub></em>, ...\n      <em>wid<sub>2</sub></em>, <em>wid<sub>1</sub></em> (where <em>wid<sub>1</sub></em> is searched\n      first) into <em>wid<sub>n</sub></em>, ... <em>wid<sub>2</sub></em>, <em>wid<sub>1</sub></em>,\n      <em>wid<sub>1</sub></em>. An ambiguous condition exists if there are too\n      many word lists in the search order.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>ALSO</strong> <a href=\"../core/p\">(</a> -- ) <br>\n      &nbsp;&nbsp; <a href=\"../search/GET-ORDER\">GET-ORDER</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../search/SET-ORDER\">SET-ORDER</a> <br>\n      <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>ALSO</strong>&nbsp;<a href=\"../search/GET-ORDER\">GET-ORDER</a>&nbsp;<a href=\"../search/ONLY\">ONLY</a> -&gt; get-orderlist&nbsp;<a href=\"../core/OVER\">OVER</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a> }T</span>\n      \n      \n      "
                        }
                    }
                },
                "DEFINITIONS": {
                    "id": "search:DEFINITIONS",
                    "number": "16.6.1.1180",
                    "name": "DEFINITIONS",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "DEFINITIONS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Make the compilation word list the same as the first word list\n      in the search order. Specifies that the names of subsequent\n      definitions will be placed in the compilation word list.\n      Subsequent changes in the search order will not affect the\n      compilation word list.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../search#search:find\">16.3.3 Finding definition names</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> discard <a href=\"../core/p\">(</a> x1 ... xn u -- ) \\ <span class=\"rm\">Drop u+1 stack items</span> <br>\n      &nbsp;&nbsp; 0 <a href=\"../core/qDO\">?DO</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/LOOP\">LOOP</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      <p>\n      <a href=\"../core/Colon\">:</a> <strong>DEFINITIONS</strong> <a href=\"../core/p\">(</a> -- ) <br>\n      &nbsp;&nbsp; <a href=\"../search/GET-ORDER\">GET-ORDER</a> <a href=\"../core/SWAP\">SWAP</a>  <a href=\"../search/SET-CURRENT\">SET-CURRENT</a> discard <br>\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"../search/ONLY\">ONLY</a>&nbsp;<a href=\"../search/FORTH\">FORTH</a>&nbsp;<strong>DEFINITIONS</strong> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/GET-CURRENT\">GET-CURRENT</a> -&gt; FORTH-WORDLIST }T</span>\n        <p>\n        <span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a>&nbsp;wid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a>&nbsp;<a href=\"../search/SET-ORDER\">SET-ORDER</a>&nbsp;<strong>DEFINITIONS</strong>&nbsp;<a href=\"../search/GET-CURRENT\">GET-CURRENT</a><br>\n         -&gt; wid2&nbsp;<a href=\"../core/Fetch\">@</a> }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist&nbsp;wid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;<a href=\"../core/OnePlus\">1+</a> }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/PREVIOUS\">PREVIOUS</a>&nbsp;<a href=\"../search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span> <br>\n        <span class=\"tt\">T{ <strong>DEFINITIONS</strong>&nbsp;<a href=\"../search/GET-CURRENT\">GET-CURRENT</a> -&gt; FORTH-WORDLIST }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> alsowid2 <a href=\"../search/ALSO\">ALSO</a> <a href=\"../search/GET-ORDER\">GET-ORDER</a> wid2 <a href=\"../core/Fetch\">@</a> <a href=\"../core/ROT\">ROT</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../search/SET-ORDER\">SET-ORDER</a> <a href=\"../core/Semi\">;</a> <br>\n        alsowid2 <br>\n        <a href=\"../core/Colon\">:</a> w1 1234 <a href=\"../core/Semi\">;</a> <br>\n        <strong>DEFINITIONS</strong>\n        <a href=\"../core/Colon\">:</a> w1 -9876 <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        </p><p>\n        <a href=\"../search/ONLY\">ONLY</a> <a href=\"../search/FORTH\">FORTH</a> <br>\n        <span class=\"tt\">T{ w1 -&gt; 1234 }T</span> <br>\n        <strong>DEFINITIONS</strong> <br>\n        <span class=\"tt\">T{ w1 -&gt; 1234 }T</span> <br>\n        alsowid2 <br>\n        <span class=\"tt\">T{ w1 -&gt; -9876 }T</span> <br>\n        <strong>DEFINITIONS</strong>\n        <span class=\"tt\">T{ w1 -&gt; -9876 }T</span>\n        </p><p>\n        <a href=\"../search/ONLY\">ONLY</a> <a href=\"../search/FORTH\">FORTH</a> <strong>DEFINITIONS</strong> <br>\n        <a href=\"../core/Colon\">:</a> so5  <a href=\"../core/DUP\">DUP</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/EXECUTE\">EXECUTE</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;w1\"&nbsp;wid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>&nbsp;so5 -&gt; -1&nbsp;&nbsp;1234 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;w1\"&nbsp;wid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<a href=\"../search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>&nbsp;so5 -&gt; &nbsp;1&nbsp;-9876 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> c\"w1\" <a href=\"../core/Cq\">C\"</a> w1\" <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ alsowid2&nbsp;c\"w1\"&nbsp;<a href=\"../search/FIND\">FIND</a>&nbsp;so5 -&gt; &nbsp;1&nbsp;-9876 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/PREVIOUS\">PREVIOUS</a>&nbsp;c\"w1\"&nbsp;<a href=\"../search/FIND\">FIND</a>&nbsp;so5 -&gt; -1&nbsp;&nbsp;1234 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "FIND": {
                    "id": "search:FIND",
                    "number": "16.6.1.1550",
                    "name": "FIND",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "FIND",
                    "stackEffect": {
                        "html": {
                            " ": "Extend the semantics of <a href=\"../core/FIND\">6.1.1550 FIND</a> to be:\n      ( <em>c-addr</em> -- <em>c-addr 0  |  xt 1  |  xt -1</em> )"
                        },
                        "plain": {
                            " ": "Extend the semantics of <a href=\"../core/FIND\">6.1.1550 FIND to be:\n( c-addr -- c-addr 0  |  xt 1  |  xt -1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n Extend the semantics of <a href=\"../core/FIND\">6.1.1550 FIND</a> to be:\n      ( <em>c-addr</em> -- <em>c-addr 0  |  xt 1  |  xt -1</em> )\n      <p>\n      Find the definition named in the counted string at <em>c-addr</em>.\n      If the definition is not found after searching all the word lists\n      in the search order, return <em>c-addr</em> and zero. If\n      the definition is found, return <em>xt</em>. If the definition is\n      immediate, also return one (<em>1</em>); otherwise also return\n      minus-one (<em>-1</em>). For a given string, the values returned\n      by <strong>FIND</strong> while compiling may differ from those returned\n      while not compiling.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:find\">3.4.2 Finding definition names</a></strong>,\n      <a href=\"../core/Tick\">6.1.0070 '</a>,\n      <a href=\"../core/FIND\">6.1.1550 FIND</a>,\n      <a href=\"../core/POSTPONE\">6.1.2033 POSTPONE</a>,\n      <a href=\"../core/BracketTick\">6.1.2510 [']</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">Assuming <code>#order</code> and <code>context</code> are defined as per <a href=\"../implement#imp:search:GET-ORDER\">E.16.6.1.1647 GET-ORDER</a>.</span>\n      <p>\n      </p><div class=\"tabbing\">\n        <a href=\"../core/Colon\">:</a> <strong>FIND</strong> <a href=\"../core/p\">(</a> c-addr -- c-addr 0 | xt 1 | xt -1 )  <br>\n        &nbsp;&nbsp;&nbsp;0 \t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0 ) <br>\n        &nbsp;&nbsp;&nbsp;#order <a href=\"../core/Fetch\">@</a> 0 <a href=\"../core/qDO\">?DO</a>  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/OVER\">OVER</a> <a href=\"../core/COUNT\">COUNT</a>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0 c-addr' u ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/I\">I</a> <a href=\"../core/CELLS\">CELLS</a> context <a href=\"../core/Plus\">+</a> <a href=\"../core/Fetch\">@</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0 c-addr' u wid ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0; 0 | w 1 | q -1 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/qDUP\">?DUP</a> <a href=\"../core/IF\">IF</a>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0; w 1 | w -1 )  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/TwoSWAP\">2SWAP</a> <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/LEAVE\">LEAVE</a>\t\t\t&nbsp;&nbsp;\t\t<a href=\"../core/p\">(</a> w 1 | w -1 )  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0 )  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/LOOP\">LOOP</a>\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/p\">(</a> c-addr 0 | w 1 | w -1 )  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a>\n        <br>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> c\"dup\" <a href=\"../core/Cq\">C\"</a> DUP\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c\".(\"  <a href=\"../core/Cq\">C\"</a> .(\"  <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> c\"x\"   <a href=\"../core/Cq\">C\"</a> unknown word\" <a href=\"../core/Semi\">;</a>\n        <p>\n        <span class=\"tt\">T{ c\"dup\"&nbsp;<strong>FIND</strong> -&gt; xt&nbsp;&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;-1 }T</span> <br>\n        <span class=\"tt\">T{ c\".(\"&nbsp;&nbsp;<strong>FIND</strong> -&gt; xti&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;&nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ c\"x\"&nbsp;&nbsp;&nbsp;<strong>FIND</strong> -&gt; c\"x\"&nbsp;&nbsp;&nbsp;0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "FORTH-WORDLIST": {
                    "id": "search:FORTH-WORDLIST",
                    "number": "16.6.1.1595",
                    "name": "FORTH-WORDLIST",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "FORTH-WORDLIST",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>wid</em> )"
                        },
                        "plain": {
                            " ": "( -- wid )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>wid</em> )\n      <p>\n      Return <em>wid</em>, the identifier of the word list that includes\n      all standard words provided by the implementation. This word list\n      is initially the compilation word list and is part of the initial\n      search order.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <strong>FORTH-WORDLIST</strong>&nbsp;wid1&nbsp;<a href=\"../core/Store\">!</a> -&gt;  }T</span>\n      \n      \n      "
                        }
                    }
                },
                "FORTH": {
                    "id": "search:FORTH",
                    "number": "16.6.2.1590",
                    "name": "FORTH",
                    "english": " ",
                    "list": "SEARCH EXT",
                    "basename": "FORTH",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Transform the search order consisting of <em>wid<sub>n</sub></em>, ...\n      <em>wid<sub>2</sub></em>, <em>wid<sub>1</sub></em> (where <em>wid<sub>1</sub></em> is searched\n      first) into <em>wid<sub>n</sub></em>, ... <em>wid<sub>2</sub></em>,\n      <em>wid<sub><a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a></sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> (wordlist) <a href=\"../core/p\">(</a> wid \"&lt;name&gt;\" -- ; ) <br>\n      &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/Comma\">,</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Fetch\">@</a>  <a href=\"../core/toR\">&gt;R</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../search/GET-ORDER\">GET-ORDER</a> <a href=\"../core/NIP\">NIP</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../search/SET-ORDER\">SET-ORDER</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      <p>\n      <a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a> (wordlist) <strong>FORTH</strong>\n      \n      \n      </p>"
                        }
                    }
                },
                "GET-CURRENT": {
                    "id": "search:GET-CURRENT",
                    "number": "16.6.1.1643",
                    "name": "GET-CURRENT",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "GET-CURRENT",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>wid</em> )"
                        },
                        "plain": {
                            " ": "( -- wid )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>wid</em> )\n      <p>\n      Return <em>wid</em>, the identifier of the compilation word list.\n      \n      </p>"
                        }
                    }
                },
                "GET-ORDER": {
                    "id": "search:GET-ORDER",
                    "number": "16.6.1.1647",
                    "name": "GET-ORDER",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "GET-ORDER",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>wid<sub>n</sub> ... wid<sub>1</sub> n</em> )"
                        },
                        "plain": {
                            " ": "( -- widn ... wid1 n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>wid<sub>n</sub> ... wid<sub>1</sub> n</em> )\n      <p>\n      Returns the number of word lists <em>n</em> in the search order\n      and the word list identifiers <em>wid<sub>n</sub></em> ... <em>wid<sub>1</sub></em>\n      identifying these word lists. <em>wid<sub>1</sub></em> identifies the word\n      list that is searched first, and <em>wid<sub>n</sub></em> the word list that\n      is searched last. The search order is unaffected.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">Here is a very simple search order implementation:</span>\n      <p>\n      <a href=\"../core/VARIABLE\">VARIABLE</a> #order\n      </p><p>\n      <a href=\"../core/CREATE\">CREATE</a> context    16 <a href=\"../core/p\">(</a> wordlists ) <a href=\"../core/CELLS\">CELLS</a> <a href=\"../core/ALLOT\">ALLOT</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> <strong>GET-ORDER</strong> <a href=\"../core/p\">(</a> -- wid1 ... widn n ) <br>\n      &nbsp;&nbsp; #order <a href=\"../core/Fetch\">@</a> 0 <a href=\"../core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; #order <a href=\"../core/Fetch\">@</a> <a href=\"../core/I\">I</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/OneMinus\">1-</a> <a href=\"../core/CELLS\">CELLS</a> context <a href=\"../core/Plus\">+</a> <a href=\"../core/Fetch\">@</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/LOOP\">LOOP</a> <br>\n      &nbsp;&nbsp; #order <a href=\"../core/Fetch\">@</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      </p>"
                        }
                    }
                },
                "ONLY": {
                    "id": "search:ONLY",
                    "number": "16.6.2.1965",
                    "name": "ONLY",
                    "english": " ",
                    "list": "SEARCH EXT",
                    "basename": "ONLY",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Set the search order to the implementation-defined minimum search\n      order. The minimum search order shall include the words\n      <a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a> and <a href=\"../search/SET-ORDER\">SET-ORDER</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>ONLY</strong> <a href=\"../core/p\">(</a> -- ) -1 <a href=\"../search/SET-ORDER\">SET-ORDER</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ <strong>ONLY</strong>&nbsp;<a href=\"../search/FORTH\">FORTH</a>&nbsp;<a href=\"../search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span>\n        <p>\n        <a href=\"../core/Colon\">:</a> so1 <a href=\"../search/SET-ORDER\">SET-ORDER</a> ; <a href=\"../core/bs\">\\</a> <span class=\"rm\">In case it is unavailable in the forth wordlist</span>\n        </p><p>\n        <span class=\"tt\">T{ <strong>ONLY</strong>&nbsp;<a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a>&nbsp;1&nbsp;<a href=\"../search/SET-ORDER\">SET-ORDER</a>&nbsp;get-orderlist&nbsp;so1 -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "ORDER": {
                    "id": "search:ORDER",
                    "number": "16.6.2.1985",
                    "name": "ORDER",
                    "english": " ",
                    "list": "SEARCH EXT",
                    "basename": "ORDER",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Display the word lists in the search order in their search order\n      sequence, from first searched to last searched. Also display the\n      word list into which new definitions will be placed. The display\n      format is implementation dependent.\n      </p><p>\n      <strong>ORDER</strong> may be implemented using pictured numeric output\n      words. Consequently, its use may corrupt the transient region\n      identified by <a href=\"../core/num-end\">#&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>.\n      <p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/CR\">CR</a> <a href=\"../core/Dotp\">.(</a> ONLY FORTH DEFINITIONS search order and compilation list) <a href=\"../core/CR\">CR</a> <br>\n        <span class=\"tt\">T{ <a href=\"../search/ONLY\">ONLY</a>&nbsp;<a href=\"../search/FORTH\">FORTH</a>&nbsp;<a href=\"../search/DEFINITIONS\">DEFINITIONS</a>&nbsp;<strong>ORDER</strong> -&gt;  }T</span>\n        <p>\n        <a href=\"../core/CR\">CR</a> <a href=\"../core/Dotp\">.(</a> Plus another unnamed wordlist at head of search order) <a href=\"../core/CR\">CR</a> <br>\n        <span class=\"tt\">T{ alsowid2&nbsp;<a href=\"../search/DEFINITIONS\">DEFINITIONS</a>&nbsp;<strong>ORDER</strong> -&gt;  }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "PREVIOUS": {
                    "id": "search:PREVIOUS",
                    "number": "16.6.2.2037",
                    "name": "PREVIOUS",
                    "english": " ",
                    "list": "SEARCH EXT",
                    "basename": "PREVIOUS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Transform the search order consisting of <em>wid<sub>n</sub></em>, ...\n      <em>wid<sub>2</sub></em>, <em>wid<sub>1</sub></em> (where <em>wid<sub>1</sub></em> is searched\n      first) into <em>wid<sub>n</sub></em>, ... <em>wid<sub>2</sub></em>. An ambiguous\n      condition exists if the search order was empty before\n      <strong>PREVIOUS</strong> was executed.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>PREVIOUS</strong> <a href=\"../core/p\">(</a> -- )\n      <a href=\"../search/GET-ORDER\">GET-ORDER</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/OneMinus\">1-</a> <a href=\"../search/SET-ORDER\">SET-ORDER</a>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "SEARCH-WORDLIST": {
                    "id": "search:SEARCH-WORDLIST",
                    "number": "16.6.1.2192",
                    "name": "SEARCH-WORDLIST",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "SEARCH-WORDLIST",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u wid</em> -- <em>0  |  xt 1  |  xt -1</em> )"
                        },
                        "plain": {
                            " ": "( c-addr u wid -- 0  |  xt 1  |  xt -1 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u wid</em> -- <em>0  |  xt 1  |  xt -1</em> )\n      <p>\n      Find the definition identified by the string <em>c-addr u</em> in\n      the word list identified by <em>wid</em>. If the definition is not\n      found, return zero. If the definition is found, return its\n      execution token <em>xt</em> and one (<em>1</em>) if the definition is\n      immediate, minus-one (<em>-1</em>) otherwise.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:search:SEARCH-WORDLIST\">A.16.6.1.2192 SEARCH-WORDLIST</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.16.6.1.219  SEARCH-WORDLIST -->\n      When <strong>SEARCH-WORDLIST</strong> fails to find the word, it does\n      not return the string, unlike <a href=\"../search/FIND\">FIND</a>. This is in\n      accordance with the general principle that Forth words consume\n      their arguments.\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../search/ONLY\">ONLY</a> <a href=\"../search/FORTH\">FORTH</a> <a href=\"../search/DEFINITIONS\">DEFINITIONS</a> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> xt  <a href=\"../core/Tick\">'</a> <a href=\"../core/DUP\">DUP</a> xt  <a href=\"../core/Store\">!</a> <br>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> xti <a href=\"../core/Tick\">'</a> <a href=\"../core/Dotp\">.(</a>  xti <a href=\"../core/Store\">!</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">Immediate word</span>\n        <p>\n        <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;DUP\"&nbsp;wid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>SEARCH-WORDLIST</strong> -&gt; xt&nbsp;&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;-1 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;.(\"&nbsp;&nbsp;wid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>SEARCH-WORDLIST</strong> -&gt; xti&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;&nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Sq\">S\"</a>&nbsp;DUP\"&nbsp;wid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>SEARCH-WORDLIST</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "SET-CURRENT": {
                    "id": "search:SET-CURRENT",
                    "number": "16.6.1.2195",
                    "name": "SET-CURRENT",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "SET-CURRENT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>wid</em> -- )"
                        },
                        "plain": {
                            " ": "( wid -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>wid</em> -- )\n      <p>\n      Set the compilation word list to the word list identified by\n      <em>wid</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../search/GET-CURRENT\">GET-CURRENT</a> -&gt; wid1&nbsp;<a href=\"../core/Fetch\">@</a> }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"../search/WORDLIST\">WORDLIST</a>&nbsp;wid2&nbsp;<a href=\"../core/Store\">!</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ wid2&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>SET-CURRENT</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../search/GET-CURRENT\">GET-CURRENT</a> -&gt; wid2&nbsp;<a href=\"../core/Fetch\">@</a> }T</span>\n      </p><p>\n      <span class=\"tt\">T{ wid1&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;<strong>SET-CURRENT</strong> -&gt;  }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "SET-ORDER": {
                    "id": "search:SET-ORDER",
                    "number": "16.6.1.2197",
                    "name": "SET-ORDER",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "SET-ORDER",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>wid<sub>n</sub> ... wid<sub>1</sub> n</em> -- )"
                        },
                        "plain": {
                            " ": "( widn ... wid1 n -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>wid<sub>n</sub> ... wid<sub>1</sub> n</em> -- )\n      <p>\n      Set the search order to the word lists identified by\n      <em>wid<sub>n</sub></em> ... <em>wid<sub>1</sub></em>. Subsequently, word list\n      <em>wid<sub>1</sub></em> will be searched first, and word list <em>wid<sub>n</sub></em>\n      searched last. If <em>n</em> is zero, empty the search order. If\n      <em>n</em> is minus one, set the search order to the\n      implementation-defined minimum search order. The minimum search\n      order shall include the words <a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a> and\n      <strong>SET-ORDER</strong>. A system shall allow <em>n</em> to be at least\n      eight.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">This is the complement of <a href=\"../implement#imp:search:GET-ORDER\">E.16.6.1.1647 GET-ORDER</a>.</span>\n      <p>\n      <a href=\"../core/Colon\">:</a> <strong>SET-ORDER</strong> <a href=\"../core/p\">(</a> wid1 ... widn n -0 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> -1 <a href=\"../core/Equal\">=</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> &lt;<em><span class=\"rm\">push system default word lists and n</span></em>&gt; <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> #order <a href=\"../core/Store\">!</a> <br>\n      &nbsp;&nbsp; 0 <a href=\"../core/qDO\">?DO</a>   <a href=\"../core/I\">I</a> <a href=\"../core/CELLS\">CELLS</a> context <a href=\"../core/Plus\">+</a> <a href=\"../core/Store\">!</a>   <a href=\"../core/LOOP\">LOOP</a> <br>\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a>&nbsp;<a href=\"../core/OVER\">OVER</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; <a href=\"../search/GET-ORDER\">GET-ORDER</a>&nbsp;wid1&nbsp;<a href=\"../core/Fetch\">@</a> }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a>&nbsp;<strong>SET-ORDER</strong> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; get-orderlist }T</span> <!-- \\tab \\word{bs} \\textdf{Check nothing changed} \\\\ -->\n        <span class=\"tt\">T{ get-orderlist&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;get-orderList&nbsp;<a href=\"../core/TwoTimes\">2*</a>&nbsp;<strong>SET-ORDER</strong> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;get-orderList&nbsp;<a href=\"../core/TwoTimes\">2*</a> }T</span> <br>\n        <span class=\"tt\">T{ get-orderlist&nbsp;<strong>SET-ORDER</strong>&nbsp;<a href=\"../search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span>\n        <p>\n        <a href=\"../core/Colon\">:</a> so2a <a href=\"../search/GET-ORDER\">GET-ORDER</a> get-orderlist <strong>SET-ORDER</strong> <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> so2 0 <strong>SET-ORDER</strong> so2a <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ so2 -&gt; 0 }T</span>\t&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">0 SET-ORDER leaves an empty search order</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> so3 -1 <strong>SET-ORDER</strong> so2a <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> so4 <a href=\"../search/ONLY\">ONLY</a> so2a <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ so3 -&gt; so4 }T</span>\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">-1 SET-ORDER is the same as ONLY</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "WORDLIST": {
                    "id": "search:WORDLIST",
                    "number": "16.6.1.2460",
                    "name": "WORDLIST",
                    "english": " ",
                    "list": "SEARCH",
                    "basename": "WORDLIST",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>wid</em> )"
                        },
                        "plain": {
                            " ": "( -- wid )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>wid</em> )\n      <p>\n      Create a new empty word list, returning its word list identifier\n      <em>wid</em>. The new word list may be returned from a pool of\n      preallocated word lists or may be dynamically allocated in data\n      space. A system shall allow the creation of at least 8 new word\n      lists in addition to any provided as part of the system.\n      \n      </p>"
                        }
                    }
                }
            }
        },
        "string": {
            "name": "string",
            "words": {
                "BLANK": {
                    "id": "string:BLANK",
                    "number": "17.6.1.0780",
                    "name": "BLANK",
                    "english": " ",
                    "list": "STRING",
                    "basename": "BLANK",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u</em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, store the character value for\n      space in <em>u</em> consecutive character positions beginning at\n      <em>c-addr</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n       <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> s13 <a href=\"../core/Sq\">S\"</a> aaaaa      a\" <a href=\"../core/Semi\">;</a>\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Six spaces</span>\n        <p>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;25&nbsp;<a href=\"../core/CHAR\">CHAR</a>&nbsp;a&nbsp;<a href=\"../core/FILL\">FILL</a> -&gt;  }T</span>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Fill PAD with 25 'a's</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;5&nbsp;<a href=\"../core/CHARS\">CHARS</a>&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;6&nbsp;<strong>BLANK</strong> -&gt;  }T</span>\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Put 6 spaced from character 5</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/PAD\">PAD</a>&nbsp;12&nbsp;s13&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">PAD Should now be same as s13</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "CMOVE": {
                    "id": "string:CMOVE",
                    "number": "17.6.1.0910",
                    "name": "CMOVE",
                    "english": "c-move",
                    "list": "STRING",
                    "basename": "CMOVE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> c-addr<sub>2</sub> u</em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr1 c-addr2 u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> c-addr<sub>2</sub> u</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, copy <em>u</em> consecutive\n      characters from the data space starting at <em>c-addr<sub>1</sub></em> to\n      that starting at <em>c-addr<sub>2</sub></em>, proceeding character-by-character\n      from lower addresses to higher addresses.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../string/CMOVEtop\">17.6.1.0920 CMOVE&gt;</a>, <a href=\"../rationale#rat:string:CMOVE\">A.17.6.1.0910 CMOVE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.17.6.1.0910 CMOVE -->\n      If <em>c-addr<sub>2</sub></em> lies within the source region (i.e., when\n      <em>c-addr<sub>2</sub></em> is not less than <em>c-addr<sub>1</sub></em> and\n      <em>c-addr<sub>2</sub></em> is less than the quantity <em>c-addr<sub>1</sub> u</em>\n      <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/Plus\">+</a>), memory propagation occurs.\n      <p>\n      Assume a character string at address\n      100: \"ABCD\". Then after\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n100 <a href=\"../core/DUP\">DUP</a>   <a href=\"../core/CHARPlus\">CHAR+</a>   3 <strong>CMOVE</strong>\n          \n          </div>\n        </div>\n      <p>\n      the string at address 100 is \"AAAA\".\n      </p><p>\n      See <a href=\"../rationale#rat:core:MOVE\">A.6.1.1900 MOVE</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "CMOVEtop": {
                    "id": "string:CMOVEtop",
                    "number": "17.6.1.0920",
                    "name": "CMOVE>",
                    "english": "c-move-up",
                    "list": "STRING",
                    "basename": "CMOVEtop",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> c-addr<sub>2</sub> u</em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr1 c-addr2 u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> c-addr<sub>2</sub> u</em> -- )\n      <p>\n      If <em>u</em> is greater than zero, copy <em>u</em> consecutive\n      characters from the data space starting at <em>c-addr<sub>1</sub></em> to\n      that starting at <em>c-addr<sub>2</sub></em>, proceeding character-by-character\n      from higher addresses to lower addresses.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../string/CMOVE\">17.6.1.0910 CMOVE</a>, <a href=\"../rationale#rat:string:CMOVEtop\">A.17.6.1.0920 CMOVE&gt;</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.17.6.1.0920 CMOVE> -->\n      If <em>c-addr<sub>1</sub></em> lies within the destination region (i.e.,\n      when <em>c-addr<sub>1</sub></em> is greater than or equal to\n      <em>c-addr<sub>2</sub></em> and <em>c-addr<sub>2</sub></em> is less than the\n      quantity <em>c-addr<sub>1</sub> u</em> <a href=\"../core/CHARS\">CHARS</a>\n      <a href=\"../core/Plus\">+</a>), memory propagation\toccurs.\n      <p>\n      Assume a character string at address\n      100: \"ABCD\". Then after\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n100 <a href=\"../core/DUP\">DUP</a> <a href=\"../core/CHARPlus\">CHAR+</a> <a href=\"../core/SWAP\">SWAP</a>\n          3 <strong>CMOVE&gt;</strong>\n          \n          </div>\n        </div>\n      <p>\n      the string at address 100 is \"DDDD\".\n      </p><p>\n      See <a href=\"../rationale#rat:core:MOVE\">A.6.1.1900 MOVE</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "COMPARE": {
                    "id": "string:COMPARE",
                    "number": "17.6.1.0935",
                    "name": "COMPARE",
                    "english": " ",
                    "list": "STRING",
                    "basename": "COMPARE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>n</em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 c-addr2 u2 -- n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>n</em> )\n      <p>\n      Compare the string specified by <em>c-addr<sub>1</sub> u<sub>1</sub></em> to the\n      string specified by <em>c-addr<sub>2</sub> u<sub>2</sub></em>. The strings are\n      compared, beginning at the given addresses, character by\n      character, up to the length of the shorter string or until a\n      difference is found. If the two strings are identical, <em>n</em>\n      is zero. If the two strings are identical up to the length of\n      the shorter string, <em>n</em> is minus-one (-1) if <em>u<sub>1</sub></em>\n      is less than <em>u<sub>2</sub></em> and one (1) otherwise. If the two\n      strings are not identical up to the length of the shorter string,\n      <em>n</em> is minus-one (-1) if the first non-matching character\n      in the string specified by <em>c-addr<sub>1</sub> u<sub>1</sub></em> has a lesser\n      numeric value than the corresponding character in the string\n      specified by <em>c-addr<sub>2</sub> u<sub>2</sub></em> and one (1) otherwise.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;0&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;&nbsp;PAD&nbsp;SWAP&nbsp;<a href=\"../string/CMOVE\">CMOVE</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Copy s1 to PAD</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;&nbsp;PAD&nbsp;OVER&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;0&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PAD&nbsp;6&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ PAD&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; -1&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PAD&nbsp;0&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ PAD&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; -1&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s6&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ s6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; -1&nbsp; }T</span>\n        <p>\n        <a href=\"../core/Colon\">:</a> \"abdde\"  <a href=\"../core/Sq\">S\"</a> abdde\"  <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> \"abbde\"  <a href=\"../core/Sq\">S\"</a> abbde\"  <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> \"abcdf\"  <a href=\"../core/Sq\">S\"</a> abcdf\"  <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> \"abcdee\" <a href=\"../core/Sq\">S\"</a> abcdee\" <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ s1&nbsp;\"abdde\"&nbsp;&nbsp;<strong>COMPARE</strong> -&gt; -1 }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;\"abbde\"&nbsp;&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;\"abcdf\"&nbsp;&nbsp;<strong>COMPARE</strong> -&gt; -1 }T</span> <br>\n        <span class=\"tt\">T{ s1&nbsp;\"abcdee\"&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> s11 <a href=\"../core/Sq\">S\"</a> 0abc\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> s12 <a href=\"../core/Sq\">S\"</a> 0aBc\" <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ s11&nbsp;s12&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1 }T</span> <br>\n        <span class=\"tt\">T{ s12&nbsp;s11&nbsp;<strong>COMPARE</strong> -&gt; -1 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "DivSTRING": {
                    "id": "string:/STRING",
                    "number": "17.6.1.0245",
                    "name": "/STRING",
                    "english": "slash-string",
                    "list": "STRING",
                    "basename": "DivSTRING",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> n</em> -- <em>c-addr<sub>2</sub> u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 n -- c-addr2 u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> n</em> -- <em>c-addr<sub>2</sub> u<sub>2</sub></em> )\n      <p>\n      Adjust the character string at <em>c-addr<sub>1</sub></em> by <em>n</em>\n      characters. The resulting character string, specified by\n      <em>c-addr<sub>2</sub> u<sub>2</sub></em>, begins at <em>c-addr<sub>1</sub></em> plus <em>n</em>\n      characters and is <em>u<sub>1</sub></em> minus <em>n</em> characters long.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:string:/STRING\">A.17.6.1.0245 /STRING</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.17.6.1.0245 /STRING -->\n      <strong>/STRING</strong> is used to remove or add characters relative\n      to the current position in the character string. Positive values\n      of <em>n</em> will exclude characters from the string while\n      negative values of <em>n</em> will include characters to the\n      left of the string.\n      <p>\n      <a href=\"../core/Sq\">S\"</a> ABC\" 2 <strong>/STRING</strong> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/bs\">\\</a> outputs \"C\" <br>\n      -1 <strong>/STRING</strong> <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/bs\">\\</a> outputs \"BC\"\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;5&nbsp;<strong>/STRING</strong> -&gt; s1&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;5&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;<a href=\"../core/SWAP\">SWAP</a>&nbsp;5&nbsp;<a href=\"../core/Minus\">-</a> }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;10&nbsp;<strong>/STRING</strong>&nbsp;-4&nbsp;<strong>/STRING</strong> -&gt; s1&nbsp;6&nbsp;<strong>/STRING</strong> }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;0&nbsp;<strong>/STRING</strong> -&gt; s1 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "MinusTRAILING": {
                    "id": "string:-TRAILING",
                    "number": "17.6.1.0170",
                    "name": "-TRAILING",
                    "english": "dash-trailing",
                    "list": "STRING",
                    "basename": "MinusTRAILING",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr u<sub>1</sub></em> -- <em>c-addr u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( c-addr u1 -- c-addr u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr u<sub>1</sub></em> -- <em>c-addr u<sub>2</sub></em> )\n      <p>\n      If <em>u<sub>1</sub></em> is greater than zero, <em>u<sub>2</sub></em> is equal to\n      <em>u<sub>1</sub></em> less the number of spaces at the end of the\n      character string specified by <em>c-addr u<sub>1</sub></em>. If <em>u<sub>1</sub></em>\n      is zero or the entire string consists of spaces, <em>u<sub>2</sub></em> is\n      zero.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;&nbsp;s8&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;abc&nbsp;&nbsp;\"&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;&nbsp;s9&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s10&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;\"&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ &nbsp;s1&nbsp;<strong>-TRAILING</strong> -&gt; s1 }T</span>\t\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> \"<code>abcdefghijklmnopqrstuvwxyz</code>\" <br>\n      <span class=\"tt\">T{ &nbsp;s8&nbsp;<strong>-TRAILING</strong> -&gt; s8&nbsp;2&nbsp;- }T</span> \t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> \"<code>abc  </code>\" <br>\n      <span class=\"tt\">T{ &nbsp;s7&nbsp;<strong>-TRAILING</strong> -&gt; s7 }T</span>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> \"<code> </code>\" <br>\n      <span class=\"tt\">T{ &nbsp;s9&nbsp;<strong>-TRAILING</strong> -&gt; s9&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;0 }T</span>\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> \"<code>     </code>\" <br>\n      <span class=\"tt\">T{ s10&nbsp;<strong>-TRAILING</strong> -&gt; s10&nbsp;1- }T</span>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> \"<code>   a </code>\"\n      \n      \n      </p>"
                        }
                    }
                },
                "REPLACES": {
                    "id": "string:REPLACES",
                    "number": "17.6.2.2141",
                    "name": "REPLACES",
                    "english": " ",
                    "list": "STRING EXT",
                    "basename": "REPLACES",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 c-addr2 u2 -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- )\n      <p>\n      Set the string <em>c-addr<sub>1</sub> u<sub>1</sub></em> as the text to substitute for\n      the substitution named by <em>c-addr<sub>2</sub> u<sub>2</sub></em>.\n      If the substitution does not exist it is created.\n      The program may then reuse the buffer <em>c-addr<sub>1</sub> u<sub>1</sub></em> without\n      affecting the definition of the substitution.\n      </p><p>\n      Ambiguous conditions occur as follows:\n      </p><ul>\n      <li> The substitution cannot be created;\n      </li>\n      <li> The name of a substitution contains the `<code>%</code>' delimiter character.\n      </li>\n</ul>\n      <p>\n      <strong>REPLACES</strong> may allot data space and create a definition.  This breaks\n      the contiguity of the current region and is not allowed during compilation\n      of a colon definition\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:contiguous\">3.3.3.2 Contiguous regions</a></strong>,\n      <strong><a href=\"../usage#usage:compilation\">3.4.5 Compilation</a></strong>,\n      <a href=\"../string/SUBSTITUTE\">17.6.2.2255 SUBSTITUTE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/DECIMAL\">DECIMAL</a>\n      <p>\n      <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> place <a href=\"../tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> place &nbsp;&nbsp; <a href=\"../core/bs\">\\</a>  c-addr1 u c-addr2 -- <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Copy the string described by <em>c-addr<em><sub>1</sub></em> u</em> as a counted</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">string at the memory address described by <em>c-addr<em><sub>2</sub></em></em>.</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/TwotoR\">2&gt;R</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 1 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/MOVE\">MOVE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoRfrom\">2R&gt;</a> <a href=\"../core/CStore\">C!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Semi\">;</a> <br>\n      <a href=\"../tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> \"/COUNTED-STRING\" <a href=\"../core/Sq\">S\"</a> /COUNTED-STRING\" <a href=\"../core/Semi\">;</a> <br>\n      \"/COUNTED-STRING\" <a href=\"../core/ENVIRONMENTq\">ENVIRONMENT?</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../tools/BracketIF\">[IF]</a> 256 <a href=\"../tools/BracketTHEN\">[THEN]</a> <br>\n      <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/CONSTANT\">CONSTANT</a> string-max\n      </p><p>\n      <a href=\"../search/WORDLIST\">WORDLIST</a> <a href=\"../core/CONSTANT\">CONSTANT</a> wid-subst <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Wordlist ID of the wordlist used to hold substitution names and replacement text.</span>\n      </p><p>\n      <a href=\"../tools/BracketDEFINED\">[DEFINED]</a> VFXforth <a href=\"../tools/BracketIF\">[IF]</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\"><strong>VFX Forth</strong></span> <br>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> makeSubst\t<a href=\"../core/bs\">\\</a> c-addr len -- c-addr <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Given a name string create a substution and storage space.</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Return the address of the buffer for the substitution text.</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">This word requires system specific knowledge of the host Forth.</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Some systems may need to perform case conversion here.</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../search/GET-CURRENT\">GET-CURRENT</a> <a href=\"../core/toR\">&gt;R</a> wid-subst <a href=\"../search/SET-CURRENT\">SET-CURRENT</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; ($create) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">like <a href=\"../core/CREATE\">CREATE</a> but takes c-addr/len</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../search/SET-CURRENT\">SET-CURRENT</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/HERE\">HERE</a>  string-max <a href=\"../core/ALLOT\">ALLOT</a>  0 <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CStore\">C!</a>\t<a href=\"../core/bs\">\\</a> <span class=\"rm\">create buffer space</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/Semi\">;</a> <br>\n      <a href=\"../tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"../tools/BracketDEFINED\">[DEFINED]</a> (WID-CREATE) <a href=\"../tools/BracketIF\">[IF]</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\"><strong>SwiftForth</strong></span> <br>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> makeSubst <a href=\"../core/bs\">\\</a> c-addr len -- c-addr <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; wid-subst (WID-CREATE) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">like <a href=\"../core/CREATE\">CREATE</a> but takes c-addr/len/wid</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; LAST <a href=\"../core/Fetch\">@</a> &gt;CREATE <a href=\"../core/Store\">!</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/HERE\">HERE</a>  string-max <a href=\"../core/ALLOT\">ALLOT</a>  0 <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CStore\">C!</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">create buffer space</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/Semi\">;</a> <br>\n      <a href=\"../tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> findSubst <a href=\"../core/bs\">\\</a> c-addr len -- xt flag | 0 <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Given a name string, find the substitution.</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Return <em>xt</em> and <em>flag</em> if found, or just zero if not found.</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Some systems may need to perform case conversion here.</span> <br>\n      &nbsp;&nbsp; wid-subst <a href=\"../search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> <strong>REPLACES</strong> <a href=\"../core/bs\">\\</a> text tlen name nlen -- <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Define the string <em>text/tlen</em> as the text to substitute for the substitution named <em>name/nlen</em>.</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">If the substitution does not exist it is created.</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> findSubst <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/NIP\">NIP</a> <a href=\"../core/NIP\">NIP</a>  <a href=\"../core/EXECUTE\">EXECUTE</a> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">get buffer address</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; makeSubst <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; place &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">copy as counted string</span> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      </p>"
                        }
                    }
                },
                "SEARCH": {
                    "id": "string:SEARCH",
                    "number": "17.6.1.2191",
                    "name": "SEARCH",
                    "english": " ",
                    "list": "STRING",
                    "basename": "SEARCH",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>c-addr<sub>3</sub> u<sub>3</sub> flag</em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 c-addr2 u2 -- c-addr3 u3 flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>c-addr<sub>3</sub> u<sub>3</sub> flag</em> )\n      <p>\n      Search the string specified by <em>c-addr<sub>1</sub> u<sub>1</sub></em> for the\n      string specified by <em>c-addr<sub>2</sub> u<sub>2</sub></em>. If <em>flag</em> is\n      true, a match was found at <em>c-addr<sub>3</sub></em> with <em>u<sub>3</sub></em>\n      characters remaining. If <em>flag</em> is false there was no\n      match and <em>c-addr<sub>3</sub></em> is <em>c-addr<sub>1</sub></em> and <em>u<sub>3</sub></em>\n      is <em>u<sub>1</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s2&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;abc\"&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s3&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;jklmn\"&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s4&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;z\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s5&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;mnoq\"&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s6&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;12345\"&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s7&nbsp;<a href=\"../core/Sq\">S\"</a>&nbsp;\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ s1&nbsp;s2&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s3&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&nbsp;9&nbsp;<a href=\"../string/DivSTRING\">/STRING</a>&nbsp;&lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s4&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;25&nbsp;<a href=\"../string/DivSTRING\">/STRING</a>&nbsp;&lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s5&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s6&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s7&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;TRUE&gt;&nbsp; }T</span> \n      \n      \n      </p>"
                        }
                    }
                },
                "SLITERAL": {
                    "id": "string:SLITERAL",
                    "number": "17.6.1.2212",
                    "name": "SLITERAL",
                    "english": " ",
                    "list": "STRING",
                    "basename": "SLITERAL",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>c-addr<sub>1</sub> u</em> -- )",
                            "Run-time:": "( -- <em>c-addr<sub>2</sub> u</em> )"
                        },
                        "plain": {
                            "Compilation:": "( c-addr1 u -- )",
                            "Run-time:": "( -- c-addr2 u )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( <em>c-addr<sub>1</sub> u</em> -- )\n      <p>\n      Append the run-time semantics given below to the current\n      definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- <em>c-addr<sub>2</sub> u</em> )\n      <p>\n      Return <em>c-addr<sub>2</sub> u</em> describing a string consisting of\n      the characters specified by <em>c-addr<sub>1</sub> u</em> during\n      compilation. A program shall not alter the returned string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:string:SLITERAL\">A.17.6.1.2212 SLITERAL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.17.6.1.2212 SLITERAL -->\n      The current functionality of <a href=\"../core/Sq\">6.1.2165 S\"</a> may be\n      provided by the following definition:\n      <p>\n      \n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <a href=\"../core/Sq\">S\"</a> <a href=\"../core/p\">(</a> \"ccc&lt;quote&gt;\" -- ) <br>\n          &nbsp;&nbsp; <a href=\"../core/BracketCHAR\">[CHAR]</a> \" <a href=\"../core/PARSE\">PARSE</a>  \n          <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../string/SLITERAL\">SLITERAL</a> <br>\n          <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n          \n          </div>\n        </div>\n      \n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;s14&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;s1&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<strong>SLITERAL</strong>&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s14&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;s14&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/Equal\">=</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/Equal\">=</a> -&gt; &lt;TRUE&gt;&nbsp;&lt;FALSE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "SUBSTITUTE": {
                    "id": "string:SUBSTITUTE",
                    "number": "17.6.2.2255",
                    "name": "SUBSTITUTE",
                    "english": " ",
                    "list": "STRING EXT",
                    "basename": "SUBSTITUTE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>c-addr<sub>2</sub> u<sub>3</sub> n</em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 c-addr2 u2 -- c-addr2 u3 n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub> u<sub>2</sub></em> -- <em>c-addr<sub>2</sub> u<sub>3</sub> n</em> )\n      <p>\n      Perform substitution on the string <em>c-addr<sub>1</sub> u<sub>1</sub></em> placing\n      the result at string <em>c-addr<sub>2</sub> u<sub>3</sub></em>, where <em>u3</em> is\n      the length of the resulting string.\n      An error occurs if the resulting string will not fit into\n      <em>c-addr<sub>2</sub> u<sub>2</sub></em> or if <em>c-addr<sub>2</sub></em> is the same as <em>c-addr<sub>1</sub></em>.\n      The return value <em>n</em> is positive or 0 on success and indicates the\n      number of substitutions made.\n      A negative value for <em>n</em> indicates that an error occurred, leaving\n      <em>c-addr<sub>2</sub> u<sub>3</sub></em> undefined.\n      Negative values of <em>n</em> are implementation defined except for\n      values in table <strong><a href=\"../exception#table:throw\">9.1 </a><a href=\"exception/THROW\">THROW</a> code assignments</strong>.\n      </p><p>\n      Substitution occurs left to right from the start of <em>c-addr<sub>1</sub></em>\n      in one pass and is non-recursive.\n      </p><p>\n      When text of a potential substitution name, surrounded by `<code>%</code>' (ASCII $25) delimiters\n      is encountered by <strong>SUBSTITUTE</strong>, the following occurs:\n      </p><p>\n      </p><ol style=\"list-style-type: decimal\">\n      <li> If the name is null, a single delimiter character is passed\n      to the output, i.e., <code>%%</code> is replaced by <code>%</code>.\n      The current number of substitutions is not changed.\n      <p>\n      </p></li>\n      <li> If the text is a valid substitution name acceptable to\n      <a href=\"../string/REPLACES\">17.6.2.2141 REPLACES</a>, the leading and trailing delimiter\n      characters and the enclosed substitution name are replaced by\n      the substitution text.  The current number of substitutions\n      is incremented.\n      <p>\n      </p></li>\n      <li> If the text is not a valid substitution name, the name with\n      leading\tand trailing delimiters is passed unchanged to the\n      output.  The current number of substitutions is not changed.\n      <p>\n      </p></li>\n      <li> Parsing of the input string resumes after the trailing delimiter.\n      </li>\n</ol>\n      <p>\n      If after processing any pairs of delimiters, the residue of the input string contains\n      a single delimiter, the residue is passed unchanged to the output.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../string/REPLACES\">17.6.2.2141 REPLACES</a>, <a href=\"../string/UNESCAPE\">17.6.2.2375 UNESCAPE</a>, <a href=\"../rationale#rat:string:SUBSTITUTE\">A.17.6.2.2255 SUBSTITUTE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      Many applications need to be able to perform text substitution, for\n      example:\n      <p>\n      </p><div class=\"center\">\n\n        Your balance at &lt;<em>time</em>&gt; on &lt;<em>date</em>&gt; is &lt;<em>currencyvalue</em>&gt;.\n        \n        </div>\n      <p>\n      Translation of a sentence or message from one language to another may\n      result in changes to the displayed parameter order.  The example, the\n      Afrikaans translation of this sentence requires a different order:\n      </p><p>\n      </p><div class=\"center\">\n\n        Jou balans op &lt;<em>date</em>&gt; om &lt;<em>time</em>&gt; is &lt;<em>currencyvalue</em>&gt;.\n        \n        </div>\n      <p>\n      The words <strong>SUBSTITUTE</strong> and <a href=\"../string/REPLACES\">REPLACES</a> provide for this\n      requirements by defining a text substitution facility.  For example,\n      we can provide an initial string in the form:\n      </p><p>\n      </p><div class=\"center\">\n\n        <code>Your balance at %time% on %date% is %currencyvalue%.</code>\n        \n        </div>\n      <p>\n      The <code>%</code> is used as delimiters for the substitution name.  The\n      text \"<code>currencyvalue</code>\", \"<code>date</code>\" and \"<code>time</code>\"\n      are text substitutions, where the replacement text is defined by\n      <a href=\"../string/REPLACES\">REPLACES</a>:\n      </p><p>\n      \n      \n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<div class=\"tabbing\">\n            <a href=\"../core/Colon\">:</a> date <a href=\"../core/Sq\">S\"</a> 10/Nov/2014\" <a href=\"../core/Semi\">;</a> <br>\n            <a href=\"../core/Colon\">:</a> time <a href=\"../core/Sq\">S\"</a> 02:52\" <a href=\"../core/Semi\">;</a> <br>\n            date  <a href=\"../core/Sq\">S\"</a> date\" <a href=\"../string/REPLACES\">REPLACES</a> <br>\n            time  <a href=\"../core/Sq\">S\"</a> time\" <a href=\"../string/REPLACES\">REPLACES</a>\n            <br>\n            \n            </div>\n          \n          </div>\n        </div>\n      <p>\n      The substitution name \"date\" is defined to be replaced with the string\n      \"10/Nov/2014\" and \"time\" to be replaced with \"02:52\".  Thus\n      <strong>SUBSTITUTE</strong> would produce the string:\n      </p><p>\n      </p><div class=\"center\">\n\n        <code>Your balance at 02:52 on 10/Nov/2014 is %currencyvalue%.</code>\n        \n        </div>\n      <p>\n      As the substitution name \"currencyvalue\" has not been defined, it is\n      left unchanged in the resulting string.\n      </p><p>\n      The return value <em>n</em> is nonnegative on success and indicates the\n      number of substitutions made.  In the above example, this would be two.\n      A negative value indicates that an error occurred.\n      As substitution is not recursive, the return value could be used to\n      provide a recursive substitution.\n      </p><p>\n      Implementation of <strong>SUBSTITUTE</strong> may be considered as being equivalent\n      to a wordlist which is searched.  If the substitution name is found, the\n      word is executed, returning a substitution string.\n      Such words can be deferred or multiple wordlists can be used.\n      The implementation techniques required are similar to those used by\n      <a href=\"../core/ENVIRONMENTq\">ENVIRONMENT?</a>.\n      There is no provision for changing the delimiter character, although a\n      system may provide system-specific extensions.\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">Assuming <a href=\"../implement#imp:string:REPLACES\">E.17.6.2.2141 REPLACES</a> has been defined.</span>\n      <p>\n      <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> bounds <a href=\"../tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> bounds &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> addr len -- addr+len addr <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SWAP\">SWAP</a><br>\n      &nbsp;&nbsp; <a href=\"../core/Semi\">;</a> <br>\n      <a href=\"../tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"../tools/BracketUNDEFINED\">[UNDEFINED]</a> -rot <a href=\"../tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Colon\">:</a> -rot &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> a b c -- c a b <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ROT\">ROT</a> <a href=\"../core/ROT\">ROT</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Semi\">;</a> <br>\n      <a href=\"../tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"../core/CHAR\">CHAR</a> % <a href=\"../core/CONSTANT\">CONSTANT</a> delim \n      &nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Character used as the substitution name delimiter.</span> <br>\n      string-max <a href=\"../core/BUFFERColon\">BUFFER:</a> Name\t<!-- \\word{bs} -{}- addr \\\\ -->\n       <a href=\"../core/bs\">\\</a> <span class=\"rm\">Holds substitution name as a counted string.</span> <br>\n      <a href=\"../core/VARIABLE\">VARIABLE</a> DestLen <!-- \\word{bs} -{}- addr \\\\ -->\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Maximum length of the destination buffer.</span> <br>\n      <a href=\"../double/TwoVARIABLE\">2VARIABLE</a> Dest <!-- \\word{bs} -{}- addr \\\\ -->\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Holds destination string current length and address.</span> <br>\n      <a href=\"../core/VARIABLE\">VARIABLE</a> SubstErr <!-- \\word{bs} -{}- addr \\\\ -->\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Holds zero or an error code.</span>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> addDest <a href=\"../core/bs\">\\</a> char -- <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Add the character to the destination string.</span> <br>\n      &nbsp;&nbsp; Dest <a href=\"../core/Fetch\">@</a> DestLen <a href=\"../core/Fetch\">@</a> <a href=\"../core/less\">&lt;</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; Dest <a href=\"../core/TwoFetch\">2@</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/CStore\">C!</a>  1 <a href=\"../core/CHARS\">CHARS</a> Dest <a href=\"../core/PlusStore\">+!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> -1 SubstErr <a href=\"../core/Store\">!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> formName <a href=\"../core/bs\">\\</a> c-addr len -- c-addr' len' <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Given a source string pointing at a leading delimiter, place the name string in the name buffer.</span> <br>\n      &nbsp;&nbsp; 1 <a href=\"../string/DivSTRING\">/STRING</a> <a href=\"../core/TwoDUP\">2DUP</a> delim scan <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/DROP\">DROP</a>\t\t\t\t  <a href=\"../core/bs\">\\</a> <span class=\"rm\">find length of residue</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/toR\">&gt;R</a> Name place &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">save name in buffer</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> 1 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/Plus\">+</a> <a href=\"../string/DivSTRING\">/STRING</a>\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">step over name and trailing <code>%</code></span> <br>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> &gt;dest <a href=\"../core/bs\">\\</a> c-addr len -- <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Add a string to the output string.</span> <br>\n      &nbsp;&nbsp; bounds <a href=\"../core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <a href=\"../core/CFetch\">C@</a> addDest <br>\n      &nbsp;&nbsp; 1 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/PlusLOOP\">+LOOP</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> processName <a href=\"../core/bs\">\\</a> -- flag <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Process the last substitution name. Return true if found, 0 if not found.</span> <br>\n      &nbsp;&nbsp; Name <a href=\"../core/COUNT\">COUNT</a> findSubst <a href=\"../core/DUP\">DUP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/EXECUTE\">EXECUTE</a> <a href=\"../core/COUNT\">COUNT</a> &gt;dest <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; delim addDest  Name <a href=\"../core/COUNT\">COUNT</a> &gt;dest  delim addDest <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> <strong>SUBSTITUTE</strong> <a href=\"../core/bs\">\\</a> src slen dest dlen -- dest dlen' n <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Expand the source string using substitutions.</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Note that this version is simplistic, performs no error checking,</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">and requires a global buffer and global variables.</span> <br>\n      &nbsp;&nbsp; Destlen <a href=\"../core/Store\">!</a>  0 Dest <a href=\"../core/TwoStore\">2!</a>  0 -rot <a href=\"../core/bs\">\\</a> -- 0 src slen <br>\n      &nbsp;&nbsp; 0 SubstErr <a href=\"../core/Store\">!</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> 0 <a href=\"../core/more\">&gt;</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CFetch\">C@</a> delim <a href=\"../core/ne\">&lt;&gt;</a> <a href=\"../core/IF\">IF</a>\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">character not <code>%</code></span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/OVER\">OVER</a> <a href=\"../core/CFetch\">C@</a> addDest  1 <a href=\"../string/DivSTRING\">/STRING</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/OVER\">OVER</a> 1 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/CFetch\">C@</a> delim <a href=\"../core/Equal\">=</a> <a href=\"../core/IF\">IF</a>\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\"><code>%%</code> for one output <code>%</code></span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\tdelim addDest  2 <a href=\"../string/DivSTRING\">/STRING</a>\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">add one <code>%</code> to output</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\tformName processName <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t<a href=\"../core/ROT\">ROT</a> <a href=\"../core/OnePlus\">1+</a> -rot\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">count substitutions</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDROP\">2DROP</a> Dest <a href=\"../core/TwoFetch\">2@</a>  <a href=\"../core/ROT\">ROT</a> SubstErr <a href=\"../core/Fetch\">@</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/DROP\">DROP</a>  SubstErr <a href=\"../core/Fetch\">@</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n            <div class=\"tt\">\n30 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/BUFFERColon\">BUFFER:</a> subbuff <a href=\"../core/bs\">\\</a> <span class=\"rm\">Destination buffer</span>\n        <p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Define a few string constants</span> <br>\n        <a href=\"../core/Colon\">:</a> \"hi\"    <a href=\"../core/Sq\">S\"</a> hi\"    <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> \"wld\"   <a href=\"../core/Sq\">S\"</a> wld\"   <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> \"hello\" <a href=\"../core/Sq\">S\"</a> hello\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> \"world\" <a href=\"../core/Sq\">S\"</a> world\" <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Define a few test strings</span> <br>\n        <a href=\"../core/Colon\">:</a> sub1 <a href=\"../core/Sq\">S\"</a> Start: %hi%,%wld%! :End\" ; &nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> <span class=\"rm\">Original string</span> <br>\n        <a href=\"../core/Colon\">:</a> sub2 <a href=\"../core/Sq\">S\"</a> Start: hello,world! :End\" ;    &nbsp;&nbsp;<a href=\"../core/bs\">\\</a> <span class=\"rm\">First target string</span> <br>\n        <a href=\"../core/Colon\">:</a> sub3 <a href=\"../core/Sq\">S\"</a> Start: world,hello! :End\" ;    &nbsp;&nbsp;<a href=\"../core/bs\">\\</a> <span class=\"rm\">Second target string</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Define the <code>hi</code> and <code>wld</code> substitutions</span> <br>\n        <span class=\"tt\">T{ \"hello\"&nbsp;\"hi\"&nbsp;&nbsp;<a href=\"../string/REPLACES\">REPLACES</a> -&gt;  }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Replace \"<code>%hi%</code>\"  with \"<code>hello</code>\"</span> <br>\n        <span class=\"tt\">T{ \"world\"&nbsp;\"wld\"&nbsp;<a href=\"../string/REPLACES\">REPLACES</a> -&gt;  }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Replace \"<code>%wld%</code>\" with \"<code>world</code>\"</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">\"<code>%hi%,%wld%</code>\" changed to \"<code>hello,world</code>\"</span> <br>\n        <span class=\"tt\">T{ sub1&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;sub2&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 2&nbsp;0 }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Change the <code>hi</code> and <code>wld</code> substitutions</span> <br>\n        <span class=\"tt\">T{ \"world\"&nbsp;\"hi\"&nbsp;&nbsp;<a href=\"../string/REPLACES\">REPLACES</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ \"hello\"&nbsp;\"wld\"&nbsp;<a href=\"../string/REPLACES\">REPLACES</a> -&gt;  }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Now \"<code>%hi%,%wld%</code>\" should be changed to \"<code>world,hello</code>\"</span> <br>\n        <span class=\"tt\">T{ sub1&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;sub3&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 2&nbsp;0 }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Where the subsitution name is not defined</span> <br>\n        <a href=\"../core/Colon\">:</a> sub4 <a href=\"../core/Sq\">S\"</a> aaa%bbb%ccc\" ; <br>\n        <span class=\"tt\">T{ sub4&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;sub4&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0&nbsp;0 }T</span>\n        </p><p>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Finally the <code>%</code> character itself</span> <br>\n        <a href=\"../core/Colon\">:</a> sub5 <a href=\"../core/Sq\">S\"</a> aaa%%bbb\" <a href=\"../core/Semi\">;</a> <br>\n        <a href=\"../core/Colon\">:</a> sub6 <a href=\"../core/Sq\">S\"</a> aaa%bbb\" <a href=\"../core/Semi\">;</a> <br>\n        <span class=\"tt\">T{ sub5&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;<a href=\"../core/ROT\">ROT</a>&nbsp;sub6&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0&nbsp;0 }T</span> <br>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "UNESCAPE": {
                    "id": "string:UNESCAPE",
                    "number": "17.6.2.2375",
                    "name": "UNESCAPE",
                    "english": " ",
                    "list": "STRING EXT",
                    "basename": "UNESCAPE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub></em> -- <em>c-addr<sub>2</sub> u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( c-addr1 u1 c-addr2 -- c-addr2 u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>c-addr<sub>1</sub> u<sub>1</sub> c-addr<sub>2</sub></em> -- <em>c-addr<sub>2</sub> u<sub>2</sub></em> )\n      <p>\n      Replace each `<code>%</code>' character in the input string\n      <em>c-addr<sub>1</sub> u<sub>1</sub></em> by two `<code>%</code>' characters.  The output\n      is represented by <em>c-addr<sub>2</sub> u<sub>2</sub></em>.  The buffer at <em>c-addr<sub>2</sub></em>\n      shall be big enough to hold the unescaped string.  An ambiguous\n      condition occurs if the resulting string will not fit into the\n      destination buffer (<em>c-addr<sub>2</sub></em>).\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../string/SUBSTITUTE\">17.6.2.2255 SUBSTITUTE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>UNESCAPE</strong> <a href=\"../core/bs\">\\</a> c-addr1 len1 c-addr2 -- c-addr2 len2 <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Replace each '<code>%</code>' character in the input string <em>c-addr<em><sub>1</sub></em> len<em><sub>1</sub></em></em> with two '<code>%</code>' characters.</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">The output is represented by <em>c-addr<em><sub>2</sub></em> len<em><sub>2</sub></em></em>.</span> <br>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">If you pass a string through <strong>UNESCAPE</strong> and then <a href=\"../string/SUBSTITUTE\">SUBSTITUTE</a>, you get the original string.</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <a href=\"../core/TwoSWAP\">2SWAP</a>  <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/BracketCHAR\">[CHAR]</a> % <a href=\"../core/Equal\">=</a> <a href=\"../core/IF\">IF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/BracketCHAR\">[CHAR]</a> % <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CStore\">C!</a> <a href=\"../core/OnePlus\">1+</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <a href=\"../core/CFetch\">C@</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/CStore\">C!</a> <a href=\"../core/OnePlus\">1+</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/LOOP\">LOOP</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Minus\">-</a> <br>\n      <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      Using <code>subbuff</code>, <code>sub5</code> and <code>sub6</code> from <a href=\"../testsuite#test:string:SUBSTITUTE\">F.17.6.2.2255 SUBSTITUTE</a>.\n      <p>\n      <span class=\"tt\">T{ sub6&nbsp;subbuff&nbsp;<strong>UNESCAPE</strong>&nbsp;sub5&nbsp;<a href=\"../string/COMPARE\">COMPARE</a> -&gt; 0 }T</span>\n      \n      \n      </p>"
                        }
                    }
                }
            }
        },
        "tools": {
            "name": "tools",
            "words": {
                "AHEAD": {
                    "id": "tools:AHEAD",
                    "number": "15.6.2.0702",
                    "name": "AHEAD",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "AHEAD",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: -- <em>orig</em> )",
                            "Run-time:": "( -- )"
                        },
                        "plain": {
                            "Compilation:": "( C: -- orig )",
                            "Run-time:": "( -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: -- <em>orig</em> )\n      <p>\n      Put the location of a new unresolved forward reference\n      <em>orig</em> onto the control flow stack. Append the run-time\n      semantics given below to the current definition. The semantics\n      are incomplete until <em>orig</em> is resolved (e.g., by\n      <a href=\"../core/THEN\">THEN</a>).\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Continue execution at the location specified by the resolution\n      of <em>orig</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pt1&nbsp;<strong>AHEAD</strong>&nbsp;1111&nbsp;2222&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;3333&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ pt1 -&gt; 3333 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "ASSEMBLER": {
                    "id": "tools:ASSEMBLER",
                    "number": "15.6.2.0740",
                    "name": "ASSEMBLER",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "ASSEMBLER",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Replace the first word list in the search order with the\n      <strong>ASSEMBLER</strong> word list.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../search#wordlist:search\">16 The optional Search-Order word set</a></strong>.\n      \n      "
                        }
                    }
                },
                "BYE": {
                    "id": "tools:BYE",
                    "number": "15.6.2.0830",
                    "name": "BYE",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "BYE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Return control to the host operating system, if any.\n      \n      </p>"
                        }
                    }
                },
                "BracketDEFINED": {
                    "id": "tools:[DEFINED]",
                    "number": "15.6.2.2530.30",
                    "name": "[DEFINED]",
                    "english": "bracket-defined",
                    "list": "TOOLS EXT",
                    "basename": "BracketDEFINED",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"&lt;spaces&gt;name ...\"</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            "Execution:": "( \"<spaces>name ...\" -- flag )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name ...\"</em> -- <em>flag</em> )\n      <p>\n      Skip leading space delimiters.  Parse name delimited by a space.\n      Return a true flag if <em>name</em> is the name of a word that can\n      be found (according to the rules in the system's <a href=\"../core/FIND\">FIND</a>);\n      otherwise return a false flag.\n      <strong>[DEFINED]</strong> is an immediate word.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.15.6.2.---- [DEFINED] -->\n      <a href=\"../core/Colon\">:</a> <strong>[DEFINED]</strong> <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a> <a href=\"../core/FIND\">FIND</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/Zerone\">0&lt;&gt;</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      \n      \n      "
                        }
                    }
                },
                "BracketELSE": {
                    "id": "tools:[ELSE]",
                    "number": "15.6.2.2531",
                    "name": "[ELSE]",
                    "english": "bracket-else",
                    "list": "TOOLS EXT",
                    "basename": "BracketELSE",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"&lt;spaces&gt;name ...\"</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( \"<spaces>name ...\" -- )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name ...\"</em> -- )\n      <p>\n      Skipping leading spaces, parse and discard space-delimited words\n      from the parse area, including nested occurrences of <a href=\"../tools/BracketIF\">[IF]</a>\n      ... <a href=\"../tools/BracketTHEN\">[THEN]</a> and <a href=\"../tools/BracketIF\">[IF]</a> ... <strong>[ELSE]</strong>\n      ...  <a href=\"../tools/BracketTHEN\">[THEN]</a>, until the word <a href=\"../tools/BracketTHEN\">[THEN]</a> has been\n      parsed and discarded. If the parse area becomes exhausted, it is\n      refilled as with <a href=\"../core/REFILL\">REFILL</a>. <strong>[ELSE]</strong> is an\n      immediate word.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:tools:[ELSE]\">A.15.6.2.2531 [ELSE]</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.2531 [ELSE] -->\n      Typical use:\n      ... <em>flag</em>\n      <a href=\"../tools/BracketIF\">[IF]</a> ...\n      <strong>[ELSE]</strong> ...\n      <a href=\"../tools/BracketTHEN\">[THEN]</a> ...\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <div class=\"tabbing\">\n        \n        <a href=\"../core/Colon\">:</a> <strong>[ELSE]</strong> <a href=\"../core/p\">(</a> -- ) <br>\n        &nbsp;&nbsp;&nbsp; 1 <a href=\"../core/BEGIN\">BEGIN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> level <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a>   <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a> <a href=\"../core/COUNT\">COUNT</a>   <a href=\"../core/DUP\">DUP</a>   <a href=\"../core/WHILE\">WHILE</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> level adr len <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> [IF]\"  <a href=\"../string/COMPARE\">COMPARE</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> level adr len <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/OnePlus\">1+</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/bs\">\\</a> level' <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> level adr len <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Sq\">S\"</a> [ELSE]\" <a href=\"../string/COMPARE\">COMPARE</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/bs\">\\</a> level adr len <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/OneMinus\">1-</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/THEN\">THEN</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/bs\">\\</a> level' <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/ELSE\">ELSE</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/bs\">\\</a> level adr len <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Sq\">S\"</a> [THEN]\" <a href=\"../string/COMPARE\">COMPARE</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/bs\">\\</a> level <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/OneMinus\">1-</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t<a href=\"../core/bs\">\\</a> level' <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/qDUP\">?DUP</a> <a href=\"../core/ZeroEqual\">0=</a>   <a href=\"../core/IF\">IF</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> level' <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/TwoDROP\">2DROP</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/bs\">\\</a> level <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/REFILL\">REFILL</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/UNTIL\">UNTIL</a>\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> level <br>\n        &nbsp;&nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> <br>\n        <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        <br>\n        \n        </div>\n      \n      \n      "
                        }
                    }
                },
                "BracketIF": {
                    "id": "tools:[IF]",
                    "number": "15.6.2.2532",
                    "name": "[IF]",
                    "english": "bracket-if",
                    "list": "TOOLS EXT",
                    "basename": "BracketIF",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>flag | flag \"&lt;spaces&gt;name ...\"</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( flag | flag \"<spaces>name ...\" -- )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>flag | flag \"&lt;spaces&gt;name ...\"</em> -- )\n      <p>\n      If <em>flag</em> is true, do nothing. Otherwise, skipping leading\n      spaces, parse and discard space-delimited words from the parse\n      area, including nested occurrences of <strong>[IF]</strong> ...\n      <a href=\"../tools/BracketTHEN\">[THEN]</a> and <strong>[IF]</strong> ... <a href=\"../tools/BracketELSE\">[ELSE]</a> ...\n      <a href=\"../tools/BracketTHEN\">[THEN]</a>, until either the word <a href=\"../tools/BracketELSE\">[ELSE]</a> or the word\n      <a href=\"../tools/BracketTHEN\">[THEN]</a> has been parsed and discarded. If the parse area\n      becomes exhausted, it is refilled as with <a href=\"../core/REFILL\">REFILL</a>.\n      <strong>[IF]</strong> is an immediate word.\n      </p><p>\n      An ambiguous condition exists if <strong>[IF]</strong> is\n      <a href=\"../core/POSTPONE\">POSTPONE</a>d, or if the end of the input buffer is\n      reached and cannot be refilled before the terminating\n      <a href=\"../tools/BracketELSE\">[ELSE]</a> or <a href=\"../tools/BracketTHEN\">[THEN]</a> is parsed.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:tools:[IF]\">A.15.6.2.2532 [IF]</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.2532 [IF] -->\n      Typical use:\n      ... <em>flag</em>\n      <strong>[IF]</strong> ...\n      <a href=\"../tools/BracketELSE\">[ELSE]</a> ...\n      <a href=\"../tools/BracketTHEN\">[THEN]</a> ...\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>[IF]</strong> <a href=\"../core/p\">(</a> flag -- ) <br>\n      &nbsp;&nbsp; <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../tools/BracketELSE\">[ELSE]</a> <a href=\"../core/THEN\">THEN</a> <br>\n      <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      \n      \n      "
                        }
                    }
                },
                "BracketTHEN": {
                    "id": "tools:[THEN]",
                    "number": "15.6.2.2533",
                    "name": "[THEN]",
                    "english": "bracket-then",
                    "list": "TOOLS EXT",
                    "basename": "BracketTHEN",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- )"
                        },
                        "plain": {
                            "Execution:": "( -- )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( -- )\n      <p>\n      Does nothing. <strong>[THEN]</strong> is an immediate word.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:tools:[THEN]\">A.15.6.2.2533 [THEN]</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.2533 [THEN] -->\n      Typical use:\n      ... <em>flag</em>\n      <a href=\"../tools/BracketIF\">[IF]</a> ...\n      <a href=\"../tools/BracketELSE\">[ELSE]</a> ...\n      <strong>[THEN]</strong> ...\n      <p>\n      Software that runs in several system environments often\n      contains some source code that is environmentally dependent.\n      Conditional compilation — the selective inclusion or\n      exclusion of portions of the source code at compile time —\n      is one technique that is often used to assist in the\n      maintenance of such source code.\n      </p><p>\n      Conditional compilation is sometimes done with \"smart\n      comments\" — definitions that either skip or do not skip\n      the remainder of the line based on some test. For example:\n      </p><p>\n      \n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/bs\">\\</a> If 16-Bit? contains TRUE, lines preceded by 16BIT\\ <br>\n          <a href=\"../core/bs\">\\</a> will be skipped. Otherwise, they will not be skipped.\n          <p>\n          <a href=\"../core/VARIABLE\">VARIABLE</a> 16-BIT?\n          </p><p>\n          <a href=\"../core/Colon\">:</a> 16BIT\\  <a href=\"../core/p\">(</a> -- )  \n          16-BIT? <a href=\"../core/Fetch\">@</a>  \n          <a href=\"../core/IF\">IF</a>   <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/bs\">\\</a>   <a href=\"../core/THEN\">THEN</a> <br>\n          <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n          \n          </p></div>\n        </div>\n      This technique works on a line by line basis, and is good for\n      short, isolated variant code sequences.\n      <p>\n      More complicated conditional compilation problems suggest a\n      nestable method that can encompass more than one source line\n      at a time. The words included in the optional Programming tools\n      extensions word set are useful for this purpose.\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>[THEN]</strong> <a href=\"../core/p\">(</a> -- ) <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ &lt;TRUE&gt;&nbsp;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;111&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;222&nbsp;<strong>[THEN]</strong> -&gt; 111 }T</span> <br>\n      <span class=\"tt\">T{ &lt;FALSE&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;111&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;222&nbsp;<strong>[THEN]</strong> -&gt; 222 }T</span>\n      <p>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Check words are immediate</span> <br>\n      <a href=\"../core/Colon\">:</a> tfind <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a> <a href=\"../core/FIND\">FIND</a> <a href=\"../core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ tfind&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/NIP\">NIP</a> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ tfind&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;<a href=\"../core/NIP\">NIP</a> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ tfind&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../core/NIP\">NIP</a> -&gt; 1 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pt2&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;&nbsp;0&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;1111&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;2222&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;pt2 -&gt; 2222 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pt3&nbsp;<a href=\"../core/Bracket\">[</a>&nbsp;-1&nbsp;<a href=\"../right-bracket\">]</a>&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;3333&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;4444&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;pt3 -&gt; 3333 }T</span>\n      </p><p>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Code spread over more than 1 line</span> <br>\n      <span class=\"tt\">T{ &lt;TRUE&gt;&nbsp;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>[THEN]</strong> -&gt; 1&nbsp;2 }T</span><br>\n      <span class=\"tt\">T{ &lt;FALSE&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;4&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>[THEN]</strong> -&gt; 3&nbsp;4 }T</span>\n      </p><p>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">Nested</span> <br>\n      <a href=\"../core/Colon\">:</a> &lt;T&gt; &lt;TRUE&gt;  <a href=\"../core/Semi\">;</a> <br>\n      <a href=\"../core/Colon\">:</a> &lt;F&gt; &lt;FALSE&gt; <a href=\"../core/Colon\">:</a> <br>\n      <span class=\"tt\">T{ &lt;T&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;T&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 1&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &lt;F&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;T&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 4 }T</span> <br>\n      <span class=\"tt\">T{ &lt;T&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;F&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 1&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ &lt;F&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;F&gt;&nbsp;<a href=\"../tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"../tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 4 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "BracketUNDEFINED": {
                    "id": "tools:[UNDEFINED]",
                    "number": "15.6.2.2534",
                    "name": "[UNDEFINED]",
                    "english": "bracket-undefined",
                    "list": "TOOLS EXT",
                    "basename": "BracketUNDEFINED",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>\"&lt;spaces&gt;name ...\"</em> -- <em>flag</em> )"
                        },
                        "plain": {
                            "Execution:": "( \"<spaces>name ...\" -- flag )"
                        }
                    },
                    "sections": {
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      Perform the execution semantics given below.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( <em>\"&lt;spaces&gt;name ...\"</em> -- <em>flag</em> )\n      <p>\n      Skip leading space delimiters.  Parse name delimited by a space.\n      Return a false flag if <em>name</em> is the name of a word that\n      can be found (according to the rules in the system's <a href=\"../core/FIND\">FIND</a>);\n      otherwise return a true flag. <strong>[UNDEFINED]</strong> is an immediate\n      word.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n <!-- I.15.6.2.---- [UNDEFINED] -->\n      <a href=\"../core/Colon\">:</a> <strong>[UNDEFINED]</strong> <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a> <a href=\"../core/FIND\">FIND</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      \n      \n      "
                        }
                    }
                },
                "CODE": {
                    "id": "tools:CODE",
                    "number": "15.6.2.0930",
                    "name": "CODE",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "CODE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "name Execution:": "( <em>i * x</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )",
                            "name Execution:": "( i * x -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Create a definition for <em>name</em>, called a \"code\n      definition\", with the execution semantics defined below.\n      </p><p>\n      Subsequent characters in the parse area typically represent\n      source code in a programming language, usually some form of\n      assembly language. Those characters are processed in an\n      implementation-defined manner, generating the corresponding\n      machine code. The process continues, refilling the input buffer\n      as needed, until an implementation-defined ending sequence is\n      processed.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> )\n      <p>\n      Execute the machine code sequence that was generated following\n      <strong>CODE</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:tools:CODE\">A.15.6.2.0930 CODE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.0930 CODE -->\n      Some Forth systems implement the assembly function by adding\n      an <a href=\"../tools/ASSEMBLER\">ASSEMBLER</a> word list to the search order,\n      using the text interpreter to parse a postfix assembly\n      language with lexical characteristics similar to Forth source\n      code. Typically, in such systems, assembly ends when a word\n      <code>END-CODE</code> is interpreted.\n      \n      \n      "
                        }
                    }
                },
                "CS-PICK": {
                    "id": "tools:CS-PICK",
                    "number": "15.6.2.1015",
                    "name": "CS-PICK",
                    "english": "c-s-pick",
                    "list": "TOOLS EXT",
                    "basename": "CS-PICK",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( C: <em>dest<sub>u</sub> ... orig<sub>0</sub> | dest<sub>0</sub></em> -- <em>dest<sub>u</sub> ... orig<sub>0</sub> | dest<sub>0</sub> dest<sub>u</sub></em> )\n      ( S: <em>u</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( C: destu ... orig0 | dest0 -- destu ... orig0 | dest0 destu )\n( S: u -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( C: <em>dest<sub>u</sub> ... orig<sub>0</sub> | dest<sub>0</sub></em> -- <em>dest<sub>u</sub> ... orig<sub>0</sub> | dest<sub>0</sub> dest<sub>u</sub></em> )\n      ( S: <em>u</em> -- )\n      <p>\n      Remove <em>u</em>. Copy <em>dest<sub>u</sub></em> to the top of the\n      control-flow stack. An ambiguous condition exists if there\n      are less than <em>u</em>+1 items, each of which shall be an\n      <em>orig</em> or <em>dest</em>, on the control-flow stack\n      before <strong>CS-PICK</strong> is executed.\n      </p><p>\n      If the control-flow stack is implemented using the data stack,\n      <em>u</em> shall be the topmost item on the data stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:tools:CS-PICK\">A.15.6.2.1015 CS-PICK</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.1015 CS-PICK -->\n      The intent is to copy a <em>dest</em> on the control-flow\n      stack so that it can be resolved more than once. For example:\n      \n            <div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/bs\">\\</a> Conditionally transfer control to beginning of <br>\n          <a href=\"../core/bs\">\\</a> loop.  This is similar in spirit to C's \"continue\" <br>\n          <a href=\"../core/bs\">\\</a> statement.\n          <p>\n          <a href=\"../core/Colon\">:</a> ?REPEAT   <a href=\"../core/p\">(</a> dest -- dest ) <a href=\"../core/bs\">\\</a> Compilation <br>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/p\">(</a> flag -- ) &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> Execution <br>\n          &nbsp;&nbsp; 0 <a href=\"../tools/CS-PICK\">CS-PICK</a>   <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/UNTIL\">UNTIL</a> <br>\n          <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n          </p><p>\n          <a href=\"../core/Colon\">:</a> XX <a href=\"../core/p\">(</a> -- ) <a href=\"../core/bs\">\\</a> Example use of ?REPEAT <br>\n          &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n          &nbsp;&nbsp; flag ?REPEAT <a href=\"../core/p\">(</a> Go back to BEGIN if flag is false ) <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n          &nbsp;&nbsp; flag ?REPEAT <a href=\"../core/p\">(</a> Go back to BEGIN if flag is false ) <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n          &nbsp;&nbsp; flag <a href=\"../core/UNTIL\">UNTIL</a>   <a href=\"../core/p\">(</a> Go back to BEGIN if flag is false ) <br>\n          <a href=\"../core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n      \n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> ?repeat <br>\n        &nbsp;&nbsp; 0 <strong>CS-PICK</strong> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/UNTIL\">UNTIL</a> <br>\n        <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        <p>\n        <a href=\"../core/VARIABLE\">VARIABLE</a> pt4\n        </p><p>\n        <a href=\"../core/Colon\">:</a> &lt;= <a href=\"../core/more\">&gt;</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pt5&nbsp;&nbsp;<a href=\"../core/p\">(</a>&nbsp;n1&nbsp;--&nbsp;)&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"../core/Store\">!</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;pt4&nbsp;<a href=\"../core/PlusStore\">+!</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;4&nbsp;&lt;=&nbsp;?repeat&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a>&nbsp;<span class=\"rm\">Back&nbsp;to&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;if&nbsp;false</span>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;111&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;3&nbsp;&lt;=&nbsp;?repeat&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;222&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;2&nbsp;&lt;=&nbsp;?repeat&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;333&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"../core/Fetch\">@</a>&nbsp;1&nbsp;<a href=\"../core/Equal\">=</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/UNTIL\">UNTIL</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n        </p><p>\n        <span class=\"tt\">T{ 6&nbsp;pt5 -&gt; 111&nbsp;111&nbsp;222&nbsp;111&nbsp;222&nbsp;333&nbsp;111&nbsp;222&nbsp;333 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "CS-ROLL": {
                    "id": "tools:CS-ROLL",
                    "number": "15.6.2.1020",
                    "name": "CS-ROLL",
                    "english": "c-s-roll",
                    "list": "TOOLS EXT",
                    "basename": "CS-ROLL",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( C: <em>orig<sub>u</sub> | dest<sub>u</sub> orig<sub>u-1</sub> | dest<sub>u-1</sub> ... orig<sub>0</sub> | dest<sub>0</sub></em> -- <em>orig<sub>u-1</sub> | dest<sub>u-1</sub> ... orig<sub>0</sub> | dest<sub>0</sub> orig<sub>u</sub> | dest<sub>u</sub></em> )\n      ( S: <em>u</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( C: origu | destu origu-1 | destu-1 ... orig0 | dest0 -- origu-1 | destu-1 ... orig0 | dest0 origu | destu )\n( S: u -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n\n      ( C: <em>orig<sub>u</sub> | dest<sub>u</sub> orig<sub>u-1</sub> | dest<sub>u-1</sub> ... orig<sub>0</sub> | dest<sub>0</sub></em> -- <em>orig<sub>u-1</sub> | dest<sub>u-1</sub> ... orig<sub>0</sub> | dest<sub>0</sub> orig<sub>u</sub> | dest<sub>u</sub></em> )\n      ( S: <em>u</em> -- )\n      <p>\n      Remove <em>u</em>. Rotate <em>u</em>+1 elements on top of the\n      control-flow stack so that <em>orig<sub>u</sub> | dest<sub>u</sub></em> is on top of\n      the control-flow stack. An ambiguous condition exists if there\n      are less than <em>u</em>+1 items, each of which shall be an\n      <em>orig</em> or <em>dest</em>, on the control-flow stack before\n      <strong>CS-ROLL</strong> is executed.\n      </p><p>\n      If the control-flow stack is implemented using the data stack,\n      <em>u</em> shall be the topmost item on the data stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:tools:CS-ROLL\">A.15.6.2.1020 CS-ROLL</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.1020 CS-ROLL -->\n      The intent is to modify the order in which the <em>orig</em>s\n      and <em>dest</em>s on the control-flow stack are to be resolved\n      by subsequent control-flow words. For example, <a href=\"../core/WHILE\">WHILE</a>\n      could be implemented in terms of <a href=\"../core/IF\">IF</a> and\n      <strong>CS-ROLL</strong>, as follows:\n      <p>\n      \n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <a href=\"../core/WHILE\">WHILE</a>   <a href=\"../core/p\">(</a> dest -- orig dest ) <br>\n          &nbsp;&nbsp; <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/IF\">IF</a>   1 <a href=\"../tools/CS-ROLL\">CS-ROLL</a> <br>\n          <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n          \n          </div>\n        </div>\n      \n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n      <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;?DONE&nbsp;<a href=\"../core/p\">(</a>&nbsp;dest&nbsp;--&nbsp;orig&nbsp;dest&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a>&nbsp;<span class=\"rm\">Same&nbsp;as&nbsp;WHILE</span>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/POSTPONE\">POSTPONE</a>&nbsp;<a href=\"../core/IF\">IF</a>&nbsp;1&nbsp;<strong>CS-ROLL</strong>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a>&nbsp;<a href=\"../core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pt6&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/toR\">&gt;R</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/RFetch\">R@</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?DONE&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/RFetch\">R@</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;<a href=\"../core/OneMinus\">1-</a>&nbsp;<a href=\"../core/toR\">&gt;R</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/REPEAT\">REPEAT</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n        <p>\n        <span class=\"tt\">T{ 5&nbsp;pt6 -&gt; 5&nbsp;4&nbsp;3&nbsp;2&nbsp;1 }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> mix_up 2 <strong>CS-ROLL</strong> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a> &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">cs-rot</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> pt7 <a href=\"../core/p\">(</a> f3 f2 f1 -- ? ) <br>\n        &nbsp;&nbsp; <a href=\"../core/IF\">IF</a> 1111 <a href=\"../core/ROT\">ROT</a> <a href=\"../core/ROT\">ROT</a>\t&nbsp;&nbsp;\t\t( -- 1111 f3 f2 )\t\t&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o1 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/IF\">IF</a> 2222 <a href=\"../core/SWAP\">SWAP</a>\t\t\t&nbsp;&nbsp;\t( -- 1111 2222 f3 )\t&nbsp;&nbsp;\t( cs: -- o1 o2 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/IF\">IF</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o1 o2 o3 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t3333 mix_up\t\t\t\t\t\t\t( -- 1111 2222 3333 )\t\t( cs: -- o2 o3 o1 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"../core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o2 o3 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t4444\t&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Hence failure of first IF comes here and falls through</span> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"../core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o2 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t5555 \t\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Failure of 3rd IF comes here</span> <br>\n        &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- ) <br>\n        &nbsp;&nbsp; 6666 \t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">Failure of 2nd IF comes here</span> <br>\n        &nbsp;&nbsp; <a href=\"../core/Semi\">;</a>\n        </p><p>\n        <span class=\"tt\">T{ -1&nbsp;-1&nbsp;-1&nbsp;pt7 -&gt; 1111&nbsp;2222&nbsp;3333&nbsp;4444&nbsp;5555&nbsp;6666 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;-1&nbsp;pt7 -&gt; 1111&nbsp;2222&nbsp;5555&nbsp;6666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;-1&nbsp;pt7 -&gt; 1111&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;6666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;pt7 -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;4444&nbsp;5555&nbsp;6666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n        </p><p>\n        <a href=\"../core/Colon\">:</a> [1cs-roll] 1 <strong>CS-ROLL</strong> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n        </p><p>\n        <span class=\"tt\">T{ <a href=\"../core/Colon\">:</a>&nbsp;pt8&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/toR\">&gt;R</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../tools/AHEAD\">AHEAD</a>&nbsp;111&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>&nbsp;222&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1cs-roll]&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/THEN\">THEN</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;333&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;<a href=\"../core/OneMinus\">1-</a>&nbsp;<a href=\"../core/toR\">&gt;R</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/RFetch\">R@</a>&nbsp;<a href=\"../core/Zeroless\">0&lt;</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/UNTIL\">UNTIL</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a>&nbsp;<a href=\"../core/DROP\">DROP</a>&nbsp;<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Semi\">;</a> -&gt;  }T</span>\n        </p><p>\n        <span class=\"tt\">T{ 1&nbsp;pt8 -&gt; 333&nbsp;222&nbsp;333 }T</span>\n        \n        \n        </p></div>\n      "
                        }
                    }
                },
                "DUMP": {
                    "id": "tools:DUMP",
                    "number": "15.6.1.1280",
                    "name": "DUMP",
                    "english": " ",
                    "list": "TOOLS",
                    "basename": "DUMP",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>addr u</em> -- )"
                        },
                        "plain": {
                            " ": "( addr u -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>addr u</em> -- )\n      <p>\n      Display the contents of <em>u</em> consecutive addresses starting\n      at <em>addr</em>. The format of the display is implementation\n      dependent.\n      </p><p>\n      <strong>DUMP</strong> may be implemented using pictured numeric output\n      words. Consequently, its use may corrupt the transient region\n      identified by <a href=\"../core/num-end\">#&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>.\n      \n      "
                        }
                    }
                },
                "DotS": {
                    "id": "tools:.S",
                    "number": "15.6.1.0220",
                    "name": ".S",
                    "english": "dot-s",
                    "list": "TOOLS",
                    "basename": "DotS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Copy and display the values currently on the data stack. The\n      format of the display is implementation-dependent.\n      </p><p>\n      <strong>.S</strong> may be implemented using pictured numeric output words.\n      Consequently, its use may corrupt the transient region identified\n      by <a href=\"../core/num-end\">#&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>,\n      <a href=\"../rationale#rat:tools:.S\">A.15.6.1.0220 .S</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.1.0220 .S -->\n      <strong>.S</strong> is a debugging convenience found on almost\n      all Forth systems. It is universally mentioned in Forth texts.\n      \n      \n      "
                        }
                    }
                },
                "EDITOR": {
                    "id": "tools:EDITOR",
                    "number": "15.6.2.1300",
                    "name": "EDITOR",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "EDITOR",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      Replace the first word list in the search order with the\n      <strong>EDITOR</strong> word list.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../search#wordlist:search\">16 The optional Search-Order word set</a></strong>.\n      \n      "
                        }
                    }
                },
                "FORGET": {
                    "id": "tools:FORGET",
                    "number": "15.6.2.1580",
                    "name": "FORGET",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "FORGET",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters. Parse <em>name</em> delimited by a\n      space. Find <em>name</em>, then delete <em>name</em> from the\n      dictionary along with all words added to the dictionary after\n      <em>name</em>. An ambiguous condition exists if <em>name</em> cannot\n      be found.\n      </p><p>\n      If the Search-Order word set is present, <strong>FORGET</strong> searches\n      the compilation word list. An ambiguous condition exists if the\n      compilation word list is deleted.\n      </p><p>\n      An ambiguous condition exists if <strong>FORGET</strong> removes a word\n      required for correct execution.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n This word is obsolescent and is included as a concession to\n      existing implementations.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../rationale#rat:tools:FORGET\">A.15.6.2.1580 FORGET</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.1580 FORGET -->\n      Typical use:\n      ... <strong>FORGET</strong> <em>name</em> ...\n      <p>\n      <strong>FORGET</strong> <em>name</em> tries to infer the previous dictionary\n      state from <em>name</em>; this is not always possible.  As a\n      consequence, <strong>FORGET</strong> <em>name</em> removes <em>name</em> and\n      all following words in the name space.\n      </p><p>\n      See <a href=\"../rationale#rat:core:MARKER\">A.6.2.1850 MARKER</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "NAMEtoCOMPILE": {
                    "id": "tools:NAMEtoCOMPILE",
                    "number": "15.6.2.1909.10",
                    "name": "NAME>COMPILE",
                    "english": "name-to-compile",
                    "list": "TOOLS EXT",
                    "basename": "NAMEtoCOMPILE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>nt</em> -- <em>x xt</em> )"
                        },
                        "plain": {
                            " ": "( nt -- x xt )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>nt</em> -- <em>x xt</em> )\n      <p>\n      <em>x xt</em> represents the compilation semantics of the word\n      <em>nt</em>.  The returned <em>xt</em> has the stack effect\n      ( <em>i * x x</em> -- <em>j * x</em> ).  Executing <em>xt</em> consumes\n      <em>x</em> and performs the compilation semantics of the word\n      represented by <em>nt</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n\n      <a href=\"../rationale#rat:tools:NAMEtoCOMPILE\">A.15.6.2.1909.10 NAME&gt;COMPILE</a>,\n      <a href=\"../tools/TRAVERSE-WORDLIST\">15.6.2.2297 TRAVERSE-WORDLIST</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      In a traditional <em>xt</em>+immediate-flag system, the\n      <em>x xt</em> returned by <strong>NAME&gt;COMPILE</strong> is\n      typically <em>xt1 xt2</em>, where <em>xt1</em> is the\n      <em>xt</em> of the word under consideration, and\n      <em>xt2</em> is the <em>xt</em> of <a href=\"../core/EXECUTE\">EXECUTE</a>\n      (for immediate words) or <a href=\"../core/COMPILEComma\">COMPILE,</a> (for words\n      with default compilation semantics).\n      <p>\n      If you want to <a href=\"../core/POSTPONE\">POSTPONE</a> <em>nt</em>, you can\n      do so with\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<strong>NAME&gt;COMPILE</strong> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/POSTPONE\">POSTPONE</a>\n          <a href=\"../core/LITERAL\">LITERAL</a> <a href=\"../core/COMPILEComma\">COMPILE,</a>\n          \n          </div>\n        </div>\n       \n      \n      "
                        }
                    }
                },
                "NAMEtoINTERPRET": {
                    "id": "tools:NAMEtoINTERPRET",
                    "number": "15.6.2.1909.20",
                    "name": "NAME>INTERPRET",
                    "english": "name-to-interpret",
                    "list": "TOOLS EXT",
                    "basename": "NAMEtoINTERPRET",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>nt</em> -- <em>xt | 0</em> )"
                        },
                        "plain": {
                            " ": "( nt -- xt | 0 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>nt</em> -- <em>xt | 0</em> )\n      <p>\n      <em>xt</em> represents the interpretation semantics of the word\n      <em>nt</em>.  If <em>nt</em> has no interpretation semantics,\n      <strong>NAME&gt;INTERPRET</strong> returns 0.\n      </p><p>\n        \n      </p>"
                        },
                        "Note:": {
                            "name": "Note:",
                            "html": "\n\n\n      This standard does not define the interpretation semantics of\n      some words, but systems are allowed to do so.\n        \n      "
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../tools/TRAVERSE-WORDLIST\">15.6.2.2297 TRAVERSE-WORDLIST</a></strong>.\n      \n      "
                        }
                    }
                },
                "NAMEtoSTRING": {
                    "id": "tools:NAMEtoSTRING",
                    "number": "15.6.2.1909.40",
                    "name": "NAME>STRING",
                    "english": "name-to-string",
                    "list": "TOOLS EXT",
                    "basename": "NAMEtoSTRING",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>nt</em> -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            " ": "( nt -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>nt</em> -- <em>c-addr u</em> )\n      <p>\n      <strong>NAME&gt;STRING</strong> returns the name of the word <em>nt</em>\n      in the character string <em>c-addr u</em>.  The case of the characters\n      in the string is implementation-dependent.  The buffer containing\n      <em>c-addr u</em> may be transient and valid until the next invocation\n      of <strong>NAME&gt;STRING</strong>. A program shall not write into the buffer\n      containing the resulting string.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../tools/TRAVERSE-WORDLIST\">15.6.2.2297 TRAVERSE-WORDLIST</a>.\n      \n      "
                        }
                    }
                },
                "NRfrom": {
                    "id": "tools:NRfrom",
                    "number": "15.6.2.1940",
                    "name": "NR>",
                    "english": "n-r-from",
                    "list": "TOOLS EXT",
                    "basename": "NRfrom",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( -- <em>i * x +n</em> ) ( R: <em>j * x +n</em> -- )"
                        },
                        "plain": {
                            "Execution:": "( -- i * x +n ) ( R: j * x +n -- )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n ( -- <em>i * x +n</em> ) ( R: <em>j * x +n</em> -- )\n      <p>\n      Retrieve the items previously stored by an invocation of <a href=\"../tools/NtoR\">N&gt;R</a>.\n      <em>n</em> is the number of items placed on the data stack. It is an\n      ambiguous condition if <strong>NR&gt;</strong> is used with data not stored by\n      <a href=\"../tools/NtoR\">N&gt;R</a>. \n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../tools/NtoR\">15.6.2.1908 N&gt;R</a>, <a href=\"../rationale#rat:tools:NtoR\">A.15.6.2.1908 N&gt;R</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">This implementation depends on the return address being on\n      the return stack.</span>\n      <p>\n      </p><div class=\"tabbing\">\n        <a href=\"../core/Colon\">:</a> <strong>NR&gt;</strong> <a href=\"../core/bs\">\\</a> -- xn .. x1 N ; R: x1 .. xn N -- <br>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Pull N items and count off the return stack.</span>  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/DUP\">DUP</a> <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a>  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/WHILE\">WHILE</a>  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> -ROT <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/OneMinus\">1-</a>  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/REPEAT\">REPEAT</a> <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/DROP\">DROP</a>  <br>\n        <a href=\"../core/Semi\">;</a>\n        <br>\n        \n        </div>\n      \n      \n      "
                        }
                    }
                },
                "NtoR": {
                    "id": "tools:NtoR",
                    "number": "15.6.2.1908",
                    "name": "N>R",
                    "english": "n-to-r",
                    "list": "TOOLS EXT",
                    "basename": "NtoR",
                    "stackEffect": {
                        "html": {
                            "Execution:": "( <em>i * n +n</em> -- ) ( R: -- <em>j * x +n</em> )"
                        },
                        "plain": {
                            "Execution:": "( i * n +n -- ) ( R: -- j * x +n )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Execution:": {
                            "name": "Execution:",
                            "html": "\n\n ( <em>i * n +n</em> -- ) ( R: -- <em>j * x +n</em> )\n      <p>\n      Remove <em>n</em>+1 items from the data stack and store them for later\n      retrieval by <a href=\"../tools/NRfrom\">NR&gt;</a>. The return stack may be used to store the\n      data. Until this data has been retrieved by <a href=\"../tools/NRfrom\">NR&gt;</a>:\n      </p><ul>\n      <li> this data will not be overwritten by a subsequent invocation of\n      <strong>N&gt;R</strong> and\n      </li>\n      <li> a program may not access data placed on the return stack before\n      the invocation of <strong>N&gt;R</strong>.\n      </li>\n</ul> \n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/SAVE-INPUT\">6.2.2182 SAVE-INPUT</a>,\n      <a href=\"../core/RESTORE-INPUT\">6.2.2148 RESTORE-INPUT</a>,\n      <a href=\"../search/GET-ORDER\">16.6.1.1647 GET-ORDER</a>, \n      <a href=\"../search/SET-ORDER\">16.6.1.2197 SET-ORDER</a>.\n        \n      "
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      An implementation may store the stack items in any manner.  It may\n      store them on the return stack, in any order.  A stack-constrained\n      system may prefer to use a buffer to store the items and place a\n      reference to the buffer on the return stack.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <span class=\"rm\">This implementation depends on the return address being on\n      the return stack.</span>\n      <p>\n      </p><div class=\"tabbing\">\n        <a href=\"../core/Colon\">:</a> <strong>N&gt;R</strong>           <a href=\"../core/bs\">\\</a> xn .. x1 N -- ; R: -- x1 .. xn n <br>\n        <a href=\"../core/bs\">\\</a> <span class=\"rm\">Transfer N items and count to the return stack.</span>  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> xn .. x1 N N -- <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/BEGIN\">BEGIN</a>  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/DUP\">DUP</a>  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/WHILE\">WHILE</a>  <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/ROT\">ROT</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/toR\">&gt;R</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/bs\">\\</a> xn .. N N -- ; R: .. x1 -- <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"../core/OneMinus\">1-</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> xn .. N 'N -- ; R: .. x1 --  <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/REPEAT\">REPEAT</a> <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/DROP\">DROP</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> N -- ; R: x1 .. xn -- <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/toR\">&gt;R</a>  <br>\n        <a href=\"../core/Semi\">;</a>\n        <br>\n        \n        </div>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> TNR1 <strong>N&gt;R</strong> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../tools/NRfrom\">NR&gt;</a> <a href=\"../core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;10&nbsp;20&nbsp;30&nbsp;3&nbsp;TNR1 -&gt; 2&nbsp;1&nbsp;10&nbsp;20&nbsp;30&nbsp;3 }T</span>\n      <p>\n      <a href=\"../core/Colon\">:</a> TNR2 <strong>N&gt;R</strong> <strong>N&gt;R</strong> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../tools/NRfrom\">NR&gt;</a> <a href=\"../tools/NRfrom\">NR&gt;</a> <a href=\"../core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;10&nbsp;20&nbsp;30&nbsp;3&nbsp;40&nbsp;50&nbsp;2&nbsp;TNR2 -&gt; 2&nbsp;1&nbsp;10&nbsp;20&nbsp;30&nbsp;3&nbsp;40&nbsp;50&nbsp;2 }T</span>\n      \n      \n      </p>"
                        }
                    }
                },
                "SEE": {
                    "id": "tools:SEE",
                    "number": "15.6.1.2194",
                    "name": "SEE",
                    "english": " ",
                    "list": "TOOLS",
                    "basename": "SEE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Display a human-readable representation of the named word's\n      definition. The source of the representation (object-code\n      decompilation, source block, etc.) and the particular form of\n      the display is implementation defined.\n      </p><p>\n      <strong>SEE</strong> may be implemented using pictured numeric output\n      words. Consequently, its use may corrupt the transient region\n      identified by <a href=\"../core/num-end\">#&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>,\n      <a href=\"../rationale#rat:tools:SEE\">A.15.6.1.2194 SEE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.1.2194 SEE -->\n      <strong>SEE</strong> acts as an on-line form of documentation of\n      words, allowing modification of words by decompiling and\n      regenerating with appropriate changes.\n      \n      \n      "
                        }
                    }
                },
                "STATE": {
                    "id": "tools:STATE",
                    "number": "15.6.2.2250",
                    "name": "STATE",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "STATE",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>a-addr</em> )"
                        },
                        "plain": {
                            " ": "( -- a-addr )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>a-addr</em> )\n      <p>\n      Extend the semantics of <a href=\"../core/STATE\">6.1.2250 STATE</a> to allow\n      <a href=\"../tools/SemiCODE\">;CODE</a> to change the value in <strong>STATE</strong>. A program\n      shall not directly alter the contents of <strong>STATE</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>,\n      <a href=\"../core/Colon\">6.1.0450 :</a>,\n      <a href=\"../core/Semi\">6.1.0460 ;</a>,\n      <a href=\"../core/ABORT\">6.1.0670 ABORT</a>, <br>\n      <a href=\"../core/QUIT\">6.1.2050 QUIT</a>,\n      <a href=\"../core/STATE\">6.1.2250 STATE</a>,\n      <a href=\"../core/Bracket\">6.1.2500 [</a>,\n      <a href=\"../right-bracket\">6.1.2540 ]</a>,\n      <a href=\"../core/ColonNONAME\">6.2.0455 :NONAME</a>, <br>\n      <a href=\"../tools/SemiCODE\">15.6.2.0470 ;CODE</a>.\n      \n      "
                        }
                    }
                },
                "SYNONYM": {
                    "id": "tools:SYNONYM",
                    "number": "15.6.2.2264",
                    "name": "SYNONYM",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "SYNONYM",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;newname\" \"&lt;spaces&gt;oldname\"</em> -- )",
                            "newname interpretation:": "( <em>i * x</em> -- <em>j * x</em> ) <br>\n      Perform the interpretation semantics of <em>oldname</em>.",
                            "newname compilation:": "( <em>i * x</em> -- <em>j * x</em> ) <br>\n      Perform the compilation semantics of <em>oldname</em>."
                        },
                        "plain": {
                            " ": "( \"<spaces>newname\" \"<spaces>oldname\" -- )",
                            "newname interpretation:": "( i * x -- j * x ) \nPerform the interpretation semantics of oldname.",
                            "newname compilation:": "( i * x -- j * x ) \nPerform the compilation semantics of oldname."
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;newname\" \"&lt;spaces&gt;oldname\"</em> -- )\n      <p>\n      For both strings skip leading space delimiters.  Parse <em>newname</em>\n      and <em>oldname</em> delimited by a space.  Create a definition for\n      <em>newname</em> with the semantics defined below.\n      <em>Newname</em> may be the same as <em>oldname</em>;\n      when looking up <em>oldname</em>, <em>newname</em> shall not be found.\n      </p><p>\n      An ambiguous conditions exists if <em>oldname</em> can not be found or\n      <a href=\"../core/IMMEDIATE\">IMMEDIATE</a> is applied to <em>newname</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "newname interpretation:": {
                            "name": "newname interpretation:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> ) <br>\n      Perform the interpretation semantics of <em>oldname</em>.\n      <p>\n        \n      </p>"
                        },
                        "newname compilation:": {
                            "name": "newname compilation:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> ) <br>\n      Perform the compilation semantics of <em>oldname</em>.\n      <p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/IMMEDIATE\">6.1.1710 IMMEDIATE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n            <div class=\"rm\">\nThe implementation of <strong>SYNONYM</strong> requires detailed knowledge\n        of the host implementation, which is one reason why it should be\n        standardized.  The implementation below is imperfect and specific\n        to VFX Forth, in particular <code>HIDE</code>, <code>REVEAL</code> and\n        <code>IMMEDIATE?</code> are non-standard words.\n        <p>\n                </p><div class=\"quote\">\n          <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> <strong>SYNONYM</strong> <a href=\"../core/bs\">\\</a> \"newname\" \"oldname\" -- <br>\n            <a href=\"../core/bs\">\\</a> <span class=\"rm\">Create a new definition which redirects to an existing one.</span> <br>\n            &nbsp;&nbsp; <a href=\"../core/CREATE\">CREATE</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp; HIDE <a href=\"../core/Tick\">'</a> <a href=\"../core/Comma\">,</a> REVEAL <br>\n            &nbsp;&nbsp; <a href=\"../core/DOES\">DOES&gt;</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/Fetch\">@</a>  <a href=\"../tools/STATE\">STATE</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/OVER\">OVER</a> IMMEDIATE? <a href=\"../core/OR\">OR</a> <br>\n            &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/IF\">IF</a> <a href=\"../core/EXECUTE\">EXECUTE</a> <a href=\"../core/ELSE\">ELSE</a> <a href=\"../core/COMPILEComma\">COMPILE,</a> <a href=\"../core/THEN\">THEN</a> <br>\n            <a href=\"../core/Semi\">;</a>\n            \n            </div>\n          </div>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "SemiCODE": {
                    "id": "tools:;CODE",
                    "number": "15.6.2.0470",
                    "name": ";CODE",
                    "english": "semicolon-code",
                    "list": "TOOLS EXT",
                    "basename": "SemiCODE",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( C: <em>colon-sys</em> -- )",
                            "Run-time:": "( -- )\n      ( R: <em>nest-sys</em> -- )",
                            "name Execution:": "( <em>i * x</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            "Compilation:": "( C: colon-sys -- )",
                            "Run-time:": "( -- )\n( R: nest-sys -- )",
                            "name Execution:": "( i * x -- j * x )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n\n      ( C: <em>colon-sys</em> -- )\n      <p>\n      Append the run-time semantics below to the current definition.\n      End the current definition, allow it to be found in the\n      dictionary, and enter interpretation state, consuming\n      <em>colon-sys</em>.\n      </p><p>\n      Subsequent characters in the parse area typically represent\n      source code in a programming language, usually some form of\n      assembly language. Those characters are processed in an\n      implementation-defined manner, generating the corresponding\n      machine code. The process continues, refilling the input buffer\n      as needed, until an implementation-defined ending sequence is\n      processed.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n\n      ( -- )\n      ( R: <em>nest-sys</em> -- )\n      <p>\n      Replace the execution semantics of the most recent definition\n      with the <em>name</em> execution semantics given below. Return\n      control to the calling definition specified by <em>nest-sys</em>.\n      An ambiguous condition exists if the most recent definition was\n      not defined with <a href=\"../core/CREATE\">CREATE</a> or a user-defined word that\n      calls <a href=\"../core/CREATE\">CREATE</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "name Execution:": {
                            "name": "name Execution:",
                            "html": "\n\n\n      ( <em>i * x</em> -- <em>j * x</em> )\n      <p>\n      Perform the machine code sequence that was generated following\n      <strong>;CODE</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/DOES\">6.1.1250 DOES&gt;</a>,\n      <a href=\"../rationale#rat:tools:;CODE\">A.15.6.2.0470 ;CODE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.2.0470 ;CODE -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>namex</code>\n      ... &lt;<em>create</em>&gt; ...\n      <strong>;CODE</strong> ...\n      <p>\n      where <code>namex</code> is a defining word, and &lt;<em>create</em>&gt; is\n      <a href=\"../core/CREATE\">CREATE</a> or any user defined word that calls\n      <a href=\"../core/CREATE\">CREATE</a>.\n      \n      \n      </p>"
                        }
                    }
                },
                "TRAVERSE-WORDLIST": {
                    "id": "tools:TRAVERSE-WORDLIST",
                    "number": "15.6.2.2297",
                    "name": "TRAVERSE-WORDLIST",
                    "english": " ",
                    "list": "TOOLS EXT",
                    "basename": "TRAVERSE-WORDLIST",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>i * x xt wid</em> -- <em>j * x</em> )"
                        },
                        "plain": {
                            " ": "( i * x xt wid -- j * x )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>i * x xt wid</em> -- <em>j * x</em> )\n      <p>\n      Remove <em>wid</em> and <em>xt</em> from the stack.  Execute\n      <em>xt</em> once for every word in the wordlist <em>wid</em>,\n      passing the name token <em>nt</em> of the word to <em>xt</em>,\n      until the wordlist is exhausted or until <em>xt</em> returns false.\n      </p><p>\n      The invoked <em>xt</em> has the stack effect\n      ( <em>k * x nt</em> -- <em>l * x flag</em> ).\n      </p><p>\n      If <em>flag</em> is true, <strong>TRAVERSE-WORDLIST</strong> will continue\n      with the next name, otherwise it will return.  <strong>TRAVERSE-WORDLIST</strong>\n      does not put any items other than <em>nt</em> on the stack when\n      calling <em>xt</em>, so that <em>xt</em> can access and modify the\n      rest of the stack.\n      </p><p>\n      <strong>TRAVERSE-WORDLIST</strong> may visit words in any order, with one\n      exception: words with the same name are called in the order\n      newest-to-oldest (possibly with other words in between).\n      </p><p>\n      An ambiguous condition exists if words are added to or deleted from\n      the wordlist <em>wid</em> during the execution of\n      <strong>TRAVERSE-WORDLIST</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../rationale#rat:tools:TRAVERSE-WORDLIST\">A.15.6.2.2297 TRAVERSE-WORDLIST</a>,\n      <a href=\"../tools/NAMEtoSTRING\">15.6.2.1909.40 NAME&gt;STRING</a>, <br>\n      <a href=\"../tools/NAMEtoINTERPRET\">15.6.2.1909.20 NAME&gt;INTERPRET</a>,\n      <a href=\"../tools/NAMEtoCOMPILE\">15.6.2.1909.10 NAME&gt;COMPILE</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      Typical use:\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> WORDS-COUNT <a href=\"../core/p\">(</a> x nt -- x' f )\n          <a href=\"../core/DROP\">DROP</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/TRUE\">TRUE</a>\n          <a href=\"../core/Semi\">;</a>\n          <br>\n          0 <a href=\"../core/Tick\">'</a> WORDS-COUNT\n          <a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a>\n          <strong>TRAVERSE-WORDLIST</strong> <a href=\"../core/d\">.</a>\n          \n          </div>\n        </div>\n      <p>\n      prints a count of the number of words in the <a href=\"../search/FORTH-WORDLIST\">FORTH-WORDLIST</a>.\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> ALL-WORDS\n          <a href=\"../tools/NAMEtoSTRING\">NAME&gt;STRING</a> <a href=\"../core/CR\">CR</a> <a href=\"../core/TYPE\">TYPE</a> <a href=\"../core/TRUE\">TRUE</a>\n          <a href=\"../core/Semi\">;</a>\n          <br>\n          <a href=\"../core/Tick\">'</a> ALL-WORDS \n          <a href=\"../search/GET-CURRENT\">GET-CURRENT</a>\n          <strong>TRAVERSE-WORDLIST</strong>\n          \n          </div>\n        </div>\n      prints the names of words in the current compilation wordlist.\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"../core/Colon\">:</a> CONTAINS-STRING <br>\n          &nbsp;&nbsp; \t\t\t<a href=\"../tools/NAMEtoSTRING\">NAME&gt;STRING</a> <a href=\"../core/TwoOVER\">2OVER</a>\n          <a href=\"../string/SEARCH\">SEARCH</a> <a href=\"../core/IF\">IF</a>\n          <a href=\"../core/CR\">CR</a> <a href=\"../core/TYPE\">TYPE</a>\n          <a href=\"../core/THEN\">THEN</a> <a href=\"../core/FALSE\">FALSE</a> <a href=\"../core/Semi\">;</a> <br>\n          <a href=\"../core/Sq\">S\"</a> COM\" <a href=\"../core/Tick\">'</a> CONTAINS-STRING\n          <a href=\"../search/GET-CURRENT\">GET-CURRENT</a> <strong>TRAVERSE-WORDLIST</strong>\n          \n          </div>\n        </div>\n      prints the name of a word containing the string\n      \"COM\", if it exists, and then terminates.\n      \n      \n      "
                        }
                    }
                },
                "WORDS": {
                    "id": "tools:WORDS",
                    "number": "15.6.1.2465",
                    "name": "WORDS",
                    "english": " ",
                    "list": "TOOLS",
                    "basename": "WORDS",
                    "stackEffect": {
                        "html": {
                            " ": "( -- )"
                        },
                        "plain": {
                            " ": "( -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- )\n      <p>\n      List the definition names in the first word list of the search\n      order. The format of the display is implementation-dependent.\n      </p><p>\n      <strong>WORDS</strong> may be implemented using pictured numeric output\n      words. Consequently, its use may corrupt the transient region\n      identified by <a href=\"../core/num-end\">#&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>,\n      <a href=\"../rationale#rat:tools:WORDS\">A.15.6.1.2465 WORDS</a>.\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n <!-- A.15.6.1.2465 WORDS -->\n      <strong>WORDS</strong> is a debugging convenience found on almost\n      all Forth systems. It is universally referred to in Forth texts.\n      \n      \n      "
                        }
                    }
                },
                "q": {
                    "id": "tools:q",
                    "number": "15.6.1.0600",
                    "name": "?",
                    "english": "question",
                    "list": "TOOLS",
                    "basename": "q",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>a-addr</em> -- )"
                        },
                        "plain": {
                            " ": "( a-addr -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>a-addr</em> -- )\n      <p>\n      Display the value stored at <em>a-addr</em>.\n      </p><p>\n      <strong>?</strong> may be implemented using pictured numeric output words.\n      Consequently, its use may corrupt the transient region identified\n      by <a href=\"../core/num-end\">#&gt;</a>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>.\n      \n      "
                        }
                    }
                }
            }
        },
        "xchar": {
            "name": "xchar",
            "words": {
                "BracketCHAR": {
                    "id": "xchar:[CHAR]",
                    "number": "18.6.2.2520",
                    "name": "[CHAR]",
                    "english": "bracket-char",
                    "list": "XCHAR EXT",
                    "basename": "BracketCHAR",
                    "stackEffect": {
                        "html": {
                            "Compilation:": "( <em>\"&lt;spaces&gt;name\"</em> -- )",
                            "Run-time:": "( -- <em>xchar</em> )"
                        },
                        "plain": {
                            "Compilation:": "( \"<spaces>name\" -- )",
                            "Run-time:": "( -- xchar )"
                        }
                    },
                    "sections": {
                        "Interpretation:": {
                            "name": "Interpretation:",
                            "html": "\n\n\n      Interpretation semantics for this word are undefined.\n      <p>\n        \n      </p>"
                        },
                        "Compilation:": {
                            "name": "Compilation:",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- )\n      <p>\n      Skip leading space delimiters.  Parse <em>name</em> delimited by a space.\n      Append the run-time semantics given below to the current definition.\n      </p><p>\n        \n      </p>"
                        },
                        "Run-time:": {
                            "name": "Run-time:",
                            "html": "\n\n ( -- <em>xchar</em> )\n      <p>\n      Place <em>xchar</em>, the value of the first xchar of <em>name</em>, on\n      the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/BracketCHAR\">6.1.2520 [CHAR]</a>\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>[CHAR]</strong> <a href=\"../core/p\">(</a> \"name\" -- rt:xchar ) <br>\n      &nbsp;&nbsp; <a href=\"../xchar/CHAR\">CHAR</a> <a href=\"../core/POSTPONE\">POSTPONE</a> <a href=\"../core/LITERAL\">LITERAL</a> <a href=\"../core/Semi\">;</a> <a href=\"../core/IMMEDIATE\">IMMEDIATE</a>\n      \n      \n      "
                        }
                    }
                },
                "CHAR": {
                    "id": "xchar:CHAR",
                    "number": "18.6.2.0895",
                    "name": "CHAR",
                    "english": " ",
                    "list": "XCHAR EXT",
                    "basename": "CHAR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>\"&lt;spaces&gt;name\"</em> -- <em>xchar</em> )"
                        },
                        "plain": {
                            " ": "( \"<spaces>name\" -- xchar )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>\"&lt;spaces&gt;name\"</em> -- <em>xchar</em> )\n      <p>\n      Skip leading space delimiters.  Parse <em>name</em> delimited by a space.\n      Put the value of its first <em>xchar</em> onto the stack.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CHAR\">6.1.0895 CHAR</a>\n      <p>\n        \n      </p>"
                        },
                        "Rationale:": {
                            "name": "Rationale:",
                            "html": "\n\n\n      The behavior of the extended version of <strong>CHAR</strong> is fully backward\n      compatible with <a href=\"../core/CHAR\">6.1.0895 CHAR</a>.\n        \n      "
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>CHAR</strong> <a href=\"../core/p\">(</a> \"name\" -- xchar )\n      <a href=\"../core/BL\">BL</a> <a href=\"../core/WORD\">WORD</a> <a href=\"../core/COUNT\">COUNT</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../xchar/XCFetchPlus\">XC@+</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "EKEYtoXCHAR": {
                    "id": "xchar:EKEYtoXCHAR",
                    "number": "18.6.2.1306.60",
                    "name": "EKEY>XCHAR",
                    "english": "e-key-to-x-char",
                    "list": "XCHAR EXT",
                    "basename": "EKEYtoXCHAR",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>x</em> -- <em>xchar true  |  x false</em> )"
                        },
                        "plain": {
                            " ": "( x -- xchar true  |  x false )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>x</em> -- <em>xchar true  |  x false</em> )\n      <p>\n      If the keyboard event <em>x</em> corresponds to an xchar, return the\n      <em>xchar</em> and <em>true</em>.  Otherwise, return <em>x</em> and\n      <em>false</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/EKEY\">10.6.2.1305 EKEY</a>,\n      <a href=\"../facility/EKEYtoCHAR\">10.6.2.1306 EKEY&gt;CHAR</a>,\n      <a href=\"../facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>.\n      \n      "
                        }
                    }
                },
                "MinusTRAILING-GARBAGE": {
                    "id": "xchar:-TRAILING-GARBAGE",
                    "number": "18.6.2.0175",
                    "name": "-TRAILING-GARBAGE",
                    "english": "minus-trailing-garbage",
                    "list": "XCHAR EXT",
                    "basename": "MinusTRAILING-GARBAGE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr u<sub>1</sub></em> -- <em>xc-addr u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xc-addr u1 -- xc-addr u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr u<sub>1</sub></em> -- <em>xc-addr u<sub>2</sub></em> )\n      <p>\n      Examine the last xchar in the string <em>xc-addr u<sub>1</sub></em> — if the\n      encoding is correct and it represents a full xchar, <em>u<sub>2</sub></em> equals\n      <em>u<sub>1</sub></em>, otherwise, <em>u<sub>2</sub></em> represents the string without the\n      last (garbled) xchar.  <strong>-TRAILING-GARBAGE</strong> does not change this\n      garbled xchar.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>-TRAILING-GARBAGE</strong> <a href=\"../core/p\">(</a> xc-addr u1 -- xc-addr u2 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../xchar/XCHARMinus\">XCHAR-</a> <a href=\"../core/p\">(</a> addr u1 end1 end2 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Minus\">-</a> <a href=\"../xchar/X-SIZE\">X-SIZE</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/Equal\">=</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">last xchar ok</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDROP\">2DROP</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/NIP\">NIP</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Minus\">-</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "PARSE": {
                    "id": "xchar:PARSE",
                    "number": "18.6.2.2008",
                    "name": "PARSE",
                    "english": " ",
                    "list": "XCHAR EXT",
                    "basename": "PARSE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar \"ccc&lt;xchar&gt;\"</em> -- <em>c-addr u</em> )"
                        },
                        "plain": {
                            " ": "( xchar \"ccc<xchar>\" -- c-addr u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar \"ccc&lt;xchar&gt;\"</em> -- <em>c-addr u</em> )\n      <p>\n      Parse <em>ccc</em> in the input stream delimited by <em>xchar</em>.\n      </p><p>\n      <em>c-addr</em> is the address (within the input buffer) and <em>u</em>\n      is the length of the parsed string. If the parse area was empty, the\n      resulting string has a zero length.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <strong><a href=\"../usage#usage:parsing\">3.4.1 Parsing</a></strong>,\n      <a href=\"../core/PARSE\">6.2.2008 PARSE</a>,\n      <a href=\"../rationale#rat:core:PARSE\">A.6.2.2008 PARSE</a>.\n      \n      "
                        }
                    }
                },
                "PlusXDivSTRING": {
                    "id": "xchar:+X/STRING",
                    "number": "18.6.2.0145",
                    "name": "+X/STRING",
                    "english": "plus-x-string",
                    "list": "XCHAR EXT",
                    "basename": "PlusXDivSTRING",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr<sub>1</sub> u<sub>1</sub></em> -- <em>xc-addr<sub>2</sub> u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xc-addr1 u1 -- xc-addr2 u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr<sub>1</sub> u<sub>1</sub></em> -- <em>xc-addr<sub>2</sub> u<sub>2</sub></em> )\n      <p>\n      Step forward by one xchar in the buffer defined by <em>xc-addr<sub>1</sub> u<sub>1</sub></em>.\n      <em>xc-addr<sub>2</sub> u<sub>2</sub></em> is the remaining buffer after stepping over the\n      first xchar in the buffer.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>+X/STRING</strong> <a href=\"../core/p\">(</a> xc-addr1 u1 -- xc-addr2 u2 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../xchar/XCHARPlus\">XCHAR+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/Minus\">-</a> <a href=\"../string/DivSTRING\">/STRING</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "X-SIZE": {
                    "id": "xchar:X-SIZE",
                    "number": "18.6.1.2486.50",
                    "name": "X-SIZE",
                    "english": " ",
                    "list": "XCHAR",
                    "basename": "X-SIZE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr u<sub>1</sub></em> -- <em>u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xc-addr u1 -- u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr u<sub>1</sub></em> -- <em>u<sub>2</sub></em> )\n      <p>\n      <em>u<sub>2</sub></em> is the number of pchars used to encode the first xchar\n      stored in the string <em>xc-addr u1</em>.  To calculate the size of\n      the xchar, only the bytes inside the buffer may be accessed.  An\n      ambiguous condition exists if the xchar is incomplete or malformed.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>X-SIZE</strong> <a href=\"../core/p\">(</a> xc-addr u1 -- u2 ) <br>\n      &nbsp;&nbsp; <a href=\"../core/ZeroEqual\">0=</a>         <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 0 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">length of UTF-8 char starting at u8-addr (accesses only u8-addr)</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/CFetch\">C@</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 1 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $c0 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> -77 <a href=\"../exception/THROW\">THROW</a>   <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $e0 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 2 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $f0 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 3 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $f8 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 4 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $fc <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 5 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $fe <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 6 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; -77 <a href=\"../exception/THROW\">THROW</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "X-WIDTH": {
                    "id": "xchar:X-WIDTH",
                    "number": "18.6.2.2486.70",
                    "name": "X-WIDTH",
                    "english": " ",
                    "list": "XCHAR EXT",
                    "basename": "X-WIDTH",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr u</em> -- <em>n</em> )"
                        },
                        "plain": {
                            " ": "( xc-addr u -- n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr u</em> -- <em>n</em> )\n      <p>\n      <em>n</em> is the number of monospace ASCII characters that take the same\n      space to display as the xchar string <em>xc-addr u</em>; assuming a\n      monospaced display font, i.e., xchar width is always an integer multiple\n      of the width of an ASCII character.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>X-WIDTH</strong> <a href=\"../core/p\">(</a> xc-addr u -- n ) <br>\n      &nbsp;&nbsp; 0 <a href=\"../core/ROT\">ROT</a> <a href=\"../core/ROT\">ROT</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/I\">I</a> <a href=\"../xchar/XCFetchPlus\">XC@+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../xchar/XC-WIDTH\">XC-WIDTH</a> <a href=\"../core/Plus\">+</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/I\">I</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XC-SIZE": {
                    "id": "xchar:XC-SIZE",
                    "number": "18.6.1.2487.25",
                    "name": "XC-SIZE",
                    "english": "x-c-size",
                    "list": "XCHAR",
                    "basename": "XC-SIZE",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar</em> -- <em>u</em> )"
                        },
                        "plain": {
                            " ": "( xchar -- u )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar</em> -- <em>u</em> )\n      <p>\n      <em>u</em> is the number of pchars used to encode <em>xchar</em> in memory.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XC-SIZE</strong> <a href=\"../core/p\">(</a> xchar -- n ) <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/DROP\">DROP</a> 1 <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n      &nbsp;&nbsp; $800  2 <a href=\"../core/toR\">&gt;R</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/TwoDUP\">2DUP</a> U&gt;= <a href=\"../core/WHILE\">WHILE</a>  5 <a href=\"../core/LSHIFT\">LSHIFT</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/UNTIL\">UNTIL</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/TwoDROP\">2DROP</a> <a href=\"../core/Rfrom\">R&gt;</a> <br>\n      <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      This test assumes UTF-8 encoding is being used.\n      <p>\n            </p><div class=\"tt\">\n<a href=\"../core/HEX\">HEX</a> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>XC-SIZE</strong> -&gt; 1 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;7f&nbsp;<strong>XC-SIZE</strong> -&gt; 1 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;<strong>XC-SIZE</strong> -&gt; 2 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;7ff&nbsp;<strong>XC-SIZE</strong> -&gt; 2 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;800&nbsp;<strong>XC-SIZE</strong> -&gt; 3 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;&nbsp;ffff&nbsp;<strong>XC-SIZE</strong> -&gt; 3 }T</span> <br>\n        <span class=\"tt\">T{ &nbsp;10000&nbsp;<strong>XC-SIZE</strong> -&gt; 4 }T</span> <br>\n        <span class=\"tt\">T{ 1fffff&nbsp;<strong>XC-SIZE</strong> -&gt; 4 }T</span>\n        \n        \n        </div>\n      "
                        }
                    }
                },
                "XC-WIDTH": {
                    "id": "xchar:XC-WIDTH",
                    "number": "18.6.2.2487.30",
                    "name": "XC-WIDTH",
                    "english": "x-c-width",
                    "list": "XCHAR EXT",
                    "basename": "XC-WIDTH",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar</em> -- <em>n</em> )"
                        },
                        "plain": {
                            " ": "( xchar -- n )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar</em> -- <em>n</em> )\n      <p>\n      <em>n</em> is the number of monospace ASCII characters that take the same\n      space to display as the <em>xchar</em>; i.e., <em>xchar</em> width is always\n      an integer multiple of the width of an ASCII char.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> wc, <a href=\"../core/p\">(</a> n low high -- )  <a href=\"../core/OnePlus\">1+</a> <a href=\"../core/Comma\">,</a> <a href=\"../core/Comma\">,</a> <a href=\"../core/Comma\">,</a> <a href=\"../core/Semi\">;</a>\n      <p>\n      <a href=\"../core/CREATE\">CREATE</a> wc-table <a href=\"../core/bs\">\\</a> <span class=\"rm\">derived from wcwidth source code, for UCS32</span> <br>\n      0  0300  0357 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  035D  036F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0483  0486 wc,<br>\n      0  0488  0489 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0591  05A1 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  05A3  05B9 wc,<br>\n      0  05BB  05BD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  05BF  05BF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  05C1  05C2 wc,<br>\n      0  05C4  05C4 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0600  0603 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0610  0615 wc,<br>\n      0  064B  0658 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0670  0670 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  06D6  06E4 wc,<br>\n      0  06E7  06E8 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  06EA  06ED wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  070F  070F wc,<br>\n      0  0711  0711 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0730  074A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  07A6  07B0 wc,<br>\n      0  0901  0902 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  093C  093C wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0941  0948 wc,<br>\n      0  094D  094D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0951  0954 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0962  0963 wc,<br>\n      0  0981  0981 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  09BC  09BC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  09C1  09C4 wc,<br>\n      0  09CD  09CD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  09E2  09E3 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0A01  0A02 wc,<br>\n      0  0A3C  0A3C wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0A41  0A42 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0A47  0A48 wc,<br>\n      0  0A4B  0A4D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0A70  0A71 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0A81  0A82 wc,<br>\n      0  0ABC  0ABC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0AC1  0AC5 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0AC7  0AC8 wc,<br>\n      0  0ACD  0ACD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0AE2  0AE3 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0B01  0B01 wc,<br>\n      0  0B3C  0B3C wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0B3F  0B3F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0B41  0B43 wc,<br>\n      0  0B4D  0B4D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0B56  0B56 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0B82  0B82 wc,<br>\n      0  0BC0  0BC0 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0BCD  0BCD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0C3E  0C40 wc,<br>\n      0  0C46  0C48 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0C4A  0C4D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0C55  0C56 wc,<br>\n      0  0CBC  0CBC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0CBF  0CBF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0CC6  0CC6 wc,<br>\n      0  0CCC  0CCD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0D41  0D43 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0D4D  0D4D wc,<br>\n      0  0DCA  0DCA wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0DD2  0DD4 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0DD6  0DD6 wc,<br>\n      0  0E31  0E31 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0E34  0E3A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0E47  0E4E wc,<br>\n      0  0EB1  0EB1 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0EB4  0EB9 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0EBB  0EBC wc,<br>\n      0  0EC8  0ECD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0F18  0F19 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0F35  0F35 wc,<br>\n      0  0F37  0F37 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0F39  0F39 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0F71  0F7E wc,<br>\n      0  0F80  0F84 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0F86  0F87 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0F90  0F97 wc,<br>\n      0  0F99  0FBC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  0FC6  0FC6 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  102D  1030 wc,<br>\n      0  1032  1032 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1036  1037 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1039  1039 wc,<br>\n      0  1058  1059 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      1  0000  1100 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2  1100  115f wc,<br>\n      0  1160  11FF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1712  1714 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1732  1734 wc,<br>\n      0  1752  1753 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1772  1773 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  17B4  17B5 wc,<br>\n      0  17B7  17BD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  17C6  17C6 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  17C9  17D3 wc,<br>\n      0  17DD  17DD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  180B  180D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  18A9  18A9 wc,<br>\n      0  1920  1922 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1927  1928 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  1932  1932 wc,<br>\n      0  1939  193B wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  200B  200F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  202A  202E wc,<br>\n      0  2060  2063 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  206A  206F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  20D0  20EA wc,<br>\n      2  2329  232A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  302A  302F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2  2E80  303E wc,<br>\n      0  3099  309A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2  3040  A4CF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2  AC00  D7A3 wc,<br>\n      2  F900  FAFF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  FB1E  FB1E wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  FE00  FE0F wc,<br>\n      0  FE20  FE23 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2  FE30  FE6F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  FEFF  FEFF wc,<br>\n      2  FF00  FF60 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2  FFE0  FFE6 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0  FFF9  FFFB wc,<br>\n      0 1D167 1D169 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0 1D173 1D182 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0 1D185 1D18B wc,<br>\n      0 1D1AA 1D1AD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2 20000 2FFFD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      2 30000 3FFFD wc,<br>\n      0 E0001 E0001 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0 E0020 E007F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n      0 E0100 E01EF wc,<br>\n      <a href=\"../core/HERE\">HERE</a> wc-table <a href=\"../core/Minus\">-</a> <a href=\"../core/CONSTANT\">CONSTANT</a> #wc-table\n      </p><p>\n      <a href=\"../core/bs\">\\</a> <span class=\"rm\">inefficient table walk:</span>\n      </p><p>\n      <a href=\"../core/Colon\">:</a> <strong>XC-WIDTH</strong> <a href=\"../core/p\">(</a> xchar -- n ) <br>\n      &nbsp;&nbsp; wc-table #wc-table <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> <a href=\"../core/I\">I</a> <a href=\"../core/TwoFetch\">2@</a> <a href=\"../core/WITHIN\">WITHIN</a> <a href=\"../core/IF\">IF</a>\n      <a href=\"../core/DROP\">DROP</a> <a href=\"../core/I\">I</a> 2 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../core/Plus\">+</a> <a href=\"../core/Fetch\">@</a> <a href=\"../core/UNLOOP\">UNLOOP</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp; 3 <a href=\"../core/CELLS\">CELLS</a> <a href=\"../core/PlusLOOP\">+LOOP</a> <a href=\"../core/DROP\">DROP</a> 1 <a href=\"../core/Semi\">;</a>\n        \n      </p>"
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ $606D&nbsp;<strong>XC-WIDTH</strong> -&gt; 2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;$41&nbsp;<strong>XC-WIDTH</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ $2060&nbsp;<strong>XC-WIDTH</strong> -&gt; 0 }T</span>\n      \n      \n      "
                        }
                    }
                },
                "XCComma": {
                    "id": "xchar:XC,",
                    "number": "18.6.1.2487.20",
                    "name": "XC,",
                    "english": "x-c-comma",
                    "list": "XCHAR",
                    "basename": "XCComma",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar</em> -- )"
                        },
                        "plain": {
                            " ": "( xchar -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar</em> -- )\n      <p>\n      Append the encoding of <em>xchar</em> to the dictionary.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CComma\">6.1.0860 C,</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XC,</strong> <a href=\"../core/p\">(</a> xchar -- ) <a href=\"../core/HERE\">HERE</a> <a href=\"../xchar/XCStorePlus\">XC!+</a> DP <a href=\"../core/Store\">!</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XCFetchPlus": {
                    "id": "xchar:XC@+",
                    "number": "18.6.1.2487.35",
                    "name": "XC@+",
                    "english": "x-c-fetch-plus",
                    "list": "XCHAR",
                    "basename": "XCFetchPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub> xchar</em> )"
                        },
                        "plain": {
                            " ": "( xc-addr1 -- xc-addr2 xchar )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub> xchar</em> )\n      <p>\n      Fetches the <em>xchar</em> at <em>xc-addr<sub>1</sub></em>.  <em>xc-addr<sub>2</sub></em>\n      points to the first memory location after the retrieved <em>xchar</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XC@+</strong> <a href=\"../core/p\">(</a> xc-addr -- xc-addr' u ) <br>\n      &nbsp;&nbsp; <a href=\"../core/COUNT\">COUNT</a> <a href=\"../core/DUP\">DUP</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a>  <a href=\"../core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n      &nbsp;&nbsp; $7F <a href=\"../core/AND\">AND</a> $40 <a href=\"../core/toR\">&gt;R</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/AND\">AND</a> <a href=\"../core/WHILE\">WHILE</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/XOR\">XOR</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 6 <a href=\"../core/LSHIFT\">LSHIFT</a> <a href=\"../core/Rfrom\">R&gt;</a> 5 <a href=\"../core/LSHIFT\">LSHIFT</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/COUNT\">COUNT</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; $3F <a href=\"../core/AND\">AND</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/OR\">OR</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/DROP\">DROP</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      "
                        }
                    }
                },
                "XCHARMinus": {
                    "id": "xchar:XCHAR-",
                    "number": "18.6.2.2487.45",
                    "name": "XCHAR-",
                    "english": "x-char-minus",
                    "list": "XCHAR EXT",
                    "basename": "XCHARMinus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xc-addr1 -- xc-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub></em> )\n      <p>\n      Goes backward from <em>xc-addr<sub>1</sub></em> until it finds an xchar so that the\n      size of this xchar added to <em>xc-addr<sub>2</sub></em> gives <em>xc-addr1</em>.\n      There is an ambiguous condition when the encoding doesn't permit reliable\n      backward stepping through the text.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XCHAR-</strong> <a href=\"../core/p\">(</a> xc-addr -- xc-addr' ) <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a>  1 <a href=\"../core/CHARS\">CHARS</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/CFetch\">C@</a> $C0 <a href=\"../core/AND\">AND</a> $80 <a href=\"../core/ne\">&lt;&gt;</a> <a href=\"../core/UNTIL\">UNTIL</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XCHARPlus": {
                    "id": "xchar:XCHAR+",
                    "number": "18.6.1.2487.40",
                    "name": "XCHAR+",
                    "english": "x-char-plus",
                    "list": "XCHAR",
                    "basename": "XCHARPlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xc-addr1 -- xc-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub></em> )\n      <p>\n      Adds the size of the xchar stored at <em>xc-addr<sub>1</sub></em> to this address,\n      giving <em>xc-addr<sub>2</sub></em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/CHARPlus\">6.1.0897 CHAR+</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XCHAR+</strong> <a href=\"../core/p\">(</a> xc-addr -- xc-addr' )  <a href=\"../xchar/XCFetchPlus\">XC@+</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XCStorePlus": {
                    "id": "xchar:XC!+",
                    "number": "18.6.1.2487.10",
                    "name": "XC!+",
                    "english": "x-c-store-plus",
                    "list": "XCHAR",
                    "basename": "XCStorePlus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xchar xc-addr1 -- xc-addr2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar xc-addr<sub>1</sub></em> -- <em>xc-addr<sub>2</sub></em> )\n      <p>\n      Stores the <em>xchar</em> at <em>xc-addr<sub>1</sub></em>.  <em>xc-addr<sub>2</sub></em>\n      points to the first memory location after the stored <em>xchar</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XC!+</strong> <a href=\"../core/p\">(</a> xchar xc-addr -- xc-addr' ) <br>\n      &nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/TUCK\">TUCK</a> <a href=\"../core/CStore\">C!</a> <a href=\"../core/CHARPlus\">CHAR+</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n      &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> 0 <a href=\"../core/SWAP\">SWAP</a> $3F <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Umore\">U&gt;</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDiv\">2/</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/DUP\">DUP</a> $3F <a href=\"../core/AND\">AND</a> $80 <a href=\"../core/OR\">OR</a> <a href=\"../core/SWAP\">SWAP</a> 6 <a href=\"../core/RSHIFT\">RSHIFT</a> <a href=\"../core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> $7F <a href=\"../core/XOR\">XOR</a> <a href=\"../core/TwoTimes\">2*</a> <a href=\"../core/OR\">OR</a> <a href=\"../core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/OVER\">OVER</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <a href=\"../core/TUCK\">TUCK</a> <a href=\"../core/CStore\">C!</a> <a href=\"../core/CHARPlus\">CHAR+</a> <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/NIP\">NIP</a> <br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XCStorePlusq": {
                    "id": "xchar:XC!+q",
                    "number": "18.6.1.2487.15",
                    "name": "XC!+?",
                    "english": "x-c-store-plus-query",
                    "list": "XCHAR",
                    "basename": "XCStorePlusq",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar xc-addr<sub>1</sub> u<sub>1</sub></em> -- <em>xc-addr<sub>2</sub> u<sub>2</sub> flag</em> )"
                        },
                        "plain": {
                            " ": "( xchar xc-addr1 u1 -- xc-addr2 u2 flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar xc-addr<sub>1</sub> u<sub>1</sub></em> -- <em>xc-addr<sub>2</sub> u<sub>2</sub> flag</em> )\n      <p>\n      Stores the <em>xchar</em> into the string buffer specified by\n      <em>xc-addr<sub>1</sub> u<sub>1</sub></em>.  <em>xc-addr<sub>2</sub> u<sub>2</sub></em> is the remaining string\n      buffer.  If the <em>xchar</em> did fit into the buffer, <em>flag</em>\n      is true, otherwise <em>flag</em> is false, and <em>xc-addr<sub>2</sub> u<sub>2</sub></em>\n      equal <em>xc-addr<sub>1</sub> u<sub>1</sub></em>.  <strong>XC!+?</strong> is safe for buffer overflows.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XC!+?</strong> <a href=\"../core/p\">(</a> xchar xc-addr u -- xc-addr' u' flag ) <br>\n      &nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../xchar/XC-SIZE\">XC-SIZE</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/p\">(</a> xchar xc-addr1 len r: u1 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/bs\">\\</a> <span class=\"rm\">not enough space</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/DROP\">DROP</a> <a href=\"../core/NIP\">NIP</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/FALSE\">FALSE</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/toR\">&gt;R</a> <a href=\"../xchar/XCStorePlus\">XC!+</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/SWAP\">SWAP</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/TRUE\">TRUE</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/THEN\">THEN</a> <a href=\"../core/Semi\">;</a>\n        \n      "
                        },
                        "Testing:": {
                            "name": "Testing:",
                            "html": "\n\n\n      <span class=\"tt\">T{ $ffff&nbsp;<a href=\"../core/PAD\">PAD</a>&nbsp;4&nbsp;<strong>XC!+?</strong> -&gt; <a href=\"../core/PAD\">PAD</a>&nbsp;3&nbsp;<a href=\"../core/Plus\">+</a>&nbsp;1&nbsp;&lt;TRUE&gt; }T</span>\n      \n      \n      "
                        }
                    }
                },
                "XEMIT": {
                    "id": "xchar:XEMIT",
                    "number": "18.6.1.2488.10",
                    "name": "XEMIT",
                    "english": "x-emit",
                    "list": "XCHAR",
                    "basename": "XEMIT",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar</em> -- )"
                        },
                        "plain": {
                            " ": "( xchar -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar</em> -- )\n      <p>\n      Prints an <em>xchar</em> on the terminal.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/EMIT\">6.1.1320 EMIT</a>\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XEMIT</strong> <a href=\"../core/p\">(</a> xchar -- ) <br>\n      &nbsp;&nbsp; <a href=\"../core/DUP\">DUP</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/EMIT\">EMIT</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n      &nbsp;&nbsp; 0 <a href=\"../core/SWAP\">SWAP</a> $3F <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/TwoDUP\">2DUP</a> <a href=\"../core/Umore\">U&gt;</a> <a href=\"../core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"../core/TwoDiv\">2/</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/DUP\">DUP</a> $3F <a href=\"../core/AND\">AND</a> $80 <a href=\"../core/OR\">OR</a> <a href=\"../core/SWAP\">SWAP</a> 6 <a href=\"../core/RSHIFT\">RSHIFT</a> <a href=\"../core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> $7F <a href=\"../core/XOR\">XOR</a> <a href=\"../core/TwoTimes\">2*</a> <a href=\"../core/OR\">OR</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/DUP\">DUP</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/ZeroEqual\">0=</a> <a href=\"../core/WHILE\">WHILE</a> <a href=\"../core/EMIT\">EMIT</a> <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/DROP\">DROP</a><br>\n      <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XHOLD": {
                    "id": "xchar:XHOLD",
                    "number": "18.6.2.2488.20",
                    "name": "XHOLD",
                    "english": "x-hold",
                    "list": "XCHAR EXT",
                    "basename": "XHOLD",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xchar</em> -- )"
                        },
                        "plain": {
                            " ": "( xchar -- )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xchar</em> -- )\n      <p>\n      Adds <em>xchar</em> to the picture numeric output string.  An ambiguous\n      condition exists if <strong>XHOLD</strong> executes outside of a <a href=\"../core/num-start\">&lt;#</a>\n      <a href=\"../core/num-end\">#&gt;</a> delimited number conversion.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/HOLD\">6.1.1670 HOLD</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/CREATE\">CREATE</a> xholdbuf 8 <a href=\"../core/ALLOT\">ALLOT</a>\n      <p>\n      <a href=\"../core/Colon\">:</a> <strong>XHOLD</strong> <a href=\"../core/p\">(</a> xchar -- )\n      xholdbuf <a href=\"../core/TUCK\">TUCK</a> <a href=\"../xchar/XCStorePlus\">XC!+</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/HOLDS\">HOLDS</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      </p>"
                        }
                    }
                },
                "XKEY": {
                    "id": "xchar:XKEY",
                    "number": "18.6.1.2488.30",
                    "name": "XKEY",
                    "english": "x-key",
                    "list": "XCHAR",
                    "basename": "XKEY",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>xchar</em> )"
                        },
                        "plain": {
                            " ": "( -- xchar )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>xchar</em> )\n      <p>\n      Reads an <em>xchar</em> from the terminal.  This will discard all input\n      events up to the completion of the <em>xchar</em>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../core/KEY\">6.1.1750 KEY</a>.\n      <p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>XKEY</strong> <a href=\"../core/p\">(</a> -- xchar ) <br>\n      &nbsp;&nbsp; <a href=\"../core/KEY\">KEY</a> <a href=\"../core/DUP\">DUP</a> $80 <a href=\"../core/Uless\">U&lt;</a> <a href=\"../core/IF\">IF</a> <a href=\"../core/EXIT\">EXIT</a> <a href=\"../core/THEN\">THEN</a> <a href=\"../core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n      &nbsp;&nbsp; $7F <a href=\"../core/AND\">AND</a> $40 <a href=\"../core/toR\">&gt;R</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/BEGIN\">BEGIN</a> <a href=\"../core/DUP\">DUP</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/AND\">AND</a> <a href=\"../core/WHILE\">WHILE</a> <a href=\"../core/RFetch\">R@</a> <a href=\"../core/XOR\">XOR</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 6 <a href=\"../core/LSHIFT\">LSHIFT</a> <a href=\"../core/Rfrom\">R&gt;</a> 5 <a href=\"../core/LSHIFT\">LSHIFT</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/toR\">&gt;R</a> <a href=\"../core/KEY\">KEY</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; $3F <a href=\"../core/AND\">AND</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/OR\">OR</a> <br>\n      &nbsp;&nbsp; <a href=\"../core/REPEAT\">REPEAT</a> <a href=\"../core/Rfrom\">R&gt;</a> <a href=\"../core/DROP\">DROP</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                },
                "XKEYq": {
                    "id": "xchar:XKEYq",
                    "number": "18.6.1.2488.35",
                    "name": "XKEY?",
                    "english": "x-key-query",
                    "list": "XCHAR",
                    "basename": "XKEYq",
                    "stackEffect": {
                        "html": {
                            " ": "( -- <em>flag</em> )"
                        },
                        "plain": {
                            " ": "( -- flag )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( -- <em>flag</em> )\n      <p>\n      <em>Flag</em> is true when it's possible to do <a href=\"../xchar/XKEY\">XKEY</a> without\n      blocking.  Subsequent <a href=\"../facility/KEYq\">KEY?</a>, <a href=\"../core/KEY\">KEY</a>,\n      <a href=\"../facility/EKEYq\">EKEY?</a>, and <a href=\"../facility/EKEY\">EKEY</a> may be affected\n      by <strong>XKEY?</strong>.\n      </p><p>\n        \n      </p>"
                        },
                        "See:": {
                            "name": "See:",
                            "html": "\n\n <a href=\"../facility/KEYq\">10.6.1.1755 KEY?</a>.\n      \n      "
                        }
                    }
                },
                "XSTRINGMinus": {
                    "id": "xchar:XSTRING-",
                    "number": "18.6.2.2495",
                    "name": "X\\STRING-",
                    "english": "x-string-minus",
                    "list": "XCHAR EXT",
                    "basename": "XSTRINGMinus",
                    "stackEffect": {
                        "html": {
                            " ": "( <em>xc-addr u<sub>1</sub></em> -- <em>xc-addr u<sub>2</sub></em> )"
                        },
                        "plain": {
                            " ": "( xc-addr u1 -- xc-addr u2 )"
                        }
                    },
                    "sections": {
                        " ": {
                            "name": " ",
                            "html": "\n\n ( <em>xc-addr u<sub>1</sub></em> -- <em>xc-addr u<sub>2</sub></em> )\n      <p>\n      Search for the penultimate xchar in the string <em>xc-addr u<sub>1</sub></em>.\n      The string <em>xc-addr u<sub>2</sub></em> contains all xchars of\n      <em>xc-addr u<sub>1</sub></em>, but the last.  Unlike <a href=\"../xchar/XCHARMinus\">XCHAR-</a>,\n      <strong>X\\STRING-</strong> can be implemented in encodings where xchar\n      boundaries can only reliably detected when scanning in forward\n      direction.\n      </p><p>\n        \n      </p>"
                        },
                        "Implementation:": {
                            "name": "Implementation:",
                            "html": "\n\n\n      <a href=\"../core/Colon\">:</a> <strong>X\\STRING-</strong> <a href=\"../core/p\">(</a> xc-addr u -- xc-addr u' ) <br>\n      &nbsp;&nbsp; <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Plus\">+</a> <a href=\"../xchar/XCHARMinus\">XCHAR-</a> <a href=\"../core/OVER\">OVER</a> <a href=\"../core/Minus\">-</a> <a href=\"../core/Semi\">;</a>\n      \n      \n      "
                        }
                    }
                }
            }
        }
    },
    "documents": {
        "alpha": {
            "basename": "alpha",
            "name": "Annex H: Alphabetic list of words",
            "html": "<div id=\"body\">\n<h1>Annex H: Alphabetic list of words</h1> <!-- F (informative annex)}}} -->\n<a name=\"annex:index\"></a>\n<p>\nIn the following list, the last, four-digit, part of the reference\nnumber establishes a sequence corresponding to the alphabetic ordering\nof all standard words. The first two or three parts indicate the word\nset and glossary section in which the word is defined.\n</p><p>\n </p><p>\n\n\n\n\n</p><table class=\"center\">\n<tbody><tr><td class=\"r\"><a href=\"core/Store\">6.1.0010</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Store\">!</a></td><td>\"store\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/num\">6.1.0030</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/num\">#</a></td><td>\"number-sign\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/num-end\">6.1.0040</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/num-end\">#&gt;</a></td><td>\"number-sign-greater\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/numS\">6.1.0050</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/numS\">#S</a></td><td>\"number-sign-s\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Tick\">6.1.0070</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Tick\">'</a></td><td>\"tick\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/p\">6.1.0080</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/p\">(</a></td><td>\"paren\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/p\">11.6.1.0080</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/p\">(</a></td><td>\"paren\"</td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"locals/LOCAL\">13.6.1.0086</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"locals/LOCAL\">(LOCAL)</a></td><td>\"paren-local-paren\"</td><td class=\"r\">LOCAL</td></tr>\n<tr><td class=\"r\"><a href=\"core/Times\">6.1.0090</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Times\">*</a></td><td>\"star\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TimesDiv\">6.1.0100</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TimesDiv\">*/</a></td><td>\"star-slash\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TimesDivMOD\">6.1.0110</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TimesDivMOD\">*/MOD</a></td><td>\"star-slash-mod\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Plus\">6.1.0120</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Plus\">+</a></td><td>\"plus\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/PlusStore\">6.1.0130</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/PlusStore\">+!</a></td><td>\"plus-store\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/PlusFIELD\">10.6.2.0135</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/PlusFIELD\">+FIELD</a></td><td>\"plus-field\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/PlusLOOP\">6.1.0140</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/PlusLOOP\">+LOOP</a></td><td>\"plus-loop\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/PlusXDivSTRING\">18.6.2.0145</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"xchar/PlusXDivSTRING\">+X/STRING</a></td><td>\"plus-x-string\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/Comma\">6.1.0150</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Comma\">,</a></td><td>\"comma\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Minus\">6.1.0160</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Minus\">-</a></td><td>\"minus\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"string/MinusTRAILING\">17.6.1.0170</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/MinusTRAILING\">-TRAILING</a></td><td>\"dash-trailing\"</td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/MinusTRAILING-GARBAGE\">18.6.2.0175</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"xchar/MinusTRAILING-GARBAGE\">-TRAILING-GARBAGE</a></td><td>\"minus-trailing-garbage\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/d\">6.1.0180</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/d\">.</a></td><td>\"dot\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Dotq\">6.1.0190</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Dotq\">.\"</a></td><td>\"dot-quote\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Dotp\">6.2.0200</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Dotp\">.(</a></td><td>\"dot-paren\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/DotR\">6.2.0210</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DotR\">.R</a></td><td>\"dot-r\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/DotS\">15.6.1.0220</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/DotS\">.S</a></td><td>\"dot-s\"</td><td class=\"r\">TOOLS</td></tr>\n<tr><td class=\"r\"><a href=\"core/Div\">6.1.0230</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Div\">/</a></td><td>\"slash\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DivMOD\">6.1.0240</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DivMOD\">/MOD</a></td><td>\"slash-mod\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"string/DivSTRING\">17.6.1.0245</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/DivSTRING\">/STRING</a></td><td>\"slash-string\"</td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"core/Zeroless\">6.1.0250</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Zeroless\">0&lt;</a></td><td>\"zero-less\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Zerone\">6.2.0260</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Zerone\">0&lt;&gt;</a></td><td>\"zero-not-equals\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ZeroEqual\">6.1.0270</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ZeroEqual\">0=</a></td><td>\"zero-equals\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Zeromore\">6.2.0280</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Zeromore\">0&gt;</a></td><td>\"zero-greater\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/OnePlus\">6.1.0290</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/OnePlus\">1+</a></td><td>\"one-plus\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/OneMinus\">6.1.0300</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/OneMinus\">1-</a></td><td>\"one-minus\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoStore\">6.1.0310</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoStore\">2!</a></td><td>\"two-store\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoTimes\">6.1.0320</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoTimes\">2*</a></td><td>\"two-star\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoDiv\">6.1.0330</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoDiv\">2/</a></td><td>\"two-slash\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwotoR\">6.2.0340</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwotoR\">2&gt;R</a></td><td>\"two-to-r\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoFetch\">6.1.0350</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoFetch\">2@</a></td><td>\"two-fetch\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"double/TwoCONSTANT\">8.6.1.0360</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/TwoCONSTANT\">2CONSTANT</a></td><td>\"two-constant\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoDROP\">6.1.0370</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoDROP\">2DROP</a></td><td>\"two-drop\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoDUP\">6.1.0380</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoDUP\">2DUP</a></td><td>\"two-dupe\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"double/TwoLITERAL\">8.6.1.0390</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/TwoLITERAL\">2LITERAL</a></td><td>\"two-literal\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoOVER\">6.1.0400</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoOVER\">2OVER</a></td><td>\"two-over\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoRfrom\">6.2.0410</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoRfrom\">2R&gt;</a></td><td>\"two-r-from\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoRFetch\">6.2.0415</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoRFetch\">2R@</a></td><td>\"two-r-fetch\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"double/TwoROT\">8.6.2.0420</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/TwoROT\">2ROT</a></td><td>\"two-rote\"</td><td class=\"r\">DOUBLE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TwoSWAP\">6.1.0430</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TwoSWAP\">2SWAP</a></td><td>\"two-swap\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"double/TwoVALUE\">8.6.2.0435</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/TwoVALUE\">2VALUE</a></td><td>\"two-value\"</td><td class=\"r\">DOUBLE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"double/TwoVARIABLE\">8.6.1.0440</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/TwoVARIABLE\">2VARIABLE</a></td><td>\"two-variable\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Colon\">6.1.0450</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Colon\">:</a></td><td>\"colon\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ColonNONAME\">6.2.0455</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ColonNONAME\">:NONAME</a></td><td>\"colon-no-name\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/Semi\">6.1.0460</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Semi\">;</a></td><td>\"semicolon\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/SemiCODE\">15.6.2.0470</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/SemiCODE\">;CODE</a></td><td>\"semicolon-code\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/less\">6.1.0480</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/less\">&lt;</a></td><td>\"less-than\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/num-start\">6.1.0490</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/num-start\">&lt;#</a></td><td>\"less-number-sign\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ne\">6.2.0500</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ne\">&lt;&gt;</a></td><td>\"not-equals\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/Equal\">6.1.0530</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Equal\">=</a></td><td>\"equals\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/more\">6.1.0540</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/more\">&gt;</a></td><td>\"greater-than\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/toBODY\">6.1.0550</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/toBODY\">&gt;BODY</a></td><td>\"to-body\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"float/toFLOAT\">12.6.1.0558</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/toFLOAT\">&gt;FLOAT</a></td><td>\"to-float\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"core/toIN\">6.1.0560</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/toIN\">&gt;IN</a></td><td>\"to-in\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/toNUMBER\">6.1.0570</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/toNUMBER\">&gt;NUMBER</a></td><td>\"to-number\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/toR\">6.1.0580</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/toR\">&gt;R</a></td><td>\"to-r\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/q\">15.6.1.0600</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/q\">?</a></td><td>\"question\"</td><td class=\"r\">TOOLS</td></tr>\n<tr><td class=\"r\"><a href=\"core/qDO\">6.2.0620</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/qDO\">?DO</a></td><td>\"question-do\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/qDUP\">6.1.0630</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/qDUP\">?DUP</a></td><td>\"question-dupe\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Fetch\">6.1.0650</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Fetch\">@</a></td><td>\"fetch\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ABORT\">6.1.0670</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ABORT\">ABORT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"exception/ABORT\">9.6.2.0670</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"exception/ABORT\">ABORT</a></td><td></td><td class=\"r\">EXCEPTION EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ABORTq\">6.1.0680</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ABORTq\">ABORT\"</a></td><td>\"abort-quote\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"exception/ABORTq\">9.6.2.0680</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"exception/ABORTq\">ABORT\"</a></td><td>\"abort-quote\"</td><td class=\"r\">EXCEPTION EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ABS\">6.1.0690</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ABS\">ABS</a></td><td>\"abs\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ACCEPT\">6.1.0695</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ACCEPT\">ACCEPT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ACTION-OF\">6.2.0698</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ACTION-OF\">ACTION-OF</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/AGAIN\">6.2.0700</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/AGAIN\">AGAIN</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/AHEAD\">15.6.2.0702</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/AHEAD\">AHEAD</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ALIGN\">6.1.0705</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ALIGN\">ALIGN</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ALIGNED\">6.1.0706</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ALIGNED\">ALIGNED</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"memory/ALLOCATE\">14.6.1.0707</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"memory/ALLOCATE\">ALLOCATE</a></td><td></td><td class=\"r\">MEMORY</td></tr>\n<tr><td class=\"r\"><a href=\"core/ALLOT\">6.1.0710</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ALLOT\">ALLOT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"search/ALSO\">16.6.2.0715</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/ALSO\">ALSO</a></td><td></td><td class=\"r\">SEARCH EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/AND\">6.1.0720</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/AND\">AND</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/ASSEMBLER\">15.6.2.0740</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/ASSEMBLER\">ASSEMBLER</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/AT-XY\">10.6.1.0742</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/AT-XY\">AT-XY</a></td><td>\"at-x-y\"</td><td class=\"r\">FACILITY</td></tr>\n<tr><td class=\"r\"><a href=\"core/BASE\">6.1.0750</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BASE\">BASE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/BEGIN\">6.1.0760</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BEGIN\">BEGIN</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/BEGIN-STRUCTURE\">10.6.2.0763</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/BEGIN-STRUCTURE\">BEGIN-STRUCTURE</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/BIN\">11.6.1.0765</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/BIN\">BIN</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/BL\">6.1.0770</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BL\">BL</a></td><td>\"b-l\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"string/BLANK\">17.6.1.0780</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/BLANK\">BLANK</a></td><td></td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"block/BLK\">7.6.1.0790</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/BLK\">BLK</a></td><td>\"b-l-k\"</td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"block/BLOCK\">7.6.1.0800</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/BLOCK\">BLOCK</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"block/BUFFER\">7.6.1.0820</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/BUFFER\">BUFFER</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"core/BUFFERColon\">6.2.0825</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BUFFERColon\">BUFFER:</a></td><td>\"buffer-colon\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/BYE\">15.6.2.0830</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/BYE\">BYE</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/CStore\">6.1.0850</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CStore\">C!</a></td><td>\"c-store\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Cq\">6.2.0855</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Cq\">C\"</a></td><td>\"c-quote\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/CComma\">6.1.0860</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CComma\">C,</a></td><td>\"c-comma\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/CFetch\">6.1.0870</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CFetch\">C@</a></td><td>\"c-fetch\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/CASE\">6.2.0873</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CASE\">CASE</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"exception/CATCH\">9.6.1.0875</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"exception/CATCH\">CATCH</a></td><td></td><td class=\"r\">EXCEPTION</td></tr>\n<tr><td class=\"r\"><a href=\"core/CELLPlus\">6.1.0880</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CELLPlus\">CELL+</a></td><td>\"cell-plus\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/CELLS\">6.1.0890</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CELLS\">CELLS</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/CFIELDColon\">10.6.2.0893</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/CFIELDColon\">CFIELD:</a></td><td>\"c-field-colon\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/CHAR\">6.1.0895</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CHAR\">CHAR</a></td><td>\"char\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/CHAR\">18.6.2.0895</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"xchar/CHAR\">CHAR</a></td><td></td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/CHARPlus\">6.1.0897</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CHARPlus\">CHAR+</a></td><td>\"char-plus\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/CHARS\">6.1.0898</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CHARS\">CHARS</a></td><td>\"chars\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/CLOSE-FILE\">11.6.1.0900</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/CLOSE-FILE\">CLOSE-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"string/CMOVE\">17.6.1.0910</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/CMOVE\">CMOVE</a></td><td>\"c-move\"</td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"string/CMOVEtop\">17.6.1.0920</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/CMOVEtop\">CMOVE&gt;</a></td><td>\"c-move-up\"</td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"tools/CODE\">15.6.2.0930</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/CODE\">CODE</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"string/COMPARE\">17.6.1.0935</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/COMPARE\">COMPARE</a></td><td></td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"core/COMPILEComma\">6.2.0945</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/COMPILEComma\">COMPILE,</a></td><td>\"compile-comma\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/CONSTANT\">6.1.0950</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CONSTANT\">CONSTANT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/COUNT\">6.1.0980</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/COUNT\">COUNT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/CR\">6.1.0990</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CR\">CR</a></td><td>\"c-r\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/CREATE\">6.1.1000</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/CREATE\">CREATE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/CREATE-FILE\">11.6.1.1010</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/CREATE-FILE\">CREATE-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/CS-PICK\">15.6.2.1015</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/CS-PICK\">CS-PICK</a></td><td>\"c-s-pick\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/CS-ROLL\">15.6.2.1020</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/CS-ROLL\">CS-ROLL</a></td><td>\"c-s-roll\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"double/DPlus\">8.6.1.1040</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DPlus\">D+</a></td><td>\"d-plus\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DMinus\">8.6.1.1050</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DMinus\">D-</a></td><td>\"d-minus\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/Dd\">8.6.1.1060</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/Dd\">D.</a></td><td>\"d-dot\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DDotR\">8.6.1.1070</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DDotR\">D.R</a></td><td>\"d-dot-r\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DZeroless\">8.6.1.1075</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DZeroless\">D0&lt;</a></td><td>\"d-zero-less\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DZeroEqual\">8.6.1.1080</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DZeroEqual\">D0=</a></td><td>\"d-zero-equals\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DTwoTimes\">8.6.1.1090</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DTwoTimes\">D2*</a></td><td>\"d-two-star\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DTwoDiv\">8.6.1.1100</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DTwoDiv\">D2/</a></td><td>\"d-two-slash\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/Dless\">8.6.1.1110</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/Dless\">D&lt;</a></td><td>\"d-less-than\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DEqual\">8.6.1.1120</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DEqual\">D=</a></td><td>\"d-equals\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"float/DtoF\">12.6.1.1130</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DtoF\">D&gt;F</a></td><td>\"d-to-f\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"double/DtoS\">8.6.1.1140</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DtoS\">D&gt;S</a></td><td>\"d-to-s\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DABS\">8.6.1.1160</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DABS\">DABS</a></td><td>\"d-abs\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DECIMAL\">6.1.1170</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DECIMAL\">DECIMAL</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DEFER\">6.2.1173</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DEFER\">DEFER</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/DEFERStore\">6.2.1175</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DEFERStore\">DEFER!</a></td><td>\"defer-store\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/DEFERFetch\">6.2.1177</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DEFERFetch\">DEFER@</a></td><td>\"defer-fetch\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"search/DEFINITIONS\">16.6.1.1180</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/DEFINITIONS\">DEFINITIONS</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"file/DELETE-FILE\">11.6.1.1190</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/DELETE-FILE\">DELETE-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DEPTH\">6.1.1200</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DEPTH\">DEPTH</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFStore\">12.6.2.1203</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DFStore\">DF!</a></td><td>\"d-f-store\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFFetch\">12.6.2.1204</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DFFetch\">DF@</a></td><td>\"d-f-fetch\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFALIGN\">12.6.2.1205</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DFALIGN\">DFALIGN</a></td><td>\"d-f-align\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFALIGNED\">12.6.2.1207</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DFALIGNED\">DFALIGNED</a></td><td>\"d-f-aligned\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFFIELDColon\">12.6.2.1207.40</a></td><td><a href=\"float/DFFIELDColon\">DFFIELD:</a></td><td>\"d-f-field-colon\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFLOATPlus\">12.6.2.1208</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DFLOATPlus\">DFLOAT+</a></td><td>\"d-float-plus\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/DFLOATS\">12.6.2.1209</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/DFLOATS\">DFLOATS</a></td><td>\"d-floats\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"double/DMAX\">8.6.1.1210</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DMAX\">DMAX</a></td><td>\"d-max\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DMIN\">8.6.1.1220</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DMIN\">DMIN</a></td><td>\"d-min\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DNEGATE\">8.6.1.1230</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DNEGATE\">DNEGATE</a></td><td>\"d-negate\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DO\">6.1.1240</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DO\">DO</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DOES\">6.1.1250</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DOES\">DOES&gt;</a></td><td>\"does\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/DROP\">6.1.1260</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DROP\">DROP</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"double/DUless\">8.6.2.1270</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/DUless\">DU&lt;</a></td><td>\"d-u-less\"</td><td class=\"r\">DOUBLE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/DUMP\">15.6.1.1280</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/DUMP\">DUMP</a></td><td></td><td class=\"r\">TOOLS</td></tr>\n<tr><td class=\"r\"><a href=\"core/DUP\">6.1.1290</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/DUP\">DUP</a></td><td>\"dupe\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/EDITOR\">15.6.2.1300</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/EDITOR\">EDITOR</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/EKEY\">10.6.2.1305</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/EKEY\">EKEY</a></td><td>\"e-key\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/EKEYtoCHAR\">10.6.2.1306</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/EKEYtoCHAR\">EKEY&gt;CHAR</a></td><td>\"e-key-to-char\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/EKEYtoFKEY\">10.6.2.1306.40</a></td><td><a href=\"facility/EKEYtoFKEY\">EKEY&gt;FKEY</a></td><td>\"e-key-to-f-key\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/EKEYtoXCHAR\">18.6.2.1306.60</a></td><td><a href=\"xchar/EKEYtoXCHAR\">EKEY&gt;XCHAR</a></td><td>\"e-key-to-x-char\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/EKEYq\">10.6.2.1307</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/EKEYq\">EKEY?</a></td><td>\"e-key-question\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ELSE\">6.1.1310</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ELSE\">ELSE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/EMIT\">6.1.1320</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/EMIT\">EMIT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/EMITq\">10.6.2.1325</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/EMITq\">EMIT?</a></td><td>\"emit-question\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"block/EMPTY-BUFFERS\">7.6.2.1330</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/EMPTY-BUFFERS\">EMPTY-BUFFERS</a></td><td></td><td class=\"r\">BLOCK EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/END-STRUCTURE\">10.6.2.1336</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ENDCASE\">6.2.1342</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ENDCASE\">ENDCASE</a></td><td>\"end-case\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ENDOF\">6.2.1343</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ENDOF\">ENDOF</a></td><td>\"end-of\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ENVIRONMENTq\">6.1.1345</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a></td><td>\"environment-query\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/ERASE\">6.2.1350</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ERASE\">ERASE</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/EVALUATE\">6.1.1360</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/EVALUATE\">EVALUATE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"block/EVALUATE\">7.6.1.1360</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/EVALUATE\">EVALUATE</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"core/EXECUTE\">6.1.1370</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/EXECUTE\">EXECUTE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/EXIT\">6.1.1380</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/EXIT\">EXIT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"float/FStore\">12.6.1.1400</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FStore\">F!</a></td><td>\"f-store\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FTimes\">12.6.1.1410</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FTimes\">F*</a></td><td>\"f-star\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FTimesTimes\">12.6.2.1415</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FTimesTimes\">F**</a></td><td>\"f-star-star\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FPlus\">12.6.1.1420</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FPlus\">F+</a></td><td>\"f-plus\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FMinus\">12.6.1.1425</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FMinus\">F-</a></td><td>\"f-minus\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/Fd\">12.6.2.1427</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/Fd\">F.</a></td><td>\"f-dot\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FDiv\">12.6.1.1430</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FDiv\">F/</a></td><td>\"f-slash\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FZeroless\">12.6.1.1440</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FZeroless\">F0&lt;</a></td><td>\"f-zero-less-than\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FZeroEqual\">12.6.1.1450</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FZeroEqual\">F0=</a></td><td>\"f-zero-equals\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/Fless\">12.6.1.1460</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/Fless\">F&lt;</a></td><td>\"f-less-than\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FtoD\">12.6.1.1470</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FtoD\">F&gt;D</a></td><td>\"f-to-d\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FtoS\">12.6.2.1471</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FtoS\">F&gt;S</a></td><td>\"F to S\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FFetch\">12.6.1.1472</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FFetch\">F@</a></td><td>\"f-fetch\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FABS\">12.6.2.1474</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FABS\">FABS</a></td><td>\"f-abs\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FACOS\">12.6.2.1476</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FACOS\">FACOS</a></td><td>\"f-a-cos\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FACOSH\">12.6.2.1477</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FACOSH\">FACOSH</a></td><td>\"f-a-cosh\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FALIGN\">12.6.1.1479</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FALIGN\">FALIGN</a></td><td>\"f-align\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FALIGNED\">12.6.1.1483</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FALIGNED\">FALIGNED</a></td><td>\"f-aligned\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FALOG\">12.6.2.1484</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FALOG\">FALOG</a></td><td>\"f-a-log\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/FALSE\">6.2.1485</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/FALSE\">FALSE</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FASIN\">12.6.2.1486</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FASIN\">FASIN</a></td><td>\"f-a-sine\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FASINH\">12.6.2.1487</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FASINH\">FASINH</a></td><td>\"f-a-cinch\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FATAN\">12.6.2.1488</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FATAN\">FATAN</a></td><td>\"f-a-tan\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FATANTwo\">12.6.2.1489</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FATANTwo\">FATAN2</a></td><td>\"f-a-tan-two\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FATANH\">12.6.2.1491</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FATANH\">FATANH</a></td><td>\"f-a-tan-h\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FCONSTANT\">12.6.1.1492</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FCONSTANT\">FCONSTANT</a></td><td>\"f-constant\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FCOS\">12.6.2.1493</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FCOS\">FCOS</a></td><td>\"f-cos\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FCOSH\">12.6.2.1494</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FCOSH\">FCOSH</a></td><td>\"f-cosh\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FDEPTH\">12.6.1.1497</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FDEPTH\">FDEPTH</a></td><td>\"f-depth\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FDROP\">12.6.1.1500</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FDROP\">FDROP</a></td><td>\"f-drop\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FDUP\">12.6.1.1510</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FDUP\">FDUP</a></td><td>\"f-dupe\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FEd\">12.6.2.1513</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FEd\">FE.</a></td><td>\"f-e-dot\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FEXP\">12.6.2.1515</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FEXP\">FEXP</a></td><td>\"f-e-x-p\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FEXPMOne\">12.6.2.1516</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FEXPMOne\">FEXPM1</a></td><td>\"f-e-x-p-m-one\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FFIELDColon\">12.6.2.1517</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FFIELDColon\">FFIELD:</a></td><td>\"f-field-colon\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/FIELDColon\">10.6.2.1518</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/FIELDColon\">FIELD:</a></td><td>\"field-colon\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/FILE-POSITION\">11.6.1.1520</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/FILE-POSITION\">FILE-POSITION</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"file/FILE-SIZE\">11.6.1.1522</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/FILE-SIZE\">FILE-SIZE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"file/FILE-STATUS\">11.6.2.1524</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/FILE-STATUS\">FILE-STATUS</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/FILL\">6.1.1540</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/FILL\">FILL</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/FIND\">6.1.1550</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/FIND\">FIND</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"search/FIND\">16.6.1.1550</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/FIND\">FIND</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLITERAL\">12.6.1.1552</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLITERAL\">FLITERAL</a></td><td>\"f-literal\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLN\">12.6.2.1553</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLN\">FLN</a></td><td>\"f-l-n\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLNPOne\">12.6.2.1554</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLNPOne\">FLNP1</a></td><td>\"f-l-n-p-one\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLOATPlus\">12.6.1.1555</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLOATPlus\">FLOAT+</a></td><td>\"float-plus\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLOATS\">12.6.1.1556</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLOATS\">FLOATS</a></td><td></td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLOG\">12.6.2.1557</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLOG\">FLOG</a></td><td>\"f-log\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FLOOR\">12.6.1.1558</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FLOOR\">FLOOR</a></td><td></td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"block/FLUSH\">7.6.1.1559</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/FLUSH\">FLUSH</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"file/FLUSH-FILE\">11.6.2.1560</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/FLUSH-FILE\">FLUSH-FILE</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/FMDivMOD\">6.1.1561</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/FMDivMOD\">FM/MOD</a></td><td>\"f-m-slash-mod\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"float/FMAX\">12.6.1.1562</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FMAX\">FMAX</a></td><td>\"f-max\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FMIN\">12.6.1.1565</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FMIN\">FMIN</a></td><td>\"f-min\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FNEGATE\">12.6.1.1567</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FNEGATE\">FNEGATE</a></td><td>\"f-negate\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"tools/FORGET\">15.6.2.1580</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/FORGET\">FORGET</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"search/FORTH\">16.6.2.1590</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/FORTH\">FORTH</a></td><td></td><td class=\"r\">SEARCH EXT</td></tr>\n<tr><td class=\"r\"><a href=\"search/FORTH-WORDLIST\">16.6.1.1595</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/FORTH-WORDLIST\">FORTH-WORDLIST</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"float/FOVER\">12.6.1.1600</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FOVER\">FOVER</a></td><td>\"f-over\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"memory/FREE\">14.6.1.1605</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"memory/FREE\">FREE</a></td><td></td><td class=\"r\">MEMORY</td></tr>\n<tr><td class=\"r\"><a href=\"float/FROT\">12.6.1.1610</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FROT\">FROT</a></td><td>\"f-rote\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FROUND\">12.6.1.1612</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FROUND\">FROUND</a></td><td>\"f-round\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FSd\">12.6.2.1613</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FSd\">FS.</a></td><td>\"f-s-dot\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FSIN\">12.6.2.1614</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FSIN\">FSIN</a></td><td>\"f-sine\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FSINCOS\">12.6.2.1616</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FSINCOS\">FSINCOS</a></td><td>\"f-sine-cos\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FSINH\">12.6.2.1617</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FSINH\">FSINH</a></td><td>\"f-cinch\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FSQRT\">12.6.2.1618</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FSQRT\">FSQRT</a></td><td>\"f-square-root\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FSWAP\">12.6.1.1620</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FSWAP\">FSWAP</a></td><td>\"f-swap\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/FTAN\">12.6.2.1625</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FTAN\">FTAN</a></td><td>\"f-tan\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FTANH\">12.6.2.1626</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FTANH\">FTANH</a></td><td>\"f-tan-h\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FTRUNC\">12.6.2.1627</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FTRUNC\">FTRUNC</a></td><td>\"f-trunc\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FVALUE\">12.6.2.1628</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FVALUE\">FVALUE</a></td><td>\"f-value\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/FVARIABLE\">12.6.1.1630</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/FVARIABLE\">FVARIABLE</a></td><td>\"f-variable\"</td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"float/Ftilde\">12.6.2.1640</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/Ftilde\">F~</a></td><td>\"f-proximate\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"search/GET-CURRENT\">16.6.1.1643</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/GET-CURRENT\">GET-CURRENT</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"search/GET-ORDER\">16.6.1.1647</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/GET-ORDER\">GET-ORDER</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"core/HERE\">6.1.1650</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/HERE\">HERE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/HEX\">6.2.1660</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/HEX\">HEX</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/HOLD\">6.1.1670</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/HOLD\">HOLD</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/HOLDS\">6.2.1675</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/HOLDS\">HOLDS</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/I\">6.1.1680</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/I\">I</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/IF\">6.1.1700</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/IF\">IF</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/IMMEDIATE\">6.1.1710</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/IMMEDIATE\">IMMEDIATE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/INCLUDE\">11.6.2.1714</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/INCLUDE\">INCLUDE</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/INCLUDE-FILE\">11.6.1.1717</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"file/INCLUDED\">11.6.1.1718</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/INCLUDED\">INCLUDED</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/INVERT\">6.1.1720</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/INVERT\">INVERT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/IS\">6.2.1725</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/IS\">IS</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/J\">6.1.1730</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/J\">J</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-ALT-MASK\">10.6.2.1740.01</a></td><td><a href=\"facility/K-ALT-MASK\">K-ALT-MASK</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-CTRL-MASK\">10.6.2.1740.02</a></td><td><a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-DELETE\">10.6.2.1740.03</a></td><td><a href=\"facility/K-DELETE\">K-DELETE</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-DOWN\">10.6.2.1740.04</a></td><td><a href=\"facility/K-DOWN\">K-DOWN</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-END\">10.6.2.1740.05</a></td><td><a href=\"facility/K-END\">K-END</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-FOne\">10.6.2.1740.06</a></td><td><a href=\"facility/K-FOne\">K-F1</a></td><td>\"k-f-1\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-FOneZero\">10.6.2.1740.07</a></td><td><a href=\"facility/K-FOneZero\">K-F10</a></td><td>\"k-f-10\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-FOneOne\">10.6.2.1740.08</a></td><td><a href=\"facility/K-FOneOne\">K-F11</a></td><td>\"k-f-11\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-FOneTwo\">10.6.2.1740.09</a></td><td><a href=\"facility/K-FOneTwo\">K-F12</a></td><td>\"k-f-12\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-FTwo\">10.6.2.1740.10</a></td><td><a href=\"facility/K-FTwo\">K-F2</a></td><td>\"k-f-2\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F3\">10.6.2.1740.11</a></td><td><a href=\"facility/K-F3\">K-F3</a></td><td>\"k-f-3\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F4\">10.6.2.1740.12</a></td><td><a href=\"facility/K-F4\">K-F4</a></td><td>\"k-f-4\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F5\">10.6.2.1740.13</a></td><td><a href=\"facility/K-F5\">K-F5</a></td><td>\"k-f-5\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F6\">10.6.2.1740.14</a></td><td><a href=\"facility/K-F6\">K-F6</a></td><td>\"k-f-6\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F7\">10.6.2.1740.15</a></td><td><a href=\"facility/K-F7\">K-F7</a></td><td>\"k-f-7\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F8\">10.6.2.1740.16</a></td><td><a href=\"facility/K-F8\">K-F8</a></td><td>\"k-f-8\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-F9\">10.6.2.1740.17</a></td><td><a href=\"facility/K-F9\">K-F9</a></td><td>\"k-f-9\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-HOME\">10.6.2.1740.18</a></td><td><a href=\"facility/K-HOME\">K-HOME</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-INSERT\">10.6.2.1740.19</a></td><td><a href=\"facility/K-INSERT\">K-INSERT</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-LEFT\">10.6.2.1740.20</a></td><td><a href=\"facility/K-LEFT\">K-LEFT</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-NEXT\">10.6.2.1740.21</a></td><td><a href=\"facility/K-NEXT\">K-NEXT</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-PRIOR\">10.6.2.1740.22</a></td><td><a href=\"facility/K-PRIOR\">K-PRIOR</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-RIGHT\">10.6.2.1740.23</a></td><td><a href=\"facility/K-RIGHT\">K-RIGHT</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-SHIFT-MASK\">10.6.2.1740.24</a></td><td><a href=\"facility/K-SHIFT-MASK\">K-SHIFT-MASK</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/K-UP\">10.6.2.1740.25</a></td><td><a href=\"facility/K-UP\">K-UP</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/KEY\">6.1.1750</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/KEY\">KEY</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/KEYq\">10.6.1.1755</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/KEYq\">KEY?</a></td><td>\"key-question\"</td><td class=\"r\">FACILITY</td></tr>\n<tr><td class=\"r\"><a href=\"core/LEAVE\">6.1.1760</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/LEAVE\">LEAVE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"block/LIST\">7.6.2.1770</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/LIST\">LIST</a></td><td></td><td class=\"r\">BLOCK EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/LITERAL\">6.1.1780</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/LITERAL\">LITERAL</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"block/LOAD\">7.6.1.1790</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/LOAD\">LOAD</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"locals/LOCALS\">13.6.2.1795</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"locals/LOCALS\">LOCALS|</a></td><td>\"locals-bar\"</td><td class=\"r\">LOCAL EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/LOOP\">6.1.1800</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/LOOP\">LOOP</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/LSHIFT\">6.1.1805</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/LSHIFT\">LSHIFT</a></td><td>\"l-shift\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/MTimes\">6.1.1810</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/MTimes\">M*</a></td><td>\"m-star\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"double/MTimesDiv\">8.6.1.1820</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/MTimesDiv\">M*/</a></td><td>\"m-star-slash\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"double/MPlus\">8.6.1.1830</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"double/MPlus\">M+</a></td><td>\"m-plus\"</td><td class=\"r\">DOUBLE</td></tr>\n<tr><td class=\"r\"><a href=\"core/MARKER\">6.2.1850</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/MARKER\">MARKER</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/MAX\">6.1.1870</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/MAX\">MAX</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/MIN\">6.1.1880</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/MIN\">MIN</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/MOD\">6.1.1890</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/MOD\">MOD</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/MOVE\">6.1.1900</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/MOVE\">MOVE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"facility/MS\">10.6.2.1905</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/MS\">MS</a></td><td></td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/NtoR\">15.6.2.1908</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/NtoR\">N&gt;R</a></td><td>\"n-to-r\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/NAMEtoCOMPILE\">15.6.2.1909.10</a></td><td><a href=\"tools/NAMEtoCOMPILE\">NAME&gt;COMPILE</a></td><td>\"name-to-compile\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/NAMEtoINTERPRET\">15.6.2.1909.20</a></td><td><a href=\"tools/NAMEtoINTERPRET\">NAME&gt;INTERPRET</a></td><td>\"name-to-interpret\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/NAMEtoSTRING\">15.6.2.1909.40</a></td><td><a href=\"tools/NAMEtoSTRING\">NAME&gt;STRING</a></td><td>\"name-to-string\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/NEGATE\">6.1.1910</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/NEGATE\">NEGATE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/NIP\">6.2.1930</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/NIP\">NIP</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/NRfrom\">15.6.2.1940</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/NRfrom\">NR&gt;</a></td><td>\"n-r-from\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/OF\">6.2.1950</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/OF\">OF</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"search/ONLY\">16.6.2.1965</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/ONLY\">ONLY</a></td><td></td><td class=\"r\">SEARCH EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/OPEN-FILE\">11.6.1.1970</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/OPEN-FILE\">OPEN-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/OR\">6.1.1980</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/OR\">OR</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"search/ORDER\">16.6.2.1985</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/ORDER\">ORDER</a></td><td></td><td class=\"r\">SEARCH EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/OVER\">6.1.1990</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/OVER\">OVER</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/PAD\">6.2.2000</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/PAD\">PAD</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/PAGE\">10.6.1.2005</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/PAGE\">PAGE</a></td><td></td><td class=\"r\">FACILITY</td></tr>\n<tr><td class=\"r\"><a href=\"core/PARSE\">6.2.2008</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/PARSE\">PARSE</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/PARSE\">18.6.2.2008</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"xchar/PARSE\">PARSE</a></td><td></td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/PARSE-NAME\">6.2.2020</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/PARSE-NAME\">PARSE-NAME</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/PICK\">6.2.2030</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/PICK\">PICK</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/POSTPONE\">6.1.2033</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/POSTPONE\">POSTPONE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"float/PRECISION\">12.6.2.2035</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/PRECISION\">PRECISION</a></td><td></td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"search/PREVIOUS\">16.6.2.2037</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/PREVIOUS\">PREVIOUS</a></td><td></td><td class=\"r\">SEARCH EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/QUIT\">6.1.2050</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/QUIT\">QUIT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/RDivO\">11.6.1.2054</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/RDivO\">R/O</a></td><td>\"r-o\"</td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"file/RDivW\">11.6.1.2056</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/RDivW\">R/W</a></td><td>\"r-w\"</td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Rfrom\">6.1.2060</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Rfrom\">R&gt;</a></td><td>\"r-from\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/RFetch\">6.1.2070</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/RFetch\">R@</a></td><td>\"r-fetch\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/READ-FILE\">11.6.1.2080</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/READ-FILE\">READ-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"file/READ-LINE\">11.6.1.2090</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/READ-LINE\">READ-LINE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/RECURSE\">6.1.2120</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/RECURSE\">RECURSE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/REFILL\">6.2.2125</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/REFILL\">REFILL</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"block/REFILL\">7.6.2.2125</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/REFILL\">REFILL</a></td><td></td><td class=\"r\">BLOCK EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/REFILL\">11.6.2.2125</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/REFILL\">REFILL</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/RENAME-FILE\">11.6.2.2130</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/RENAME-FILE\">RENAME-FILE</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/REPEAT\">6.1.2140</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/REPEAT\">REPEAT</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"string/REPLACES\">17.6.2.2141</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/REPLACES\">REPLACES</a></td><td></td><td class=\"r\">STRING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/REPOSITION-FILE\">11.6.1.2142</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"float/REPRESENT\">12.6.1.2143</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/REPRESENT\">REPRESENT</a></td><td></td><td class=\"r\">FLOATING</td></tr>\n<tr><td class=\"r\"><a href=\"file/REQUIRE\">11.6.2.2144.10</a></td><td><a href=\"file/REQUIRE\">REQUIRE</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/REQUIRED\">11.6.2.2144.50</a></td><td><a href=\"file/REQUIRED\">REQUIRED</a></td><td></td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"memory/RESIZE\">14.6.1.2145</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"memory/RESIZE\">RESIZE</a></td><td></td><td class=\"r\">MEMORY</td></tr>\n<tr><td class=\"r\"><a href=\"file/RESIZE-FILE\">11.6.1.2147</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/RESIZE-FILE\">RESIZE-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/RESTORE-INPUT\">6.2.2148</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ROLL\">6.2.2150</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ROLL\">ROLL</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/ROT\">6.1.2160</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/ROT\">ROT</a></td><td>\"rote\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/RSHIFT\">6.1.2162</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/RSHIFT\">RSHIFT</a></td><td>\"r-shift\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Sq\">6.1.2165</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Sq\">S\"</a></td><td>\"s-quote\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/Sq\">11.6.1.2165</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/Sq\">S\"</a></td><td>\"s-quote\"</td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/StoD\">6.1.2170</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/StoD\">S&gt;D</a></td><td>\"s-to-d\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"float/StoF\">12.6.2.2175</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/StoF\">S&gt;F</a></td><td>\"S to F\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"block/SAVE-BUFFERS\">7.6.1.2180</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/SAVE-BUFFERS\">SAVE-BUFFERS</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"core/SAVE-INPUT\">6.2.2182</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SAVE-INPUT\">SAVE-INPUT</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"block/SCR\">7.6.2.2190</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/SCR\">SCR</a></td><td>\"s-c-r\"</td><td class=\"r\">BLOCK EXT</td></tr>\n<tr><td class=\"r\"><a href=\"string/SEARCH\">17.6.1.2191</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/SEARCH\">SEARCH</a></td><td></td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"search/SEARCH-WORDLIST\">16.6.1.2192</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"tools/SEE\">15.6.1.2194</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/SEE\">SEE</a></td><td></td><td class=\"r\">TOOLS</td></tr>\n<tr><td class=\"r\"><a href=\"search/SET-CURRENT\">16.6.1.2195</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/SET-CURRENT\">SET-CURRENT</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"search/SET-ORDER\">16.6.1.2197</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/SET-ORDER\">SET-ORDER</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"float/SET-PRECISION\">12.6.2.2200</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SET-PRECISION\">SET-PRECISION</a></td><td></td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFStore\">12.6.2.2202</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SFStore\">SF!</a></td><td>\"s-f-store\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFFetch\">12.6.2.2203</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SFFetch\">SF@</a></td><td>\"s-f-fetch\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFALIGN\">12.6.2.2204</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SFALIGN\">SFALIGN</a></td><td>\"s-f-align\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFALIGNED\">12.6.2.2206</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SFALIGNED\">SFALIGNED</a></td><td>\"s-f-aligned\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFFIELDColon\">12.6.2.2206.40</a></td><td><a href=\"float/SFFIELDColon\">SFFIELD:</a></td><td>\"s-f-field-colon\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFLOATPlus\">12.6.2.2207</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SFLOATPlus\">SFLOAT+</a></td><td>\"s-float-plus\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"float/SFLOATS\">12.6.2.2208</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"float/SFLOATS\">SFLOATS</a></td><td>\"s-floats\"</td><td class=\"r\">FLOATING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/SIGN\">6.1.2210</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SIGN\">SIGN</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"string/SLITERAL\">17.6.1.2212</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/SLITERAL\">SLITERAL</a></td><td></td><td class=\"r\">STRING</td></tr>\n<tr><td class=\"r\"><a href=\"core/SMDivREM\">6.1.2214</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SMDivREM\">SM/REM</a></td><td>\"s-m-slash-rem\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/SOURCE\">6.1.2216</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SOURCE\">SOURCE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/SOURCE-ID\">6.2.2218</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SOURCE-ID\">SOURCE-ID</a></td><td>\"source-i-d\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/SOURCE-ID\">11.6.1.2218</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/SOURCE-ID\">SOURCE-ID</a></td><td>\"source-i-d\"</td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/SPACE\">6.1.2220</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SPACE\">SPACE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/SPACES\">6.1.2230</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SPACES\">SPACES</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/STATE\">6.1.2250</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/STATE\">STATE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/STATE\">15.6.2.2250</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/STATE\">STATE</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"string/SUBSTITUTE\">17.6.2.2255</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/SUBSTITUTE\">SUBSTITUTE</a></td><td></td><td class=\"r\">STRING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/SWAP\">6.1.2260</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/SWAP\">SWAP</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"tools/SYNONYM\">15.6.2.2264</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/SYNONYM\">SYNONYM</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"file/Seq\">11.6.2.2266</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/Seq\">S\\\"</a></td><td>\"s-backslash-quote\"</td><td class=\"r\">FILE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/Seq\">6.2.2266</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Seq\">S\\\"</a></td><td>\"s-backslash-quote\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/THEN\">6.1.2270</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/THEN\">THEN</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"exception/THROW\">9.6.1.2275</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"exception/THROW\">THROW</a></td><td></td><td class=\"r\">EXCEPTION</td></tr>\n<tr><td class=\"r\"><a href=\"block/THRU\">7.6.2.2280</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/THRU\">THRU</a></td><td></td><td class=\"r\">BLOCK EXT</td></tr>\n<tr><td class=\"r\"><a href=\"facility/TIMEandDATE\">10.6.2.2292</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"facility/TIMEandDATE\">TIME&amp;DATE</a></td><td>\"time-and-date\"</td><td class=\"r\">FACILITY EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TO\">6.2.2295</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TO\">TO</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/TRAVERSE-WORDLIST\">15.6.2.2297</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/TRAVERSE-WORDLIST\">TRAVERSE-WORDLIST</a></td><td></td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TRUE\">6.2.2298</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TRUE\">TRUE</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TUCK\">6.2.2300</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TUCK\">TUCK</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/TYPE\">6.1.2310</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/TYPE\">TYPE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Ud\">6.1.2320</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Ud\">U.</a></td><td>\"u-dot\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/UDotR\">6.2.2330</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/UDotR\">U.R</a></td><td>\"u-dot-r\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/Uless\">6.1.2340</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Uless\">U&lt;</a></td><td>\"u-less-than\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/Umore\">6.2.2350</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Umore\">U&gt;</a></td><td>\"u-greater-than\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/UMTimes\">6.1.2360</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/UMTimes\">UM*</a></td><td>\"u-m-star\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/UMDivMOD\">6.1.2370</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/UMDivMOD\">UM/MOD</a></td><td>\"u-m-slash-mod\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"string/UNESCAPE\">17.6.2.2375</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"string/UNESCAPE\">UNESCAPE</a></td><td></td><td class=\"r\">STRING EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/UNLOOP\">6.1.2380</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/UNLOOP\">UNLOOP</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/UNTIL\">6.1.2390</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/UNTIL\">UNTIL</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/UNUSED\">6.2.2395</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/UNUSED\">UNUSED</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"block/UPDATE\">7.6.1.2400</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/UPDATE\">UPDATE</a></td><td></td><td class=\"r\">BLOCK</td></tr>\n<tr><td class=\"r\"><a href=\"core/VALUE\">6.2.2405</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/VALUE\">VALUE</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/VARIABLE\">6.1.2410</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/VARIABLE\">VARIABLE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"file/WDivO\">11.6.1.2425</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/WDivO\">W/O</a></td><td>\"w-o\"</td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"core/WHILE\">6.1.2430</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/WHILE\">WHILE</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/WITHIN\">6.2.2440</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/WITHIN\">WITHIN</a></td><td></td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/WORD\">6.1.2450</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/WORD\">WORD</a></td><td></td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"search/WORDLIST\">16.6.1.2460</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"search/WORDLIST\">WORDLIST</a></td><td></td><td class=\"r\">SEARCH</td></tr>\n<tr><td class=\"r\"><a href=\"tools/WORDS\">15.6.1.2465</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/WORDS\">WORDS</a></td><td></td><td class=\"r\">TOOLS</td></tr>\n<tr><td class=\"r\"><a href=\"file/WRITE-FILE\">11.6.1.2480</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/WRITE-FILE\">WRITE-FILE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"file/WRITE-LINE\">11.6.1.2485</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"file/WRITE-LINE\">WRITE-LINE</a></td><td></td><td class=\"r\">FILE</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/X-SIZE\">18.6.1.2486.50</a></td><td><a href=\"xchar/X-SIZE\">X-SIZE</a></td><td></td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/X-WIDTH\">18.6.2.2486.70</a></td><td><a href=\"xchar/X-WIDTH\">X-WIDTH</a></td><td></td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XCStorePlus\">18.6.1.2487.10</a></td><td><a href=\"xchar/XCStorePlus\">XC!+</a></td><td>\"x-c-store-plus\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XCStorePlusq\">18.6.1.2487.15</a></td><td><a href=\"xchar/XCStorePlusq\">XC!+?</a></td><td>\"x-c-store-plus-query\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XCComma\">18.6.1.2487.20</a></td><td><a href=\"xchar/XCComma\">XC,</a></td><td>\"x-c-comma\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XC-SIZE\">18.6.1.2487.25</a></td><td><a href=\"xchar/XC-SIZE\">XC-SIZE</a></td><td>\"x-c-size\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XC-WIDTH\">18.6.2.2487.30</a></td><td><a href=\"xchar/XC-WIDTH\">XC-WIDTH</a></td><td>\"x-c-width\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XCFetchPlus\">18.6.1.2487.35</a></td><td><a href=\"xchar/XCFetchPlus\">XC@+</a></td><td>\"x-c-fetch-plus\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XCHARPlus\">18.6.1.2487.40</a></td><td><a href=\"xchar/XCHARPlus\">XCHAR+</a></td><td>\"x-char-plus\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XCHARMinus\">18.6.2.2487.45</a></td><td><a href=\"xchar/XCHARMinus\">XCHAR-</a></td><td>\"x-char-minus\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XEMIT\">18.6.1.2488.10</a></td><td><a href=\"xchar/XEMIT\">XEMIT</a></td><td>\"x-emit\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XHOLD\">18.6.2.2488.20</a></td><td><a href=\"xchar/XHOLD\">XHOLD</a></td><td>\"x-hold\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XKEY\">18.6.1.2488.30</a></td><td><a href=\"xchar/XKEY\">XKEY</a></td><td>\"x-key\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XKEYq\">18.6.1.2488.35</a></td><td><a href=\"xchar/XKEYq\">XKEY?</a></td><td>\"x-key-query\"</td><td class=\"r\">XCHAR</td></tr>\n<tr><td class=\"r\"><a href=\"core/XOR\">6.1.2490</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/XOR\">XOR</a></td><td>\"x-or\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/XSTRINGMinus\">18.6.2.2495</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"xchar/XSTRINGMinus\">X\\STRING-</a></td><td>\"x-string-minus\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/Bracket\">6.1.2500</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/Bracket\">[</a></td><td>\"left-bracket\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/BracketTick\">6.1.2510</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BracketTick\">[']</a></td><td>\"bracket-tick\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"core/BracketCHAR\">6.1.2520</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BracketCHAR\">[CHAR]</a></td><td>\"bracket-char\"</td><td class=\"r\">CORE</td></tr>\n<tr><td class=\"r\"><a href=\"xchar/BracketCHAR\">18.6.2.2520</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"xchar/BracketCHAR\">[CHAR]</a></td><td>\"bracket-char\"</td><td class=\"r\">XCHAR EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/BracketCOMPILE\">6.2.2530</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/BracketCOMPILE\">[COMPILE]</a></td><td>\"bracket-compile\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/BracketDEFINED\">15.6.2.2530.30</a></td><td><a href=\"tools/BracketDEFINED\">[DEFINED]</a></td><td>\"bracket-defined\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/BracketELSE\">15.6.2.2531</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/BracketELSE\">[ELSE]</a></td><td>\"bracket-else\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/BracketIF\">15.6.2.2532</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/BracketIF\">[IF]</a></td><td>\"bracket-if\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/BracketTHEN\">15.6.2.2533</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/BracketTHEN\">[THEN]</a></td><td>\"bracket-then\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"tools/BracketUNDEFINED\">15.6.2.2534</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a></td><td>\"bracket-undefined\"</td><td class=\"r\">TOOLS EXT</td></tr>\n<tr><td class=\"r\"><a href=\"core/bs\">6.2.2535</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"core/bs\">\\</a></td><td>\"backslash\"</td><td class=\"r\">CORE EXT</td></tr>\n<tr><td class=\"r\"><a href=\"block/bs\">7.6.2.2535</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"block/bs\">\\</a></td><td>\"backslash\"</td><td class=\"r\">BLOCK EXT</td></tr>\n<tr><td class=\"r\"><a href=\"right-bracket\">6.1.2540</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"right-bracket\">]</a></td><td>\"right-bracket\"</td><td class=\"r\">CORE</td></tr>\n\n<tr><td class=\"r\"><a href=\"locals/bColon\">13.6.2.2550</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><a href=\"locals/bColon\">{:</a></td><td>\"brace-colon\"</td><td class=\"r\">LOCAL EXT</td></tr>\n</tbody></table>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Alphabetic list of words</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\" class=\"current\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "bib": {
            "basename": "bib",
            "name": "Annex B: Bibliography",
            "html": "<div id=\"body\">\n<h1>Annex B: Bibliography</h1> <!-- B -->\n<a name=\"annex:bib\"></a>\n<p>\n</p><dl class=\"desc\">\n<dt>Industry standards</dt><dd> \n<em>Forth-77 Standard</em>, Forth Users Group, FST-780314. <br>\n<em>Forth-78 Standard</em>, Forth International Standards Team. <br>\n<em>Forth-79 Standard</em>, Forth Standards Team. <br>\n<em>Forth-83 Standard</em> and Appendices, Forth Standards Team.\n<p>\nThe standards referenced in this section were developed by the\nForth Standards Team, a volunteer group which included both\nimplementors and users. This was a volunteer organization operating\nunder its own charter and without any formal ties to ANSI, IEEE or\nany similar standards body.\n</p><p>\nThe following standards where developed under the auspices of\nANSI.  The committee drawing up the ANSI standard included\nseveral members of the Forth Standards Team.\n</p><p>\n<em>ANSI X3.215-1994 Information Systems — Programming Language FORTH</em> <br>\n<em>ISO/IEC 15145:1997 Information technology.  Programming languages.  FORTH</em> <br>\n</p></dd>\n<dt>Books</dt><dd> \n<dl class=\"desc\">\n<dt></dt><dd> Brodie, L.\n<em>Thinking FORTH</em>.\nEnglewood Cliffs, NJ: Prentice Hall, 1984.\nNow available from <a href=\"http://thinking-forth.sourceforge.net/\">http://thinking-forth.sourceforge.net/</a>\n<p>\n</p></dd>\n<dt></dt><dd> Brodie, L.\n<em>Starting FORTH</em> (<em>2<sup><span class=\"rm\"> nd</span></sup></em> edition).\nEnglewood Cliffs, NJ: Prentice Hall, 1987.\n<p>\n</p></dd>\n<dt></dt><dd> Feierbach, G. and Thomas, P.\n<em>Forth Tools &amp; Applications</em>.\nReston, VA: Reston Computer Books, 1985.\n<p>\n</p></dd>\n<dt></dt><dd> Haydon, Dr. Glen B.\n<em>All About FORTH</em> (<em>3<sup><span class=\"rm\"> rd</span></sup></em> edition).\nLa Honda, CA: 1990.\n<p>\n</p></dd>\n<dt></dt><dd> Kelly, Mahlon G. and Spies, N.\n<em>FORTH: A Text and Reference</em>.\nEnglewood Cliffs, NJ: Prentice Hall, 1986.\n<p>\n</p></dd>\n<dt></dt><dd> Knecht, K.\n<em>Introduction to Forth</em>.\nIndiana: Howard Sams &amp; Co., 1982.\n<p>\n</p></dd>\n<dt></dt><dd> Koopman, P.\n<em>Stack Computers, The New Wave</em>.\nChichester, West Sussex, England: Ellis Horwood Ltd. 1989.\n<p>\n</p></dd>\n<dt></dt><dd> Martin, Thea, editor.\n<em>A Bibliography of Forth References</em> (<em>3<sup><span class=\"rm\"> rd</span></sup></em> edition).\nRochester, New York: Institute of Applied Forth Research, 1987.\n<p>\n</p></dd>\n<dt></dt><dd> McCabe, C. K.\n<em>Forth Fundamentals</em> (2 volumes).\nOregon: Dilithium Press, 1983.\n<p>\n</p></dd>\n<dt></dt><dd> Ouverson, Marlin, editor.\n<em>Dr. Dobbs Toolbook of Forth</em>.\nRedwood City, CA: M&amp;T Press, Vol. 1, 1986; Vol. 2, 1987.\n<p>\n</p></dd>\n<dt></dt><dd> Pelc, Stephen.\n<em>Programming Forth</em>.\nSouthampton, England: MicroProcessor Engineering Limited, 2005.\n<a href=\"http://www.mpeforth.com/arena/ProgramForth.pdf\">http://www.mpeforth.com/arena/ProgramForth.pdf</a>.\n<p>\n</p></dd>\n<dt></dt><dd> Pountain, R.\n<em>Object Oriented Forth</em>.\nLondon, England: Academic Press, 1987.\n<p>\n</p></dd>\n<dt></dt><dd> Rather, Elizabeth D.\n<em>Forth Application Techniques</em>.\nFORTH, Inc., 2006.\nISBN: 978-0966215618.\n<p>\n</p></dd>\n<dt></dt><dd> Rather, Elizabeth D. and Conklin, Edward K.\n<em>Forth Programmer's Handbook</em> (<em>3<sup><span class=\"rm\"> rd</span></sup></em> edition).\n BookSurge Publishing, 2007.\nISBN: 978-1419675492.\n<p>\n</p></dd>\n<dt></dt><dd> Terry, J. D.\n<em>Library of Forth Routines and Utilities</em>.\nNew York: Shadow Lawn Press, 1986.\n<p>\n</p></dd>\n<dt></dt><dd> Tracy, M. and Anderson, A.\n<em>Mastering FORTH</em> (revised edition).\nNew York: Brady Books, 1989.\n<p>\n</p></dd>\n<dt></dt><dd> Winfield, A.\n<em>The Complete Forth</em>.\nNew York: Wiley Books, 1983.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p></dd>\n<dt>Journals, magazines and newsletters</dt><dd> \n<dl class=\"desc\">\n<dt></dt><dd> Forsley, Lawrence P., Conference Chairman.\n<em>Rochester Forth Conference Proceedings</em>.\nRochester, New York: Institute of Applied Forth Research, 1981 to present.\n<p>\n</p></dd>\n<dt></dt><dd> Forsley, Lawrence P., Editor-in-Chief.\n<em>The Journal of Forth Application and Research</em>.\nRochester, New York: Institute of Applied Forth Research, 1983 to present.\n<p>\n</p></dd>\n<dt></dt><dd> Frenger, Paul, editor.\n<em>SIGForth Newsletter</em>.\nNew York, NY: Association for Computing Machinery, 1989 to present.\n<p>\n</p></dd>\n<dt></dt><dd> Ouverson, Marlin, editor.\n<em>Forth Dimensions</em>.\nSan Jose, CA: The Forth Interest Group, 1978 to present.\n<p>\n</p></dd>\n<dt></dt><dd> Reiling, Robert, editor.\n<em>FORML Conference Proceedings</em>.\nSan Jose, CA: The Forth Interest Group, 1980 to present.\n<p>\n</p></dd>\n<dt></dt><dd> Ting, Dr. C. H., editor.\n<em>More on Forth Engines</em>.\nSan Mateo, CA: Offete Enterprises, 1986 to present.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p></dd>\n<dt>Selected articles</dt><dd> \n<dl class=\"desc\">\n<dt></dt><dd> Hayes, J.R.\n\"Postpone\"\n<em>Proceedings of the 1989 Rochester Forth Conference</em>.\nRochester, New York: Institute for Applied Forth Research, 1989.\n<p>\n</p></dd>\n<dt></dt><dd> Kelly, Guy M.\n\"Forth\".\n<em>McGraw-Hill Personal Computer Programming Encyclopedia\n— Languages and Operation Systems</em>.\nNew York: McGraw-Hill, 1985.\n<p>\n</p></dd>\n<dt></dt><dd> Kogge, P. M.\n\"An Architectural Trail to Threaded Code Systems\".\n<em>IEEE Computer</em> (March, 1982).\n<p>\n</p></dd>\n<dt></dt><dd> Moore, C. H.\n\"The Evolution of FORTH — An Unusual Language\".\n<em>Byte</em> (August 1980).\n<p>\n</p></dd>\n<dt></dt><dd> Rather, E. D.\n\"Forth Programming Language\".\n<em>Encyclopedia of Physical Science &amp; Technology</em> (Vol. 5).\nNew York: Academic Press, 1987.\n<p>\n</p></dd>\n<dt></dt><dd> Rather, E. D.\n\"FORTH\".\n<em>Computer Programming Management</em>.\nAuerbach Publishers, Inc., 1985.\n<p>\n</p></dd>\n<dt></dt><dd> Rather, E. D.; Colburn, D. R.; Moore, C. H.\n\"The Evolution of Forth\".\n<em>ACM SIGPLAN Notices</em> (Vol. 28, No. 3, March 1993).\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p></dd></dl>\n<br class=\"clear\">\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Bibliography</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\" class=\"current\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "block": {
            "basename": "block",
            "name": "7 The optional Block word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.7\">7 The optional Block word set</h1> <!-- 7 -->\n<h2 id=\"section.7.1\">7.1 Introduction</h2> <!-- 7.1 -->\n<h2 id=\"section.7.2\">7.2 Additional terms</h2> <!-- 7.2 -->\n<dl class=\"desc\">\n<dt>block:</dt><dd>\n1024 characters of data on mass storage,\ndesignated by a block number.\n<p>\n</p></dd>\n<dt>block buffer:</dt><dd>\nA block-sized region of data space where a block is made\ntemporarily available for use. The current block buffer\nis the block buffer most recently accessed by\n<a href=\"block/BLOCK\">BLOCK</a>, <a href=\"block/BUFFER\">BUFFER</a>, <a href=\"block/LOAD\">LOAD</a>, <a href=\"block/LIST\">LIST</a>, or\n<a href=\"block/THRU\">THRU</a>.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h2 id=\"section.7.3\">7.3 Additional usage requirements</h2> <!-- 7.3 -->\n<h3 id=\"subsection.7.3.1\">7.3.1 Data space</h3> <!-- 7.3.2 -->\nA program may access memory within a valid block buffer.\n<p>\nSee: <strong><a href=\"usage#usage:dataspace\">3.3.3 Data space</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.7.3.2\">7.3.2 Block buffer regions</h3> <!-- 7.3.3 -->\n<a name=\"block:buffers\"></a>\n<p>\nThe address of a block buffer returned by <a href=\"block/BLOCK\">BLOCK</a> or\n<a href=\"block/BUFFER\">BUFFER</a> is transient. A call to <a href=\"block/BLOCK\">BLOCK</a> or <a href=\"block/BUFFER\">BUFFER</a>\nmay render a previously-obtained block-buffer address invalid, as\nmay a call to any word that:\n</p><ul>\n<li> parses:\n</li>\n<li> displays characters on the user output device, such as\n<a href=\"core/TYPE\">TYPE</a> or <a href=\"core/EMIT\">EMIT</a>;\n</li>\n<li> controls the user output device, such as <a href=\"core/CR\">CR</a> or\n<a href=\"facility/AT-XY\">AT-XY</a>;\n</li>\n<li> receives or tests for the presence of characters from the\nuser input device such as <a href=\"core/ACCEPT\">ACCEPT</a> or\n<a href=\"core/KEY\">KEY</a>;\n</li>\n<li> waits for a condition or event, such as <a href=\"facility/MS\">MS</a>\nor <a href=\"facility/EKEY\">EKEY</a>;\n</li>\n<li> manages the block buffers, such as <a href=\"block/FLUSH\">FLUSH</a>,\n<a href=\"block/SAVE-BUFFERS\">SAVE-BUFFERS</a>, or <a href=\"block/EMPTY-BUFFERS\">EMPTY-BUFFERS</a>;\n</li>\n<li> performs any operation on a file or file-name directory\nthat implies I/O, such as <a href=\"block/REFILL\">REFILL</a> or any word that\nreturns an <em>ior</em>;\n</li>\n<li> implicitly performs I/O, such as text interpreter nesting\nand un-nesting when files are being used (including un-nesting\nimplied by <a href=\"exception/THROW\">THROW</a>).\n</li>\n</ul>\n<p>\nIf the input source is a block, these restrictions also apply to\nthe address returned by <a href=\"core/SOURCE\">SOURCE</a>. Block buffers are\nuniquely assigned to blocks.\n</p><p>\nSee <strong><a href=\"rationale#rat:block:buffers\">A.7.3.2 Block buffer regions</a></strong>.\n</p><h3 id=\"subsection.7.3.3\">7.3.3 Parsing</h3> <!-- 7.3.4 -->\nThe Block word set implements an alternative input source for the\ntext interpreter. When the input source is a block, <a href=\"block/BLK\">BLK</a> shall\ncontain the non-zero block number and the input buffer is the\n1024-character buffer containing that block.\n<p>\nA block is conventionally displayed as 16 lines of 64 characters.\n</p><p>\nA program may switch the input source to a block by using\n<a href=\"block/LOAD\">LOAD</a> or <a href=\"block/THRU\">THRU</a>. Input sources may be nested using\n<a href=\"block/LOAD\">LOAD</a> and <a href=\"block/EVALUATE\">EVALUATE</a> in any order.\n</p><p>\nA program may reposition the parse area within a block by\nmanipulating <a href=\"core/toIN\">&gt;IN</a>. More extensive repositioning can be\naccomplished using <a href=\"core/SAVE-INPUT\">SAVE-INPUT</a> and\n<a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a>.\n</p><p>\nSee: <strong><a href=\"usage#usage:parsing\">3.4.1 Parsing</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.7.3.4\">7.3.4 Possible action on an ambiguous condition</h3> <!-- 7.3.5 -->\nSee: <strong><a href=\"usage#usage:ambiguous\">3.4.4 Possible actions on an ambiguous condition</a></strong>.\n<p>\n</p><ul>\n<li> A system with the Block word set may set interpretation state\nand interpret a block.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.7.4\">7.4 Additional documentation requirements</h2> <!-- 7.4 -->\n<h3 id=\"subsection.7.4.1\">7.4.1 System documentation</h3> <!-- 7.4.1 -->\n<h4 id=\"subsubsection.7.4.1.1\">7.4.1.1 Implementation-defined options</h4> <!-- 7.4.1.1 -->\n<ul>\n<li> the format used for display by <a href=\"block/LIST\">7.6.2.1770 LIST</a>\n(if implemented);\n</li>\n<li> the length of a line affected by <a href=\"block/bs\">7.6.2.2535 \\</a>\n(if implemented).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.7.4.1.2\">7.4.1.2 Ambiguous conditions</h4> <!-- 7.4.1.2 -->\n<ul>\n<li> Correct block read was not possible;\n</li>\n<li> I/O exception in block transfer;\n</li>\n<li> Invalid block number (<a href=\"block/BLOCK\">7.6.1.0800 BLOCK</a>,\n<a href=\"block/BUFFER\">7.6.1.0820 BUFFER</a>, <a href=\"block/LOAD\">7.6.1.1790 LOAD</a>);\n</li>\n<li> A program directly alters the contents of\n<a href=\"block/BLK\">7.6.1.0790 BLK</a>;\n</li>\n<li> No current block buffer for <a href=\"block/UPDATE\">7.6.1.2400 UPDATE</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.7.4.1.3\">7.4.1.3 Other system documentation</h4> <!-- 7.4.1.3 -->\n<ul>\n<li> any restrictions a multiprogramming system places on the use\nof buffer addresses;\n</li>\n<li> the number of blocks available for source text and data.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.7.4.2\">7.4.2 Program documentation</h3> <!-- 7.4.2 -->\n<ul>\n<li> the number of blocks required by the program.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.7.5\">7.5 Compliance and labeling</h2> <!-- 7.5 -->\n<h3 id=\"subsection.7.5.1\">7.5.1 Forth-2012 systems</h3> <!-- 7.5.1 -->\nThe phrase \"Providing the Block word set\" shall be appended to\nthe label of any Standard System that provides all of the Block\nword set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Block Extensions\nword set\" shall be appended to the label of any Standard System\nthat provides portions of the Block Extensions word set.\n</p><p>\nThe phrase \"Providing the Block Extensions word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Block and Block Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.7.5.2\">7.5.2 Forth-2012 programs</h3> <!-- 7.5.2 -->\nThe phrase \"Requiring the Block word set\" shall be appended to\nthe label of Standard Programs that require the system to provide\nthe Block word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Block Extensions\nword set\" shall be appended to the label of Standard Programs\nthat require the system to provide portions of the Block Extensions\nword set.\n</p><p>\nThe phrase \"Requiring the Block Extensions word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide all of the Block and Block Extensions word sets.\n</p><p>\n</p><h2 id=\"section.7.6\">7.6 Glossary</h2> <!-- 7.6 -->\n<h3 id=\"subsection.7.6.1\">7.6.1 Block words</h3> <!-- 7.6.1 -->\n<ul>\n<li><a href=\"block/BLK\">7.6.1.0790 BLK</a></li>\n<li><a href=\"block/BLOCK\">7.6.1.0800 BLOCK</a></li>\n<li><a href=\"block/BUFFER\">7.6.1.0820 BUFFER</a></li>\n<li><a href=\"block/EVALUATE\">7.6.1.1360 EVALUATE</a></li>\n<li><a href=\"block/FLUSH\">7.6.1.1559 FLUSH</a></li>\n<li><a href=\"block/LOAD\">7.6.1.1790 LOAD</a></li>\n\n<li><a href=\"block/SAVE-BUFFERS\">7.6.1.2180 SAVE-BUFFERS</a></li>\n<li><a href=\"block/UPDATE\">7.6.1.2400 UPDATE</a></li>\n</ul>\n<h3 id=\"subsection.7.6.2\">7.6.2 Block extension words</h3> <!-- 7.6.2 -->\n<ul>\n<li><a href=\"block/EMPTY-BUFFERS\">7.6.2.1330 EMPTY-BUFFERS</a></li>\n<li><a href=\"block/LIST\">7.6.2.1770 LIST</a></li>\n<li><a href=\"block/REFILL\">7.6.2.2125 REFILL</a></li>\n<li><a href=\"block/SCR\">7.6.2.2190 SCR</a></li>\n<li><a href=\"block/THRU\">7.6.2.2280 THRU</a></li>\n<li><a href=\"block/bs\">7.6.2.2535 \\</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Block word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\" class=\"current\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.7.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.7.2\">Additional terms</a></li>\n        <li role=\"menuitem\"><a href=\"#section.7.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.7.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.7.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.7.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">BLK</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"block/BLK\">BLK</a></li>\n        <li role=\"menuitem\"><a href=\"block/BLOCK\">BLOCK</a></li>\n        <li role=\"menuitem\"><a href=\"block/BUFFER\">BUFFER</a></li>\n        <li role=\"menuitem\"><a href=\"block/EVALUATE\">EVALUATE</a></li>\n        <li role=\"menuitem\"><a href=\"block/FLUSH\">FLUSH</a></li>\n        <li role=\"menuitem\"><a href=\"block/LOAD\">LOAD</a></li>\n        <li role=\"menuitem\"><a href=\"block/SAVE-BUFFERS\">SAVE-BUFFERS</a></li>\n        <li role=\"menuitem\"><a href=\"block/UPDATE\">UPDATE</a></li>\n        <li role=\"menuitem\"><a href=\"block/EMPTY-BUFFERS\">EMPTY-BUFFERS</a></li>\n        <li role=\"menuitem\"><a href=\"block/LIST\">LIST</a></li>\n        <li role=\"menuitem\"><a href=\"block/REFILL\">REFILL</a></li>\n        <li role=\"menuitem\"><a href=\"block/SCR\">SCR</a></li>\n        <li role=\"menuitem\"><a href=\"block/THRU\">THRU</a></li>\n        <li role=\"menuitem\"><a href=\"block/bs\">\\</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "core": {
            "basename": "core",
            "name": "6 Glossary",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.6\">6 Glossary</h1> <!-- 6 -->\n<a name=\"chap:core\"></a>\n<p>\n</p><h2 id=\"section.6.1\">6.1 Core words</h2> <!-- 6.1 -->\n<ul>\n<li><a href=\"core/Store\">6.1.0010 !</a></li>\n<li><a href=\"core/num\">6.1.0030 #</a></li>\n<li><a href=\"core/num-end\">6.1.0040 #&gt;</a></li>\n<li><a href=\"core/numS\">6.1.0050 #S</a></li>\n\n<li><a href=\"core/Tick\">6.1.0070 '</a></li>\n<li><a href=\"core/p\">6.1.0080 (</a></li>\n<li><a href=\"core/Times\">6.1.0090 *</a></li>\n<li><a href=\"core/TimesDiv\">6.1.0100 */</a></li>\n<li><a href=\"core/TimesDivMOD\">6.1.0110 */MOD</a></li>\n<li><a href=\"core/Plus\">6.1.0120 +</a></li>\n<li><a href=\"core/PlusStore\">6.1.0130 +!</a></li>\n<li><a href=\"core/PlusLOOP\">6.1.0140 +LOOP</a></li>\n\n<li><a href=\"core/Comma\">6.1.0150 ,</a></li>\n<li><a href=\"core/Minus\">6.1.0160 -</a></li>\n<li><a href=\"core/d\">6.1.0180 .</a></li>\n<li><a href=\"core/Dotq\">6.1.0190 .\"</a></li>\n\n<li><a href=\"core/Div\">6.1.0230 /</a></li>\n\n<li><a href=\"core/DivMOD\">6.1.0240 /MOD</a></li>\n<li><a href=\"core/Zeroless\">6.1.0250 0&lt;</a></li>\n<li><a href=\"core/ZeroEqual\">6.1.0270 0=</a></li>\n<li><a href=\"core/OnePlus\">6.1.0290 1+</a></li>\n<li><a href=\"core/OneMinus\">6.1.0300 1-</a></li>\n<li><a href=\"core/TwoStore\">6.1.0310 2!</a></li>\n\n<li><a href=\"core/TwoTimes\">6.1.0320 2*</a></li>\n<li><a href=\"core/TwoDiv\">6.1.0330 2/</a></li>\n<li><a href=\"core/TwoFetch\">6.1.0350 2@</a></li>\n<li><a href=\"core/TwoDROP\">6.1.0370 2DROP</a></li>\n<li><a href=\"core/TwoDUP\">6.1.0380 2DUP</a></li>\n<li><a href=\"core/TwoOVER\">6.1.0400 2OVER</a></li>\n<li><a href=\"core/TwoSWAP\">6.1.0430 2SWAP</a></li>\n<li><a href=\"core/Colon\">6.1.0450 :</a></li>\n<li><a href=\"core/Semi\">6.1.0460 ;</a></li>\n<li><a href=\"core/less\">6.1.0480 &lt;</a></li>\n<li><a href=\"core/num-start\">6.1.0490 &lt;#</a></li>\n<li><a href=\"core/Equal\">6.1.0530 =</a></li>\n<li><a href=\"core/more\">6.1.0540 &gt;</a></li>\n<li><a href=\"core/toBODY\">6.1.0550 &gt;BODY</a></li>\n<li><a href=\"core/toIN\">6.1.0560 &gt;IN</a></li>\n<li><a href=\"core/toNUMBER\">6.1.0570 &gt;NUMBER</a></li>\n<li><a href=\"core/toR\">6.1.0580 &gt;R</a></li>\n<li><a href=\"core/qDUP\">6.1.0630 ?DUP</a></li>\n<li><a href=\"core/Fetch\">6.1.0650 @</a></li>\n<li><a href=\"core/ABORT\">6.1.0670 ABORT</a></li>\n<li><a href=\"core/ABORTq\">6.1.0680 ABORT\"</a></li>\n<li><a href=\"core/ABS\">6.1.0690 ABS</a></li>\n<li><a href=\"core/ACCEPT\">6.1.0695 ACCEPT</a></li>\n<li><a href=\"core/ALIGN\">6.1.0705 ALIGN</a></li>\n<li><a href=\"core/ALIGNED\">6.1.0706 ALIGNED</a></li>\n\n<li><a href=\"core/ALLOT\">6.1.0710 ALLOT</a></li>\n<li><a href=\"core/AND\">6.1.0720 AND</a></li>\n<li><a href=\"core/BASE\">6.1.0750 BASE</a></li>\n<li><a href=\"core/BEGIN\">6.1.0760 BEGIN</a></li>\n\n<li><a href=\"core/BL\">6.1.0770 BL</a></li>\n<li><a href=\"core/CStore\">6.1.0850 C!</a></li>\n<li><a href=\"core/CComma\">6.1.0860 C,</a></li>\n<li><a href=\"core/CFetch\">6.1.0870 C@</a></li>\n<li><a href=\"core/CELLPlus\">6.1.0880 CELL+</a></li>\n<li><a href=\"core/CELLS\">6.1.0890 CELLS</a></li>\n<li><a href=\"core/CHAR\">6.1.0895 CHAR</a></li>\n<li><a href=\"core/CHARPlus\">6.1.0897 CHAR+</a></li>\n<li><a href=\"core/CHARS\">6.1.0898 CHARS</a></li>\n<li><a href=\"core/CONSTANT\">6.1.0950 CONSTANT</a></li>\n<li><a href=\"core/COUNT\">6.1.0980 COUNT</a></li>\n<li><a href=\"core/CR\">6.1.0990 CR</a></li>\n<li><a href=\"core/CREATE\">6.1.1000 CREATE</a></li>\n<li><a href=\"core/DECIMAL\">6.1.1170 DECIMAL</a></li>\n<li><a href=\"core/DEPTH\">6.1.1200 DEPTH</a></li>\n<li><a href=\"core/DO\">6.1.1240 DO</a></li>\n<li><a href=\"core/DOES\">6.1.1250 DOES&gt;</a></li>\n<li><a href=\"core/DROP\">6.1.1260 DROP</a></li>\n<li><a href=\"core/DUP\">6.1.1290 DUP</a></li>\n<li><a href=\"core/ELSE\">6.1.1310 ELSE</a></li>\n<li><a href=\"core/EMIT\">6.1.1320 EMIT</a></li>\n<li><a href=\"core/ENVIRONMENTq\">6.1.1345 ENVIRONMENT?</a></li>\n\n<li><a href=\"core/EVALUATE\">6.1.1360 EVALUATE</a></li>\n<li><a href=\"core/EXECUTE\">6.1.1370 EXECUTE</a></li>\n<li><a href=\"core/EXIT\">6.1.1380 EXIT</a></li>\n<li><a href=\"core/FILL\">6.1.1540 FILL</a></li>\n\n<li><a href=\"core/FIND\">6.1.1550 FIND</a></li>\n<li><a href=\"core/FMDivMOD\">6.1.1561 FM/MOD</a></li>\n<li><a href=\"core/HERE\">6.1.1650 HERE</a></li>\n<li><a href=\"core/HOLD\">6.1.1670 HOLD</a></li>\n<li><a href=\"core/I\">6.1.1680 I</a></li>\n\n<li><a href=\"core/IF\">6.1.1700 IF</a></li>\n<li><a href=\"core/IMMEDIATE\">6.1.1710 IMMEDIATE</a></li>\n<li><a href=\"core/INVERT\">6.1.1720 INVERT</a></li>\n<li><a href=\"core/J\">6.1.1730 J</a></li>\n<li><a href=\"core/KEY\">6.1.1750 KEY</a></li>\n\n<li><a href=\"core/LEAVE\">6.1.1760 LEAVE</a></li>\n<li><a href=\"core/LITERAL\">6.1.1780 LITERAL</a></li>\n<li><a href=\"core/LOOP\">6.1.1800 LOOP</a></li>\n<li><a href=\"core/LSHIFT\">6.1.1805 LSHIFT</a></li>\n<li><a href=\"core/MTimes\">6.1.1810 M*</a></li>\n<li><a href=\"core/MAX\">6.1.1870 MAX</a></li>\n<li><a href=\"core/MIN\">6.1.1880 MIN</a></li>\n<li><a href=\"core/MOD\">6.1.1890 MOD</a></li>\n<li><a href=\"core/MOVE\">6.1.1900 MOVE</a></li>\n\n<li><a href=\"core/NEGATE\">6.1.1910 NEGATE</a></li>\n<li><a href=\"core/OR\">6.1.1980 OR</a></li>\n<li><a href=\"core/OVER\">6.1.1990 OVER</a></li>\n<li><a href=\"core/POSTPONE\">6.1.2033 POSTPONE</a></li>\n<li><a href=\"core/QUIT\">6.1.2050 QUIT</a></li>\n\n<li><a href=\"core/Rfrom\">6.1.2060 R&gt;</a></li>\n<li><a href=\"core/RFetch\">6.1.2070 R@</a></li>\n<li><a href=\"core/RECURSE\">6.1.2120 RECURSE</a></li>\n<li><a href=\"core/REPEAT\">6.1.2140 REPEAT</a></li>\n<li><a href=\"core/ROT\">6.1.2160 ROT</a></li>\n<li><a href=\"core/RSHIFT\">6.1.2162 RSHIFT</a></li>\n<li><a href=\"core/Sq\">6.1.2165 S\"</a></li>\n<li><a href=\"core/StoD\">6.1.2170 S&gt;D</a></li>\n<li><a href=\"core/SIGN\">6.1.2210 SIGN</a></li>\n<li><a href=\"core/SMDivREM\">6.1.2214 SM/REM</a></li>\n<li><a href=\"core/SOURCE\">6.1.2216 SOURCE</a></li>\n<li><a href=\"core/SPACE\">6.1.2220 SPACE</a></li>\n<li><a href=\"core/SPACES\">6.1.2230 SPACES</a></li>\n<li><a href=\"core/STATE\">6.1.2250 STATE</a></li>\n<li><a href=\"core/SWAP\">6.1.2260 SWAP</a></li>\n<li><a href=\"core/THEN\">6.1.2270 THEN</a></li>\n<li><a href=\"core/TYPE\">6.1.2310 TYPE</a></li>\n<li><a href=\"core/Ud\">6.1.2320 U.</a></li>\n<li><a href=\"core/Uless\">6.1.2340 U&lt;</a></li>\n<li><a href=\"core/UMTimes\">6.1.2360 UM*</a></li>\n<li><a href=\"core/UMDivMOD\">6.1.2370 UM/MOD</a></li>\n\n<li><a href=\"core/UNLOOP\">6.1.2380 UNLOOP</a></li>\n<li><a href=\"core/UNTIL\">6.1.2390 UNTIL</a></li>\n<li><a href=\"core/VARIABLE\">6.1.2410 VARIABLE</a></li>\n\n<li><a href=\"core/WHILE\">6.1.2430 WHILE</a></li>\n<li><a href=\"core/WORD\">6.1.2450 WORD</a></li>\n<li><a href=\"core/XOR\">6.1.2490 XOR</a></li>\n<li><a href=\"core/Bracket\">6.1.2500 [</a></li>\n<li><a href=\"core/BracketTick\">6.1.2510 [']</a></li>\n<li><a href=\"core/BracketCHAR\">6.1.2520 [CHAR]</a></li>\n<li><a href=\"right-bracket\">6.1.2540 ]</a></li>\n\n</ul>\n<h2 id=\"section.6.2\">6.2 Core extension words</h2> <!-- 6.2 -->\n\n\n\n<ul>\n<li><a href=\"core/Dotp\">6.2.0200 .(</a></li>\n<li><a href=\"core/DotR\">6.2.0210 .R</a></li>\n<li><a href=\"core/Zerone\">6.2.0260 0&lt;&gt;</a></li>\n<li><a href=\"core/Zeromore\">6.2.0280 0&gt;</a></li>\n<li><a href=\"core/TwotoR\">6.2.0340 2&gt;R</a></li>\n\n<li><a href=\"core/TwoRfrom\">6.2.0410 2R&gt;</a></li>\n<li><a href=\"core/TwoRFetch\">6.2.0415 2R@</a></li>\n<li><a href=\"core/ColonNONAME\">6.2.0455 :NONAME</a></li>\n<li><a href=\"core/ne\">6.2.0500 &lt;&gt;</a></li>\n<li><a href=\"core/qDO\">6.2.0620 ?DO</a></li>\n<li><a href=\"core/ACTION-OF\">6.2.0698 ACTION-OF</a></li>\n<li><a href=\"core/AGAIN\">6.2.0700 AGAIN</a></li>\n<li><a href=\"core/BUFFERColon\">6.2.0825 BUFFER:</a></li>\n<li><a href=\"core/Cq\">6.2.0855 C\"</a></li>\n\n<li><a href=\"core/CASE\">6.2.0873 CASE</a></li>\n<li><a href=\"core/COMPILEComma\">6.2.0945 COMPILE,</a></li>\n<li><a href=\"core/DEFER\">6.2.1173 DEFER</a></li>\n<li><a href=\"core/DEFERStore\">6.2.1175 DEFER!</a></li>\n<li><a href=\"core/DEFERFetch\">6.2.1177 DEFER@</a></li>\n<li><a href=\"core/ENDCASE\">6.2.1342 ENDCASE</a></li>\n<li><a href=\"core/ENDOF\">6.2.1343 ENDOF</a></li>\n<li><a href=\"core/ERASE\">6.2.1350 ERASE</a></li>\n<li><a href=\"core/FALSE\">6.2.1485 FALSE</a></li>\n<li><a href=\"core/HEX\">6.2.1660 HEX</a></li>\n<li><a href=\"core/HOLDS\">6.2.1675 HOLDS</a></li>\n<li><a href=\"core/IS\">6.2.1725 IS</a></li>\n\n<li><a href=\"core/MARKER\">6.2.1850 MARKER</a></li>\n<li><a href=\"core/NIP\">6.2.1930 NIP</a></li>\n<li><a href=\"core/OF\">6.2.1950 OF</a></li>\n<li><a href=\"core/PAD\">6.2.2000 PAD</a></li>\n<li><a href=\"core/PARSE\">6.2.2008 PARSE</a></li>\n<li><a href=\"core/PARSE-NAME\">6.2.2020 PARSE-NAME</a></li>\n<li><a href=\"core/PICK\">6.2.2030 PICK</a></li>\n<li><a href=\"core/REFILL\">6.2.2125 REFILL</a></li>\n\n<li><a href=\"core/RESTORE-INPUT\">6.2.2148 RESTORE-INPUT</a></li>\n<li><a href=\"core/ROLL\">6.2.2150 ROLL</a></li>\n\n<li><a href=\"core/Seq\">6.2.2266 S\\\"</a></li>\n<li><a href=\"core/SAVE-INPUT\">6.2.2182 SAVE-INPUT</a></li>\n<li><a href=\"core/SOURCE-ID\">6.2.2218 SOURCE-ID</a></li>\n\n<li><a href=\"core/TO\">6.2.2295 TO</a></li>\n<li><a href=\"core/TRUE\">6.2.2298 TRUE</a></li>\n<li><a href=\"core/TUCK\">6.2.2300 TUCK</a></li>\n<li><a href=\"core/UDotR\">6.2.2330 U.R</a></li>\n<li><a href=\"core/Umore\">6.2.2350 U&gt;</a></li>\n<li><a href=\"core/UNUSED\">6.2.2395 UNUSED</a></li>\n<li><a href=\"core/VALUE\">6.2.2405 VALUE</a></li>\n<li><a href=\"core/WITHIN\">6.2.2440 WITHIN</a></li>\n<li><a href=\"core/BracketCOMPILE\">6.2.2530 [COMPILE]</a></li>\n<li><a href=\"core/bs\">6.2.2535 \\</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Glossary</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\" class=\"current\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">!</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"core/Store\">!</a></li>\n        <li role=\"menuitem\"><a href=\"core/num\">#</a></li>\n        <li role=\"menuitem\"><a href=\"core/num-end\">#&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/numS\">#S</a></li>\n        <li role=\"menuitem\"><a href=\"core/Tick\">'</a></li>\n        <li role=\"menuitem\"><a href=\"core/p\">(</a></li>\n        <li role=\"menuitem\"><a href=\"core/Times\">*</a></li>\n        <li role=\"menuitem\"><a href=\"core/TimesDiv\">*/</a></li>\n        <li role=\"menuitem\"><a href=\"core/TimesDivMOD\">*/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"core/Plus\">+</a></li>\n        <li role=\"menuitem\"><a href=\"core/PlusStore\">+!</a></li>\n        <li role=\"menuitem\"><a href=\"core/PlusLOOP\">+LOOP</a></li>\n        <li role=\"menuitem\"><a href=\"core/Comma\">,</a></li>\n        <li role=\"menuitem\"><a href=\"core/Minus\">-</a></li>\n        <li role=\"menuitem\"><a href=\"core/d\">.</a></li>\n        <li role=\"menuitem\"><a href=\"core/Dotq\">.\"</a></li>\n        <li role=\"menuitem\"><a href=\"core/Div\">/</a></li>\n        <li role=\"menuitem\"><a href=\"core/DivMOD\">/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"core/Zeroless\">0&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/ZeroEqual\">0=</a></li>\n        <li role=\"menuitem\"><a href=\"core/OnePlus\">1+</a></li>\n        <li role=\"menuitem\"><a href=\"core/OneMinus\">1-</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoStore\">2!</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoTimes\">2*</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoDiv\">2/</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoFetch\">2@</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoDROP\">2DROP</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoDUP\">2DUP</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoOVER\">2OVER</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoSWAP\">2SWAP</a></li>\n        <li role=\"menuitem\"><a href=\"core/Colon\">:</a></li>\n        <li role=\"menuitem\"><a href=\"core/Semi\">;</a></li>\n        <li role=\"menuitem\"><a href=\"core/less\">&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/num-start\">&lt;#</a></li>\n        <li role=\"menuitem\"><a href=\"core/Equal\">=</a></li>\n        <li role=\"menuitem\"><a href=\"core/more\">&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/toBODY\">&gt;BODY</a></li>\n        <li role=\"menuitem\"><a href=\"core/toIN\">&gt;IN</a></li>\n        <li role=\"menuitem\"><a href=\"core/toNUMBER\">&gt;NUMBER</a></li>\n        <li role=\"menuitem\"><a href=\"core/toR\">&gt;R</a></li>\n        <li role=\"menuitem\"><a href=\"core/qDUP\">?DUP</a></li>\n        <li role=\"menuitem\"><a href=\"core/Fetch\">@</a></li>\n        <li role=\"menuitem\"><a href=\"core/ABORT\">ABORT</a></li>\n        <li role=\"menuitem\"><a href=\"core/ABORTq\">ABORT\"</a></li>\n        <li role=\"menuitem\"><a href=\"core/ABS\">ABS</a></li>\n        <li role=\"menuitem\"><a href=\"core/ACCEPT\">ACCEPT</a></li>\n        <li role=\"menuitem\"><a href=\"core/ALIGN\">ALIGN</a></li>\n        <li role=\"menuitem\"><a href=\"core/ALIGNED\">ALIGNED</a></li>\n        <li role=\"menuitem\"><a href=\"core/ALLOT\">ALLOT</a></li>\n        <li role=\"menuitem\"><a href=\"core/AND\">AND</a></li>\n        <li role=\"menuitem\"><a href=\"core/BASE\">BASE</a></li>\n        <li role=\"menuitem\"><a href=\"core/BEGIN\">BEGIN</a></li>\n        <li role=\"menuitem\"><a href=\"core/BL\">BL</a></li>\n        <li role=\"menuitem\"><a href=\"core/CStore\">C!</a></li>\n        <li role=\"menuitem\"><a href=\"core/CComma\">C,</a></li>\n        <li role=\"menuitem\"><a href=\"core/CFetch\">C@</a></li>\n        <li role=\"menuitem\"><a href=\"core/CELLPlus\">CELL+</a></li>\n        <li role=\"menuitem\"><a href=\"core/CELLS\">CELLS</a></li>\n        <li role=\"menuitem\"><a href=\"core/CHAR\">CHAR</a></li>\n        <li role=\"menuitem\"><a href=\"core/CHARPlus\">CHAR+</a></li>\n        <li role=\"menuitem\"><a href=\"core/CHARS\">CHARS</a></li>\n        <li role=\"menuitem\"><a href=\"core/CONSTANT\">CONSTANT</a></li>\n        <li role=\"menuitem\"><a href=\"core/COUNT\">COUNT</a></li>\n        <li role=\"menuitem\"><a href=\"core/CR\">CR</a></li>\n        <li role=\"menuitem\"><a href=\"core/CREATE\">CREATE</a></li>\n        <li role=\"menuitem\"><a href=\"core/DECIMAL\">DECIMAL</a></li>\n        <li role=\"menuitem\"><a href=\"core/DEPTH\">DEPTH</a></li>\n        <li role=\"menuitem\"><a href=\"core/DO\">DO</a></li>\n        <li role=\"menuitem\"><a href=\"core/DOES\">DOES&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/DROP\">DROP</a></li>\n        <li role=\"menuitem\"><a href=\"core/DUP\">DUP</a></li>\n        <li role=\"menuitem\"><a href=\"core/ELSE\">ELSE</a></li>\n        <li role=\"menuitem\"><a href=\"core/EMIT\">EMIT</a></li>\n        <li role=\"menuitem\"><a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a></li>\n        <li role=\"menuitem\"><a href=\"core/EVALUATE\">EVALUATE</a></li>\n        <li role=\"menuitem\"><a href=\"core/EXECUTE\">EXECUTE</a></li>\n        <li role=\"menuitem\"><a href=\"core/EXIT\">EXIT</a></li>\n        <li role=\"menuitem\"><a href=\"core/FILL\">FILL</a></li>\n        <li role=\"menuitem\"><a href=\"core/FIND\">FIND</a></li>\n        <li role=\"menuitem\"><a href=\"core/FMDivMOD\">FM/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"core/HERE\">HERE</a></li>\n        <li role=\"menuitem\"><a href=\"core/HOLD\">HOLD</a></li>\n        <li role=\"menuitem\"><a href=\"core/I\">I</a></li>\n        <li role=\"menuitem\"><a href=\"core/IF\">IF</a></li>\n        <li role=\"menuitem\"><a href=\"core/IMMEDIATE\">IMMEDIATE</a></li>\n        <li role=\"menuitem\"><a href=\"core/INVERT\">INVERT</a></li>\n        <li role=\"menuitem\"><a href=\"core/J\">J</a></li>\n        <li role=\"menuitem\"><a href=\"core/KEY\">KEY</a></li>\n        <li role=\"menuitem\"><a href=\"core/LEAVE\">LEAVE</a></li>\n        <li role=\"menuitem\"><a href=\"core/LITERAL\">LITERAL</a></li>\n        <li role=\"menuitem\"><a href=\"core/LOOP\">LOOP</a></li>\n        <li role=\"menuitem\"><a href=\"core/LSHIFT\">LSHIFT</a></li>\n        <li role=\"menuitem\"><a href=\"core/MTimes\">M*</a></li>\n        <li role=\"menuitem\"><a href=\"core/MAX\">MAX</a></li>\n        <li role=\"menuitem\"><a href=\"core/MIN\">MIN</a></li>\n        <li role=\"menuitem\"><a href=\"core/MOD\">MOD</a></li>\n        <li role=\"menuitem\"><a href=\"core/MOVE\">MOVE</a></li>\n        <li role=\"menuitem\"><a href=\"core/NEGATE\">NEGATE</a></li>\n        <li role=\"menuitem\"><a href=\"core/OR\">OR</a></li>\n        <li role=\"menuitem\"><a href=\"core/OVER\">OVER</a></li>\n        <li role=\"menuitem\"><a href=\"core/POSTPONE\">POSTPONE</a></li>\n        <li role=\"menuitem\"><a href=\"core/QUIT\">QUIT</a></li>\n        <li role=\"menuitem\"><a href=\"core/Rfrom\">R&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/RFetch\">R@</a></li>\n        <li role=\"menuitem\"><a href=\"core/RECURSE\">RECURSE</a></li>\n        <li role=\"menuitem\"><a href=\"core/REPEAT\">REPEAT</a></li>\n        <li role=\"menuitem\"><a href=\"core/ROT\">ROT</a></li>\n        <li role=\"menuitem\"><a href=\"core/RSHIFT\">RSHIFT</a></li>\n        <li role=\"menuitem\"><a href=\"core/Sq\">S\"</a></li>\n        <li role=\"menuitem\"><a href=\"core/StoD\">S&gt;D</a></li>\n        <li role=\"menuitem\"><a href=\"core/SIGN\">SIGN</a></li>\n        <li role=\"menuitem\"><a href=\"core/SMDivREM\">SM/REM</a></li>\n        <li role=\"menuitem\"><a href=\"core/SOURCE\">SOURCE</a></li>\n        <li role=\"menuitem\"><a href=\"core/SPACE\">SPACE</a></li>\n        <li role=\"menuitem\"><a href=\"core/SPACES\">SPACES</a></li>\n        <li role=\"menuitem\"><a href=\"core/STATE\">STATE</a></li>\n        <li role=\"menuitem\"><a href=\"core/SWAP\">SWAP</a></li>\n        <li role=\"menuitem\"><a href=\"core/THEN\">THEN</a></li>\n        <li role=\"menuitem\"><a href=\"core/TYPE\">TYPE</a></li>\n        <li role=\"menuitem\"><a href=\"core/Ud\">U.</a></li>\n        <li role=\"menuitem\"><a href=\"core/Uless\">U&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/UMTimes\">UM*</a></li>\n        <li role=\"menuitem\"><a href=\"core/UMDivMOD\">UM/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"core/UNLOOP\">UNLOOP</a></li>\n        <li role=\"menuitem\"><a href=\"core/UNTIL\">UNTIL</a></li>\n        <li role=\"menuitem\"><a href=\"core/VARIABLE\">VARIABLE</a></li>\n        <li role=\"menuitem\"><a href=\"core/WHILE\">WHILE</a></li>\n        <li role=\"menuitem\"><a href=\"core/WORD\">WORD</a></li>\n        <li role=\"menuitem\"><a href=\"core/XOR\">XOR</a></li>\n        <li role=\"menuitem\"><a href=\"core/Bracket\">[</a></li>\n        <li role=\"menuitem\"><a href=\"core/BracketTick\">[']</a></li>\n        <li role=\"menuitem\"><a href=\"core/BracketCHAR\">[CHAR]</a></li>\n        <li role=\"menuitem\"><a href=\"core/right-bracket\">]</a></li>\n        <li role=\"menuitem\"><a href=\"core/Dotp\">.(</a></li>\n        <li role=\"menuitem\"><a href=\"core/DotR\">.R</a></li>\n        <li role=\"menuitem\"><a href=\"core/Zerone\">0&lt;&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/Zeromore\">0&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwotoR\">2&gt;R</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoRfrom\">2R&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/TwoRFetch\">2R@</a></li>\n        <li role=\"menuitem\"><a href=\"core/ColonNONAME\">:NONAME</a></li>\n        <li role=\"menuitem\"><a href=\"core/ne\">&lt;&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/qDO\">?DO</a></li>\n        <li role=\"menuitem\"><a href=\"core/ACTION-OF\">ACTION-OF</a></li>\n        <li role=\"menuitem\"><a href=\"core/AGAIN\">AGAIN</a></li>\n        <li role=\"menuitem\"><a href=\"core/BUFFERColon\">BUFFER:</a></li>\n        <li role=\"menuitem\"><a href=\"core/Cq\">C\"</a></li>\n        <li role=\"menuitem\"><a href=\"core/CASE\">CASE</a></li>\n        <li role=\"menuitem\"><a href=\"core/COMPILEComma\">COMPILE,</a></li>\n        <li role=\"menuitem\"><a href=\"core/DEFER\">DEFER</a></li>\n        <li role=\"menuitem\"><a href=\"core/DEFERStore\">DEFER!</a></li>\n        <li role=\"menuitem\"><a href=\"core/DEFERFetch\">DEFER@</a></li>\n        <li role=\"menuitem\"><a href=\"core/ENDCASE\">ENDCASE</a></li>\n        <li role=\"menuitem\"><a href=\"core/ENDOF\">ENDOF</a></li>\n        <li role=\"menuitem\"><a href=\"core/ERASE\">ERASE</a></li>\n        <li role=\"menuitem\"><a href=\"core/FALSE\">FALSE</a></li>\n        <li role=\"menuitem\"><a href=\"core/HEX\">HEX</a></li>\n        <li role=\"menuitem\"><a href=\"core/HOLDS\">HOLDS</a></li>\n        <li role=\"menuitem\"><a href=\"core/IS\">IS</a></li>\n        <li role=\"menuitem\"><a href=\"core/MARKER\">MARKER</a></li>\n        <li role=\"menuitem\"><a href=\"core/NIP\">NIP</a></li>\n        <li role=\"menuitem\"><a href=\"core/OF\">OF</a></li>\n        <li role=\"menuitem\"><a href=\"core/PAD\">PAD</a></li>\n        <li role=\"menuitem\"><a href=\"core/PARSE\">PARSE</a></li>\n        <li role=\"menuitem\"><a href=\"core/PARSE-NAME\">PARSE-NAME</a></li>\n        <li role=\"menuitem\"><a href=\"core/PICK\">PICK</a></li>\n        <li role=\"menuitem\"><a href=\"core/REFILL\">REFILL</a></li>\n        <li role=\"menuitem\"><a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a></li>\n        <li role=\"menuitem\"><a href=\"core/ROLL\">ROLL</a></li>\n        <li role=\"menuitem\"><a href=\"core/Seq\">S\\\"</a></li>\n        <li role=\"menuitem\"><a href=\"core/SAVE-INPUT\">SAVE-INPUT</a></li>\n        <li role=\"menuitem\"><a href=\"core/SOURCE-ID\">SOURCE-ID</a></li>\n        <li role=\"menuitem\"><a href=\"core/TO\">TO</a></li>\n        <li role=\"menuitem\"><a href=\"core/TRUE\">TRUE</a></li>\n        <li role=\"menuitem\"><a href=\"core/TUCK\">TUCK</a></li>\n        <li role=\"menuitem\"><a href=\"core/UDotR\">U.R</a></li>\n        <li role=\"menuitem\"><a href=\"core/Umore\">U&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"core/UNUSED\">UNUSED</a></li>\n        <li role=\"menuitem\"><a href=\"core/VALUE\">VALUE</a></li>\n        <li role=\"menuitem\"><a href=\"core/WITHIN\">WITHIN</a></li>\n        <li role=\"menuitem\"><a href=\"core/BracketCOMPILE\">[COMPILE]</a></li>\n        <li role=\"menuitem\"><a href=\"core/bs\">\\</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "diff": {
            "basename": "diff",
            "name": "Annex C: Compatibility analysis",
            "html": "<div id=\"body\">\n<h1>Annex C: Compatibility analysis</h1> <!-- D (informative annex) -->\n<a name=\"annex:diff\"></a>\nBefore this standard, there were several industry standards for Forth.\nThe most influential are listed here in chronological order, along\nwith the major differences between this standard and the most recent,\nForth 94.\n<p>\n</p><h2 id=\"section.C.1\">C.1 FIG Forth (circa 1978)</h2> <!-- D.1 -->\nFIG Forth was a \"model\" implementation of the Forth language\ndeveloped by the Forth Interest Group (FIG). In FIG Forth, a\nrelatively small number of words were implemented in processor-dependent\nmachine language and the rest of the words were implemented in Forth.\nThe FIG model was placed in the public domain, and was ported to a wide\nvariety of computer systems. Because the bulk of the FIG Forth\nimplementation was the same across all machines, programs written in\nFIG Forth enjoyed a substantial degree of portability, even for\n\"system-level\" programs that directly manipulate the internals\nof the Forth system implementation.\n<p>\nFIG Forth implementations were influential in increasing the number\nof people interested in using Forth. Many people associate the\nimplementation techniques embodied in the FIG Forth model with\n\"the nature of Forth\".\n</p><p>\nHowever, FIG Forth was not necessarily representative of commercial\nForth implementations of the same era. Some of the most successful\ncommercial Forth systems used implementation techniques different\nfrom the FIG Forth \"model\".\n</p><p>\n</p><h2 id=\"section.C.2\">C.2 Forth 79</h2> <!-- D.2 -->\nThe Forth-79 Standard resulted from a series of meetings from 1978\nto 1980, by the Forth Standards Team, an international group of Forth\nusers and vendors (interim versions known as Forth 77 and Forth 78\nwere also released by the group).\n<p>\nForth 79 described a set of words defined on a 16-bit, twos-complement,\nunaligned, linear byte-addressing virtual machine. It prescribed an\nimplementation technique known as \"indirect threaded code\", and used\nthe ASCII character set.\n</p><p>\nThe Forth-79 Standard served as the basis for several public domain\nand commercial implementations, some of which are still available and\nsupported today.\n</p><p>\n</p><h2 id=\"section.C.3\">C.3 Forth 83</h2> <!-- D.3 -->\nThe Forth-83 Standard, also by the Forth Standards Team, was released\nin 1983. Forth 83 attempted to fix some of the deficiencies of Forth\n79.\n<p>\nForth 83 was similar to Forth 79 in most respects. However, Forth 83\nchanged the definition of several well-defined features of Forth 79.\nFor example, the rounding behavior of integer division, the base value\nof the operands of <a href=\"core/PICK\">PICK</a> and <a href=\"core/ROLL\">ROLL</a>, the meaning of the\naddress returned by <a href=\"core/Tick\">'</a>, the compilation behavior of <a href=\"core/Tick\">'</a>,\nthe value of a \"true\" flag, the meaning of <code>NOT</code>, and the\n\"chaining\" behavior of words defined by <code>VOCABULARY</code> were all\nchanged. Forth 83 relaxed the implementation restrictions of Forth 79\nto allow any kind of threaded code, but it did not fully allow\ncompilation to native machine code (this was not specifically prohibited,\nbut rather was an indirect consequence of another provision).\n</p><p>\nMany new Forth implementations were based on the Forth-83 Standard, but\nfew \"strictly compliant\" Forth-83 implementations exist.\n</p><p>\nAlthough the incompatibilities resulting from the changes between\nForth 79 and Forth 83 were usually relatively easy to fix, a number\nof successful Forth vendors did not convert their implementations to\nbe Forth 83 compliant. For example, the most successful commercial\nForth for Apple Macintosh computers is based on Forth 79.\n</p><p>\n</p><h2 id=\"section.C.4\">C.4 ANS Forth (1994)</h2> <!-- D.5 -->\n<a name=\"diff:ans\"></a>\n<p>\nIn the mid to late 1980s the computer industry underwent a rapid and\nprofound change.  The personal-computer market matured into a business\nand commercial market, while the market for ROM-based embedded control\ncomputers grew substantially.  Improvements in custom processor design\nallowed for the development of numerous \"Forth chips,\" customized\nfor the execution of the Forth language.\n</p><p>\nIn order to take full advantage of evolving technology, many Forth\nimplementations ignored some of the restrictions imposed by the\nimplied \"virtual machine\" of previous standards.\nThe ANS Forth committee was formed in 1987 to address the fragmentation\nwithin the Forth community caused not only by the difference between\nForth 79 and Forth 83 but the exploitation of technical developments.\n</p><p>\nThe committee undertook a comprehensive review of a variety of existing\nimplementations, especially those with substantial user bases and/or\nconsiderable success in the market place.  This allowed them to identify\nand document features common to these systems, many of which had not been\nincluded in any previous standard.\nThis was the most comprehensive review of Forth systems to date, taking\neighty-seven days covering twenty-three meetings over eight years.\nThe inclusive nature of the standard allowed the various factions within\nthe community to unify in support of ANS Forth, with many systems\nproviding a compatibility layer.\n</p><p>\nThe committee chose to move away from prescribing stringent requirements\nas previous standards had, with the specification of a virtual machine.\nIt preferred to describe the operation of the virtual machine, without\nreference to its implementation, thus allowing an implementor to take\nfull advantage of any technical developments while providing the\ndeveloper with a complete list of entitlements.\n</p><p>\nThis required the identification of implicit assumptions made by the\nprevious standards, making them explicit and abstracting them into\nmore general concepts where possible.  A good example of this is the\nsize of an item on the stack.  In previous standards this was assumed\nto be 16 bits wide.  This was no longer a valid assumption.  ANS Forth\nintroduced the concept of the <em>cell</em>, allowing an implementation\nto use a stack size most suited to the environment.\n</p><p>\nThe American National Standards Institution (ANSI) published the ANS\nForth Standard in 1994 with the title \"<em>ANSI X3.215-1994\nInformation Systems — Programming Language FORTH</em>\".  This is referenced\nthroughout this document as Forth 94.\n</p><p>\n</p><h2 id=\"section.C.5\">C.5 ISO Forth (1997)</h2>\n<a name=\"diff:iso\"></a>\n<p>\nANSI submitted the Forth 94 Standard to the\nISO (International Organization for Standardization) and\nIEC (International Electrotechnical Commission) joint committee for\nconsideration as an international standard.\nThe ISO/IEC adopted the Forth 94 document as an international standard\nin 1997, publishing it under the title \"<em>ISO/IEC 15145:1997\nInformation technology.  Programming languages.  FORTH</em>\".\n</p><p>\n</p><h2 id=\"section.C.6\">C.6 Approach of this standard</h2> <!-- D.6 -->\n<a name=\"diff:approach\"></a>\n<p>\nDuring a workshop on the Forth standard at the EuroForth conference in\n2004 it was agreed that Forth 94 required updating.\n</p><p>\nA committee was formed and agreed that the process should be as open\nas possible, adopting the Usenet RfD/CfV (Request for Discussion/Call\nfor Votes) process to produce semi-formal proposals for changes to the\nstandard.  In addition to general discussion on the <code>comp.lang.forth</code>\nusenet news group, a moderated mailing list (with public archive) was\ncreated for those who do not follow the news group.\nStandards meetings to discuss CfVs were held in public in\nconjunction with the EuroForth conference.\n</p><p>\nThe work of the Forth 94 committee was the basis of this standard,\ninformally called Forth 200<em>x</em>.  The aim of the Forth 200<em>x</em>\ncommittee is to produce a rolling document, with the standard constantly\nbeing updated based on discussion of proposals and the corresponding\nvotes.  A snapshot document is occasionally produced, with this document\nbeing the first.\n</p><p>\nThe Forth 200<em>x</em> committee defined a procedure for proposals.  In\naddition to the formal text of the proposal, they had to include:\nthe rationale behind the change;\na reference implementation, or a description of the reason a reference\nimplementation cannot be presented;\nunit testing for the proposed change, especially for border conditions.\nSee <strong><a href=\"process#process\">Proposals Process</a></strong> (page <a href=\"process#process\">ix</a>) for a full description.\n</p><p>\n</p><h2 id=\"section.C.7\">C.7 Differences from Forth 94</h2> <!-- D.7 -->\n<a name=\"diff:forth94\"></a>\n<p>\n</p><h3 id=\"subsection.C.7.1\">C.7.1 Removed Obsolete Words</h3> <!-- D.7.1 -->\n<a name=\"diff:ans:obsolete\"></a>\n<p>\nForth 94 declared seven words as `obsolescent', all but\n<a href=\"tools/FORGET\">FORGET</a> have been removed from this standard.\n</p><p>\n</p><dl class=\"desc\">\n<dt>Words affected:</dt><dd>  <code>#TIB</code>,\n<code>CONVERT</code>,\n<code>EXPECT</code>,\n<code>QUERY</code>,\n<code>SPAN</code>,\n<code>TIB</code>,\n<a href=\"core/WORD\">WORD</a>.\n</dd>\n<dt>Reason:</dt><dd>  Obsolescent words have been removed.\n</dd>\n<dt>Impact:</dt><dd>  <a href=\"core/WORD\">WORD</a> is no longer required to leave a space at the end of\nthe returned string.\n<p>\nIt is recommended that, should the obsolete words be included,\nthey have the behaviour described in Forth 94.  The names should\nnot be reused for other purposes.\n</p><p>\n</p></dd>\n<dt>Transition/Conversion:</dt><dd>  The functions of <code>TIB</code> and <code>#TIB</code> have been\nsuperseded by <a href=\"core/SOURCE\">SOURCE</a>.\nThe function of <code>CONVERT</code> has been superseded by\n<a href=\"core/toNUMBER\">&gt;NUMBER</a>.\n<p>\nThe functions of <code>EXPECT</code> and <code>SPAN</code> have been\nsuperseded by <a href=\"core/ACCEPT\">ACCEPT</a>.\n</p><p>\nThe function of <code>QUERY</code> may be performed with <a href=\"core/ACCEPT\">ACCEPT</a>\nand <a href=\"core/EVALUATE\">EVALUATE</a>.\n</p></dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.C.7.2\">C.7.2 Separate Floating-point Stack is now Standard</h3> <!-- D.7.2 -->\n<a name=\"diff:fpstack\"></a>\n<p>\nPreviously systems could implement either a separate floating-point\nstack or a combined floating-point/data stack; programs were required\nto cater for both (or declare an environmental dependency on a\nparticular variant).\n</p><p>\n</p><dl class=\"desc\">\n<dt>Words Affected:</dt><dd>  All floating-point words.\n</dd>\n<dt>Reason:</dt><dd>  The developing of software that may be used with either a combined\nstack or a separate stack is extremely difficult and costly.  While\nsome of the systems surveyed provide a combined floating-point/data\nstack, they all provide a separate floating-point stack.\n<p>\n</p></dd>\n<dt>Impact:</dt><dd>  Forth 94 programs with an environmental dependency on a separate\nfloating-point stack become standard programs.\n<p>\nForth 94 programs with an environmental dependency on a combined\nstack retain the environmental dependency.\n</p><p>\nForth 94 programs (without environmental dependency, i.e., those\nworking on either kind of system) remain standard programs.\n</p><p>\nForth 94 systems that implement a separate floating-point stack\ncontinue to be standard systems.\n</p><p>\nForth 94 systems that implement a combined stack become systems\nwith an environmental restriction of not providing a separate\nfloating-point stack, but a combined stack.\n</p><p>\n</p></dd>\n<dt>Transition/Conversion:</dt><dd>  Any code that has an environmental dependency on the use of a\ncombined floating-point/data stack should be ported to use a\nseparate floating-point stack.\n<p>\nA system that has an environmental restriction on using a combined\nfloating-point/data stack should consider providing a separate\nfloating-point stack.\n</p></dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.C.7.3\">C.7.3 Using <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> to inquire whether a word set is present</h3> <!-- D.7.3 -->\n<a name=\"diff:environment\"></a>\n<p>\nWith the advent of a new standard, it was necessary to review the\nmeaning of word set queries.  Compatibility with Forth 94 demands\nthat a word set query produce the same result as for Forth 94; i.e.,\nquerying for <code>CORE-EXT</code> returns true only if all the Forth 94\nCORE EXT words are present.  The question was how to distinguish\nbetween word sets described by this and subsequent standards.\n</p><p>\nThe committee considered adding a year indicator to the word set name\n(\"<code>CORE-EXT-2012</code>\") or a providing a general query\n(\"<code>Forth-2012</code>\") which could be combined with the\nword-set query.  As the committee could find very few examples of the\nword-set queries being used, it chose not to update the word set-query\nmechanism, but rather to mark it as obsolescent.\n</p><p>\n</p><dl class=\"desc\">\n<dt>Words Affected:</dt><dd>  <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>\n</dd>\n<dt>Reason:</dt><dd>  The use of the word-set query to inquire whether a word set is\npresent in the system has been marked obsolescent.  If present\nthe query indicates the word set, as documented in Forth 94, is\navailable.\n<p>\n</p></dd>\n<dt>Impact:</dt><dd>  Forth 94 did not guarantee the presence of these queries.  Many\nsystems that provided all the words in a particular word set did\nnot provide the corresponding query.  Portable programs are not\naffected as they could not rely on this function.\n<p>\n</p></dd>\n<dt>Transition/Conversion:</dt><dd>  There is no direct equivalent to determine the presence of a whole\nword set.  The <a href=\"tools/BracketDEFINED\">15.6.2.2530.30 [DEFINED]</a> and <a href=\"tools/BracketUNDEFINED\">15.6.2.2534 [UNDEFINED]</a>\nwords can be used to detect the availability (or otherwise) of\nindividual words.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.C.7.4\">C.7.4 Additional <a href=\"core/TO\">TO</a> targets</h3> <!-- D.7.4 -->\n<a name=\"diff:12:to\"></a>\n<p>\n<a href=\"core/TO\">6.2.2295 TO</a> has been extended to act on targets defined with\n<a href=\"float/FVALUE\">12.6.2.1628 FVALUE</a> and <a href=\"double/TwoVALUE\">8.6.2.0435 2VALUE</a>.\n</p><p>\n</p><dl class=\"desc\">\n<dt>Words affected:</dt><dd>  <a href=\"core/TO\">TO</a>\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.C.7.5\">C.7.5 Input/Output return values</h3> <!-- D.7.5 -->\n<a name=\"diff:12:ior\"></a>\n<p>\n</p><dl class=\"desc\">\n<dt>Words affected:</dt><dd>  All words that return an <em>ior</em>.\n</dd>\n<dt>Reason:</dt><dd>  Forth 94 left the error code (<em>ior</em>) implementation-defined,\nalthough it did recommend an <em>ior</em> to be a <a href=\"exception/THROW\">THROW</a>\ncode.  Forth 2012 now requires an <em>ior</em> to be a\n<a href=\"exception/THROW\">THROW</a> code.\n<p>\n</p></dd>\n<dt>Transition/Conversion:</dt><dd>  Forth 94 programs are not affected.  Programs that are dependent\non <em>iors</em> being throwable are no longer required to document\nthe dependency.\n<p>\nForth 94 systems that abided by the recommendation are not affected.\nSystems that did not heed this advice are required to do so. A\nnumber of <a href=\"exception/THROW\">THROW</a> codes were added to table\n<a href=\"exception#table:throw\">9.1</a> to ease this transition.\n</p></dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.C.7.6\">C.7.6 Minimum number of locals</h3> <!-- D.7.6 -->\n<a name=\"diff:12:locals\"></a>\n<p>\n</p><dl class=\"desc\">\n<dt>Words affected:</dt><dd>  <a href=\"locals/LOCAL\">(LOCAL)</a>, <a href=\"locals/LOCALS\">LOCALS|</a>\n</dd>\n<dt>Reason:</dt><dd>  Some programs require more than eight locals.\n</dd>\n<dt>Transition/Conversion:</dt><dd>  Existing programs are unaffected.  Systems implementing the locals\nword set have to be changed to support at least 16 (previously 8)\nlocals.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.C.7.7\">C.7.7 Number prefixes</h3> <!-- D.7.7 -->\n<a name=\"diff:12:prefix\"></a>\n<p>\nDecimal, hexadecimal, binary number literals can now be written\nirrespective of <a href=\"core/BASE\">BASE</a> by using the prefix #, $, %.  Also, character\nliterals can be written as 'c'.\nStandard programs are unaffected.  Systems have to be changed to\nrecognize these forms.\n</p><p>\nSee <strong><a href=\"usage#usage:numbers\">3.4.1.3 Text interpreter input number conversion</a></strong>.\n</p><h3 id=\"subsection.C.7.8\">C.7.8 <a href=\"core/SOURCE-ID\">SOURCE-ID</a> Clarification</h3> <!-- D.7.7 -->\n<a name=\"diff:12:sourceid\"></a>\n<p>\nWhen interpreting text from a file, the relationship between the position in the\nfile returned by <a href=\"core/SOURCE-ID\">SOURCE-ID</a>, and the current interpretation position is\nundefined.\n</p><p>\n</p><h3 id=\"subsection.C.7.9\">C.7.9 <a href=\"float/FASINH\">FASINH</a></h3> <!-- D.7.9 -->\n<a name=\"diff:12:fasinh\"></a>\n<p>\nAn ambiguous condition on <em>r1</em> being less than 0 was removed.\n</p><p>\nExisting programs are not affected.  Existing systems are\nunlikely to be affected.\n</p><p>\n</p><h3 id=\"subsection.C.7.10\">C.7.10 <a href=\"float/FATANTwo\">FATAN2</a></h3> <!-- D.7.10 -->\n<a name=\"diff:12:fatan2\"></a>\n<p>\n</p><dl class=\"desc\">\n<dt>Words affected:</dt><dd>  <a href=\"float/FATANTwo\">FATAN2</a>\n</dd>\n<dt>Reason:</dt><dd>  The result is now specified more tightly: it is the principal angle\n(between -pi and pi).\n<p>\n</p></dd>\n<dt>Impact:</dt><dd>  Forth 94 compliant programs are not affected.\n</dd>\n<dt>Transition/Conversion:</dt><dd>  Systems may have to change <a href=\"float/FATANTwo\">FATAN2</a> to return\nthe principal angle.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h2 id=\"section.C.8\">C.8 Additional words</h2> <!-- D.8 -->\n<a name=\"diff:new12\"></a>\n<p>\nThe following words have been added to the standard:\n</p><p>\n\n</p><h3 id=\"subsection.C.8.6\">C.8.6 Core word sets</h3>\nThe following words have been added to <strong><a href=\"core#wordlist:core-ext\">6.2 Core extension words</a></strong>:\n<p>\n</p><div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"core/ACTION-OF\">6.2.0698 ACTION-OF</a> <br>\n  <a href=\"core/BUFFERColon\">6.2.0825 BUFFER:</a> <br>\n  <a href=\"core/DEFER\">6.2.1173 DEFER</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"core/DEFERStore\">6.2.1175 DEFER!</a> <br>\n  <a href=\"core/DEFERFetch\">6.2.1177 DEFER@</a> <br>\n  <a href=\"core/HOLDS\">6.2.1675 HOLDS</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"core/IS\">6.2.1725 IS</a> <br>\n  <a href=\"core/PARSE-NAME\">6.2.2020 PARSE-NAME</a> <br>\n  <a href=\"core/Seq\">6.2.2266 S\\\"</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\n</p><h3 id=\"subsection.C.8.8\">C.8.8 Double-Number word sets</h3>\nThe following words have been added to <strong><a href=\"wordlist/double-ext\">8.6.2 Double-Number extension words</a></strong>:\n<p>\n<a href=\"double/TwoVALUE\">8.6.2.0435 2VALUE</a>\n</p><p>\n</p><h3 id=\"subsection.C.8.10\">C.8.10 Facility word sets</h3>\nThe following words have been added to <strong><a href=\"wordlist/facility-ext\">10.6.2 Facility extension words</a></strong>:\n<p>\n</p><div class=\"minipage\" style=\"width: 17.5em\">\n\n  <a href=\"facility/PlusFIELD\">10.6.2.0135 +FIELD</a> <br>\n  <a href=\"facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a> <br>\n  <a href=\"facility/CFIELDColon\">10.6.2.0893 CFIELD:</a> <br>\n  <a href=\"facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a> <br>\n  <a href=\"facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a> <br>\n  <a href=\"facility/FIELDColon\">10.6.2.1518 FIELD:</a> <br>\n  <a href=\"facility/K-ALT-MASK\">10.6.2.1740.01 K-ALT-MASK</a> <br>\n  <a href=\"facility/K-CTRL-MASK\">10.6.2.1740.02 K-CTRL-MASK</a> <br>\n  <a href=\"facility/K-DELETE\">10.6.2.1740.03 K-DELETE</a> <br>\n  <a href=\"facility/K-DOWN\">10.6.2.1740.04 K-DOWN</a> <br>\n  <a href=\"facility/K-END\">10.6.2.1740.05 K-END</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 12.5em\">\n\n  <a href=\"facility/K-FOne\">10.6.2.1740.06 K-F1</a> <br>\n  <a href=\"facility/K-FOneZero\">10.6.2.1740.07 K-F10</a> <br>\n  <a href=\"facility/K-FOneOne\">10.6.2.1740.08 K-F11</a> <br>\n  <a href=\"facility/K-FOneTwo\">10.6.2.1740.09 K-F12</a> <br>\n  <a href=\"facility/K-FTwo\">10.6.2.1740.10 K-F2</a> <br>\n  <a href=\"facility/K-F3\">10.6.2.1740.11 K-F3</a> <br>\n  <a href=\"facility/K-F4\">10.6.2.1740.12 K-F4</a> <br>\n  <a href=\"facility/K-F5\">10.6.2.1740.13 K-F5</a> <br>\n  <a href=\"facility/K-F6\">10.6.2.1740.14 K-F6</a> <br>\n  <a href=\"facility/K-F7\">10.6.2.1740.15 K-F7</a> <br>\n  <a href=\"facility/K-F8\">10.6.2.1740.16 K-F8</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 17.5em\">\n\n  <a href=\"facility/K-F9\">10.6.2.1740.17 K-F9</a> <br>\n  <a href=\"facility/K-HOME\">10.6.2.1740.18 K-HOME</a> <br>\n  <a href=\"facility/K-INSERT\">10.6.2.1740.19 K-INSERT</a> <br>\n  <a href=\"facility/K-LEFT\">10.6.2.1740.20 K-LEFT</a> <br>\n  <a href=\"facility/K-NEXT\">10.6.2.1740.21 K-NEXT</a> <br>\n  <a href=\"facility/K-PRIOR\">10.6.2.1740.22 K-PRIOR</a> <br>\n  <a href=\"facility/K-RIGHT\">10.6.2.1740.23 K-RIGHT</a> <br>\n  <a href=\"facility/K-SHIFT-MASK\">10.6.2.1740.24 K-SHIFT-MASK</a> <br>\n  <a href=\"facility/K-UP\">10.6.2.1740.25 K-UP</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\n</p><h3 id=\"subsection.C.8.11\">C.8.11 File-Access word sets</h3>\nThe following words have been added to <strong><a href=\"wordlist/file-ext\">11.6.2 File-Access extension words</a></strong>:\n<p>\n</p><div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"file/INCLUDE\">11.6.2.1714 INCLUDE</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"file/REQUIRE\">11.6.2.2144.10 REQUIRE</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"file/REQUIRED\">11.6.2.2144.50 REQUIRED</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\n</p><h3 id=\"subsection.C.8.12\">C.8.12 Floating-Point word sets</h3>\nThe following words have been added to <strong><a href=\"wordlist/floating-ext\">12.6.2 Floating-Point extension words</a></strong>:\n<p>\n</p><div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"float/DFFIELDColon\">12.6.2.1207.40 DFFIELD:</a> <br>\n  <a href=\"float/FtoS\">12.6.2.1471 F&gt;S</a> <br>\n  <a href=\"float/FFIELDColon\">12.6.2.1517 FFIELD:</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"float/FTRUNC\">12.6.2.1627 FTRUNC</a> <br>\n  <a href=\"float/FVALUE\">12.6.2.1628 FVALUE</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"float/StoF\">12.6.2.2175 S&gt;F</a> <br>\n  <a href=\"float/SFFIELDColon\">12.6.2.2206.40 SFFIELD:</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\n</p><h3 id=\"subsection.C.8.13\">C.8.13 Locals word sets</h3>\nThe following words have been added to <strong><a href=\"wordlist/local-ext\">13.6.2 Locals extension words</a></strong>:\n<p>\n<a href=\"locals/bColon\">13.6.2.2550 {:</a>\n</p><p>\n</p><h3 id=\"subsection.C.8.15\">C.8.15 Programming-Tools word sets</h3>\n<a name=\"diff:12:tools\"></a>\nThe following words have been added to the <strong><a href=\"wordlist/tools-ext\">15.6.2 Programming-Tools extension words</a></strong>:\n<p>\n</p><div class=\"minipage\" style=\"width: 22.5em\">\n\n  <a href=\"tools/NtoR\">15.6.2.1908 N&gt;R</a> <br>\n  <a href=\"tools/NAMEtoCOMPILE\">15.6.2.1909.10 NAME&gt;COMPILE</a> <br>\n  <a href=\"tools/NAMEtoINTERPRET\">15.6.2.1909.20 NAME&gt;INTERPRET</a> <br>\n  <a href=\"tools/NAMEtoSTRING\">15.6.2.1909.40 NAME&gt;STRING</a> <br>\n  <a href=\"tools/NRfrom\">15.6.2.1940 NR&gt;</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 22.5em\">\n\n  <a href=\"tools/SYNONYM\">15.6.2.2264 SYNONYM</a> <br>\n  <a href=\"tools/TRAVERSE-WORDLIST\">15.6.2.2297 TRAVERSE-WORDLIST</a> <br>\n  <a href=\"tools/BracketDEFINED\">15.6.2.2530.30 [DEFINED]</a> <br>\n  <a href=\"tools/BracketUNDEFINED\">15.6.2.2534 [UNDEFINED]</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\n</p><h3 id=\"subsection.C.8.17\">C.8.17 String word sets</h3>\nThe following words have been added to the <strong><a href=\"wordlist/string-ext\">17.6.2 String extension words</a></strong>:\n<p>\n</p><div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"string/REPLACES\">17.6.2.2141 REPLACES</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"string/SUBSTITUTE\">17.6.2.2255 SUBSTITUTE</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"string/UNESCAPE\">17.6.2.2375 UNESCAPE</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\n</p><h3 id=\"subsection.C.8.18\">C.8.18 Extended-Character word sets</h3>\nThe Extended Character word set was introduced by Forth-2012.\n<p>\nThe following words make up <strong><a href=\"xchar#wordlist:xchar\">18 The optional Extended-Character word set</a></strong>:\n</p><p>\n</p><div class=\"minipage\" style=\"width: 12.5em\">\n\n  <a href=\"xchar/X-SIZE\">18.6.1.2486.50 X-SIZE</a> <br>\n  <a href=\"xchar/XCStorePlus\">18.6.1.2487.10 XC!+</a> <br>\n  <a href=\"xchar/XCStorePlusq\">18.6.1.2487.15 XC!+?</a> <br>\n  <a href=\"xchar/XCComma\">18.6.1.2487.20 XC,</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 12.5em\">\n\n  <a href=\"xchar/XC-SIZE\">18.6.1.2487.25 XC-SIZE</a> <br>\n  <a href=\"xchar/XCFetchPlus\">18.6.1.2487.35 XC@+</a> <br>\n  <a href=\"xchar/XCHARPlus\">18.6.1.2487.40 XCHAR+</a> <br>\n  <a href=\"xchar/XEMIT\">18.6.1.2488.10 XEMIT</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 20em\">\n\n  <a href=\"xchar/XKEY\">18.6.1.2488.30 XKEY</a> <br>\n  <a href=\"xchar/XKEYq\">18.6.1.2488.35 XKEY?</a> <br>\n  <a href=\"xchar/PlusXDivSTRING\">18.6.2.0145 +X/STRING</a> <br>\n  <a href=\"xchar/MinusTRAILING-GARBAGE\">18.6.2.0175 -TRAILING-GARBAGE</a>\n  \n  </div>\n<br class=\"clear\">\n<p>\nThe following words make up <strong><a href=\"wordlist/xchar-ext\">18.6.2 Extended-Character extension words</a></strong>:\n</p><p>\n</p><div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"xchar/CHAR\">18.6.2.0895 CHAR</a> <br>\n  <a href=\"xchar/EKEYtoXCHAR\">18.6.2.1306.60 EKEY&gt;XCHAR</a> <br>\n  <a href=\"xchar/PARSE\">18.6.2.2008 PARSE</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"xchar/X-WIDTH\">18.6.2.2486.70 X-WIDTH</a> <br>\n  <a href=\"xchar/XC-WIDTH\">18.6.2.2487.30 XC-WIDTH</a> <br>\n  <a href=\"xchar/XCHARMinus\">18.6.2.2487.45 XCHAR-</a>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  <a href=\"xchar/XHOLD\">18.6.2.2488.20 XHOLD</a> <br>\n  <a href=\"xchar/XSTRINGMinus\">18.6.2.2495 X\\STRING-</a> <br>\n  <a href=\"xchar/BracketCHAR\">18.6.2.2520 [CHAR]</a>\n  \n  </div>\n<br class=\"clear\">\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Compatibility analysis</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\" class=\"current\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">FIG Forth (circa 1978)</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.C.1\">FIG Forth (circa 1978)</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.2\">Forth 79</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.3\">Forth 83</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.4\">ANS Forth (1994)</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.5\">ISO Forth (1997)</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.6\">Approach of this standard</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.7\">Differences from Forth 94</a></li>\n        <li role=\"menuitem\"><a href=\"#section.C.8\">Additional words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "doc": {
            "basename": "doc",
            "name": "4 Documentation requirements",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.4\">4 Documentation requirements</h1>\n<a name=\"doc\"></a>\n<p>\nWhen it is impossible or infeasible for a system or program to\ndefine a particular behavior itself, it is permissible to state\nthat the behavior is unspecifiable and to explain the circumstances\nand reasons why this is so.\n</p><p>\n</p><h2 id=\"section.4.1\">4.1 System documentation</h2> <!-- 4.1 -->\n<a name=\"doc:system\"></a>\n<p>\n</p><h3 id=\"subsection.4.1.1\">4.1.1 Implementation-defined options</h3> <!-- 4.1.1 -->\nThe implementation-defined items in the following list represent\ncharacteristics and choices left to the discretion of the\nimplementor, provided that the requirements of this standard are\nmet. A system shall document the values for, or behaviors of, each\nitem.\n<p>\n</p><ul>\n<li> aligned address requirements <strong><a href=\"usage#usage:addr\">3.1.3.3 Addresses</a></strong>;\n</li>\n<li> behavior of <a href=\"core/EMIT\">6.1.1320 EMIT</a> for non-graphic characters;\n</li>\n<li> character editing of <a href=\"core/ACCEPT\">6.1.0695 ACCEPT</a>;\n</li>\n<li> character set (<strong><a href=\"usage#usage:char\">3.1.2 Character types</a></strong>,\n<a href=\"core/EMIT\">6.1.1320 EMIT</a>, <a href=\"core/KEY\">6.1.1750 KEY</a>);\n</li>\n<li> character-aligned address requirements\n(<strong><a href=\"usage#usage:addr\">3.1.3.3 Addresses</a></strong>);\n</li>\n<li> character-set-extensions matching characteristics\n(<strong><a href=\"usage#usage:find\">3.4.2 Finding definition names</a></strong>);\n</li>\n<li> conditions under which control characters match a space\ndelimiter (<strong><a href=\"usage#usage:delim\">3.4.1.1 Delimiters</a></strong>);\n</li>\n<li> format of the control-flow stack\n(<strong><a href=\"usage#usage:controlstack\">3.2.3.2 Control-flow stack</a></strong>);\n</li>\n<li> conversion of digits larger than thirty-five\n(<strong><a href=\"usage#usage:digits\">3.2.1.2 Digit conversion</a></strong>);\n</li>\n<li> display after input terminates in <a href=\"core/ACCEPT\">6.1.0695 ACCEPT</a>;\n</li>\n<li> exception abort sequence (as in <a href=\"core/ABORTq\">6.1.0680 ABORT\"</a>);\n</li>\n<li> input line terminator (<strong><a href=\"usage#usage:input\">3.2.4.1 User input device</a></strong>);\n</li>\n<li> maximum size of a counted string, in characters\n(<strong><a href=\"usage#usage:cstring\">3.1.3.4 Counted strings</a></strong>, <a href=\"core/WORD\">6.1.2450 WORD</a>);\n</li>\n<li> maximum size of a parsed string\n(<strong><a href=\"usage#usage:parsing\">3.4.1 Parsing</a></strong>);\n</li>\n<li> maximum size of a definition name, in characters\n(<strong><a href=\"usage#usage:names\">3.3.1.2 Definition names</a></strong>);\n</li>\n<li> maximum string length for\n<a href=\"core/ENVIRONMENTq\">6.1.1345 ENVIRONMENT?</a>, in characters;\n</li>\n<li> method of selecting <strong><a href=\"usage#usage:input\">3.2.4.1 User input device</a></strong>;\n</li>\n<li> method of selecting <strong><a href=\"usage#usage:output\">3.2.4.2 User output device</a></strong>;\n</li>\n<li> methods of dictionary compilation\n(<strong><a href=\"usage#usage:dict\">3.3 The Forth dictionary</a></strong>);\n</li>\n<li> number of bits in one address unit\n(<strong><a href=\"usage#usage:addr\">3.1.3.3 Addresses</a></strong>);\n</li>\n<li> number representation and arithmetic\n(<strong><a href=\"usage#usage:number\">3.2.1.1 Internal number representation</a></strong>);\n</li>\n<li> ranges for <em>n</em>, <em>+n</em>, <em>u</em>, <em>d</em>,\n<em>+d</em>, and <em>ud</em>\n(<strong><a href=\"usage#usage:cell\">3.1.3 Single-cell types</a></strong>,\n<strong><a href=\"usage#usage:2cell\">3.1.4 Cell-pair types</a></strong>);\n</li>\n<li> read-only data-space regions\n(<strong><a href=\"usage#usage:dataspace\">3.3.3 Data space</a></strong>);\n</li>\n<li> size of buffer at <a href=\"core/WORD\">6.1.2450 WORD</a>\n(<strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>);\n</li>\n<li> size of one cell in address units\n(<strong><a href=\"usage#usage:cell\">3.1.3 Single-cell types</a></strong>);\n</li>\n<li> size of one character in address units\n(<strong><a href=\"usage#usage:char\">3.1.2 Character types</a></strong>);\n</li>\n<li> size of the keyboard terminal input buffer\n(<strong><a href=\"usage#usage:inbuf\">3.3.3.5 Input buffers</a></strong>);\n</li>\n<li> size of the pictured numeric output string buffer \n(<strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>);\n</li>\n<li> size of the scratch area whose address is returned by\n<a href=\"core/PAD\">6.2.2000 PAD</a> <br>\n(<strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>);\n</li>\n<li> system case-sensitivity characteristics\n(<strong><a href=\"usage#usage:find\">3.4.2 Finding definition names</a></strong>);\n</li>\n<li> system prompt (<strong><a href=\"usage#usage:dict\">3.3 The Forth dictionary</a></strong>,\n<a href=\"core/QUIT\">6.1.2050 QUIT</a>);\n</li>\n<li> type of division rounding (<strong><a href=\"usage#usage:div\">3.2.2.1 Integer division</a></strong>,\n<a href=\"core/TimesDiv\">6.1.0100 */</a>, <a href=\"core/TimesDivMOD\">6.1.0110 */MOD</a>, <a href=\"core/Div\">6.1.0230 /</a>,\n<a href=\"core/DivMOD\">6.1.0240 /MOD</a>, <a href=\"core/MOD\">6.1.1890 MOD</a>);\n</li>\n<li> values of <a href=\"core/STATE\">6.1.2250 STATE</a> when true;\n</li>\n<li> values returned after arithmetic overflow\n(<strong><a href=\"usage#usage:intops\">3.2.2.2 Other integer operations</a></strong>);\n</li>\n<li> whether the current definition can be found after\n<a href=\"core/DOES\">6.1.1250 DOES&gt;</a> (<a href=\"core/Colon\">6.1.0450 :</a>).\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.4.1.2\">4.1.2 Ambiguous conditions</h3> <!-- 4.1.2 =========================== -->\n<a name=\"doc:ambiguous\"></a>\n<p>\nA system shall document the system action taken upon each of the\ngeneral or specific ambiguous conditions identified in this\nstandard. See <strong><a href=\"usage#usage:ambiguous\">3.4.4 Possible actions on an ambiguous condition</a></strong>.\n</p><p>\nThe following general ambiguous conditions could occur because of a\ncombination of factors:\n</p><p>\n</p><ul>\n<li> a <em>name</em> is neither a valid definition name nor a valid\nnumber during text interpretation (<strong><a href=\"usage#usage:command\">3.4 The Forth text interpreter</a></strong>);\n</li>\n<li> a definition name exceeded the maximum length allowed\n(<strong><a href=\"usage#usage:names\">3.3.1.2 Definition names</a></strong>);\n</li>\n<li> addressing a region not listed in <strong><a href=\"usage#usage:dataspace\">3.3.3 Data space</a></strong>;\n</li>\n<li> argument type incompatible with specified input parameter,\ne.g., passing a <em>flag</em> to a word expecting an <em>n</em>\n(<strong><a href=\"usage#usage:data\">3.1 Data types</a></strong>);\n</li>\n<li> attempting to obtain the execution token, (e.g., with\n<a href=\"core/Tick\">6.1.0070 '</a>, <a href=\"core/FIND\">6.1.1550 FIND</a>, etc. of a definition\nwith undefined interpretation semantics;\n</li>\n<li> dividing by zero\n(<a href=\"core/TimesDiv\">6.1.0100 */</a>,\n<a href=\"core/TimesDivMOD\">6.1.0110 */MOD</a>,\n<a href=\"core/Div\">6.1.0230 /</a>,\n<a href=\"core/DivMOD\">6.1.0240 /MOD</a>,\n<a href=\"core/FMDivMOD\">6.1.1561 FM/MOD</a>,\n<a href=\"core/MOD\">6.1.1890 MOD</a>,\n<a href=\"core/SMDivREM\">6.1.2214 SM/REM</a>,\n<a href=\"core/UMDivMOD\">6.1.2370 UM/MOD</a>,\n<a href=\"double/MTimesDiv\">8.6.1.1820 M*/</a>);\n</li>\n<li> insufficient data-stack space or return-stack space (stack\noverflow);\n</li>\n<li> insufficient space for loop-control parameters;\n</li>\n<li> insufficient space in the dictionary;\n</li>\n<li> interpreting a word with undefined interpretation semantics;\n</li>\n<li> modifying the contents of the input buffer or a string literal\n(<strong><a href=\"usage#usage:\" literal\"=\"\">3.3.3.4 Text-literal regions</a></strong>,\n<strong><a href=\"usage#usage:inbuf\">3.3.3.5 Input buffers</a></strong>);\n</li>\n<li> overflow of a pictured numeric output string;\n</li>\n<li> parsed string overflow;\n</li>\n<li> producing a result out of range, e.g., multiplication\n(using <a href=\"core/Times\">*</a>) results in a value too big to be represented by\na single-cell integer\n(<a href=\"core/Times\">6.1.0090 *</a>,\n<a href=\"core/TimesDiv\">6.1.0100 */</a>,\n<a href=\"core/TimesDivMOD\">6.1.0110 */MOD</a>,\n<a href=\"core/toNUMBER\">6.1.0570 &gt;NUMBER</a>,\n<a href=\"core/FMDivMOD\">6.1.1561 FM/MOD</a>,\n<a href=\"core/SMDivREM\">6.1.2214 SM/REM</a>,\n<a href=\"core/UMDivMOD\">6.1.2370 UM/MOD</a>,\n<a href=\"double/MTimesDiv\">8.6.1.1820 M*/</a>);\n</li>\n<li> reading from an empty data stack or return stack\n(stack underflow);\n</li>\n<li> unexpected end of input buffer, resulting in an attempt to\nuse a zero-length string as a <em>name</em>.\n</li>\n</ul>\n<p>\nThe following specific ambiguous conditions are noted in the\nglossary entries of the relevant words:\n</p><p>\n</p><ul>\n<li> <a href=\"core/toIN\">&gt;IN</a> greater than size of input buffer\n(<strong><a href=\"usage#usage:parsing\">3.4.1 Parsing</a></strong>);\n</li>\n<li> <a href=\"core/RECURSE\">6.1.2120 RECURSE</a> appears after\n<a href=\"core/DOES\">6.1.1250 DOES&gt;</a>;\n</li>\n<li> argument input source different than current input source for\n<a href=\"core/RESTORE-INPUT\">6.2.2148 RESTORE-INPUT</a>;\n</li>\n<li> data space containing definitions is de-allocated\n(<strong><a href=\"usage#usage:contiguous\">3.3.3.2 Contiguous regions</a></strong>);\n</li>\n<li> data space read/write with incorrect alignment\n(<strong><a href=\"usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>);\n</li>\n<li> data-space pointer not properly aligned\n(<a href=\"core/Comma\">6.1.0150 ,</a>, <a href=\"core/CComma\">6.1.0860 C,</a>);\n</li>\n<li> less than <em>u</em>+2 stack items (<a href=\"core/PICK\">6.2.2030 PICK</a>,\n<a href=\"core/ROLL\">6.2.2150 ROLL</a>);\n</li>\n<li> loop-control parameters not available\n(<a href=\"core/PlusLOOP\">6.1.0140 +LOOP</a>,\n<a href=\"core/I\">6.1.1680 I</a>,\n<a href=\"core/J\">6.1.1730 J</a>,\n<a href=\"core/LEAVE\">6.1.1760 LEAVE</a>,\n<a href=\"core/LOOP\">6.1.1800 LOOP</a>,\n<a href=\"core/UNLOOP\">6.1.2380 UNLOOP</a>);\n</li>\n<li> most recent definition does not have a <em>name</em>\n(<a href=\"core/IMMEDIATE\">6.1.1710 IMMEDIATE</a>);\n</li>\n<li> <a href=\"core/TO\">6.2.2295 TO</a> not followed directly by a <em>name</em>\ndefined by a word with \"<a href=\"core/TO\">TO</a> <em>name</em> runtime\"\nsemantics (<a href=\"core/VALUE\">6.2.2405 VALUE</a> and\n<a href=\"locals/LOCAL\">13.6.1.0086 (LOCAL)</a>);\n</li>\n<li> <em>name</em> not found <a href=\"core/Tick\">6.1.0070 '</a>,\n<a href=\"core/POSTPONE\">6.1.2033 POSTPONE</a>, <a href=\"core/BracketTick\">6.1.2510 [']</a>,\n<a href=\"core/BracketCOMPILE\">6.2.2530 [COMPILE]</a>);\n</li>\n<li> parameters are not of the same type <a href=\"core/DO\">6.1.1240 DO</a>,\n<a href=\"core/qDO\">6.2.0620 ?DO</a>, <a href=\"core/WITHIN\">6.2.2440 WITHIN</a>);\n</li>\n<li> <a href=\"core/POSTPONE\">6.1.2033 POSTPONE</a>,\n<a href=\"core/BracketCOMPILE\">6.2.2530 [COMPILE]</a>,\n<a href=\"core/Tick\">6.1.0070 '</a> or\n<a href=\"core/BracketTick\">6.1.2510 [']</a> applied to <a href=\"core/TO\">6.2.2295 TO</a>;\n</li>\n<li> string longer than a counted string returned by\n<a href=\"core/WORD\">6.1.2450 WORD</a>;\n</li>\n<li> <em>u</em> greater than or equal to the number of bits in a cell\n(<a href=\"core/LSHIFT\">6.1.1805 LSHIFT</a>, <a href=\"core/RSHIFT\">6.1.2162 RSHIFT</a>);\n</li>\n<li> word not defined via <a href=\"core/CREATE\">6.1.1000 CREATE</a>\n(<a href=\"core/toBODY\">6.1.0550 &gt;BODY</a>, <a href=\"core/DOES\">6.1.1250 DOES&gt;</a>);\n</li>\n<li> words improperly used outside\n<a href=\"core/num-start\">6.1.0490 &lt;#</a> and <a href=\"core/num-end\">6.1.0040 #&gt;</a>\n(<a href=\"core/num\">6.1.0030 #</a>, <a href=\"core/numS\">6.1.0050 #S</a>,\n<a href=\"core/HOLD\">6.1.1670 HOLD</a>,\n<a href=\"core/HOLDS\">6.2.1675 HOLDS</a>,\n<a href=\"core/SIGN\">6.1.2210 SIGN</a>);\n</li>\n</ul>\n<p>\n</p><ul>\n<li> access to a deferred word, a word defined by <a href=\"core/DEFER\">6.2.1173 DEFER</a>,\nwhich has yet to be assigned to an <em>xt</em>;\n</li>\n<li> access to a deferred word, a word defined by <a href=\"core/DEFER\">6.2.1173 DEFER</a>,\nwhich was not defined by <a href=\"core/DEFER\">6.2.1173 DEFER</a>;\n</li>\n<li> <a href=\"core/POSTPONE\">6.1.2033 POSTPONE</a>, <a href=\"core/BracketCOMPILE\">6.2.2530 [COMPILE]</a>,\n<a href=\"core/BracketTick\">6.1.2510 [']</a> or <a href=\"core/Tick\">6.1.0070 '</a> applied to <a href=\"core/ACTION-OF\">6.2.0698 ACTION-OF</a>\nor <a href=\"core/IS\">6.2.1725 IS</a>;\n</li>\n</ul>\n<p>\n</p><ul>\n<li> \\x is not followed by two hexadecimal characters (<a href=\"core/Seq\">6.2.2266 S\\\"</a>);\n</li>\n<li> a \\ is placed before any character, other than those defined in\n<a href=\"core/Seq\">6.2.2266 S\\\"</a>.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.4.1.3\">4.1.3 Other system documentation</h3> <!-- 4.1.3 -->\nA system shall provide the following information:\n<p>\n</p><ul>\n<li> list of non-standard words using <a href=\"core/PAD\">6.2.2000 PAD</a>\n(<strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>);\n</li>\n<li> operator's terminal facilities available;\n</li>\n<li> program data space available, in address units;\n</li>\n<li> return stack space available, in cells;\n</li>\n<li> stack space available, in cells;\n</li>\n<li> system dictionary space required, in address units.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.4.2\">4.2 Program documentation</h2> <!-- 4.2 =============================== -->\n<a name=\"doc:program\"></a>\n<p>\n</p><h3 id=\"subsection.4.2.1\">4.2.1 Environmental dependencies</h3> <!-- 4.2.1 -->\n<a name=\"doc:env\"></a>\n<p>\nA program shall document the following environmental dependencies,\nwhere they apply, and should document other known environmental\ndependencies:\n</p><p>\n</p><ul>\n<li> considering the pictured numeric output string buffer a fixed\narea with unchanging access parameters\n(<strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>);\n</li>\n<li> depending on the presence or absence of non-graphic characters\nin a received string (<a href=\"core/ACCEPT\">6.1.0695 ACCEPT</a>);\n</li>\n<li> relying on a particular rounding direction\n(<strong><a href=\"usage#usage:div\">3.2.2.1 Integer division</a></strong>);\n</li>\n<li> requiring a particular number representation and arithmetic (<strong><a href=\"usage#usage:number\">3.2.1.1 Internal number representation</a></strong>);\n</li>\n<li> requiring non-standard words or techniques\n(<strong><a href=\"usage#usage\">3 Usage requirements</a></strong>);\n</li>\n<li> requiring the ability to send or receive control characters\n(<strong><a href=\"usage#usage:control\">3.1.2.2 Control characters</a></strong>,\n<a href=\"core/KEY\">6.1.1750 KEY</a>);\n</li>\n<li> using control characters to perform specific functions\n<a href=\"core/EMIT\">6.1.1320 EMIT</a>, <a href=\"core/TYPE\">6.1.2310 TYPE</a>);\n</li>\n<li> using flags as arithmetic operands\n(<strong><a href=\"usage#usage:flags\">3.1.3.1 Flags</a></strong>);\n</li>\n<li> using lower case for standard definition names or depending\non the case sensitivity of a system\n(<strong><a href=\"usage#usage:names\">3.3.1.2 Definition names</a></strong>);\n</li>\n<li> using definition names of more than 31 characters in length\n(<strong><a href=\"usage#usage:names\">3.3.1.2 Definition names</a></strong>);\n</li>\n<li> using the graphic character with a value of hex 24\n(<strong><a href=\"usage#usage:ASCII\">3.1.2.1 Graphic characters</a></strong>).\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.4.2.2\">4.2.2 Other program documentation</h3> <!-- 4.2.2 -->\nA program shall also document:\n<p>\n</p><ul>\n<li> minimum operator's terminal facilities required;\n</li>\n<li> whether a Standard System exists after the program is loaded.\n</li>\n</ul>\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Documentation requirements</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\" class=\"current\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">System documentation</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.4.1\">System documentation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.4.2\">Program documentation</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "double": {
            "basename": "double",
            "name": "8 The optional Double-Number word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.8\">8 The optional Double-Number word set</h1> <!-- 8 -->\n<h2 id=\"section.8.1\">8.1 Introduction</h2> <!-- 8.1 -->\nSixteen-bit Forth systems often use double-length numbers. However,\nmany Forths on small embedded systems do not, and many users of Forth\non systems with a cell size of 32 bits or more find that the use of\ndouble-length numbers is much diminished. Therefore, the words that\nmanipulate double-length entities have been placed in this optional\nword set.\n<p>\n</p><h2 id=\"section.8.2\">8.2 Additional terms and notation</h2> <!-- 8.2 -->\nNone.\n<p>\n</p><h2 id=\"section.8.3\">8.3 Additional usage requirements</h2> <!-- 8.3 -->\n<h3 id=\"subsection.8.3.1\">8.3.1 Text interpreter input number conversion</h3> <!-- 8.3.2 -->\nWhen the text interpreter processes a number, except a &lt;<em>cnum</em>&gt;,\nthat is immediately followed by a decimal point and is not found\nas a definition name, the text interpreter shall convert it to a\ndouble-cell number.\n<p>\nFor example, entering <a href=\"core/DECIMAL\">DECIMAL</a> <code>1234</code> leaves the\nsingle-cell number <code>1234</code> on the stack, and entering\n<a href=\"core/DECIMAL\">DECIMAL</a> <code>1234.</code> leaves the double-cell number\n<code>1234</code> <code>0</code> on the stack.\n</p><p>\nSee: <strong><a href=\"usage#usage:numbers\">3.4.1.3 Text interpreter input number conversion</a></strong>.\n</p><p>\n</p><h2 id=\"section.8.4\">8.4 Additional documentation requirements</h2> <!-- 8.4 -->\n<h3 id=\"subsection.8.4.1\">8.4.1 System documentation</h3> <!-- 8.4.1 -->\n<h4 id=\"subsubsection.8.4.1.1\">8.4.1.1 Implementation-defined options</h4> <!-- 8.4.1.1 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.8.4.1.2\">8.4.1.2 Ambiguous conditions</h4> <!-- 8.4.1.2 -->\n<ul>\n<li> <em>d</em> outside range of <em>n</em> in <a href=\"double/DtoS\">8.6.1.1140 D&gt;S</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.8.4.1.3\">8.4.1.3 Other system documentation</h4> <!-- 8.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.8.4.2\">8.4.2 Program documentation</h3> <!-- 8.4.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.8.5\">8.5 Compliance and labeling</h2> <!-- 8.5 -->\n<h3 id=\"subsection.8.5.1\">8.5.1 Forth-2012 systems</h3> <!-- 8.5.1 -->\nThe phrase \"Providing the Double-Number word set\" shall be\nappended to the label of any Standard System that provides all\nof the Double-Number word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Double-Number\nExtensions word set\" shall be appended to the label of any\nStandard System that provides portions of the Double-Number\nExtensions word set.\n</p><p>\nThe phrase \"Providing the Double-Number Extensions word set\"\nshall be appended to the label of any Standard System that\nprovides all of the Double-Number and Double-Number Extensions\nword sets.\n</p><p>\n</p><h3 id=\"subsection.8.5.2\">8.5.2 Forth-2012 programs</h3> <!-- 8.5.2 -->\nThe phrase \"Requiring the Double-Number word set\" shall be\nappended to the label of Standard Programs that require the\nsystem to provide the Double-Number word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Double-Number\nExtensions word set\" shall be appended to the label of Standard\nPrograms that require the system to provide portions of the\nDouble-Number Extensions word set.\n</p><p>\nThe phrase \"Requiring the Double-Number Extensions word set\"\nshall be appended to the label of Standard Programs that require\nthe system to provide all of the Double-Number and Double-Number\nExtensions word sets.\n</p><p>\n</p><h2 id=\"section.8.6\">8.6 Glossary</h2> <!-- 8.6 -->\n<h3 id=\"subsection.8.6.1\">8.6.1 Double-Number words</h3> <!-- 8.6.1 -->\n<ul>\n<li><a href=\"double/TwoCONSTANT\">8.6.1.0360 2CONSTANT</a></li>\n<li><a href=\"double/TwoLITERAL\">8.6.1.0390 2LITERAL</a></li>\n<li><a href=\"double/TwoVARIABLE\">8.6.1.0440 2VARIABLE</a></li>\n<li><a href=\"double/DPlus\">8.6.1.1040 D+</a></li>\n<li><a href=\"double/DMinus\">8.6.1.1050 D-</a></li>\n<li><a href=\"double/Dd\">8.6.1.1060 D.</a></li>\n<li><a href=\"double/DDotR\">8.6.1.1070 D.R</a></li>\n<li><a href=\"double/DZeroless\">8.6.1.1075 D0&lt;</a></li>\n<li><a href=\"double/DZeroEqual\">8.6.1.1080 D0=</a></li>\n<li><a href=\"double/DTwoTimes\">8.6.1.1090 D2*</a></li>\n<li><a href=\"double/DTwoDiv\">8.6.1.1100 D2/</a></li>\n<li><a href=\"double/Dless\">8.6.1.1110 D&lt;</a></li>\n<li><a href=\"double/DEqual\">8.6.1.1120 D=</a></li>\n<li><a href=\"double/DtoS\">8.6.1.1140 D&gt;S</a></li>\n<li><a href=\"double/DABS\">8.6.1.1160 DABS</a></li>\n<li><a href=\"double/DMAX\">8.6.1.1210 DMAX</a></li>\n<li><a href=\"double/DMIN\">8.6.1.1220 DMIN</a></li>\n<li><a href=\"double/DNEGATE\">8.6.1.1230 DNEGATE</a></li>\n<li><a href=\"double/MTimesDiv\">8.6.1.1820 M*/</a></li>\n<li><a href=\"double/MPlus\">8.6.1.1830 M+</a></li>\n\n</ul>\n<h3 id=\"subsection.8.6.2\">8.6.2 Double-Number extension words</h3> <!-- 8.6.2 -->\n<ul>\n<li><a href=\"double/TwoROT\">8.6.2.0420 2ROT</a></li>\n<li><a href=\"double/TwoVALUE\">8.6.2.0435 2VALUE</a></li>\n\n<li><a href=\"double/DUless\">8.6.2.1270 DU&lt;</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Double-Number word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\" class=\"current\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.8.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.8.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.8.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.8.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.8.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.8.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">2CONSTANT</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"double/TwoCONSTANT\">2CONSTANT</a></li>\n        <li role=\"menuitem\"><a href=\"double/TwoLITERAL\">2LITERAL</a></li>\n        <li role=\"menuitem\"><a href=\"double/TwoVARIABLE\">2VARIABLE</a></li>\n        <li role=\"menuitem\"><a href=\"double/DPlus\">D+</a></li>\n        <li role=\"menuitem\"><a href=\"double/DMinus\">D-</a></li>\n        <li role=\"menuitem\"><a href=\"double/Dd\">D.</a></li>\n        <li role=\"menuitem\"><a href=\"double/DDotR\">D.R</a></li>\n        <li role=\"menuitem\"><a href=\"double/DZeroless\">D0&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"double/DZeroEqual\">D0=</a></li>\n        <li role=\"menuitem\"><a href=\"double/DTwoTimes\">D2*</a></li>\n        <li role=\"menuitem\"><a href=\"double/DTwoDiv\">D2/</a></li>\n        <li role=\"menuitem\"><a href=\"double/Dless\">D&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"double/DEqual\">D=</a></li>\n        <li role=\"menuitem\"><a href=\"double/DtoS\">D&gt;S</a></li>\n        <li role=\"menuitem\"><a href=\"double/DABS\">DABS</a></li>\n        <li role=\"menuitem\"><a href=\"double/DMAX\">DMAX</a></li>\n        <li role=\"menuitem\"><a href=\"double/DMIN\">DMIN</a></li>\n        <li role=\"menuitem\"><a href=\"double/DNEGATE\">DNEGATE</a></li>\n        <li role=\"menuitem\"><a href=\"double/MTimesDiv\">M*/</a></li>\n        <li role=\"menuitem\"><a href=\"double/MPlus\">M+</a></li>\n        <li role=\"menuitem\"><a href=\"double/TwoROT\">2ROT</a></li>\n        <li role=\"menuitem\"><a href=\"double/TwoVALUE\">2VALUE</a></li>\n        <li role=\"menuitem\"><a href=\"double/DUless\">DU&lt;</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "exception": {
            "basename": "exception",
            "name": "9 The optional Exception word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.9\">9 The optional Exception word set</h1> <!-- 9 -->\n<h2 id=\"section.9.1\">9.1 Introduction</h2> <!-- 9.1 -->\n<h2 id=\"section.9.2\">9.2 Additional terms and notation</h2> <!-- 9.2 -->\nNone.\n<p>\n</p><h2 id=\"section.9.3\">9.3 Additional usage requirements</h2> <!-- 9.3 -->\n<h3 id=\"subsection.9.3.1\">9.3.1 THROW values</h3> <!-- 9.3.1 -->\n<a name=\"exception:throw\"></a>\n<p>\nThe <a href=\"exception/THROW\">THROW</a> values {-255...-1} shall be used only as\nassigned by this standard. The values {-4095...-256}\nshall be used only as assigned by a system.\n</p><p>\nPrograms shall not define values for use with <a href=\"exception/THROW\">THROW</a> in the\nrange {-4095...-1}.\n</p><p>\n</p><h3 id=\"subsection.9.3.2\">9.3.2 Exception frame</h3> <!-- 9.3.2 -->\nAn exception frame is the implementation-dependent set of\ninformation recording the current execution state necessary for\nthe proper functioning of <a href=\"exception/CATCH\">CATCH</a> and <a href=\"exception/THROW\">THROW</a>. It often\nincludes the depths of the data stack and return stack.\n<p>\n</p><h3 id=\"subsection.9.3.3\">9.3.3 Exception stack</h3> <!-- 9.3.3 -->\nA stack used for the nesting of exception frames by <a href=\"exception/CATCH\">CATCH</a>\nand <a href=\"exception/THROW\">THROW</a>. It may be, but need not be, implemented using\nthe return stack.\n<p>\n</p><h3 id=\"subsection.9.3.4\">9.3.4 Possible actions on an ambiguous condition</h3> <!-- 9.3.5 -->\n<a name=\"exception:ambiguous\"></a>\n<p>\nA system choosing to execute <a href=\"exception/THROW\">THROW</a> when detecting one of the\nambiguous conditions listed in table <a href=\"exception#table:throw\">9.1</a> shall use the\nthrow code listed there.\n</p><p>\nSee: <strong><a href=\"usage#usage:ambiguous\">3.4.4 Possible actions on an ambiguous condition</a></strong>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 9.1: <a href=\"exception/THROW\">THROW</a> code assignments</div>\n  <a name=\"table:throw\"></a>\n  \n  \n  \n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 20.5em\">Code Reserved for </td><td style=\"width: 20.5em\">Code Reserved for </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"> </td></tr>\n  <tr valign=\"top\"><td style=\"width: 20.5em\">  <div class=\"minipage\" style=\"width: 20.5em\">\n\n    <table>\n    <tbody><tr><td>-1</td><td><a href=\"exception/ABORT\">ABORT</a></td></tr>\n        <tr><td>-2</td><td><a href=\"exception/ABORTq\">ABORT\"</a></td></tr>\n        <tr><td>-3</td><td>stack overflow</td></tr>\n        <tr><td>-4</td><td>stack underflow</td></tr>\n        <tr><td>-5</td><td>return stack overflow</td></tr>\n        <tr><td>-6</td><td>return stack underflow</td></tr>\n        <tr><td>-7</td><td>do-loops nested too deeply during execution</td></tr>\n        <tr><td>-8</td><td>dictionary overflow</td></tr>\n        <tr><td>-9</td><td>invalid memory address</td></tr>\n        <tr><td>-10</td><td>division by zero</td></tr>\n        <tr><td>-11</td><td>result out of range</td></tr>\n        <tr><td>-12</td><td>argument type mismatch</td></tr>\n        <tr><td>-13</td><td>undefined word</td></tr>\n        <tr><td>-14</td><td>interpreting a compile-only word</td></tr>\n        <tr><td>-15</td><td>invalid <a href=\"tools/FORGET\">FORGET</a></td></tr>\n        <tr><td>-16</td><td>attempt to use zero-length string as a name</td></tr>\n        <tr><td>-17</td><td>pictured numeric output string overflow</td></tr>\n        <tr><td>-18</td><td>parsed string overflow</td></tr>\n        <tr><td>-19</td><td>definition name too long</td></tr>\n        <tr><td>-20</td><td>write to a read-only location</td></tr>\n        <tr><td>-21</td><td>unsupported operation</td></tr>\n        <tr><td></td><td>(e.g., <a href=\"facility/AT-XY\">AT-XY</a> on a too-dumb terminal)</td></tr>\n        <tr><td>-22</td><td>control structure mismatch</td></tr>\n        <tr><td>-23</td><td>address alignment exception</td></tr>\n        <tr><td>-24</td><td>invalid numeric argument</td></tr>\n        <tr><td>-25</td><td>return stack imbalance</td></tr>\n        <tr><td>-26</td><td>loop parameters unavailable</td></tr>\n        <tr><td>-27</td><td>invalid recursion</td></tr>\n        <tr><td>-28</td><td>user interrupt</td></tr>\n        <tr><td>-29</td><td>compiler nesting</td></tr>\n        <tr><td>-30</td><td>obsolescent feature</td></tr>\n        <tr><td>-31</td><td><a href=\"core/toBODY\">&gt;BODY</a> used on non-<a href=\"core/CREATE\">CREATE</a>d definition</td></tr>\n        <tr><td>-32</td><td>invalid <em>name</em> argument (e.g., <a href=\"core/TO\">TO</a> <em>name</em>)</td></tr>\n        <tr><td>-33</td><td>block read exception</td></tr>\n        <tr><td>-34</td><td>block write exception</td></tr>\n        <tr><td>-35</td><td>invalid block number</td></tr>\n        <tr><td>-36</td><td>invalid file position</td></tr>\n        <tr><td>-37</td><td>file I/O exception</td></tr>\n        <tr><td>-38</td><td>non-existent file</td></tr>\n        <tr><td>-39</td><td>unexpected end of file</td></tr>\n        </tbody></table>\n  \n    </div> </td><td style=\"width: 20.5em\">  <div class=\"minipage\" style=\"width: 20.5em\">\n\n    <table>\n    <tbody><tr><td>-40</td><td>invalid <a href=\"core/BASE\">BASE</a> for floating point conversion</td></tr>\n        <tr><td>-41</td><td>loss of precision</td></tr>\n        <tr><td>-42</td><td>floating-point divide by zero</td></tr>\n        <tr><td>-43</td><td>floating-point result out of range</td></tr>\n        <tr><td>-44</td><td>floating-point stack overflow</td></tr>\n        <tr><td>-45</td><td>floating-point stack underflow</td></tr>\n        <tr><td>-46</td><td>floating-point invalid argument</td></tr>\n        <tr><td>-47</td><td>compilation word list deleted</td></tr>\n        <tr><td>-48</td><td>invalid <a href=\"core/POSTPONE\">POSTPONE</a></td></tr>\n        <tr><td>-49</td><td>search-order overflow</td></tr>\n        <tr><td>-50</td><td>search-order underflow</td></tr>\n        <tr><td>-51</td><td>compilation word list changed</td></tr>\n        <tr><td>-52</td><td>control-flow stack overflow</td></tr>\n        <tr><td>-53</td><td>exception stack overflow</td></tr>\n        <tr><td>-54</td><td>floating-point underflow</td></tr>\n        <tr><td>-55</td><td>floating-point unidentified fault</td></tr>\n        <tr><td>-56</td><td><a href=\"core/QUIT\">QUIT</a></td></tr>\n        <tr><td>-57</td><td>exception in sending or receiving a character</td></tr>\n        <tr><td>-58</td><td><a href=\"tools/BracketIF\">[IF]</a>, <a href=\"tools/BracketELSE\">[ELSE]</a>, or <a href=\"tools/BracketTHEN\">[THEN]</a> exception</td></tr>\n        <tr><td>-59</td><td><a href=\"memory/ALLOCATE\">ALLOCATE</a></td></tr>\n        <tr><td>-60</td><td><a href=\"memory/FREE\">FREE</a></td></tr>\n        <tr><td>-61</td><td><a href=\"memory/RESIZE\">RESIZE</a></td></tr>\n        <tr><td>-62</td><td><a href=\"file/CLOSE-FILE\">CLOSE-FILE</a></td></tr>\n        <tr><td>-63</td><td><a href=\"file/CREATE-FILE\">CREATE-FILE</a></td></tr>\n        <tr><td>-64</td><td><a href=\"file/DELETE-FILE\">DELETE-FILE</a></td></tr>\n        <tr><td>-65</td><td><a href=\"file/FILE-POSITION\">FILE-POSITION</a></td></tr>\n        <tr><td>-66</td><td><a href=\"file/FILE-SIZE\">FILE-SIZE</a></td></tr>\n        <tr><td>-67</td><td><a href=\"file/FILE-STATUS\">FILE-STATUS</a></td></tr>\n        <tr><td>-68</td><td><a href=\"file/FLUSH-FILE\">FLUSH-FILE</a></td></tr>\n        <tr><td>-69</td><td><a href=\"file/OPEN-FILE\">OPEN-FILE</a></td></tr>\n        <tr><td>-70</td><td><a href=\"file/READ-FILE\">READ-FILE</a></td></tr>\n        <tr><td>-71</td><td><a href=\"file/READ-LINE\">READ-LINE</a></td></tr>\n        <tr><td>-72</td><td><a href=\"file/RENAME-FILE\">RENAME-FILE</a></td></tr>\n        <tr><td>-73</td><td><a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a></td></tr>\n        <tr><td>-74</td><td><a href=\"file/RESIZE-FILE\">RESIZE-FILE</a></td></tr>\n        <tr><td>-75</td><td><a href=\"file/WRITE-FILE\">WRITE-FILE</a></td></tr>\n        <tr><td>-76</td><td><a href=\"file/WRITE-LINE\">WRITE-LINE</a></td></tr>\n        <tr><td>-77</td><td>Malformed xchar</td></tr>\n        <tr><td>-78</td><td><a href=\"string/SUBSTITUTE\">SUBSTITUTE</a></td></tr>\n        <tr><td>-79</td><td><a href=\"string/REPLACES\">REPLACES</a></td></tr>\n        </tbody></table>\n  \n    </div>\n  </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 20.5em\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<h3 id=\"subsection.9.3.5\">9.3.5 Exception handling</h3> <!-- 9.3.6 -->\nThere are several methods of coupling <a href=\"exception/CATCH\">CATCH</a> and <a href=\"exception/THROW\">THROW</a>\nto other procedural nestings. The usual nestings are the execution\nof definitions, use of the return stack, use of loops,\ninstantiation of locals and nesting of input sources (i.e., with\n<a href=\"block/LOAD\">LOAD</a>, <a href=\"core/EVALUATE\">EVALUATE</a>, or\n<a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a>).\n<p>\nWhen a <a href=\"exception/THROW\">THROW</a> returns control to a <a href=\"exception/CATCH\">CATCH</a>, the system\nshall un-nest not only definitions, but also, if present, locals\nand input source specifications, to return the system to its proper\nstate for continued execution past the <a href=\"exception/CATCH\">CATCH</a>.\n</p><p>\n</p><h2 id=\"section.9.4\">9.4 Additional documentation requirements</h2> <!-- 9.4 -->\n<h3 id=\"subsection.9.4.1\">9.4.1 System documentation</h3> <!-- 9.4.1 -->\n<h4 id=\"subsubsection.9.4.1.1\">9.4.1.1 Implementation-defined options</h4> <!-- 9.4.1.1 -->\n<ul>\n<li> Values used in the system by <a href=\"exception/CATCH\">9.6.1.0875 CATCH</a> and\n<a href=\"exception/THROW\">9.6.1.2275 THROW</a>\n(<strong><a href=\"exception#exception:throw\">9.3.1 THROW values</a></strong>,\n<strong><a href=\"exception#exception:ambiguous\">9.3.4 Possible actions on an ambiguous condition</a></strong>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.9.4.1.2\">9.4.1.2 Ambiguous conditions</h4> <!-- 9.4.1.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.9.4.1.3\">9.4.1.3 Other system documentation</h4> <!-- 9.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.9.4.2\">9.4.2 Program documentation</h3> <!-- 9.4.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.9.5\">9.5 Compliance and labeling</h2> <!-- 9.5 -->\n<h3 id=\"subsection.9.5.1\">9.5.1 Forth-2012 systems</h3> <!-- 9.5.1 -->\nThe phrase \"Providing the Exception word set\" shall be appended to\nthe label of any Standard System that provides all of the Exception\nword set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Exception Extensions\nword set\" shall be appended to the label of any Standard System\nthat provides portions of the Exception Extensions word set.\n</p><p>\nThe phrase \"Providing the Exception Extensions word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Exception and Exception Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.9.5.2\">9.5.2 Forth-2012 programs</h3> <!-- 9.5.2 -->\nThe phrase \"Requiring the Exception word set\" shall be appended\nto the label of Standard Programs that require the system to provide\nthe Exception word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Exception Extensions\nword set\" shall be appended to the label of Standard Programs that\nrequire the system to provide portions of the Exception Extensions\nword set.\n</p><p>\nThe phrase \"Requiring the Exception Extensions word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide all of the Exception and Exception Extensions word sets.\n</p><p>\n\n</p><h2 id=\"section.9.6\">9.6 Glossary</h2> <!-- 9.6 -->\n<h3 id=\"subsection.9.6.1\">9.6.1 Exception words</h3> <!-- 9.6.1 -->\n<ul>\n<li><a href=\"exception/CATCH\">9.6.1.0875 CATCH</a></li>\n<li><a href=\"exception/THROW\">9.6.1.2275 THROW</a></li>\n\n</ul>\n<h3 id=\"subsection.9.6.2\">9.6.2 Exception extension words</h3> <!-- 9.6.2 -->\n<ul>\n<li><a href=\"exception/ABORT\">9.6.2.0670 ABORT</a></li>\n<li><a href=\"exception/ABORTq\">9.6.2.0680 ABORT\"</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Exception word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\" class=\"current\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.9.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.9.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.9.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.9.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.9.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.9.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">CATCH</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"exception/CATCH\">CATCH</a></li>\n        <li role=\"menuitem\"><a href=\"exception/THROW\">THROW</a></li>\n        <li role=\"menuitem\"><a href=\"exception/ABORT\">ABORT</a></li>\n        <li role=\"menuitem\"><a href=\"exception/ABORTq\">ABORT\"</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "facility": {
            "basename": "facility",
            "name": "10 The optional Facility word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.10\">10 The optional Facility word set</h1> <!-- 10 -->\n<h2 id=\"section.10.1\">10.1 Introduction</h2> <!-- 10.1 -->\n<h2 id=\"section.10.2\">10.2 Additional terms and notation</h2> <!-- 10.2 -->\nNone.\n<p>\n</p><h2 id=\"section.10.3\">10.3 Additional usage requirements</h2> <!-- 10.3 -->\n<h3 id=\"subsection.10.3.1\">10.3.1 Data types</h3> <!-- 10.3.1 -->\nAppend table <a href=\"facility#facility:types\">10.1</a> to table <a href=\"usage#table:datatypes\">3.1</a>.\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 10.1: Data types</div>\n  <a name=\"facility:types\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em> </td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>struct-sys</em>\n  </td><td>data structures\n  </td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\n<h4 id=\"subsubsection.10.3.1.1\">10.3.1.1 Structure type</h4> <!-- 10.3.1.1 -->\nThe implementation-dependent data generated upon beginning to compile\na <a href=\"facility/BEGIN-STRUCTURE\">BEGIN-STRUCTURE</a> ... <a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a> structure and\nconsumed at its close is represented by the symbol <em>struct-sys</em>\nthroughout this standard.\n<p>\n</p><h4 id=\"subsubsection.10.3.1.2\">10.3.1.2 Character types</h4> <!-- 10.3.1.2 -->\nPrograms that use more than seven bits of a character by\n<a href=\"facility/EKEY\">EKEY</a> have an environmental dependency.\n<p>\nSee: <strong><a href=\"usage#usage:char\">3.1.2 Character types</a></strong>.\n</p><p>\n</p><h2 id=\"section.10.4\">10.4 Additional documentation requirements</h2> <!-- 10.4 -->\n<h3 id=\"subsection.10.4.1\">10.4.1 System documentation</h3> <!-- 10.4.1 -->\n<h4 id=\"subsubsection.10.4.1.1\">10.4.1.1 Implementation-defined options</h4> <!-- 10.4.1.1 -->\n<ul>\n<li> encoding of keyboard events <a href=\"facility/EKEY\">10.6.2.1305 EKEY</a>);\n</li>\n<li> duration of a system clock tick;\n</li>\n<li> repeatability to be expected from execution of\n<a href=\"facility/MS\">10.6.2.1905 MS</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.10.4.1.2\">10.4.1.2 Ambiguous conditions</h4> <!-- 10.4.1.2 -->\n<ul>\n<li> <a href=\"facility/AT-XY\">10.6.1.0742 AT-XY</a> operation can't be performed on\nuser output device;\n<p>\n</p></li>\n<li> A <em>name</em> defined by\n<a href=\"facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a>\nis executed before the corresponding \n<a href=\"facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a>\nhas been executed.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.10.4.1.3\">10.4.1.3 Other system documentation</h4> <!-- 10.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.10.4.2\">10.4.2 Program documentation</h3> <!-- 10.4.2 -->\n<h4 id=\"subsubsection.10.4.2.1\">10.4.2.1 Environmental dependencies</h4> <!-- 10.4.2.1 -->\n<ul>\n<li> using more than seven bits of a character in\n<a href=\"facility/EKEY\">10.6.2.1305 EKEY</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.10.4.2.2\">10.4.2.2 Other program documentation</h4> <!-- 10.4.2.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.10.5\">10.5 Compliance and labeling</h2> <!-- 10.5 -->\n<h3 id=\"subsection.10.5.1\">10.5.1 Forth-2012 systems</h3> <!-- 10.5.1 -->\nThe phrase \"Providing the Facility word set\" shall be appended to\nthe label of any Standard System that provides all of the Facility\nword set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Facility Extensions\nword set\" shall be appended to the label of any Standard System\nthat provides portions of the Facility Extensions word set.\n</p><p>\nThe phrase \"Providing the Facility Extensions word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Facility and Facility Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.10.5.2\">10.5.2 Forth-2012 programs</h3> <!-- 10.5.2 -->\nThe phrase \"Requiring the Facility word set\" shall be appended to\nthe label of Standard Programs that require the system to provide\nthe Facility word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Facility Extensions\nword set\" shall be appended to the label of Standard Programs that\nrequire the system to provide portions of the Facility Extensions\nword set.\n</p><p>\nThe phrase \"Requiring the Facility Extensions word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide all of the Facility and Facility Extensions word sets.\n</p><p>\n</p><h2 id=\"section.10.6\">10.6 Glossary</h2> <!-- 10.6 -->\n<h3 id=\"subsection.10.6.1\">10.6.1 Facility words</h3> <!-- 10.6.1 -->\n<ul>\n<li><a href=\"facility/AT-XY\">10.6.1.0742 AT-XY</a></li>\n<li><a href=\"facility/KEYq\">10.6.1.1755 KEY?</a></li>\n<li><a href=\"facility/PAGE\">10.6.1.2005 PAGE</a></li>\n</ul>\n<h3 id=\"subsection.10.6.2\">10.6.2 Facility extension words</h3> <!-- 10.6.2 -->\n<ul>\n<li><a href=\"facility/PlusFIELD\">10.6.2.0135 +FIELD</a></li>\n<li><a href=\"facility/BEGIN-STRUCTURE\">10.6.2.0763 BEGIN-STRUCTURE</a></li>\n<li><a href=\"facility/CFIELDColon\">10.6.2.0893 CFIELD:</a></li>\n<li><a href=\"facility/EKEY\">10.6.2.1305 EKEY</a></li>\n<li><a href=\"facility/EKEYtoCHAR\">10.6.2.1306 EKEY&gt;CHAR</a></li>\n<li><a href=\"facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a></li>\n<li><a href=\"facility/EKEYq\">10.6.2.1307 EKEY?</a></li>\n<li><a href=\"facility/EMITq\">10.6.2.1325 EMIT?</a></li>\n<li><a href=\"facility/END-STRUCTURE\">10.6.2.1336 END-STRUCTURE</a></li>\n\n<li><a href=\"facility/FIELDColon\">10.6.2.1518 FIELD:</a></li>\n<li><a href=\"facility/K-ALT-MASK\">10.6.2.1740.01 K-ALT-MASK</a></li>\n<li><a href=\"facility/K-CTRL-MASK\">10.6.2.1740.02 K-CTRL-MASK</a></li>\n<li><a href=\"facility/K-DELETE\">10.6.2.1740.03 K-DELETE</a></li>\n<li><a href=\"facility/K-DOWN\">10.6.2.1740.04 K-DOWN</a></li>\n<li><a href=\"facility/K-END\">10.6.2.1740.05 K-END</a></li>\n<li><a href=\"facility/K-FOne\">10.6.2.1740.06 K-F1</a></li>\n<li><a href=\"facility/K-FOneZero\">10.6.2.1740.07 K-F10</a></li>\n<li><a href=\"facility/K-FOneOne\">10.6.2.1740.08 K-F11</a></li>\n<li><a href=\"facility/K-FOneTwo\">10.6.2.1740.09 K-F12</a></li>\n<li><a href=\"facility/K-FTwo\">10.6.2.1740.10 K-F2</a></li>\n<li><a href=\"facility/K-F3\">10.6.2.1740.11 K-F3</a></li>\n<li><a href=\"facility/K-F4\">10.6.2.1740.12 K-F4</a></li>\n<li><a href=\"facility/K-F5\">10.6.2.1740.13 K-F5</a></li>\n<li><a href=\"facility/K-F6\">10.6.2.1740.14 K-F6</a></li>\n<li><a href=\"facility/K-F7\">10.6.2.1740.15 K-F7</a></li>\n<li><a href=\"facility/K-F8\">10.6.2.1740.16 K-F8</a></li>\n<li><a href=\"facility/K-F9\">10.6.2.1740.17 K-F9</a></li>\n<li><a href=\"facility/K-HOME\">10.6.2.1740.18 K-HOME</a></li>\n<li><a href=\"facility/K-INSERT\">10.6.2.1740.19 K-INSERT</a></li>\n<li><a href=\"facility/K-LEFT\">10.6.2.1740.20 K-LEFT</a></li>\n<li><a href=\"facility/K-NEXT\">10.6.2.1740.21 K-NEXT</a></li>\n<li><a href=\"facility/K-PRIOR\">10.6.2.1740.22 K-PRIOR</a></li>\n<li><a href=\"facility/K-RIGHT\">10.6.2.1740.23 K-RIGHT</a></li>\n<li><a href=\"facility/K-SHIFT-MASK\">10.6.2.1740.24 K-SHIFT-MASK</a></li>\n<li><a href=\"facility/K-UP\">10.6.2.1740.25 K-UP</a></li>\n<li><a href=\"facility/MS\">10.6.2.1905 MS</a></li>\n<li><a href=\"facility/TIMEandDATE\">10.6.2.2292 TIME&amp;DATE</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Facility word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\" class=\"current\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.10.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.10.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.10.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.10.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.10.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.10.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">AT-XY</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"facility/AT-XY\">AT-XY</a></li>\n        <li role=\"menuitem\"><a href=\"facility/KEYq\">KEY?</a></li>\n        <li role=\"menuitem\"><a href=\"facility/PAGE\">PAGE</a></li>\n        <li role=\"menuitem\"><a href=\"facility/PlusFIELD\">+FIELD</a></li>\n        <li role=\"menuitem\"><a href=\"facility/BEGIN-STRUCTURE\">BEGIN-STRUCTURE</a></li>\n        <li role=\"menuitem\"><a href=\"facility/CFIELDColon\">CFIELD:</a></li>\n        <li role=\"menuitem\"><a href=\"facility/EKEY\">EKEY</a></li>\n        <li role=\"menuitem\"><a href=\"facility/EKEYtoCHAR\">EKEY&gt;CHAR</a></li>\n        <li role=\"menuitem\"><a href=\"facility/EKEYtoFKEY\">EKEY&gt;FKEY</a></li>\n        <li role=\"menuitem\"><a href=\"facility/EKEYq\">EKEY?</a></li>\n        <li role=\"menuitem\"><a href=\"facility/EMITq\">EMIT?</a></li>\n        <li role=\"menuitem\"><a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a></li>\n        <li role=\"menuitem\"><a href=\"facility/FIELDColon\">FIELD:</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-ALT-MASK\">K-ALT-MASK</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-DELETE\">K-DELETE</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-DOWN\">K-DOWN</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-END\">K-END</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-FOne\">K-F1</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-FOneZero\">K-F10</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-FOneOne\">K-F11</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-FOneTwo\">K-F12</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-FTwo\">K-F2</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F3\">K-F3</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F4\">K-F4</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F5\">K-F5</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F6\">K-F6</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F7\">K-F7</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F8\">K-F8</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-F9\">K-F9</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-HOME\">K-HOME</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-INSERT\">K-INSERT</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-LEFT\">K-LEFT</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-NEXT\">K-NEXT</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-PRIOR\">K-PRIOR</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-RIGHT\">K-RIGHT</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-SHIFT-MASK\">K-SHIFT-MASK</a></li>\n        <li role=\"menuitem\"><a href=\"facility/K-UP\">K-UP</a></li>\n        <li role=\"menuitem\"><a href=\"facility/MS\">MS</a></li>\n        <li role=\"menuitem\"><a href=\"facility/TIMEandDATE\">TIME&amp;DATE</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "file": {
            "basename": "file",
            "name": "11 The optional File-Access word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.11\">11 The optional File-Access word set</h1> <!-- 11 -->\n<h2 id=\"section.11.1\">11.1 Introduction</h2> <!-- 11.1 -->\nThese words provide access to mass storage in the form of \"files\"\nunder the following assumptions:\n<p>\n</p><ul>\n<li> files are provided by a host operating system;\n</li>\n<li> file names are represented as character strings;\n</li>\n<li> the format of file names is determined by the host operating\nsystem;\n</li>\n<li> an open file is identified by a single-cell file identifier\n(<em>fileid</em>);\n</li>\n<li> file-state information (e.g., position, size) is managed by\nthe host operating system;\n</li>\n<li> file contents are accessed as a sequence of characters;\n</li>\n<li> file read operations return an actual transfer count, which\ncan differ from the requested transfer count.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.11.2\">11.2 Additional terms</h2> <!-- 11.2 -->\n<dl class=\"desc\">\n<dt>file-access method:</dt><dd>\nA permissible means of accessing a file, such as \"read/write\"\nor \"read only\".\n</dd>\n<dt>file position:</dt><dd>\nThe character offset from the start of the file.\n</dd>\n<dt>input file:</dt><dd>\nThe file, containing a sequence of lines, that is the input source.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h2 id=\"section.11.3\">11.3 Additional usage requirements</h2> <!-- 11.3 -->\n<h3 id=\"subsection.11.3.1\">11.3.1 Data types</h3> <!-- 11.3.1 -->\nAppend table <a href=\"file#file:types\">11.1</a> to table <a href=\"usage#table:datatypes\">3.1</a>.\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 11.1: Data types</div>\n  <a name=\"file:types\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em> </td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>fam</em>\t\t</td><td>file access method\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>fileid</em>\t</td><td>file identifier\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\n<h4 id=\"subsubsection.11.3.1.1\">11.3.1.1 File identifiers</h4> <!-- 11.3.1.1 -->\nFile identifiers are implementation-dependent single-cell values\nthat are passed to file operators to designate specific files.\nOpening a file assigns a file identifier, which remains valid\nuntil closed.\n<p>\n\n</p><h4 id=\"subsubsection.11.3.1.3\">11.3.1.3 File access methods (11.3.1.3)</h4> <!-- 11.3.1.3 -->\nFile access methods are implementation-defined single-cell\nvalues.\n<p>\n</p><h4 id=\"subsubsection.11.3.1.4\">11.3.1.4 File names</h4> <!-- 11.3.1.4 -->\n<a name=\"file:names\"></a>\n<p>\nA character string containing the name of the file. The file name\nmay include an implementation-dependent path name. The format of\nfile names is implementation defined.\n</p><p>\n</p><h3 id=\"subsection.11.3.2\">11.3.2 Blocks in files</h3> <!-- 11.3.2 -->\n<a name=\"file:blocks\"></a>\n<p>\nBlocks may, but need not, reside in files.\nWhen they do:\n</p><ul>\n<li> Block numbers may be mapped to one or more files by\nimplementation-defined means. An ambiguous condition exists\nif a requested block number is not currently mapped;\n</li>\n<li> An <a href=\"block/UPDATE\">UPDATE</a>d block that came from a file shall\nbe transferred back to the same file.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.11.3.3\">11.3.3 Input source</h3> <!-- 11.3.4 -->\n<a name=\"file:source\"></a>\n<p>\nThe File-Access word set creates another input source for the text\ninterpreter. When the input source is a text file, <a href=\"block/BLK\">BLK</a>\nshall contain zero, <a href=\"file/SOURCE-ID\">SOURCE-ID</a> shall contain the <em>fileid</em>\nof that text file, and the input buffer shall contain one line of\nthe text file.  During text interpretation from a text file, the\nvalue returned by <a href=\"file/FILE-POSITION\">FILE-POSITION</a> for the <em>fileid</em> returned\nby <a href=\"file/SOURCE-ID\">SOURCE-ID</a> is undefined.  A standard program\nshall not call <a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a> on the <em>fileid</em> returned\nby <a href=\"file/SOURCE-ID\">SOURCE-ID</a>.\n</p><p>\nInput with <a href=\"file/INCLUDED\">INCLUDED</a>, <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a>, <a href=\"block/LOAD\">LOAD</a>\nand <a href=\"block/EVALUATE\">EVALUATE</a> shall be nestable in any order to at least\neight levels.\n</p><p>\nA program that uses more than eight levels of input-file nesting has\nan environmental dependency. See:\n<strong><a href=\"usage#usage:inbuf\">3.3.3.5 Input buffers</a></strong>,\n<strong><a href=\"exception#wordlist:exception\">9 The optional Exception word set</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.11.3.4\">11.3.4 Other transient regions</h3> <!-- 11.3.5 -->\n<a name=\"file:buffers\"></a>\n<p>\nThe system provides transient buffers for <a href=\"file/Sq\">S\"</a> and <a href=\"file/Seq\">S\\\"</a>\nstrings. These buffers shall be no less than 80 characters in length, and\nthere shall be at least two buffers. The system should be able to store\ntwo strings defined by sequential use of <a href=\"file/Sq\">S\"</a> or <a href=\"file/Seq\">S\\\"</a>.\nRAM-limited systems may have environmental restrictions on the number\nof buffers and their lifetimes.\n</p><p>\n</p><h3 id=\"subsection.11.3.5\">11.3.5 Parsing</h3> <!-- 11.3.6 -->\n<a name=\"file:parsing\"></a>\n<p>\nWhen parsing from a text file using a space delimiter, control\ncharacters shall be treated the same as the space character.\n</p><p>\nLines of at least 128 characters shall be supported. A program that\nrequires lines of more than 128 characters has an environmental\ndependency.\n</p><p>\nA program may reposition the parse area within the input buffer by\nmanipulating the contents of <a href=\"core/toIN\">&gt;IN</a>. More extensive\nrepositioning can be accomplished using <a href=\"core/SAVE-INPUT\">SAVE-INPUT</a> and\n<a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a>.\n</p><p>\nSee: <strong><a href=\"usage#usage:parsing\">3.4.1 Parsing</a></strong>.\n</p><p>\n</p><h2 id=\"section.11.4\">11.4 Additional documentation requirements</h2> <!-- 11.4 -->\n<h3 id=\"subsection.11.4.1\">11.4.1 System documentation</h3> <!-- 11.4.1 -->\n<h4 id=\"subsubsection.11.4.1.1\">11.4.1.1 Implementation-defined options</h4> <!-- 11.4.1.1 -->\n<a name=\"file:impopt\"></a>\n<p>\n</p><ul>\n<li> file access methods used by\n<a href=\"file/BIN\">11.6.1.0765 BIN</a>,\n<a href=\"file/CREATE-FILE\">11.6.1.1010 CREATE-FILE</a>, <br>\n<a href=\"file/OPEN-FILE\">11.6.1.1970 OPEN-FILE</a>,\n<a href=\"file/RDivO\">11.6.1.2054 R/O</a>,\n<a href=\"file/RDivW\">11.6.1.2056 R/W</a> and\n<a href=\"file/WDivO\">11.6.1.2425 W/O</a>;\n</li>\n<li> file exceptions;\n</li>\n<li> file line terminator (<a href=\"file/READ-LINE\">11.6.1.2090 READ-LINE</a>);\n</li>\n<li> file name format (<strong><a href=\"file#file:names\">11.3.1.4 File names</a></strong>);\n</li>\n<li> information returned by <a href=\"file/FILE-STATUS\">11.6.2.1524 FILE-STATUS</a>;\n</li>\n<li> input file state after an exception\n(<a href=\"file/INCLUDE-FILE\">11.6.1.1717 INCLUDE-FILE</a>,\n<a href=\"file/INCLUDED\">11.6.1.1718 INCLUDED</a>);\n</li>\n<li> maximum depth of file input nesting\n(<strong><a href=\"file#file:source\">11.3.3 Input source</a></strong>);\n</li>\n<li> maximum size of input line (<strong><a href=\"file#file:parsing\">11.3.5 Parsing</a></strong>);\n</li>\n<li> methods for mapping block ranges to files\n(<strong><a href=\"file#file:blocks\">11.3.2 Blocks in files</a></strong>);\n</li>\n<li> number of string buffers provided (<strong><a href=\"file#file:buffers\">11.3.4 Other transient regions</a></strong>);\n</li>\n<li> size of string buffer used by <strong><a href=\"file#file:buffers\">11.3.4 Other transient regions</a></strong>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.11.4.1.2\">11.4.1.2 Ambiguous conditions</h4> <!-- 11.4.1.2 -->\n<ul>\n<li> attempting to position a file outside its boundaries\n(<a href=\"file/REPOSITION-FILE\">11.6.1.2142 REPOSITION-FILE</a>);\n</li>\n<li> attempting to read from file positions not yet written\n(<a href=\"file/READ-FILE\">11.6.1.2080 READ-FILE</a>, <br>\n<a href=\"file/READ-LINE\">11.6.1.2090 READ-LINE</a>);\n</li>\n<li> <em>fileid</em> is invalid (<a href=\"file/INCLUDE-FILE\">11.6.1.1717 INCLUDE-FILE</a>);\n</li>\n<li> I/O exception reading or closing <em>fileid</em>\n(<a href=\"file/INCLUDE-FILE\">11.6.1.1717 INCLUDE-FILE</a>,\n<a href=\"file/INCLUDED\">11.6.1.1718 INCLUDED</a>);\n</li>\n<li> named file cannot be opened\n(<a href=\"file/INCLUDED\">11.6.1.1718 INCLUDED</a>);\n</li>\n<li> requesting an unmapped block number\n(<strong><a href=\"file#file:blocks\">11.3.2 Blocks in files</a></strong>);\n</li>\n<li> using <a href=\"file/SOURCE-ID\">11.6.1.2218 SOURCE-ID</a> when\n<a href=\"block/BLK\">7.6.1.0790 BLK</a> is not zero;\n</li>\n<li> a file is required while it is being <a href=\"file/REQUIRED\">REQUIRED</a>\n(<a href=\"file/REQUIRED\">11.6.2.2144.50</a>) or <a href=\"file/INCLUDED\">INCLUDED</a> (<a href=\"file/INCLUDED\">11.6.1.1718</a>);\n</li>\n<li> a marker is defined outside and executed inside a file or\nvice versa, and the file is <a href=\"file/REQUIRED\">REQUIRED</a>\n(<a href=\"file/REQUIRED\">11.6.2.2144.50</a>) again;\n</li>\n<li> the same file is required twice using different names\n(e.g., through symbolic links), or different files with the\nsame name are provided to <a href=\"file/REQUIRED\">11.6.2.2144.50 REQUIRED</a> (by doing\nsome renaming between the invocations of <a href=\"file/REQUIRED\">REQUIRED</a>);\n</li>\n<li> the stack effect of including with\n<a href=\"file/REQUIRED\">11.6.2.2144.50 REQUIRED</a> the file is not ( <em>i * x</em> -- <em>i * x</em> ).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.11.4.1.3\">11.4.1.3 Other system documentation</h4> <!-- 11.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.11.4.2\">11.4.2 Program documentation</h3> <!-- 11.4.2 -->\n<h4 id=\"subsubsection.11.4.2.1\">11.4.2.1 Environmental dependencies</h4> <!-- 11.4.2.1 -->\n<ul>\n<li> requiring lines longer than 128 characters\n(<strong><a href=\"file#file:parsing\">11.3.5 Parsing</a></strong>);\n</li>\n<li> using more than eight levels of input-file nesting\n(<strong><a href=\"file#file:source\">11.3.3 Input source</a></strong>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.11.4.2.2\">11.4.2.2 Other program documentation</h4> <!-- 11.4.2.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.11.5\">11.5 Compliance and labeling</h2> <!-- 11.5 -->\n<h3 id=\"subsection.11.5.1\">11.5.1 Forth-2012 systems</h3> <!-- 11.5.1 -->\nThe phrase \"Providing the File Access word set\" shall be appended\nto the label of any Standard System that provides all of the File\nAccess word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the File Access Extensions\nword set\" shall be appended to the label of any Standard System that\nprovides portions of the File Access Extensions word set.\n</p><p>\nThe phrase \"Providing the File Access Extensions word set\" shall\nbe appended to the label of any Standard System that provides all of\nthe File Access and File Access Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.11.5.2\">11.5.2 Forth-2012 programs</h3> <!-- 11.5.2 -->\nThe phrase \"Requiring the File Access word set\" shall be appended\nto the label of Standard Programs that require the system to provide\nthe File Access word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the File Access Extensions\nword set\" shall be appended to the label of Standard Programs that\nrequire the system to provide portions of the File Access Extensions\nword set.\n</p><p>\nThe phrase \"Requiring the File Access Extensions word set\" shall be\nappended to the label of Standard Programs that require the system to\nprovide all of the File Access and File Access Extensions word sets.\n</p><p>\n</p><h2 id=\"section.11.6\">11.6 Glossary</h2> <!-- 11.6 -->\n<h3 id=\"subsection.11.6.1\">11.6.1 File Access words</h3> <!-- 11.6.1 -->\n<ul>\n<li><a href=\"file/p\">11.6.1.0080 (</a></li>\n\n<li><a href=\"file/BIN\">11.6.1.0765 BIN</a></li>\n\n<li><a href=\"file/CLOSE-FILE\">11.6.1.0900 CLOSE-FILE</a></li>\n\n<li><a href=\"file/CREATE-FILE\">11.6.1.1010 CREATE-FILE</a></li>\n<li><a href=\"file/DELETE-FILE\">11.6.1.1190 DELETE-FILE</a></li>\n<li><a href=\"file/FILE-POSITION\">11.6.1.1520 FILE-POSITION</a></li>\n<li><a href=\"file/FILE-SIZE\">11.6.1.1522 FILE-SIZE</a></li>\n\n<li><a href=\"file/INCLUDE-FILE\">11.6.1.1717 INCLUDE-FILE</a></li>\n<li><a href=\"file/INCLUDED\">11.6.1.1718 INCLUDED</a></li>\n<li><a href=\"file/OPEN-FILE\">11.6.1.1970 OPEN-FILE</a></li>\n<li><a href=\"file/RDivO\">11.6.1.2054 R/O</a></li>\n<li><a href=\"file/RDivW\">11.6.1.2056 R/W</a></li>\n<li><a href=\"file/READ-FILE\">11.6.1.2080 READ-FILE</a></li>\n<li><a href=\"file/READ-LINE\">11.6.1.2090 READ-LINE</a></li>\n<li><a href=\"file/REPOSITION-FILE\">11.6.1.2142 REPOSITION-FILE</a></li>\n<li><a href=\"file/RESIZE-FILE\">11.6.1.2147 RESIZE-FILE</a></li>\n<li><a href=\"file/Sq\">11.6.1.2165 S\"</a></li>\n<li><a href=\"file/SOURCE-ID\">11.6.1.2218 SOURCE-ID</a></li>\n<li><a href=\"file/WDivO\">11.6.1.2425 W/O</a></li>\n<li><a href=\"file/WRITE-FILE\">11.6.1.2480 WRITE-FILE</a></li>\n<li><a href=\"file/WRITE-LINE\">11.6.1.2485 WRITE-LINE</a></li>\n</ul>\n<h3 id=\"subsection.11.6.2\">11.6.2 File-Access extension words</h3> <!-- 11.6.2 -->\n<ul>\n<li><a href=\"file/FILE-STATUS\">11.6.2.1524 FILE-STATUS</a></li>\n<li><a href=\"file/FLUSH-FILE\">11.6.2.1560 FLUSH-FILE</a></li>\n<li><a href=\"file/INCLUDE\">11.6.2.1714 INCLUDE</a></li>\n<li><a href=\"file/REFILL\">11.6.2.2125 REFILL</a></li>\n<li><a href=\"file/RENAME-FILE\">11.6.2.2130 RENAME-FILE</a></li>\n<li><a href=\"file/REQUIRE\">11.6.2.2144.10 REQUIRE</a></li>\n<li><a href=\"file/REQUIRED\">11.6.2.2144.50 REQUIRED</a></li>\n<li><a href=\"file/Seq\">11.6.2.2266 S\\\"</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">File-Access word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\" class=\"current\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.11.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.11.2\">Additional terms</a></li>\n        <li role=\"menuitem\"><a href=\"#section.11.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.11.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.11.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.11.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">(</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"file/p\">(</a></li>\n        <li role=\"menuitem\"><a href=\"file/BIN\">BIN</a></li>\n        <li role=\"menuitem\"><a href=\"file/CLOSE-FILE\">CLOSE-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/CREATE-FILE\">CREATE-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/DELETE-FILE\">DELETE-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/FILE-POSITION\">FILE-POSITION</a></li>\n        <li role=\"menuitem\"><a href=\"file/FILE-SIZE\">FILE-SIZE</a></li>\n        <li role=\"menuitem\"><a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/INCLUDED\">INCLUDED</a></li>\n        <li role=\"menuitem\"><a href=\"file/OPEN-FILE\">OPEN-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/RDivO\">R/O</a></li>\n        <li role=\"menuitem\"><a href=\"file/RDivW\">R/W</a></li>\n        <li role=\"menuitem\"><a href=\"file/READ-FILE\">READ-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/READ-LINE\">READ-LINE</a></li>\n        <li role=\"menuitem\"><a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/RESIZE-FILE\">RESIZE-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/Sq\">S\"</a></li>\n        <li role=\"menuitem\"><a href=\"file/SOURCE-ID\">SOURCE-ID</a></li>\n        <li role=\"menuitem\"><a href=\"file/WDivO\">W/O</a></li>\n        <li role=\"menuitem\"><a href=\"file/WRITE-FILE\">WRITE-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/WRITE-LINE\">WRITE-LINE</a></li>\n        <li role=\"menuitem\"><a href=\"file/FILE-STATUS\">FILE-STATUS</a></li>\n        <li role=\"menuitem\"><a href=\"file/FLUSH-FILE\">FLUSH-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/INCLUDE\">INCLUDE</a></li>\n        <li role=\"menuitem\"><a href=\"file/REFILL\">REFILL</a></li>\n        <li role=\"menuitem\"><a href=\"file/RENAME-FILE\">RENAME-FILE</a></li>\n        <li role=\"menuitem\"><a href=\"file/REQUIRE\">REQUIRE</a></li>\n        <li role=\"menuitem\"><a href=\"file/REQUIRED\">REQUIRED</a></li>\n        <li role=\"menuitem\"><a href=\"file/Seq\">S\\\"</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "float": {
            "basename": "float",
            "name": "12 The optional Floating-Point word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.12\">12 The optional Floating-Point word set</h1> <!-- 12 -->\n<h2 id=\"section.12.1\">12.1 Introduction</h2> <!-- 12.1 -->\n<h2 id=\"section.12.2\">12.2 Additional terms and notation</h2> <!-- 12.2 -->\n<h3 id=\"subsection.12.2.1\">12.2.1 Definition of terms</h3> <!-- 12.2.1 -->\n<a name=\"float:terms\"></a>\n<p>\n</p><dl class=\"desc\">\n<dt>float-aligned address:</dt><dd>\nThe address of a memory location at which a floating-point\nnumber can be accessed.\n<p>\n</p></dd>\n<dt>double-float-aligned address:</dt><dd>\nThe address of a memory location at which a 64-bit IEEE\ndouble-precision floating-point number can be accessed.\n<p>\n</p></dd>\n<dt>single-float-aligned address:</dt><dd>\nThe address of a memory location at which a 32-bit IEEE\nsingle-precision floating-point number can be accessed.\n<p>\n</p></dd>\n<dt>IEEE floating-point number:</dt><dd>\nA single- or double-precision floating-point number as defined\nin  <strong>ANSI/IEEE 754-1985</strong>.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.12.2.2\">12.2.2 Notation</h3> <!-- 12.2.2 -->\n<a name=\"float:notation\"></a>\n<p>\n\n</p><h4 id=\"subsubsection.12.2.2.2\">12.2.2.2 Stack notation</h4> <!-- 12.2.2.2 -->\nFloating-point stack notation is:\n<div class=\"quote\">\n\n  ( F: <em>before</em> -- <em>after</em> )\n  \n  </div>\n<p>\nA unified stack notation is provided for systems with the environmental\nrestriction that the floating-point numbers are kept on the data stack.\n</p><p>\n</p><h2 id=\"section.12.3\">12.3 Additional usage requirements</h2> <!-- 12.3 -->\n<h3 id=\"subsection.12.3.1\">12.3.1 Data types</h3> <!-- 12.3.1 -->\n<a name=\"float:datatypes\"></a>\n<p>\nAppend table <a href=\"float#float:types\">12.1</a> to table <a href=\"usage#table:datatypes\">3.1</a>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 12.1: Data Types</div>\n  <a name=\"float:types\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em> </td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>df-addr</em>\t</td><td>double-float-aligned address\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>f-addr</em>\t</td><td>float-aligned address\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>r</em>\t\t</td><td>floating-point number\t\t\t</td><td class=\"r\">implementation-defined </td></tr>\n  <tr valign=\"top\"><td><em>sf-addr</em>\t</td><td>single-float-aligned address\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\n<h4 id=\"subsubsection.12.3.1.1\">12.3.1.1 Addresses</h4> <!-- 12.3.1.1 -->\n<a name=\"float:addr\"></a>\n<p>\nThe set of float-aligned addresses is an implementation-defined\nsubset of the set of aligned addresses. Adding the size of a\nfloating-point number to a float-aligned address shall produce\na float-aligned address.\n</p><p>\nThe set of double-float-aligned addresses is an implementation-defined\nsubset of the set of aligned addresses. Adding the size of a 64-bit\nIEEE double-precision floating-point number to a double-float-aligned\naddress shall produce a double-float-aligned address.\n</p><p>\nThe set of single-float-aligned addresses is an implementation-defined\nsubset of the set of aligned addresses. Adding the size of a 32-bit\nIEEE single-precision floating-point number to a single-float-aligned\naddress shall produce a single-float-aligned address.\n</p><p>\n</p><h4 id=\"subsubsection.12.3.1.2\">12.3.1.2 Floating-point numbers</h4> <!-- 12.3.1.2 -->\n<a name=\"float:num\"></a>\n<p>\nThe internal representation of a floating-point number, including the\nformat and precision of the significand and the format and range of\nthe exponent, is implementation defined.\n</p><p>\nAny rounding or truncation of floating-point numbers is implementation\ndefined.\n</p><p>\n</p><h3 id=\"subsection.12.3.2\">12.3.2 Floating-point operations</h3> <!-- 12.3.2 -->\n<a name=\"float:ops\"></a>\n<p>\n\"Round to nearest\" means round the result of a floating-point\noperation to the representable value nearest the result. If the two\nnearest representable values are equally near the result, the one\nhaving zero as its least significant bit shall be delivered.\n</p><p>\n\"Round toward negative infinity\" means round the result of a\nfloating-point operation to the representable value nearest to and\nno greater than the result.\n</p><p>\n\"Round toward zero\" means round the result of a floating-point\noperation to the representable value nearest to zero, frequently\nreferred to as \"truncation\".\n</p><p>\n</p><h3 id=\"subsection.12.3.3\">12.3.3 Floating-point stack</h3> <!-- 12.3.3 -->\n<a name=\"float:stack\"></a>\n<p>\nA last in, first out list that shall be used by all floating-point\noperators.\n</p><p>\nThe width of the floating-point stack is implementation-defined.\nThe floating-point stack shall be separate from the data and return\nstacks.\n</p><p>\nThe size of a floating-point stack shall be at least 6 items.\n</p><p>\nA program that depends on the floating-point stack being larger than\nsix items has an environmental dependency.\n</p><p>\n</p><h3 id=\"subsection.12.3.4\">12.3.4 Environmental queries</h3> <!-- 12.3.4 -->\nAppend table <a href=\"float#float:env\">12.2</a> to table <a href=\"usage#table:env\">3.4</a>.\n<p>\nSee: <strong><a href=\"usage#usage:env\">3.2.6 Environmental queries</a></strong>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 12.2: Environmental Query Strings</div>\n  <a name=\"float:env\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\">String  Value data type </td><td class=\"c\">Constant? </td><td style=\"width: 21em\">Meaning </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"><code>FLOATING-STACK</code> </td><td class=\"r\"><em>n</em> </td><td class=\"c\">yes </td><td style=\"width: 21em\">the maximum depth of the separate floating-point stack.\n  On systems with the environmental restriction of keeping\n  floating-point items on the data stack, <em>n</em> = 0. </td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"><code>MAX-FLOAT</code>\t\t</td><td class=\"r\"><em>r</em>\t\t\t</td><td class=\"c\">yes\t</td><td style=\"width: 21em\">largest usable floating-point number </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<h3 id=\"subsection.12.3.5\">12.3.5 Address alignment</h3> <!-- 12.3.5 -->\nSince the address returned by a <a href=\"core/CREATE\">CREATE</a>d word is not\nnecessarily aligned for any particular class of floating-point\ndata, a program shall align the address (to be float aligned,\nsingle-float aligned, or double-float aligned) before accessing\nfloating-point data at the address.\n<p>\nSee: <strong><a href=\"usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>,\n<strong><a href=\"float#float:addr\">12.3.1.1 Addresses</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.12.3.6\">12.3.6 Variables</h3> <!-- 12.3.6 -->\nA program may address memory in data space regions made available\nby <a href=\"float/FVARIABLE\">FVARIABLE</a>. These regions may be non-contiguous with\nregions subsequently allocated with <a href=\"core/Comma\">,</a> (comma) or\n<a href=\"core/ALLOT\">ALLOT</a>. See: <strong><a href=\"usage#usage:var\">3.3.3.3 Variables</a></strong>.\n<p>\n</p><h3 id=\"subsection.12.3.7\">12.3.7 Text interpreter input number conversion</h3> <!-- 12.3.7 -->\n<a name=\"float:conv\"></a>\n<p>\nIf the Floating-Point word set is present in the dictionary and\nthe current base is <a href=\"core/DECIMAL\">DECIMAL</a>, the input number-conversion\nalgorithm shall be extended to recognize floating-point numbers in\nthis form:\n</p><p>\n</p><div class=\"center\">\n\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td class=\"r\">Convertible string  </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>&lt;<em>significand</em>&gt;&lt;<em>exponent</em>&gt; </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>significand</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>[&lt;<em>sign</em>&gt;]&lt;<em>digits</em>&gt;[<strong>.</strong>&lt;<em>digits0</em>&gt;] </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>exponent</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td><strong>E</strong>[&lt;<em>sign</em>&gt;]&lt;<em>digits0</em>&gt; </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>sign</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ <strong>+</strong> | <strong>-</strong> } </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>digits</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>&lt;<em>digit</em>&gt;&lt;<em>digits0</em>&gt; </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>digits0</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>&lt;<em>digit</em>&gt;* </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>digit</em>&gt; </td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ <strong>0</strong> | <strong>1</strong> |\n  <strong>2</strong> | <strong>3</strong> |\n  <strong>4</strong> | <strong>5</strong> |\n  <strong>6</strong> | <strong>7</strong> |\n  <strong>8</strong> | <strong>9</strong> } </td></tr>\n  <tr valign=\"top\"><td class=\"r\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<p>\nThese are examples of valid representations of floating-point numbers\nin program source:\n</p><p>\n</p><div class=\"center\">\n\n  <code>1E &nbsp;&nbsp;&nbsp;&nbsp; 1.E &nbsp;&nbsp;&nbsp;&nbsp; 1.E0 &nbsp;&nbsp;&nbsp;&nbsp; +1.23E-1 &nbsp;&nbsp;&nbsp;&nbsp; -1.23E+1</code>\n  \n  </div>\n<p>\nSee:\n<strong><a href=\"usage#usage:numbers\">3.4.1.3 Text interpreter input number conversion</a></strong>,\n<a href=\"float/toFLOAT\">12.6.1.0558 &gt;FLOAT</a>.\n</p><p>\n</p><h2 id=\"section.12.4\">12.4 Additional documentation requirements</h2> <!-- 12.4 -->\n<h3 id=\"subsection.12.4.1\">12.4.1 System documentation</h3> <!-- 12.4.1 -->\n<h4 id=\"subsubsection.12.4.1.1\">12.4.1.1 Implementation-defined options</h4> <!-- 12.4.1.1 -->\n<ul>\n<li> format and range of floating-point numbers\n(<strong><a href=\"float#float:datatypes\">12.3.1 Data types</a></strong>,\n<a href=\"float/REPRESENT\">12.6.1.2143 REPRESENT</a>);\n</li>\n<li> results of <a href=\"float/REPRESENT\">12.6.1.2143 REPRESENT</a> when\n<em>float</em> is out of range;\n</li>\n<li> rounding or truncation of floating-point numbers\n(<strong><a href=\"float#float:num\">12.3.1.2 Floating-point numbers</a></strong>);\n</li>\n<li> size of floating-point stack\n(<strong><a href=\"float#float:stack\">12.3.3 Floating-point stack</a></strong>);\n</li>\n<li> width of floating-point stack\n(<strong><a href=\"float#float:stack\">12.3.3 Floating-point stack</a></strong>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.12.4.1.2\">12.4.1.2 Ambiguous conditions</h4> <!-- 12.4.1.2 -->\n<a name=\"float:ambiguous\"></a>\n<ul>\n<li> <a href=\"float/DFFetch\">DF@</a> or <a href=\"float/DFStore\">DF!</a> is used with an address that is not\ndouble-float aligned;\n</li>\n<li> <a href=\"float/FFetch\">F@</a> or <a href=\"float/FStore\">F!</a> is used with an address that is not\nfloat aligned;\n</li>\n<li> floating point result out of range\n(e.g., in <a href=\"float/FDiv\">12.6.1.1430 F/</a>);\n</li>\n<li> <a href=\"float/SFFetch\">SF@</a> or <a href=\"float/SFStore\">SF!</a> is used with an address that is not\nsingle-float aligned;\n</li>\n<li> <a href=\"core/BASE\">BASE</a> is not decimal\n(<a href=\"float/REPRESENT\">12.6.1.2143 REPRESENT</a>,\n<a href=\"float/Fd\">12.6.2.1427 F.</a>,\n<a href=\"float/FEd\">12.6.2.1513 FE.</a>,\n<a href=\"float/FSd\">12.6.2.1613 FS.</a>);\n</li>\n<li> both arguments equal zero (<a href=\"float/FATANTwo\">12.6.2.1489 FATAN2</a>);\n</li>\n<li> cosine of argument is zero for <a href=\"float/FTAN\">12.6.2.1625 FTAN</a>;\n</li>\n<li> <em>d</em> can't be precisely represented as <em>float</em> in\n<a href=\"float/DtoF\">12.6.1.1130 D&gt;F</a>;\n</li>\n<li> dividing by zero (<a href=\"float/FDiv\">12.6.1.1430 F/</a>);\n</li>\n<li> exponent too big for conversion\n(<a href=\"float/DFStore\">12.6.2.1203 DF!</a>,\n<a href=\"float/DFFetch\">12.6.2.1204 DF@</a>,\n<a href=\"float/SFStore\">12.6.2.2202 SF!</a>,\n<a href=\"float/SFFetch\">12.6.2.2203 SF@</a>);\n</li>\n<li> <em>float</em> less than one (<a href=\"float/FACOSH\">12.6.2.1477 FACOSH</a>);\n</li>\n<li> <em>float</em> less than or equal to minus-one\n(<a href=\"float/FLNPOne\">12.6.2.1554 FLNP1</a>);\n</li>\n<li> <em>float</em> less than or equal to zero\n(<a href=\"float/FLN\">12.6.2.1553 FLN</a>,\n<a href=\"float/FLOG\">12.6.2.1557 FLOG</a>);\n</li>\n<li> <em>float</em> less than zero\n(<a href=\"float/FSQRT\">12.6.2.1618 FSQRT</a>);\n</li>\n<li> <em>float</em> magnitude greater than one\n(<a href=\"float/FACOS\">12.6.2.1476 FACOS</a>,\n<a href=\"float/FASIN\">12.6.2.1486 FASIN</a>,\n<a href=\"float/FATANH\">12.6.2.1491 FATANH</a>);\n</li>\n<li> integer part of <em>float</em> can't be represented by <em>d</em> in\n<a href=\"float/FtoD\">12.6.1.1470 F&gt;D</a>;\n</li>\n<li> string larger than pictured-numeric output area\n(<a href=\"float/Fd\">12.6.2.1427 F.</a>,\n<a href=\"float/FEd\">12.6.2.1513 FE.</a>,\n<a href=\"float/FSd\">12.6.2.1613 FS.</a>);\n</li>\n<li> <em>n</em> can't be precisely represented as\n<em>float</em> in <a href=\"float/StoF\">12.6.2.2175 S&gt;F</a>;\n</li>\n<li> integer part of <em>float</em> can't be represented\nby <em>n</em> in <a href=\"float/FtoS\">12.6.2.1471 F&gt;S</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.12.4.1.3\">12.4.1.3 Other system documentation</h4> <!-- 12.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.12.4.1.4\">12.4.1.4 Environmental restrictions</h4> <!-- 12.4.1.4 -->\n<a name=\"float:restrictions\"></a>\n<p>\n</p><ul>\n<li> Keeping floating-point numbers on the data stack.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.12.4.2\">12.4.2 Program documentation</h3> <!-- 12.4.2 -->\n<h4 id=\"subsubsection.12.4.2.1\">12.4.2.1 Environmental dependencies</h4> <!-- 12.4.2.1 -->\n<a name=\"float:dependencies\"></a>\n<p>\n</p><ul>\n<li> requiring the floating-point stack to be larger than six items\n(<strong><a href=\"float#float:stack\">12.3.3 Floating-point stack</a></strong>);\n</li>\n<li> requiring floating-point numbers to be kept on the data stack,\nwith <em>n</em> cells per floating point number.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.12.4.2.2\">12.4.2.2 Other program documentation</h4> <!-- 12.4.2.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.12.5\">12.5 Compliance and labeling</h2> <!-- 12.5 -->\n<h3 id=\"subsection.12.5.1\">12.5.1 Forth-2012 systems</h3> <!-- 12.5.1 -->\nThe phrase \"Providing the Floating-Point word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Floating-Point word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Floating-Point\nExtensions word set\" shall be appended to the label of any Standard\nSystem that provides portions of the Floating-Point Extensions word\nset.\n</p><p>\nThe phrase \"Providing the Floating-Point Extensions word set\" shall\nbe appended to the label of any Standard System that provides all of\nthe Floating-Point and Floating-Point Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.12.5.2\">12.5.2 Forth-2012 programs</h3> <!-- 12.5.2 -->\nThe phrase \"Requiring the Floating-Point word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide the Floating-Point word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Floating-Point\nExtensions word set\" shall be appended to the label of Standard\nPrograms that require the system to provide portions of the\nFloating-Point Extensions word set.\n</p><p>\nThe phrase \"Requiring the Floating-Point Extensions word set\" shall\nbe appended to the label of Standard Programs that require the system\nto provide all of the Floating-Point and Floating-Point Extensions\nword sets.\n</p><p>\n</p><h2 id=\"section.12.6\">12.6 Glossary</h2> <!-- 12.6 -->\n<h3 id=\"subsection.12.6.1\">12.6.1 Floating-Point words</h3> <!-- 12.6.1 -->\n\n<ul>\n<li><a href=\"float/toFLOAT\">12.6.1.0558 &gt;FLOAT</a></li>\n<li><a href=\"float/DtoF\">12.6.1.1130 D&gt;F</a></li>\n<li><a href=\"float/FStore\">12.6.1.1400 F!</a></li>\n<li><a href=\"float/FTimes\">12.6.1.1410 F*</a></li>\n<li><a href=\"float/FPlus\">12.6.1.1420 F+</a></li>\n<li><a href=\"float/FMinus\">12.6.1.1425 F-</a></li>\n<li><a href=\"float/FDiv\">12.6.1.1430 F/</a></li>\n<li><a href=\"float/FZeroless\">12.6.1.1440 F0&lt;</a></li>\n<li><a href=\"float/FZeroEqual\">12.6.1.1450 F0=</a></li>\n<li><a href=\"float/Fless\">12.6.1.1460 F&lt;</a></li>\n<li><a href=\"float/FtoD\">12.6.1.1470 F&gt;D</a></li>\n<li><a href=\"float/FFetch\">12.6.1.1472 F@</a></li>\n<li><a href=\"float/FALIGN\">12.6.1.1479 FALIGN</a></li>\n<li><a href=\"float/FALIGNED\">12.6.1.1483 FALIGNED</a></li>\n<li><a href=\"float/FCONSTANT\">12.6.1.1492 FCONSTANT</a></li>\n<li><a href=\"float/FDEPTH\">12.6.1.1497 FDEPTH</a></li>\n<li><a href=\"float/FDROP\">12.6.1.1500 FDROP</a></li>\n<li><a href=\"float/FDUP\">12.6.1.1510 FDUP</a></li>\n<li><a href=\"float/FLITERAL\">12.6.1.1552 FLITERAL</a></li>\n<li><a href=\"float/FLOATPlus\">12.6.1.1555 FLOAT+</a></li>\n<li><a href=\"float/FLOATS\">12.6.1.1556 FLOATS</a></li>\n<li><a href=\"float/FLOOR\">12.6.1.1558 FLOOR</a></li>\n<li><a href=\"float/FMAX\">12.6.1.1562 FMAX</a></li>\n<li><a href=\"float/FMIN\">12.6.1.1565 FMIN</a></li>\n<li><a href=\"float/FNEGATE\">12.6.1.1567 FNEGATE</a></li>\n<li><a href=\"float/FOVER\">12.6.1.1600 FOVER</a></li>\n<li><a href=\"float/FROT\">12.6.1.1610 FROT</a></li>\n<li><a href=\"float/FROUND\">12.6.1.1612 FROUND</a></li>\n\n<li><a href=\"float/FSWAP\">12.6.1.1620 FSWAP</a></li>\n\n<li><a href=\"float/FVARIABLE\">12.6.1.1630 FVARIABLE</a></li>\n\n<li><a href=\"float/REPRESENT\">12.6.1.2143 REPRESENT</a></li>\n</ul>\n<h3 id=\"subsection.12.6.2\">12.6.2 Floating-Point extension words</h3> <!-- 12.6.2 -->\n<ul>\n<li><a href=\"float/DFStore\">12.6.2.1203 DF!</a></li>\n<li><a href=\"float/DFFetch\">12.6.2.1204 DF@</a></li>\n<li><a href=\"float/DFALIGN\">12.6.2.1205 DFALIGN</a></li>\n<li><a href=\"float/DFALIGNED\">12.6.2.1207 DFALIGNED</a></li>\n\n<li><a href=\"float/DFFIELDColon\">12.6.2.1207.40 DFFIELD:</a></li>\n<li><a href=\"float/DFLOATPlus\">12.6.2.1208 DFLOAT+</a></li>\n<li><a href=\"float/DFLOATS\">12.6.2.1209 DFLOATS</a></li>\n<li><a href=\"float/FTimesTimes\">12.6.2.1415 F**</a></li>\n\n<li><a href=\"float/Fd\">12.6.2.1427 F.</a></li>\n<li><a href=\"float/FtoS\">12.6.2.1471 F&gt;S</a></li>\n<li><a href=\"float/FABS\">12.6.2.1474 FABS</a></li>\n<li><a href=\"float/FACOS\">12.6.2.1476 FACOS</a></li>\n<li><a href=\"float/FACOSH\">12.6.2.1477 FACOSH</a></li>\n<li><a href=\"float/FALOG\">12.6.2.1484 FALOG</a></li>\n<li><a href=\"float/FASIN\">12.6.2.1486 FASIN</a></li>\n<li><a href=\"float/FASINH\">12.6.2.1487 FASINH</a></li>\n\n<li><a href=\"float/FATAN\">12.6.2.1488 FATAN</a></li>\n<li><a href=\"float/FATANTwo\">12.6.2.1489 FATAN2</a></li>\n<li><a href=\"float/FATANH\">12.6.2.1491 FATANH</a></li>\n<li><a href=\"float/FCOS\">12.6.2.1493 FCOS</a></li>\n<li><a href=\"float/FCOSH\">12.6.2.1494 FCOSH</a></li>\n\n<li><a href=\"float/FEd\">12.6.2.1513 FE.</a></li>\n<li><a href=\"float/FEXP\">12.6.2.1515 FEXP</a></li>\n<li><a href=\"float/FEXPMOne\">12.6.2.1516 FEXPM1</a></li>\n<li><a href=\"float/FFIELDColon\">12.6.2.1517 FFIELD:</a></li>\n<li><a href=\"float/FLN\">12.6.2.1553 FLN</a></li>\n<li><a href=\"float/FLNPOne\">12.6.2.1554 FLNP1</a></li>\n<li><a href=\"float/FLOG\">12.6.2.1557 FLOG</a></li>\n<li><a href=\"float/FSd\">12.6.2.1613 FS.</a></li>\n<li><a href=\"float/FSIN\">12.6.2.1614 FSIN</a></li>\n<li><a href=\"float/FSINCOS\">12.6.2.1616 FSINCOS</a></li>\n\n<li><a href=\"float/FSINH\">12.6.2.1617 FSINH</a></li>\n\n<li><a href=\"float/FSQRT\">12.6.2.1618 FSQRT</a></li>\n\n<li><a href=\"float/FTAN\">12.6.2.1625 FTAN</a></li>\n<li><a href=\"float/FTANH\">12.6.2.1626 FTANH</a></li>\n\n<li><a href=\"float/FTRUNC\">12.6.2.1627 FTRUNC</a></li>\n\n<li><a href=\"float/FVALUE\">12.6.2.1628 FVALUE</a></li>\n<li><a href=\"float/Ftilde\">12.6.2.1640 F~</a></li>\n<li><a href=\"float/PRECISION\">12.6.2.2035 PRECISION</a></li>\n<li><a href=\"float/StoF\">12.6.2.2175 S&gt;F</a></li>\n<li><a href=\"float/SET-PRECISION\">12.6.2.2200 SET-PRECISION</a></li>\n<li><a href=\"float/SFStore\">12.6.2.2202 SF!</a></li>\n<li><a href=\"float/SFFetch\">12.6.2.2203 SF@</a></li>\n<li><a href=\"float/SFALIGN\">12.6.2.2204 SFALIGN</a></li>\n<li><a href=\"float/SFALIGNED\">12.6.2.2206 SFALIGNED</a></li>\n<li><a href=\"float/SFFIELDColon\">12.6.2.2206.40 SFFIELD:</a></li>\n<li><a href=\"float/SFLOATPlus\">12.6.2.2207 SFLOAT+</a></li>\n<li><a href=\"float/SFLOATS\">12.6.2.2208 SFLOATS</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Floating-Point word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\" class=\"current\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.12.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.12.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.12.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.12.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.12.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.12.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">&gt;FLOAT</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"float/toFLOAT\">&gt;FLOAT</a></li>\n        <li role=\"menuitem\"><a href=\"float/DtoF\">D&gt;F</a></li>\n        <li role=\"menuitem\"><a href=\"float/FStore\">F!</a></li>\n        <li role=\"menuitem\"><a href=\"float/FTimes\">F*</a></li>\n        <li role=\"menuitem\"><a href=\"float/FPlus\">F+</a></li>\n        <li role=\"menuitem\"><a href=\"float/FMinus\">F-</a></li>\n        <li role=\"menuitem\"><a href=\"float/FDiv\">F/</a></li>\n        <li role=\"menuitem\"><a href=\"float/FZeroless\">F0&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"float/FZeroEqual\">F0=</a></li>\n        <li role=\"menuitem\"><a href=\"float/Fless\">F&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"float/FtoD\">F&gt;D</a></li>\n        <li role=\"menuitem\"><a href=\"float/FFetch\">F@</a></li>\n        <li role=\"menuitem\"><a href=\"float/FALIGN\">FALIGN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FALIGNED\">FALIGNED</a></li>\n        <li role=\"menuitem\"><a href=\"float/FCONSTANT\">FCONSTANT</a></li>\n        <li role=\"menuitem\"><a href=\"float/FDEPTH\">FDEPTH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FDROP\">FDROP</a></li>\n        <li role=\"menuitem\"><a href=\"float/FDUP\">FDUP</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLITERAL\">FLITERAL</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLOATPlus\">FLOAT+</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLOATS\">FLOATS</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLOOR\">FLOOR</a></li>\n        <li role=\"menuitem\"><a href=\"float/FMAX\">FMAX</a></li>\n        <li role=\"menuitem\"><a href=\"float/FMIN\">FMIN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FNEGATE\">FNEGATE</a></li>\n        <li role=\"menuitem\"><a href=\"float/FOVER\">FOVER</a></li>\n        <li role=\"menuitem\"><a href=\"float/FROT\">FROT</a></li>\n        <li role=\"menuitem\"><a href=\"float/FROUND\">FROUND</a></li>\n        <li role=\"menuitem\"><a href=\"float/FSWAP\">FSWAP</a></li>\n        <li role=\"menuitem\"><a href=\"float/FVARIABLE\">FVARIABLE</a></li>\n        <li role=\"menuitem\"><a href=\"float/REPRESENT\">REPRESENT</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFStore\">DF!</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFFetch\">DF@</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFALIGN\">DFALIGN</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFALIGNED\">DFALIGNED</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFFIELDColon\">DFFIELD:</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFLOATPlus\">DFLOAT+</a></li>\n        <li role=\"menuitem\"><a href=\"float/DFLOATS\">DFLOATS</a></li>\n        <li role=\"menuitem\"><a href=\"float/FTimesTimes\">F**</a></li>\n        <li role=\"menuitem\"><a href=\"float/Fd\">F.</a></li>\n        <li role=\"menuitem\"><a href=\"float/FtoS\">F&gt;S</a></li>\n        <li role=\"menuitem\"><a href=\"float/FABS\">FABS</a></li>\n        <li role=\"menuitem\"><a href=\"float/FACOS\">FACOS</a></li>\n        <li role=\"menuitem\"><a href=\"float/FACOSH\">FACOSH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FALOG\">FALOG</a></li>\n        <li role=\"menuitem\"><a href=\"float/FASIN\">FASIN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FASINH\">FASINH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FATAN\">FATAN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FATANTwo\">FATAN2</a></li>\n        <li role=\"menuitem\"><a href=\"float/FATANH\">FATANH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FCOS\">FCOS</a></li>\n        <li role=\"menuitem\"><a href=\"float/FCOSH\">FCOSH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FEd\">FE.</a></li>\n        <li role=\"menuitem\"><a href=\"float/FEXP\">FEXP</a></li>\n        <li role=\"menuitem\"><a href=\"float/FEXPMOne\">FEXPM1</a></li>\n        <li role=\"menuitem\"><a href=\"float/FFIELDColon\">FFIELD:</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLN\">FLN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLNPOne\">FLNP1</a></li>\n        <li role=\"menuitem\"><a href=\"float/FLOG\">FLOG</a></li>\n        <li role=\"menuitem\"><a href=\"float/FSd\">FS.</a></li>\n        <li role=\"menuitem\"><a href=\"float/FSIN\">FSIN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FSINCOS\">FSINCOS</a></li>\n        <li role=\"menuitem\"><a href=\"float/FSINH\">FSINH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FSQRT\">FSQRT</a></li>\n        <li role=\"menuitem\"><a href=\"float/FTAN\">FTAN</a></li>\n        <li role=\"menuitem\"><a href=\"float/FTANH\">FTANH</a></li>\n        <li role=\"menuitem\"><a href=\"float/FTRUNC\">FTRUNC</a></li>\n        <li role=\"menuitem\"><a href=\"float/FVALUE\">FVALUE</a></li>\n        <li role=\"menuitem\"><a href=\"float/Ftilde\">F~</a></li>\n        <li role=\"menuitem\"><a href=\"float/PRECISION\">PRECISION</a></li>\n        <li role=\"menuitem\"><a href=\"float/StoF\">S&gt;F</a></li>\n        <li role=\"menuitem\"><a href=\"float/SET-PRECISION\">SET-PRECISION</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFStore\">SF!</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFFetch\">SF@</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFALIGN\">SFALIGN</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFALIGNED\">SFALIGNED</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFFIELDColon\">SFFIELD:</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFLOATPlus\">SFLOAT+</a></li>\n        <li role=\"menuitem\"><a href=\"float/SFLOATS\">SFLOATS</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "foreword": {
            "basename": "foreword",
            "name": "Foreword",
            "html": "<div id=\"body\">\n<h1 id=\"section*.2\">Foreword</h1>\n\n<a name=\"foreword\"></a>\nForth is a language for direct communication between human beings and\nmachines. Forth was invented by Charles Moore to increase programmer\nproductivity without sacrificing machine efficiency.\nUsing natural-language diction and machine-oriented syntax,\nForth provides an economical, productive environment for interactive\ncompilation and execution of programs. Forth also provides low-level\naccess to computer-controlled hardware, and the ability to extend the\nlanguage itself. This extensibility allows the language to be quickly\nexpanded and adapted to special needs and different hardware systems.\nForth provides for highly interactive program development and testing.\n<p>\nIn the interests of transportability of application software written in\nForth, standardization efforts began in the mid-1970s by an international\ngroup of users and implementors who adopted the name \"Forth Standards Team\".\nThis effort resulted in the Forth-77 Standard. As the language continued\nto evolve, an interim Forth-78 Standard was published by the Forth Standards\nTeam. Following Forth Standards Team meetings in 1979, the Forth-79 Standard\nwas published in 1980. Major changes were made by the Forth Standards Team\nin the Forth-83 Standard, which was published in 1983.\n</p><p>\nThe ANS Forth committee was formed in 1987 to address the fragmentation\nwithin the Forth community caused not only by the difference between\nForth 79 and Forth 83 but the exploitation of technical developments.\nUndertaking a comprehensive review of existing implementations they\nmoved away from prescribing stringent requirements, preferring to\ndescribe the operation of the virtual machine, without reference to\nan implementation.  The ANS Forth Standard was published in\n1994<sup>[1]</sup>\nand was adopted as an international standard in\n1997<sup>[2]</sup>.\n</p><p>\nThe Forth 200<em>x</em> Standardisation Committee was formed in 2004\nto allow the Forth community to contribute to an updated standard.\nChanges are proposed and discussed in the electronic media:\nthe usenet news group <code>comp.lang.forth</code>;\nthe <code>forth200x@yahoogroups.com</code> email list;\nthe <code>www.forth200x.org</code> web site.\nAnnual public meeting are held to review and vote on the proposed\nchanges.\n</p><p>\nThis document is the result of the public review meetings first held on\nOctober 21–22, 2005 (Santander) and subsequently on\nSeptember 14–15, 2006 (Cambridge),\nSeptember 13–14, 2007 (Dagstuhl),\nSeptember 25–26, 2008 (Vienna),\nMarch 25–27, 2009 (Neuenkirchen, Rheine),\nSeptember 2–4, 2009 (Exeter),\nMarch 24–26, 2010 (Rostock),\nSeptember 22–24, 2010 (Hamburg),\nSeptember 21–23, 2011 (Vienna),\nSeptember 12–14, 2012 (Oxford),\nSeptember 25–27, 2013 (Hamburg).</p><p>\n  <sup>[1]</sup> ANSI X3.215–1994 Information Systems — Programming Language FORTH<br>\n  <sup>[2]</sup> ISO/IEC 15145:1997 Information technology.  Programming languages.  FORTH</p>\n\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Foreword</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\" class=\"current\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "implement": {
            "basename": "implement",
            "name": "Annex E: Reference Implementations",
            "html": "<div id=\"body\">\n<h1>Annex E: Reference Implementations</h1> <!-- I. (informative annex) -->\n<a name=\"annex:implement\"></a>\n<p>\n</p><h2 id=\"section.E.1\">E.1 Introduction</h2> <!-- I.1 -->\nIn the most recent review of this document, proposals were encouraged\nto include a reference implementation where possible.  Where an\nimplementation requires system specific knowledge it was documented.\n<p>\nThis appendix contains the reference implementations that have been\naccepted by the committee.  This is not a complete reference\nimplementation nor do the committee recommend these implementations.\nThey are supplied solely for the purpose of providing a detailed\nunderstanding of a definitions requirement.  System implementors are\nfree to implement any operation in a manner that suits their system,\nbut it must exhibit the same behavior as the reference implementation\ngiven here.\n</p><p>\n\n\n\n\n\n</p><h2 id=\"section.E.6\">E.6 The Core word set</h2>\t\t\t\t<!-- I.6 -->\n\n\n<div class=\"wordHead\" id=\"imp:core:QUIT\">\n  <div class=\"wordNumber\">E.6.1.2050</div>\n  <div class=\"wordName\">QUIT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>QUIT</strong> <br>\n    &nbsp;&nbsp; <a href=\"core/p\">(</a> <span class=\"rm\">empty the return stack and set the input source to the user input device</span> ) <br>\n    &nbsp;&nbsp; <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/Bracket\">[</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/REFILL\">REFILL</a> <br>\n    &nbsp;&nbsp; <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/BracketTick\">[']</a> INTERPRET <a href=\"exception/CATCH\">CATCH</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;  0 <a href=\"core/OF\">OF</a> <a href=\"core/STATE\">STATE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a>\n    <a href=\"core/Dotq\">.\"</a> OK\" <a href=\"core/THEN\">THEN</a> <a href=\"core/CR\">CR</a> <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; -1 <a href=\"core/OF\">OF</a> <a href=\"core/p\">(</a> <span class=\"rm\">Aborted</span> ) <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; -2 <a href=\"core/OF\">OF</a> <a href=\"core/p\">(</a> <span class=\"rm\">display message from <a href=\"core/ABORTq\">ABORT\"</a></span> ) <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> <span class=\"rm\">default</span> ) <a href=\"core/DUP\">DUP</a> <a href=\"core/Dotq\">.\"</a> Exception # \" <a href=\"core/d\">.</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"tools/BYE\">BYE</a> <br>\n    <a href=\"core/Semi\">;</a>\n    <p>\n        </p><div class=\"rm\">\nThis assumes the existence of a system-implementation word\n      <code>INTERPRET</code> that embodies the text interpreter semantics\n      described in <strong><a href=\"usage#usage:command\">3.4 The Forth text interpreter</a></strong>.\n      Further discussion of the interpret loop can be found in\n      <a href=\"rationale#rat:core:COMPILE,\">A.6.2.0945 COMPILE,</a>.\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:ACTION-OF\">\n  <div class=\"wordNumber\">E.6.2.0698</div>\n  <div class=\"wordName\">ACTION-OF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>ACTION-OF</strong> <br>\n    &nbsp;&nbsp; <a href=\"core/STATE\">STATE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/BracketTick\">[']</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/DEFERFetch\">DEFER@</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Tick\">'</a> <a href=\"core/DEFERFetch\">DEFER@</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:BUFFER:\">\n  <div class=\"wordNumber\">E.6.2.0825</div>\n  <div class=\"wordName\">BUFFER:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n        <div class=\"rm\">\nThis implementation depends on children of <a href=\"core/CREATE\">CREATE</a>\n      returning an aligned address.  Other memory location techniques\n      require implementation-specific knowledge of the underlying Forth\n      system.\n      <p>\n            </p><div class=\"tt\">\n<a href=\"core/Colon\">:</a> <strong>BUFFER:</strong> <a href=\"core/bs\">\\</a> u \"&lt;name&gt;\" – ; – addr <br>\n        <a href=\"core/bs\">\\</a> <span class=\"rm\">Create a buffer of u address units whose address is returned at run time.</span> <br>\n        &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/ALLOT\">ALLOT</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:DEFER\">\n  <div class=\"wordNumber\">E.6.2.1173</div>\n  <div class=\"wordName\">DEFER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>DEFER</strong> <a href=\"core/p\">(</a> \"name\" -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/BracketTick\">[']</a> <a href=\"core/ABORT\">ABORT</a> <a href=\"core/Comma\">,</a> <br>\n    <a href=\"core/DOES\">DOES&gt;</a> <a href=\"core/p\">(</a> ... -- ... ) <br>\n    &nbsp;&nbsp; <a href=\"core/Fetch\">@</a> <a href=\"core/EXECUTE\">EXECUTE</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:DEFER!\">\n  <div class=\"wordNumber\">E.6.2.1175</div>\n  <div class=\"wordName\">DEFER!</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>DEFER!</strong> <a href=\"core/p\">(</a> xt2 xt1 -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/toBODY\">&gt;BODY</a> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:DEFER@\">\n  <div class=\"wordNumber\">E.6.2.1177</div>\n  <div class=\"wordName\">DEFER@</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>DEFER@</strong> <a href=\"core/p\">(</a> xt1 -- xt2 ) <br>\n    &nbsp;&nbsp; <a href=\"core/toBODY\">&gt;BODY</a> <a href=\"core/Fetch\">@</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:HOLDS\">\n  <div class=\"wordNumber\">E.6.2.1675</div>\n  <div class=\"wordName\">HOLDS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>HOLDS</strong> <a href=\"core/p\">(</a> addr u -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/WHILE\">WHILE</a> <a href=\"core/OneMinus\">1-</a> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Plus\">+</a>\n    <a href=\"core/CFetch\">C@</a> <a href=\"core/HOLD\">HOLD</a> <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:IS\">\n  <div class=\"wordNumber\">E.6.2.1725</div>\n  <div class=\"wordName\">IS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>IS</strong> <br>\n    &nbsp;&nbsp; <a href=\"core/STATE\">STATE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/BracketTick\">[']</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/DEFERStore\">DEFER!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Tick\">'</a> <a href=\"core/DEFERStore\">DEFER!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:core:PARSE-NAME\">\n  <div class=\"wordNumber\">E.6.2.2020</div>\n  <div class=\"wordName\">PARSE-NAME</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> isspace? <a href=\"core/p\">(</a> c -- f ) <br>\n    &nbsp;&nbsp; <a href=\"core/BL\">BL</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/Uless\">U&lt;</a> <a href=\"core/Semi\">;</a>\n    <p>\n    <a href=\"core/Colon\">:</a> isnotspace? <a href=\"core/p\">(</a> c -- f ) <br>\n    &nbsp;&nbsp; isspace? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> xt-skip <a href=\"core/p\">(</a> addr1 n1 xt -- addr2 n2 ) <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> skip all characters satisfying xt ( c -- f ) <br>\n    &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <br>\n    &nbsp;&nbsp; <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/EXECUTE\">EXECUTE</a> <br>\n    &nbsp;&nbsp; <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 1 <a href=\"string/DivSTRING\">/STRING</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> parse-name <a href=\"core/p\">(</a> \"name\" -- c-addr u ) <br>\n    &nbsp;&nbsp; <a href=\"core/SOURCE\">SOURCE</a> <a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Fetch\">@</a> <a href=\"string/DivSTRING\">/STRING</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BracketTick\">[']</a> isspace? xt-skip <a href=\"core/OVER\">OVER</a> <a href=\"core/toR\">&gt;R</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BracketTick\">[']</a> isnotspace? xt-skip <a href=\"core/p\">(</a> end-word restlen r: start-word ) <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> 1 <a href=\"core/MIN\">MIN</a> <a href=\"core/Plus\">+</a> <a href=\"core/SOURCE\">SOURCE</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Minus\">-</a> <a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Store\">!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/TUCK\">TUCK</a> <a href=\"core/Minus\">-</a> <a href=\"core/Semi\">;</a>\n    \n\n    </p></div>\n  </div>\n\n<p>\n\t\t\t\t\t<!-- I.7 -->\n</p><h2 id=\"section.E.8\">E.8 The optional Double-Number word set</h2>\n\n<div class=\"wordHead\" id=\"imp:double:2VALUE\">\n  <div class=\"wordNumber\">E.8.6.2.0435</div>\n  <div class=\"wordName\">2VALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n        <div class=\"rm\">\nThe implementation of <a href=\"core/TO\">TO</a> to include <strong>2VALUE</strong>s\n      requires detailed knowledge of the host implementation of\n      <a href=\"core/VALUE\">VALUE</a> and <a href=\"core/TO\">TO</a>, which is the main reason why\n      <strong>2VALUE</strong> should be standardized.  The order in which\n      the two cells are stored in memory is not specified in the\n      definition for <strong>2VALUE</strong> but this reference implementation\n      has to assume one ordering — this is not intended to be\n      definitive.\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <strong>2VALUE</strong> <a href=\"core/p\">(</a> x1 x2 -- ) <br>\n          &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/Comma\">,</a> <a href=\"core/Comma\">,</a> <br>\n          &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> <a href=\"core/TwoFetch\">2@</a> <a href=\"core/p\">(</a> -- x1 x2 ) <br>\n          <a href=\"core/Semi\">;</a>\n          \n          </div>\n        </div>\n      <p>\n      The corresponding implementation of <a href=\"core/TO\">TO</a> disregards the\n      issue that <a href=\"core/TO\">TO</a> must also work for integer <a href=\"core/VALUE\">VALUE</a>s\n      and locals.\n      </p><p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"core/TO\">TO</a> <a href=\"core/p\">(</a> x1 x2 \"&lt;spaces&gt;name\" -- ) <br>\n          &nbsp;&nbsp; <a href=\"core/Tick\">'</a> <a href=\"core/toBODY\">&gt;BODY</a> <br>\n          &nbsp;&nbsp; <a href=\"core/STATE\">STATE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"double/TwoLITERAL\">2LITERAL</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/TwoStore\">2!</a> <br>\n          &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoStore\">2!</a> <br>\n          &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n          <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n          \n          </div>\n        </div>\n      \n      </div>\n    </div>\n  </div>\t\t<!-- I.8 -->\n<h2 id=\"section.E.10\">E.10 The optional Exception word set</h2>\n\n<div class=\"wordHead\" id=\"imp:exception:CATCH\">\n  <div class=\"wordNumber\">E.9.6.1.0875</div>\n  <div class=\"wordName\">CATCH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n        <div class=\"rm\">\nThis sample implementation of <strong>CATCH</strong> uses the non-standard\n      words described below.  They or their equivalents are available in many\n      systems.  Other implementation strategies, including directly saving the\n      value of <a href=\"core/DEPTH\">DEPTH</a>, are possible if such words are not available.\n      <p>\n      </p><dl class=\"desc\">\n      <dt><code>SP@</code></dt><dd> ( -- <em>addr</em> ) <br>\n      returns the address corresponding to the top of data stack.\n      <p>\n      </p></dd>\n      <dt><code>SP!</code></dt><dd> ( <em>addr</em> -- ) <br>\n      sets the stack pointer to <em>addr</em>, thus restoring the stack\n      depth to the same depth that existed just before <em>addr</em> was\n      acquired by executing <code>SP@</code>.\n      <p>\n      </p></dd>\n      <dt><code>RP@</code></dt><dd> ( -- <em>addr</em> ) <br>\n      returns the address corresponding to the top of return stack.\n      <p>\n      </p></dd>\n      <dt><code>RP!</code></dt><dd> ( <em>addr</em> -- ) <br>\n      sets the return stack pointer to <em>addr</em>, thus restoring the\n      return stack depth to the same depth that existed just before\n      <em>addr</em> was acquired by executing <code>RP@</code>.\n      </dd></dl>\n      <br class=\"clear\">\n\n      <p>\n            </p><div class=\"tt\">\n<div class=\"tabbing\">\n          <a href=\"core/VARIABLE\">VARIABLE</a> HANDLER   0 HANDLER <a href=\"core/Store\">!</a>   <a href=\"core/bs\">\\</a> <span class=\"rm\">last exception handler</span> <br><br>\n           <a href=\"core/Colon\">:</a> <strong>CATCH</strong>   <a href=\"core/p\">(</a> xt -- exception# | 0  <a href=\"core/bs\">\\</a> <span class=\"rm\">return addr on stack</span> <br>\n          &nbsp;&nbsp;&nbsp;SP@ <a href=\"core/toR\">&gt;R</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> xt )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">save data stack pointer</span> <br>\n          &nbsp;&nbsp;&nbsp;HANDLER <a href=\"core/Fetch\">@</a> <a href=\"core/toR\">&gt;R</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> xt )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">and previous handler</span> <br>\n          &nbsp;&nbsp;&nbsp;RP@ HANDLER <a href=\"core/Store\">!</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> xt )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">set current handler</span> <br>\n          &nbsp;&nbsp;&nbsp;<a href=\"core/EXECUTE\">EXECUTE</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> )\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">execute returns if no</span> THROW <br>\n          &nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> HANDLER <a href=\"core/Store\">!</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">restore previous handler</span> <br>\n          &nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> )   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">discard saved stack ptr</span> <br>\n          &nbsp;&nbsp;&nbsp;\t0\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> 0 ) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">normal completion</span> <br>\n          <a href=\"core/Semi\">;</a>\n          <br>\n          \n          </div>\n        <p>\n                </p><div class=\"rm\">\nIn a multi-tasking system, the <code>HANDLER</code> variable should be in\n          the per-task variable area (i.e., a user variable).\n          <p>\n          This sample implementation does not explicitly handle the case in\n          which <strong>CATCH</strong> has never been called (i.e., the <a href=\"exception/ABORT\">ABORT</a>\n          behavior). One solution would be to execute a <strong>CATCH</strong> within\n          <a href=\"core/QUIT\">QUIT</a>, so that there is always an \"exception handler of last\n          resort\" present, as shown in <a href=\"implement#imp:core:QUIT\">E.6.1.2050 QUIT</a>.\n          \n          </p></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:exception:THROW\">\n  <div class=\"wordNumber\">E.9.6.1.2275</div>\n  <div class=\"wordName\">THROW</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">This is the counter part to <a href=\"implement#imp:exception:CATCH\">E.9.6.1.0875 CATCH</a>.</span>\n    <p>\n    </p><div class=\"tabbing\">\n       <a href=\"core/Colon\">:</a> <strong>THROW</strong> <a href=\"core/p\">(</a> ??? exception# -- ??? exception# ) <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/qDUP\">?DUP</a> <a href=\"core/IF\">IF</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> 0 THROW <span class=\"rm\">is no-op</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HANDLER <a href=\"core/Fetch\">@</a> RP!\t\t\t\t&nbsp; <a href=\"core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">restore prev return stack</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> HANDLER <a href=\"core/Store\">!</a>\t\t&nbsp;&nbsp; <a href=\"core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">restore prev handler</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a>\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> saved-sp )\t <a href=\"core/bs\">\\</a> exc# <span class=\"rm\">on return stack</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SP! <a href=\"core/DROP\">DROP</a> <a href=\"core/Rfrom\">R&gt;</a>\t\t&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> exc# )\t\t&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">restore stack</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> <span class=\"rm\">Return to the caller of CATCH because return</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> <span class=\"rm\">stack is restored to the state that existed</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> <span class=\"rm\">when CATCH began execution</span> <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n      <a href=\"core/Semi\">;</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:exception:ABORT\">\n  <div class=\"wordNumber\">E.9.6.2.0670</div>\n  <div class=\"wordName\">ABORT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>ABORT</strong>   -1 <a href=\"exception/THROW\">THROW</a>   <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\t\t<!-- I.9 -->\n<h2 id=\"section.E.12\">E.12 The optional Facility word set</h2>\n\n<div class=\"wordHead\" id=\"imp:facility:+FIELD\">\n  <div class=\"wordNumber\">E.10.6.2.0135</div>\n  <div class=\"wordName\">+FIELD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">Create a new field within a structure definition\n    of size <em>n</em> bytes.</span>\n    <p>\n    <a href=\"core/Colon\">:</a> +FIELD&nbsp;&nbsp;<a href=\"core/bs\">\\</a> n &lt;\"name\"&gt; -- ; Exec: addr -- 'addr <br>\n    &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Comma\">,</a> <a href=\"core/Plus\">+</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> <a href=\"core/Fetch\">@</a> <a href=\"core/Plus\">+</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:facility:BEGIN-STRUCTURE\">\n  <div class=\"wordNumber\">E.10.6.2.0763</div>\n  <div class=\"wordName\">BEGIN-STRUCTURE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">Begin definition of a new structure. Use in the\n    form <strong>BEGIN-STRUCTURE</strong> &lt;<em>name</em>&gt;.  At run time\n    &lt;<em>name</em>&gt; returns the size of the structure.</span>\n    <p>\n    <a href=\"core/Colon\">:</a> <strong>BEGIN-STRUCTURE</strong>&nbsp;&nbsp;<a href=\"core/bs\">\\</a> -- addr 0 ; -- size <br>\n    &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/HERE\">HERE</a> 0  0 <a href=\"core/Comma\">,</a> &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a>  mark stack, lay dummy <br>\n    &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> <a href=\"core/Fetch\">@</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> -- rec-len <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:facility:EKEYtoFKEY\">\n  <div class=\"wordNumber\">E.10.6.2.1306.40</div>\n  <div class=\"wordName\">EKEY&gt;FKEY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">The implementation is closely tied to the implementation\n    of <a href=\"facility/EKEY\">EKEY</a> and therefore unportable.</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:facility:END-STRUCTURE\">\n  <div class=\"wordNumber\">E.10.6.2.1336</div>\n  <div class=\"wordName\">END-STRUCTURE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">Terminate definition of a structure.</span>\n    <p>\n    <a href=\"core/Colon\">:</a> <strong>END-STRUCTURE</strong>&nbsp;&nbsp;<a href=\"core/bs\">\\</a> addr n -- <br>\n    &nbsp;&nbsp; <a href=\"core/SWAP\">SWAP</a> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> set len\n    \n    </p></div>\n  </div>\t\t\t<!-- I.10 -->\n<h2 id=\"section.E.14\">E.14 The optional File-Access word set</h2>\n\n<div class=\"wordHead\" id=\"imp:file:INCLUDE\">\n  <div class=\"wordNumber\">E.11.6.2.1714</div>\n  <div class=\"wordName\">INCLUDE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>INCLUDE</strong> <a href=\"file/p\">(</a> i*x \"name\" -- j*x ) <br>\n    &nbsp;&nbsp; <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <a href=\"file/INCLUDED\">INCLUDED</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:file:REQUIRE\">\n  <div class=\"wordNumber\">E.11.6.2.2144.10</div>\n  <div class=\"wordName\">REQUIRE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>REQUIRE</strong> <a href=\"file/p\">(</a> i*x \"name\" -- i*x ) <br>\n    &nbsp;&nbsp; <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <a href=\"file/REQUIRED\">REQUIRED</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:file:REQUIRED\">\n  <div class=\"wordNumber\">E.11.6.2.2144.50</div>\n  <div class=\"wordName\">REQUIRED</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n        <div class=\"rm\">\nThis implementation does not implement the requirements with\n      regard to <a href=\"core/MARKER\">MARKER</a> and <a href=\"tools/FORGET\">FORGET</a> (<strong>REQUIRED</strong>\n      only includes each file once, whether a marker was executed or\n      not), so it is not a correct implementation on systems that\n      support these words. It extends the definition of <a href=\"file/INCLUDED\">INCLUDED</a>\n      to record the name of files which have been either included or\n      required previously. The names are recorded in a linked list\n      held in the <code>included-names</code> variable.\n      <p>\n            </p><div class=\"tt\">\n<a href=\"core/Colon\">:</a> save-mem\t<a href=\"file/p\">(</a> addr1 u -- addr2 u ) <a href=\"core/bs\">\\</a> gforth <br>\n        <a href=\"core/bs\">\\</a> <span class=\"rm\">copy a memory block into a newly allocated region in the heap</span> <br>\n        &nbsp;&nbsp; <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <br>\n        &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"memory/ALLOCATE\">ALLOCATE</a> <a href=\"exception/THROW\">THROW</a> <br>\n        &nbsp;&nbsp; <a href=\"core/SWAP\">SWAP</a> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/ROT\">ROT</a> <a href=\"core/ROT\">ROT</a> <a href=\"core/MOVE\">MOVE</a> <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/Colon\">:</a> name-add <a href=\"file/p\">(</a> addr u listp -- ) <br>\n        &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> save-mem <a href=\"file/p\">(</a> addr1 u ) <br>\n        &nbsp;&nbsp; 3 <a href=\"core/CELLS\">CELLS</a> <a href=\"memory/ALLOCATE\">ALLOCATE</a> <a href=\"exception/THROW\">THROW</a> <a href=\"core/bs\">\\</a> allocate list node <br>\n        &nbsp;&nbsp; <a href=\"core/RFetch\">R@</a> <a href=\"core/Fetch\">@</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Store\">!</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">set next pointer</span> <br>\n        &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Store\">!</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">store current node in list var</span> <br>\n        &nbsp;&nbsp; <a href=\"core/CELLPlus\">CELL+</a> <a href=\"core/TwoStore\">2!</a> <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/Colon\">:</a> name-present? <a href=\"file/p\">(</a> addr u list -- f ) <br>\n        &nbsp;&nbsp; <a href=\"core/ROT\">ROT</a> <a href=\"core/ROT\">ROT</a> <a href=\"core/TwotoR\">2&gt;R</a> <a href=\"core/BEGIN\">BEGIN</a> <a href=\"file/p\">(</a> list R: addr u ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <br>\n        &nbsp;&nbsp; <a href=\"core/WHILE\">WHILE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"core/CELLPlus\">CELL+</a> <a href=\"core/TwoFetch\">2@</a> <a href=\"core/TwoRFetch\">2R@</a> <a href=\"string/COMPARE\">COMPARE</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/DROP\">DROP</a> <a href=\"core/TwoRfrom\">2R&gt;</a> <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/TRUE\">TRUE</a> <a href=\"core/EXIT\">EXIT</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Fetch\">@</a> <br>\n        &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <br>\n        &nbsp;&nbsp; <a href=\"file/p\">(</a> <a href=\"core/DROP\">DROP</a> 0 ) <a href=\"core/TwoRfrom\">2R&gt;</a> <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/Colon\">:</a> name-join <a href=\"file/p\">(</a> addr u list -- ) <br>\n        &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/Fetch\">@</a> name-present? <a href=\"core/IF\">IF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/TwoDROP\">2DROP</a> <br>\n        &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> name-add <br>\n        &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/VARIABLE\">VARIABLE</a> included-names 0 included-names <a href=\"core/Store\">!</a> <br>\n        <a href=\"core/Colon\">:</a> included <a href=\"file/p\">(</a> i*x addr u -- j*x ) <br>\n        &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> included-names name-join <br>\n        &nbsp;&nbsp; <a href=\"file/INCLUDED\">INCLUDED</a> <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/Colon\">:</a> <strong>REQUIRED</strong> <a href=\"file/p\">(</a> i*x addr u -- i*x ) <br>\n        &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> included-names <a href=\"core/Fetch\">@</a> name-present? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; included <br>\n        &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDROP\">2DROP</a> <br>\n        &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    </div>\n  </div>\t\t\t<!-- I.11 -->\n<h2 id=\"section.E.16\">E.16 The optional Floating-Point word set</h2>\n\n<div class=\"wordHead\" id=\"imp:floating:FtoS\">\n  <div class=\"wordNumber\">E.12.6.2.1471</div>\n  <div class=\"wordName\">F&gt;S</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>F&gt;S</strong> <a href=\"core/p\">(</a> r -- n ) <br>\n    &nbsp;&nbsp; <a href=\"float/FtoD\">F&gt;D</a> <a href=\"double/DtoS\">D&gt;S</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:floating:FTRUNC\">\n  <div class=\"wordNumber\">E.12.6.2.1627</div>\n  <div class=\"wordName\">FTRUNC</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>FTRUNC</strong>   <a href=\"core/p\">(</a> r1 -- r2 ) <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDUP\">FDUP</a> <a href=\"float/FZeroEqual\">F0=</a> <a href=\"core/ZeroEqual\">0=</a> <br>\n    &nbsp;&nbsp; <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp; <a href=\"float/FDUP\">FDUP</a> <a href=\"float/FZeroless\">F0&lt;</a> <br>\n    &nbsp;&nbsp; <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp; <a href=\"float/FNEGATE\">FNEGATE</a> <a href=\"float/FLOOR\">FLOOR</a> <a href=\"float/FNEGATE\">FNEGATE</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a>&nbsp;&nbsp; <a href=\"float/FLOOR\">FLOOR</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a>&nbsp;&nbsp; <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:floating:FVALUE\">\n  <div class=\"wordNumber\">E.12.6.2.1628</div>\n  <div class=\"wordName\">FVALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n        <div class=\"rm\">\nThe implementation of <strong>FVALUE</strong> requires detailed\n      knowledge of the host implementation of <a href=\"core/VALUE\">VALUE</a> and\n      <a href=\"core/TO\">TO</a>.\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"core/VARIABLE\">VARIABLE</a> %var <br>\n          <a href=\"core/Colon\">:</a> <a href=\"core/TO\">TO</a> 1 %var <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n          <p>\n          <a href=\"core/Colon\">:</a> <strong>FVALUE</strong> <a href=\"core/p\">(</a> F: r -- ) <a href=\"core/p\">(</a> \"&lt;spaces&gt;name\" -- ) <br>\n          &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> F, <br>\n          &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> %var <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a> <a href=\"float/FStore\">F!</a> <a href=\"core/ELSE\">ELSE</a> <a href=\"float/FFetch\">F@</a> <a href=\"core/THEN\">THEN</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 %var <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n          </p><p>\n          <a href=\"core/Colon\">:</a> <a href=\"core/VALUE\">VALUE</a> <a href=\"core/p\">(</a> x \"&lt;spaces&gt;name\" -- ) <br>\n          &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/Comma\">,</a> <br>\n          &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> %var <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a>  <a href=\"core/Store\">!</a> <a href=\"core/ELSE\">ELSE</a>  <a href=\"core/Fetch\">@</a> <a href=\"core/THEN\">THEN</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 %var <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n          \n          </p></div>\n        </div>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:floating:StoF\">\n  <div class=\"wordNumber\">E.12.6.2.2175</div>\n  <div class=\"wordName\">S&gt;F</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>S&gt;F</strong> <a href=\"core/p\">(</a> n -- r ) <br>\n    &nbsp;&nbsp; <a href=\"core/StoD\">S&gt;D</a> <a href=\"float/DtoF\">D&gt;F</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\t<!-- I.12 -->\n<h2 id=\"section.E.18\">E.18 The optional Locals word set</h2>\n\n<div class=\"wordHead\" id=\"imp:local:LOCALS\">\n  <div class=\"wordNumber\">E.13.6.2.1795</div>\n  <div class=\"wordName\">LOCALS|</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>LOCALS|</strong> <a href=\"core/p\">(</a> \"name...name |\" -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <br>\n    &nbsp;&nbsp;  <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a>   <a href=\"core/COUNT\">COUNT</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> <br>\n    &nbsp;&nbsp;  <a href=\"core/BracketCHAR\">[CHAR]</a> | <a href=\"core/Minus\">-</a> <a href=\"core/OVER\">OVER</a> 1 <a href=\"core/Minus\">-</a> <a href=\"core/OR\">OR</a>   <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;  <a href=\"locals/LOCAL\">(LOCAL)</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/TwoDROP\">2DROP</a>   0 0 <a href=\"locals/LOCAL\">(LOCAL)</a> <br>\n    <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:local:b:\">\n  <div class=\"wordNumber\">E.13.6.2.2550</div>\n  <div class=\"wordName\">{:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    12345 <a href=\"core/CONSTANT\">CONSTANT</a> undefined-value\n    <p>\n    <a href=\"core/Colon\">:</a> match-or-end? <a href=\"core/p\">(</a> c-addr1 u1 c-addr2 u2 -- f ) <br>\n    &nbsp;&nbsp;&nbsp;2 <a href=\"core/PICK\">PICK</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/toR\">&gt;R</a> <a href=\"string/COMPARE\">COMPARE</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/OR\">OR</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> scan-args <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> 0 c-addr1 u1 -- c-addr1 u1 ... c-addrn un n c-addrn+1 un+1<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> |\"    match-or-end? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> --\" match-or-end? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> :}\"  match-or-end? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/ROT\">ROT</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/AGAIN\">AGAIN</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> scan-locals <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> n c-addr1 u1 -- c-addr1 u1 ... c-addrn un n c-addrn+1 un+1 <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> |\" <a href=\"string/COMPARE\">COMPARE</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/EXIT\">EXIT</a> <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> --\" match-or-end? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> :}\"  match-or-end? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/ROT\">ROT</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/POSTPONE\">POSTPONE</a> undefined-value <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/AGAIN\">AGAIN</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> scan-end <a href=\"core/p\">(</a> c-addr1 u1 -- c-addr2 u2 ) <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> :}\" match-or-end? <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> define-locals <a href=\"core/p\">(</a> c-addr1 u1 ... c-addrn un n -- ) <br>\n    &nbsp;&nbsp;&nbsp;0 <a href=\"core/qDO\">?DO</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"locals/LOCAL\">(LOCAL)</a> <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/LOOP\">LOOP</a> <br>\n    &nbsp;&nbsp;&nbsp;0 0 <a href=\"locals/LOCAL\">(LOCAL)</a> <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> {: <a href=\"core/p\">(</a> -- ) <br>\n    &nbsp;&nbsp;&nbsp;0 <a href=\"core/PARSE-NAME\">PARSE-NAME</a> <br>\n    &nbsp;&nbsp;&nbsp;scan-args scan-locals scan-end <br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/TwoDROP\">2DROP</a> define-locals <br>\n    <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </p></div>\n  </div>\t\t\t\t\t<!-- I.13 -->\n\t<!-- I.14 -->\n<h2 id=\"section.E.20\">E.20 The optional Programming-Tools word set</h2>\n\n<div class=\"wordHead\" id=\"imp:tools:NtoR\">\n  <div class=\"wordNumber\">E.15.6.2.1908</div>\n  <div class=\"wordName\">N&gt;R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">This implementation depends on the return address being on\n    the return stack.</span>\n    <p>\n    </p><div class=\"tabbing\">\n      <a href=\"core/Colon\">:</a> <strong>N&gt;R</strong>           <a href=\"core/bs\">\\</a> xn .. x1 N -- ; R: -- x1 .. xn n <br>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Transfer N items and count to the return stack.</span>  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> xn .. x1 N N -- <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a>  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a>  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/WHILE\">WHILE</a>  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/ROT\">ROT</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/toR\">&gt;R</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> xn .. N N -- ; R: .. x1 -- <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/OneMinus\">1-</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> xn .. N 'N -- ; R: .. x1 --  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/REPEAT\">REPEAT</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/DROP\">DROP</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> N -- ; R: x1 .. xn -- <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/toR\">&gt;R</a>  <br>\n      <a href=\"core/Semi\">;</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:NRfrom\">\n  <div class=\"wordNumber\">E.15.6.2.1940</div>\n  <div class=\"wordName\">NR&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">This implementation depends on the return address being on\n    the return stack.</span>\n    <p>\n    </p><div class=\"tabbing\">\n      <a href=\"core/Colon\">:</a> <strong>NR&gt;</strong> <a href=\"core/bs\">\\</a> -- xn .. x1 N ; R: x1 .. xn N -- <br>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Pull N items and count off the return stack.</span>  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/DUP\">DUP</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a>  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a>  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/WHILE\">WHILE</a>  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> -ROT <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/OneMinus\">1-</a>  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/REPEAT\">REPEAT</a> <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/DROP\">DROP</a>  <br>\n      <a href=\"core/Semi\">;</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:SYNONYM\">\n  <div class=\"wordNumber\">E.15.6.2.2264</div>\n  <div class=\"wordName\">SYNONYM</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n        <div class=\"rm\">\nThe implementation of <strong>SYNONYM</strong> requires detailed knowledge\n      of the host implementation, which is one reason why it should be\n      standardized.  The implementation below is imperfect and specific\n      to VFX Forth, in particular <code>HIDE</code>, <code>REVEAL</code> and\n      <code>IMMEDIATE?</code> are non-standard words.\n      <p>\n            </p><div class=\"quote\">\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <strong>SYNONYM</strong> <a href=\"core/bs\">\\</a> \"newname\" \"oldname\" -- <br>\n          <a href=\"core/bs\">\\</a> <span class=\"rm\">Create a new definition which redirects to an existing one.</span> <br>\n          &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; HIDE <a href=\"core/Tick\">'</a> <a href=\"core/Comma\">,</a> REVEAL <br>\n          &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Fetch\">@</a>  <a href=\"tools/STATE\">STATE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/OVER\">OVER</a> IMMEDIATE? <a href=\"core/OR\">OR</a> <br>\n          &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/IF\">IF</a> <a href=\"core/EXECUTE\">EXECUTE</a> <a href=\"core/ELSE\">ELSE</a> <a href=\"core/COMPILEComma\">COMPILE,</a> <a href=\"core/THEN\">THEN</a> <br>\n          <a href=\"core/Semi\">;</a>\n          \n          </div>\n        </div>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:[DEFINED]\">\n  <div class=\"wordNumber\">E.15.6.2.2530.30</div>\n  <div class=\"wordName\">[DEFINED]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>[DEFINED]</strong> <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a> <a href=\"core/FIND\">FIND</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/Zerone\">0&lt;&gt;</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:[ELSE]\">\n  <div class=\"wordNumber\">E.15.6.2.2531</div>\n  <div class=\"wordName\">[ELSE]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <div class=\"tabbing\">\n      \n      <a href=\"core/Colon\">:</a> <strong>[ELSE]</strong> <a href=\"core/p\">(</a> -- ) <br>\n      &nbsp;&nbsp;&nbsp; 1 <a href=\"core/BEGIN\">BEGIN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> level <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a>   <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a> <a href=\"core/COUNT\">COUNT</a>   <a href=\"core/DUP\">DUP</a>   <a href=\"core/WHILE\">WHILE</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> level adr len <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> [IF]\"  <a href=\"string/COMPARE\">COMPARE</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> level adr len <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/OnePlus\">1+</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> level' <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> level adr len <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Sq\">S\"</a> [ELSE]\" <a href=\"string/COMPARE\">COMPARE</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> level adr len <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/OneMinus\">1-</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/IF\">IF</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/THEN\">THEN</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> level' <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/ELSE\">ELSE</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> level adr len <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> [THEN]\" <a href=\"string/COMPARE\">COMPARE</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> level <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/OneMinus\">1-</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t<a href=\"core/bs\">\\</a> level' <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/qDUP\">?DUP</a> <a href=\"core/ZeroEqual\">0=</a>   <a href=\"core/IF\">IF</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> level' <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/TwoDROP\">2DROP</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> level <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/REFILL\">REFILL</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/UNTIL\">UNTIL</a>\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> level <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:[IF]\">\n  <div class=\"wordNumber\">E.15.6.2.2532</div>\n  <div class=\"wordName\">[IF]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>[IF]</strong> <a href=\"core/p\">(</a> flag -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"tools/BracketELSE\">[ELSE]</a> <a href=\"core/THEN\">THEN</a> <br>\n    <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:[THEN]\">\n  <div class=\"wordNumber\">E.15.6.2.2533</div>\n  <div class=\"wordName\">[THEN]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>[THEN]</strong> <a href=\"core/p\">(</a> -- ) <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:tools:[UNDEFINED]\">\n  <div class=\"wordNumber\">E.15.6.2.2534</div>\n  <div class=\"wordName\">[UNDEFINED]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>[UNDEFINED]</strong> <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a> <a href=\"core/FIND\">FIND</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\t<!-- I.15 -->\n<h2 id=\"section.E.22\">E.22 The optional Search-Order word set</h2>\n\n<div class=\"wordHead\" id=\"imp:search:DEFINITIONS\">\n  <div class=\"wordNumber\">E.16.6.1.1180</div>\n  <div class=\"wordName\">DEFINITIONS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> discard <a href=\"core/p\">(</a> x1 ... xn u -- ) \\ <span class=\"rm\">Drop u+1 stack items</span> <br>\n    &nbsp;&nbsp; 0 <a href=\"core/qDO\">?DO</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/LOOP\">LOOP</a> <br>\n    <a href=\"core/Semi\">;</a>\n    <p>\n    <a href=\"core/Colon\">:</a> <strong>DEFINITIONS</strong> <a href=\"core/p\">(</a> -- ) <br>\n    &nbsp;&nbsp; <a href=\"search/GET-ORDER\">GET-ORDER</a> <a href=\"core/SWAP\">SWAP</a>  <a href=\"search/SET-CURRENT\">SET-CURRENT</a> discard <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:FIND\">\n  <div class=\"wordNumber\">E.16.6.1.1550</div>\n  <div class=\"wordName\">FIND</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">Assuming <div>\n    <div class=\"tt\">\n#order\n        </div>\n      </div> and <div>\n    <div class=\"tt\">\n context\n        </div>\n      </div> are defined as per <a href=\"implement#imp:search:GET-ORDER\">E.16.6.1.1647 GET-ORDER</a>.</span>\n    <p>\n    </p><div class=\"tabbing\">\n      <a href=\"core/Colon\">:</a> <strong>FIND</strong> <a href=\"core/p\">(</a> c-addr -- c-addr 0 | xt 1 | xt -1 )  <br>\n      &nbsp;&nbsp;&nbsp;0 \t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0 ) <br>\n      &nbsp;&nbsp;&nbsp;#order <a href=\"core/Fetch\">@</a> 0 <a href=\"core/qDO\">?DO</a>  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/OVER\">OVER</a> <a href=\"core/COUNT\">COUNT</a>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0 c-addr' u ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/I\">I</a> <a href=\"core/CELLS\">CELLS</a> context <a href=\"core/Plus\">+</a> <a href=\"core/Fetch\">@</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0 c-addr' u wid ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0; 0 | w 1 | q -1 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/qDUP\">?DUP</a> <a href=\"core/IF\">IF</a>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0; w 1 | w -1 )  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/TwoSWAP\">2SWAP</a> <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/LEAVE\">LEAVE</a>\t\t\t&nbsp;&nbsp;\t\t<a href=\"core/p\">(</a> w 1 | w -1 )  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0 )  <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/LOOP\">LOOP</a>\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr 0 | w 1 | w -1 )  <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:GET-ORDER\">\n  <div class=\"wordNumber\">E.16.6.1.1647</div>\n  <div class=\"wordName\">GET-ORDER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">Here is a very simple search order implementation:</span>\n    <p>\n    <a href=\"core/VARIABLE\">VARIABLE</a> #order\n    </p><p>\n    <a href=\"core/CREATE\">CREATE</a> context    16 <a href=\"core/p\">(</a> wordlists ) <a href=\"core/CELLS\">CELLS</a> <a href=\"core/ALLOT\">ALLOT</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> <strong>GET-ORDER</strong> <a href=\"core/p\">(</a> -- wid1 ... widn n ) <br>\n    &nbsp;&nbsp; #order <a href=\"core/Fetch\">@</a> 0 <a href=\"core/qDO\">?DO</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; #order <a href=\"core/Fetch\">@</a> <a href=\"core/I\">I</a> <a href=\"core/Minus\">-</a> <a href=\"core/OneMinus\">1-</a> <a href=\"core/CELLS\">CELLS</a> context <a href=\"core/Plus\">+</a> <a href=\"core/Fetch\">@</a> <br>\n    &nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <br>\n    &nbsp;&nbsp; #order <a href=\"core/Fetch\">@</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:SET-ORDER\">\n  <div class=\"wordNumber\">E.16.6.1.2197</div>\n  <div class=\"wordName\">SET-ORDER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">This is the complement of <a href=\"implement#imp:search:GET-ORDER\">E.16.6.1.1647 GET-ORDER</a>.</span>\n    <p>\n    <a href=\"core/Colon\">:</a> <strong>SET-ORDER</strong> <a href=\"core/p\">(</a> wid1 ... widn n -0 ) <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> -1 <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> &lt;<em><span class=\"rm\">push system default word lists and n</span></em>&gt; <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> #order <a href=\"core/Store\">!</a> <br>\n    &nbsp;&nbsp; 0 <a href=\"core/qDO\">?DO</a>   <a href=\"core/I\">I</a> <a href=\"core/CELLS\">CELLS</a> context <a href=\"core/Plus\">+</a> <a href=\"core/Store\">!</a>   <a href=\"core/LOOP\">LOOP</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:ALSO\">\n  <div class=\"wordNumber\">E.16.6.2.0715</div>\n  <div class=\"wordName\">ALSO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>ALSO</strong> <a href=\"core/p\">(</a> -- ) <br>\n    &nbsp;&nbsp; <a href=\"search/GET-ORDER\">GET-ORDER</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/OnePlus\">1+</a> <a href=\"search/SET-ORDER\">SET-ORDER</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:FORTH\">\n  <div class=\"wordNumber\">E.16.6.2.1590</div>\n  <div class=\"wordName\">FORTH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> (wordlist) <a href=\"core/p\">(</a> wid \"&lt;name&gt;\" – ; ) <br>\n    &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"core/Comma\">,</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Fetch\">@</a>  <a href=\"core/toR\">&gt;R</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"search/GET-ORDER\">GET-ORDER</a> <a href=\"core/NIP\">NIP</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"search/SET-ORDER\">SET-ORDER</a> <br>\n    <a href=\"core/Semi\">;</a>\n    <p>\n    <a href=\"search/FORTH-WORDLIST\">FORTH-WORDLIST</a> (wordlist) <strong>FORTH</strong>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:ONLY\">\n  <div class=\"wordNumber\">E.16.6.2.1965</div>\n  <div class=\"wordName\">ONLY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>ONLY</strong> <a href=\"core/p\">(</a> -- ) -1 <a href=\"search/SET-ORDER\">SET-ORDER</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:search:PREVIOUS\">\n  <div class=\"wordNumber\">E.16.6.2.2037</div>\n  <div class=\"wordName\">PREVIOUS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>PREVIOUS</strong> <a href=\"core/p\">(</a> -- )\n    <a href=\"search/GET-ORDER\">GET-ORDER</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/OneMinus\">1-</a> <a href=\"search/SET-ORDER\">SET-ORDER</a>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\t\t<!-- I.16 -->\n<h2 id=\"section.E.24\">E.24 The optional String word set</h2>\n\n<div class=\"wordHead\" id=\"imp:string:REPLACES\">\n  <div class=\"wordNumber\">E.17.6.2.2141</div>\n  <div class=\"wordName\">REPLACES</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/DECIMAL\">DECIMAL</a>\n    <p>\n    <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> place <a href=\"tools/BracketIF\">[IF]</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> place &nbsp;&nbsp; <a href=\"core/bs\">\\</a>  c-addr1 u c-addr2 -- <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Copy the string described by <em>c-addr<em><sub>1</sub></em> u</em> as a counted</span> <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">string at the memory address described by <em>c-addr<em><sub>2</sub></em></em>.</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/TwotoR\">2&gt;R</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 1 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Plus\">+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/MOVE\">MOVE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoRfrom\">2R&gt;</a> <a href=\"core/CStore\">C!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Semi\">;</a> <br>\n    <a href=\"tools/BracketTHEN\">[THEN]</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> \"/COUNTED-STRING\" <a href=\"core/Sq\">S\"</a> /COUNTED-STRING\" <a href=\"core/Semi\">;</a> <br>\n    \"/COUNTED-STRING\" <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"tools/BracketIF\">[IF]</a> 256 <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n    <a href=\"core/CHARS\">CHARS</a> <a href=\"core/CONSTANT\">CONSTANT</a> string-max\n    </p><p>\n    <a href=\"search/WORDLIST\">WORDLIST</a> <a href=\"core/CONSTANT\">CONSTANT</a> wid-subst <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Wordlist ID of the wordlist used to hold substitution names and replacement text.</span>\n    </p><p>\n    <a href=\"tools/BracketDEFINED\">[DEFINED]</a> VFXforth <a href=\"tools/BracketIF\">[IF]</a> <a href=\"core/bs\">\\</a> <span class=\"rm\"><strong>VFX Forth</strong></span> <br>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> makeSubst\t<a href=\"core/bs\">\\</a> c-addr len -- c-addr <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Given a name string create a substution and storage space.</span> <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Return the address of the buffer for the substitution text.</span> <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">This word requires system specific knowledge of the host Forth.</span> <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Some systems may need to perform case conversion here.</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"search/GET-CURRENT\">GET-CURRENT</a> <a href=\"core/toR\">&gt;R</a> wid-subst <a href=\"search/SET-CURRENT\">SET-CURRENT</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; ($create) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">like <a href=\"core/CREATE\">CREATE</a> but takes c-addr/len</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"search/SET-CURRENT\">SET-CURRENT</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/HERE\">HERE</a>  string-max <a href=\"core/ALLOT\">ALLOT</a>  0 <a href=\"core/OVER\">OVER</a> <a href=\"core/CStore\">C!</a>\t<a href=\"core/bs\">\\</a> <span class=\"rm\">create buffer space</span> <br>\n    &nbsp;&nbsp; <a href=\"core/Semi\">;</a> <br>\n    <a href=\"tools/BracketTHEN\">[THEN]</a>\n    </p><p>\n    <a href=\"tools/BracketDEFINED\">[DEFINED]</a> (WID-CREATE) <a href=\"tools/BracketIF\">[IF]</a> <a href=\"core/bs\">\\</a> <span class=\"rm\"><strong>SwiftForth</strong></span> <br>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> makeSubst <a href=\"core/bs\">\\</a> c-addr len -- c-addr <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; wid-subst (WID-CREATE) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">like <a href=\"core/CREATE\">CREATE</a> but takes c-addr/len/wid</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; LAST <a href=\"core/Fetch\">@</a> &gt;CREATE <a href=\"core/Store\">!</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/HERE\">HERE</a>  string-max <a href=\"core/ALLOT\">ALLOT</a>  0 <a href=\"core/OVER\">OVER</a> <a href=\"core/CStore\">C!</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">create buffer space</span> <br>\n    &nbsp;&nbsp; <a href=\"core/Semi\">;</a> <br>\n    <a href=\"tools/BracketTHEN\">[THEN]</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> findSubst <a href=\"core/bs\">\\</a> c-addr len -- xt flag | 0 <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Given a name string, find the substitution.</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Return <em>xt</em> and <em>flag</em> if found, or just zero if not found.</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Some systems may need to perform case conversion here.</span> <br>\n    &nbsp;&nbsp; wid-subst <a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a> <br>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> <strong>REPLACES</strong> <a href=\"core/bs\">\\</a> text tlen name nlen -- <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Define the string <em>text/tlen</em> as the text to substitute for the substitution named <em>name/nlen</em>.</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">If the substitution does not exist it is created.</span> <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> findSubst <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/NIP\">NIP</a> <a href=\"core/NIP\">NIP</a>  <a href=\"core/EXECUTE\">EXECUTE</a> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">get buffer address</span> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; makeSubst <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; place &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">copy as counted string</span> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:string:SUBSTITUTE\">\n  <div class=\"wordNumber\">E.17.6.2.2255</div>\n  <div class=\"wordName\">SUBSTITUTE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <span class=\"rm\">Assuming <a href=\"implement#imp:string:REPLACES\">E.17.6.2.2141 REPLACES</a> has been defined.</span>\n    <p>\n    <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> bounds <a href=\"tools/BracketIF\">[IF]</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> bounds &nbsp;&nbsp; <a href=\"core/bs\">\\</a> addr len -- addr+len addr <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a> <a href=\"core/SWAP\">SWAP</a><br>\n    &nbsp;&nbsp; <a href=\"core/Semi\">;</a> <br>\n    <a href=\"tools/BracketTHEN\">[THEN]</a>\n    </p><p>\n    <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> -rot <a href=\"tools/BracketIF\">[IF]</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> -rot &nbsp;&nbsp; <a href=\"core/bs\">\\</a> a b c -- c a b <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ROT\">ROT</a> <a href=\"core/ROT\">ROT</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Semi\">;</a> <br>\n    <a href=\"tools/BracketTHEN\">[THEN]</a>\n    </p><p>\n    <a href=\"core/CHAR\">CHAR</a> % <a href=\"core/CONSTANT\">CONSTANT</a> delim\n    &nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Character used as the substitution name delimiter.</span> <br>\n    string-max <a href=\"core/BUFFERColon\">BUFFER:</a> Name\t<!-- \\word{bs} -{}- addr \\\\ -->\n     <a href=\"core/bs\">\\</a> <span class=\"rm\">Holds substitution name as a counted string.</span> <br>\n    <a href=\"core/VARIABLE\">VARIABLE</a> DestLen <!-- \\word{bs} -{}- addr \\\\ -->\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Maximum length of the destination buffer.</span> <br>\n    <a href=\"double/TwoVARIABLE\">2VARIABLE</a> Dest <!-- \\word{bs} -{}- addr \\\\ -->\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Holds destination string current length and address.</span> <br>\n    <a href=\"core/VARIABLE\">VARIABLE</a> SubstErr <!-- \\word{bs} -{}- addr \\\\ -->\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Holds zero or an error code.</span>\n    </p><p>\n    <a href=\"core/Colon\">:</a> addDest <a href=\"core/bs\">\\</a> char -- <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Add the character to the destination string.</span> <br>\n    &nbsp;&nbsp; Dest <a href=\"core/Fetch\">@</a> DestLen <a href=\"core/Fetch\">@</a> <a href=\"core/less\">&lt;</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; Dest <a href=\"core/TwoFetch\">2@</a> <a href=\"core/Plus\">+</a> <a href=\"core/CStore\">C!</a>  1 <a href=\"core/CHARS\">CHARS</a> Dest <a href=\"core/PlusStore\">+!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> -1 SubstErr <a href=\"core/Store\">!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> formName <a href=\"core/bs\">\\</a> c-addr len -- c-addr' len' <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Given a source string pointing at a leading delimiter, place the name string in the name buffer.</span> <br>\n    &nbsp;&nbsp; 1 <a href=\"string/DivSTRING\">/STRING</a> <a href=\"core/TwoDUP\">2DUP</a> delim scan <a href=\"core/toR\">&gt;R</a> <a href=\"core/DROP\">DROP</a>\t\t\t\t  <a href=\"core/bs\">\\</a> <span class=\"rm\">find length of residue</span> <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Minus\">-</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/toR\">&gt;R</a> Name place &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">save name in buffer</span> <br>\n    &nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> 1 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Plus\">+</a> <a href=\"string/DivSTRING\">/STRING</a>\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">step over name and trailing <code>%</code></span> <br>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> &gt;dest <a href=\"core/bs\">\\</a> c-addr len -- <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Add a string to the output string.</span> <br>\n    &nbsp;&nbsp; bounds <a href=\"core/qDO\">?DO</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"core/CFetch\">C@</a> addDest <br>\n    &nbsp;&nbsp; 1 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/PlusLOOP\">+LOOP</a> <br>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> processName <a href=\"core/bs\">\\</a> -- flag <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Process the last substitution name. Return true if found, 0 if not found.</span> <br>\n    &nbsp;&nbsp; Name <a href=\"core/COUNT\">COUNT</a> findSubst <a href=\"core/DUP\">DUP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/EXECUTE\">EXECUTE</a> <a href=\"core/COUNT\">COUNT</a> &gt;dest <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; delim addDest  Name <a href=\"core/COUNT\">COUNT</a> &gt;dest  delim addDest <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <br>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    <a href=\"core/Colon\">:</a> <strong>SUBSTITUTE</strong> <a href=\"core/bs\">\\</a> src slen dest dlen -- dest dlen' n <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Expand the source string using substitutions.</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Note that this version is simplistic, performs no error checking,</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">and requires a global buffer and global variables.</span> <br>\n    &nbsp;&nbsp; Destlen <a href=\"core/Store\">!</a>  0 Dest <a href=\"core/TwoStore\">2!</a>  0 -rot <a href=\"core/bs\">\\</a> -- 0 src slen <br>\n    &nbsp;&nbsp; 0 SubstErr <a href=\"core/Store\">!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> 0 <a href=\"core/more\">&gt;</a> <br>\n    &nbsp;&nbsp; <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> delim <a href=\"core/ne\">&lt;&gt;</a> <a href=\"core/IF\">IF</a>\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">character not <code>%</code></span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> addDest  1 <a href=\"string/DivSTRING\">/STRING</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/OVER\">OVER</a> 1 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Plus\">+</a> <a href=\"core/CFetch\">C@</a> delim <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\"><code>%%</code> for one output <code>%</code></span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\tdelim addDest  2 <a href=\"string/DivSTRING\">/STRING</a>\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">add one <code>%</code> to output</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\tformName processName <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t<a href=\"core/ROT\">ROT</a> <a href=\"core/OnePlus\">1+</a> -rot\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">count substitutions</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDROP\">2DROP</a> Dest <a href=\"core/TwoFetch\">2@</a>  <a href=\"core/ROT\">ROT</a> SubstErr <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/DROP\">DROP</a>  SubstErr <a href=\"core/Fetch\">@</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:string:UNESCAPE\">\n  <div class=\"wordNumber\">E.17.6.2.2375</div>\n  <div class=\"wordName\">UNESCAPE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>UNESCAPE</strong> <a href=\"core/bs\">\\</a> c-addr1 len1 c-addr2 -- c-addr2 len2 <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Replace each '<code>%</code>' character in the input string <em>c-addr<em><sub>1</sub></em> len<em><sub>1</sub></em></em> with two '<code>%</code>' characters.</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">The output is represented by <em>c-addr<em><sub>2</sub></em> len<em><sub>2</sub></em></em>.</span> <br>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">If you pass a string through <strong>UNESCAPE</strong> and then <a href=\"string/SUBSTITUTE\">SUBSTITUTE</a>, you get the original string.</span> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"core/TwoSWAP\">2SWAP</a>  <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/qDO\">?DO</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/BracketCHAR\">[CHAR]</a> % <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/BracketCHAR\">[CHAR]</a> % <a href=\"core/OVER\">OVER</a> <a href=\"core/CStore\">C!</a> <a href=\"core/OnePlus\">1+</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/CStore\">C!</a> <a href=\"core/OnePlus\">1+</a> <br>\n    &nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <br>\n    &nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/Minus\">-</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\t\t\t\t<!-- I.17 -->\n<h2 id=\"section.E.25\">E.25 The optional Extended-Character word set</h2> <!-- I.18 -->\n<a name=\"imp:xchar\"></a>\n<p>\nThis reference implementation assumes the UTF-8 character encoding\nis being used.\n</p><p>\n\n\n</p><div class=\"wordHead\" id=\"imp:xchar:X-SIZE\">\n  <div class=\"wordNumber\">E.18.6.1.2486.50</div>\n  <div class=\"wordName\">X-SIZE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>X-SIZE</strong> <a href=\"core/p\">(</a> xc-addr u1 -- u2 ) <br>\n    &nbsp;&nbsp; <a href=\"core/ZeroEqual\">0=</a>         <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 0 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">length of UTF-8 char starting at u8-addr (accesses only u8-addr)</span> <br>\n    &nbsp;&nbsp; <a href=\"core/CFetch\">C@</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 1 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $c0 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> -77 <a href=\"exception/THROW\">THROW</a>   <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $e0 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 2 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $f0 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 3 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $f8 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 4 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $fc <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 5 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $fe <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 6 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; -77 <a href=\"exception/THROW\">THROW</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XC!+\">\n  <div class=\"wordNumber\">E.18.6.1.2487.10</div>\n  <div class=\"wordName\">XC!+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XC!+</strong> <a href=\"core/p\">(</a> xchar xc-addr -- xc-addr' ) <br>\n    &nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/TUCK\">TUCK</a> <a href=\"core/CStore\">C!</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n    &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> 0 <a href=\"core/SWAP\">SWAP</a> $3F <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Umore\">U&gt;</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDiv\">2/</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/DUP\">DUP</a> $3F <a href=\"core/AND\">AND</a> $80 <a href=\"core/OR\">OR</a> <a href=\"core/SWAP\">SWAP</a> 6 <a href=\"core/RSHIFT\">RSHIFT</a> <a href=\"core/Rfrom\">R&gt;</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> $7F <a href=\"core/XOR\">XOR</a> <a href=\"core/TwoTimes\">2*</a> <a href=\"core/OR\">OR</a> <a href=\"core/Rfrom\">R&gt;</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/OVER\">OVER</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <a href=\"core/TUCK\">TUCK</a> <a href=\"core/CStore\">C!</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/NIP\">NIP</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XC!+q\">\n  <div class=\"wordNumber\">E.18.6.1.2487.15</div>\n  <div class=\"wordName\">XC!+?</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XC!+?</strong> <a href=\"core/p\">(</a> xchar xc-addr u -- xc-addr' u' flag ) <br>\n    &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> <a href=\"core/OVER\">OVER</a> <a href=\"xchar/XC-SIZE\">XC-SIZE</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/p\">(</a> xchar xc-addr1 len r: u1 ) <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">not enough space</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/FALSE\">FALSE</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> <a href=\"xchar/XCStorePlus\">XC!+</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/Minus\">-</a> <a href=\"core/TRUE\">TRUE</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XC,\">\n  <div class=\"wordNumber\">E.18.6.1.2487.20</div>\n  <div class=\"wordName\">XC,</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XC,</strong> <a href=\"core/p\">(</a> xchar -- ) <a href=\"core/HERE\">HERE</a> <a href=\"xchar/XCStorePlus\">XC!+</a> DP <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XC-SIZE\">\n  <div class=\"wordNumber\">E.18.6.1.2487.25</div>\n  <div class=\"wordName\">XC-SIZE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XC-SIZE</strong> <a href=\"core/p\">(</a> xchar -- n ) <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/DROP\">DROP</a> 1 <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n    &nbsp;&nbsp; $800  2 <a href=\"core/toR\">&gt;R</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/TwoDUP\">2DUP</a> U&gt;= <a href=\"core/WHILE\">WHILE</a>  5 <a href=\"core/LSHIFT\">LSHIFT</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/UNTIL\">UNTIL</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/Rfrom\">R&gt;</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XC@+\">\n  <div class=\"wordNumber\">E.18.6.1.2487.35</div>\n  <div class=\"wordName\">XC@+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XC@+</strong> <a href=\"core/p\">(</a> xc-addr -- xc-addr' u ) <br>\n    &nbsp;&nbsp; <a href=\"core/COUNT\">COUNT</a> <a href=\"core/DUP\">DUP</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a>  <a href=\"core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n    &nbsp;&nbsp; $7F <a href=\"core/AND\">AND</a> $40 <a href=\"core/toR\">&gt;R</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/AND\">AND</a> <a href=\"core/WHILE\">WHILE</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/XOR\">XOR</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 6 <a href=\"core/LSHIFT\">LSHIFT</a> <a href=\"core/Rfrom\">R&gt;</a> 5 <a href=\"core/LSHIFT\">LSHIFT</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/COUNT\">COUNT</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; $3F <a href=\"core/AND\">AND</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/OR\">OR</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a> <br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XCHAR+\">\n  <div class=\"wordNumber\">E.18.6.1.2487.40</div>\n  <div class=\"wordName\">XCHAR+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XCHAR+</strong> <a href=\"core/p\">(</a> xc-addr -- xc-addr' )  <a href=\"xchar/XCFetchPlus\">XC@+</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XEMIT\">\n  <div class=\"wordNumber\">E.18.6.1.2488.10</div>\n  <div class=\"wordName\">XEMIT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XEMIT</strong> <a href=\"core/p\">(</a> xchar -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/EMIT\">EMIT</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n    &nbsp;&nbsp; 0 <a href=\"core/SWAP\">SWAP</a> $3F <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Umore\">U&gt;</a> <a href=\"core/WHILE\">WHILE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDiv\">2/</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/DUP\">DUP</a> $3F <a href=\"core/AND\">AND</a> $80 <a href=\"core/OR\">OR</a> <a href=\"core/SWAP\">SWAP</a> 6 <a href=\"core/RSHIFT\">RSHIFT</a> <a href=\"core/Rfrom\">R&gt;</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> $7F <a href=\"core/XOR\">XOR</a> <a href=\"core/TwoTimes\">2*</a> <a href=\"core/OR\">OR</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/DUP\">DUP</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/WHILE\">WHILE</a> <a href=\"core/EMIT\">EMIT</a> <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/DROP\">DROP</a><br>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XKEY\">\n  <div class=\"wordNumber\">E.18.6.1.2488.30</div>\n  <div class=\"wordName\">XKEY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XKEY</strong> <a href=\"core/p\">(</a> -- xchar ) <br>\n    &nbsp;&nbsp; <a href=\"core/KEY\">KEY</a> <a href=\"core/DUP\">DUP</a> $80 <a href=\"core/Uless\">U&lt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">special case ASCII</span> <br>\n    &nbsp;&nbsp; $7F <a href=\"core/AND\">AND</a> $40 <a href=\"core/toR\">&gt;R</a> <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/AND\">AND</a> <a href=\"core/WHILE\">WHILE</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/XOR\">XOR</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 6 <a href=\"core/LSHIFT\">LSHIFT</a> <a href=\"core/Rfrom\">R&gt;</a> 5 <a href=\"core/LSHIFT\">LSHIFT</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/KEY\">KEY</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; $3F <a href=\"core/AND\">AND</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/OR\">OR</a> <br>\n    &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:+X/STRING\">\n  <div class=\"wordNumber\">E.18.6.2.0145</div>\n  <div class=\"wordName\">+X/STRING</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>+X/STRING</strong> <a href=\"core/p\">(</a> xc-addr1 u1 -- xc-addr2 u2 ) <br>\n    &nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/DUP\">DUP</a> <a href=\"xchar/XCHARPlus\">XCHAR+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/Minus\">-</a> <a href=\"string/DivSTRING\">/STRING</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:-TRAILING-GARBAGE\">\n  <div class=\"wordNumber\">E.18.6.2.0175</div>\n  <div class=\"wordName\">-TRAILING-GARBAGE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>-TRAILING-GARBAGE</strong> <a href=\"core/p\">(</a> xc-addr u1 -- xc-addr u2 ) <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/Plus\">+</a> <a href=\"core/DUP\">DUP</a> <a href=\"xchar/XCHARMinus\">XCHAR-</a> <a href=\"core/p\">(</a> addr u1 end1 end2 ) <br>\n    &nbsp;&nbsp; <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Minus\">-</a> <a href=\"xchar/X-SIZE\">X-SIZE</a> <a href=\"core/Plus\">+</a> <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">last xchar ok</span> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TwoDROP\">2DROP</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/NIP\">NIP</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Minus\">-</a> <br>\n    &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:CHAR\">\n  <div class=\"wordNumber\">E.18.6.2.0895</div>\n  <div class=\"wordName\">CHAR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>CHAR</strong> <a href=\"core/p\">(</a> \"name\" -- xchar )\n    <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a> <a href=\"core/COUNT\">COUNT</a> <a href=\"core/DROP\">DROP</a> <a href=\"xchar/XCFetchPlus\">XC@+</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:X-WIDTH\">\n  <div class=\"wordNumber\">E.18.6.2.2486.70</div>\n  <div class=\"wordName\">X-WIDTH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>X-WIDTH</strong> <a href=\"core/p\">(</a> xc-addr u -- n ) <br>\n    &nbsp;&nbsp; 0 <a href=\"core/ROT\">ROT</a> <a href=\"core/ROT\">ROT</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/qDO\">?DO</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"xchar/XCFetchPlus\">XC@+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"xchar/XC-WIDTH\">XC-WIDTH</a> <a href=\"core/Plus\">+</a> <br>\n    &nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/I\">I</a> <a href=\"core/Minus\">-</a> <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XC-WIDTH\">\n  <div class=\"wordNumber\">E.18.6.2.2487.30</div>\n  <div class=\"wordName\">XC-WIDTH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> wc, <a href=\"core/p\">(</a> n low high -- )  <a href=\"core/OnePlus\">1+</a> <a href=\"core/Comma\">,</a> <a href=\"core/Comma\">,</a> <a href=\"core/Comma\">,</a> <a href=\"core/Semi\">;</a>\n    <p>\n    <a href=\"core/CREATE\">CREATE</a> wc-table <a href=\"core/bs\">\\</a> <span class=\"rm\">derived from wcwidth source code, for UCS32</span> <br>\n    0  0300  0357 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  035D  036F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0483  0486 wc,<br>\n    0  0488  0489 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0591  05A1 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  05A3  05B9 wc,<br>\n    0  05BB  05BD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  05BF  05BF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  05C1  05C2 wc,<br>\n    0  05C4  05C4 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0600  0603 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0610  0615 wc,<br>\n    0  064B  0658 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0670  0670 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  06D6  06E4 wc,<br>\n    0  06E7  06E8 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  06EA  06ED wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  070F  070F wc,<br>\n    0  0711  0711 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0730  074A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  07A6  07B0 wc,<br>\n    0  0901  0902 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  093C  093C wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0941  0948 wc,<br>\n    0  094D  094D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0951  0954 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0962  0963 wc,<br>\n    0  0981  0981 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  09BC  09BC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  09C1  09C4 wc,<br>\n    0  09CD  09CD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  09E2  09E3 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0A01  0A02 wc,<br>\n    0  0A3C  0A3C wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0A41  0A42 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0A47  0A48 wc,<br>\n    0  0A4B  0A4D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0A70  0A71 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0A81  0A82 wc,<br>\n    0  0ABC  0ABC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0AC1  0AC5 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0AC7  0AC8 wc,<br>\n    0  0ACD  0ACD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0AE2  0AE3 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0B01  0B01 wc,<br>\n    0  0B3C  0B3C wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0B3F  0B3F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0B41  0B43 wc,<br>\n    0  0B4D  0B4D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0B56  0B56 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0B82  0B82 wc,<br>\n    0  0BC0  0BC0 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0BCD  0BCD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0C3E  0C40 wc,<br>\n    0  0C46  0C48 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0C4A  0C4D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0C55  0C56 wc,<br>\n    0  0CBC  0CBC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0CBF  0CBF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0CC6  0CC6 wc,<br>\n    0  0CCC  0CCD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0D41  0D43 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0D4D  0D4D wc,<br>\n    0  0DCA  0DCA wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0DD2  0DD4 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0DD6  0DD6 wc,<br>\n    0  0E31  0E31 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0E34  0E3A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0E47  0E4E wc,<br>\n    0  0EB1  0EB1 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0EB4  0EB9 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0EBB  0EBC wc,<br>\n    0  0EC8  0ECD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0F18  0F19 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0F35  0F35 wc,<br>\n    0  0F37  0F37 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0F39  0F39 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0F71  0F7E wc,<br>\n    0  0F80  0F84 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0F86  0F87 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0F90  0F97 wc,<br>\n    0  0F99  0FBC wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  0FC6  0FC6 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  102D  1030 wc,<br>\n    0  1032  1032 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1036  1037 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1039  1039 wc,<br>\n    0  1058  1059 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    1  0000  1100 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2  1100  115f wc,<br>\n    0  1160  11FF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1712  1714 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1732  1734 wc,<br>\n    0  1752  1753 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1772  1773 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  17B4  17B5 wc,<br>\n    0  17B7  17BD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  17C6  17C6 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  17C9  17D3 wc,<br>\n    0  17DD  17DD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  180B  180D wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  18A9  18A9 wc,<br>\n    0  1920  1922 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1927  1928 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  1932  1932 wc,<br>\n    0  1939  193B wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  200B  200F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  202A  202E wc,<br>\n    0  2060  2063 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  206A  206F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  20D0  20EA wc,<br>\n    2  2329  232A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  302A  302F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2  2E80  303E wc,<br>\n    0  3099  309A wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2  3040  A4CF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2  AC00  D7A3 wc,<br>\n    2  F900  FAFF wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  FB1E  FB1E wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  FE00  FE0F wc,<br>\n    0  FE20  FE23 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2  FE30  FE6F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  FEFF  FEFF wc,<br>\n    2  FF00  FF60 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2  FFE0  FFE6 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0  FFF9  FFFB wc,<br>\n    0 1D167 1D169 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0 1D173 1D182 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0 1D185 1D18B wc,<br>\n    0 1D1AA 1D1AD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2 20000 2FFFD wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    2 30000 3FFFD wc,<br>\n    0 E0001 E0001 wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0 E0020 E007F wc,&nbsp;&nbsp;&nbsp;&nbsp;\n    0 E0100 E01EF wc,<br>\n    <a href=\"core/HERE\">HERE</a> wc-table <a href=\"core/Minus\">-</a> <a href=\"core/CONSTANT\">CONSTANT</a> #wc-table\n    </p><p>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">inefficient table walk:</span>\n    </p><p>\n    <a href=\"core/Colon\">:</a> <strong>XC-WIDTH</strong> <a href=\"core/p\">(</a> xchar -- n ) <br>\n    &nbsp;&nbsp; wc-table #wc-table <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/qDO\">?DO</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"core/I\">I</a> <a href=\"core/TwoFetch\">2@</a> <a href=\"core/WITHIN\">WITHIN</a> <a href=\"core/IF\">IF</a>\n    <a href=\"core/DROP\">DROP</a> <a href=\"core/I\">I</a> 2 <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"core/Fetch\">@</a> <a href=\"core/UNLOOP\">UNLOOP</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n    &nbsp;&nbsp; 3 <a href=\"core/CELLS\">CELLS</a> <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/DROP\">DROP</a> 1 <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XCHAR-\">\n  <div class=\"wordNumber\">E.18.6.2.2487.45</div>\n  <div class=\"wordName\">XCHAR-</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>XCHAR-</strong> <a href=\"core/p\">(</a> xc-addr -- xc-addr' ) <br>\n    &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a>  1 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Minus\">-</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/CFetch\">C@</a> $C0 <a href=\"core/AND\">AND</a> $80 <a href=\"core/ne\">&lt;&gt;</a> <a href=\"core/UNTIL\">UNTIL</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XHOLD\">\n  <div class=\"wordNumber\">E.18.6.2.2488.20</div>\n  <div class=\"wordName\">XHOLD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/CREATE\">CREATE</a> xholdbuf 8 <a href=\"core/ALLOT\">ALLOT</a>\n    <p>\n    <a href=\"core/Colon\">:</a> <strong>XHOLD</strong> <a href=\"core/p\">(</a> xchar -- )\n    xholdbuf <a href=\"core/TUCK\">TUCK</a> <a href=\"xchar/XCStorePlus\">XC!+</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Minus\">-</a> <a href=\"core/HOLDS\">HOLDS</a> <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:XSTRING-\">\n  <div class=\"wordNumber\">E.18.6.2.2495</div>\n  <div class=\"wordName\">X\\STRING-</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>X\\STRING-</strong> <a href=\"core/p\">(</a> xc-addr u -- xc-addr u' ) <br>\n    &nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a> <a href=\"xchar/XCHARMinus\">XCHAR-</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Minus\">-</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"imp:xchar:[CHAR]\">\n  <div class=\"wordNumber\">E.18.6.2.2520</div>\n  <div class=\"wordName\">[CHAR]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"implement\">\n\n    <a href=\"core/Colon\">:</a> <strong>[CHAR]</strong> <a href=\"core/p\">(</a> \"name\" -- rt:xchar ) <br>\n    &nbsp;&nbsp; <a href=\"xchar/CHAR\">CHAR</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/LITERAL\">LITERAL</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n\n\n    </div>\n  </div>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Reference Implementations</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\" class=\"current\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" class=\"scroll-bar\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.E.1\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.6\">The Core word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.7\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.8\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.9\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.10\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.11\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.12\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.13\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.14\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.15\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.16\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.17\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.18\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.20\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.22\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.24\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.E.25\">Extended-Character word set</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "index": {
            "basename": "index",
            "name": "",
            "html": "<div id=\"body\">\n<div style=\"text-align: right; font-size: 250%;\">\n  Forth 200<em>x</em> Standardisation Committee<br>\n  <strong>Forth 2012 </strong><br>\n  10<sup>th</sup> November 2014\n</div>\n\n<div class=\"center\" style=\"width: 60%; margin-top: 10ex; margin-bottom: 10ex;\">\n  <img src=\"/images/standards/2012/forth2012.png\" width=\"100%\">\n</div>\n\n<p>\n<strong>Notice: <em>Status of this Document</em></strong><br>\nThis is a draft proposed Standard to replace ANSI X3.215-1994. As\nsuch, this is not a completed standard. The Standardisation Committee\nmay modify this document during the course of its work.\n</p>\n\n<p>\nFor convenience the rationale, testing and reference\nimplementation for a given glossary entry is shown within the\ndefinition in addition to the reinvent annex\n(<a href=\"rationale\">Rationale</a>,\n<a href=\"testsuite\">Test Suite</a> and\n<a href=\"implement\">Reference Implementation</a>)\n</p>\n\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Foreword</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\" class=\"current\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n"
        },
        "intro": {
            "basename": "intro",
            "name": "1 Introduction",
            "html": "<div id=\"body\">\n<div>\n<div class=\"Large\">\n    <div class=\"bf\">\nForth 2012 Standard\n      </div>\n    </div>\n  </div>\n<p>\n</p><h1 id=\"chapter.1\">1 Introduction</h1>\n<a name=\"chap:intro\"></a>\n<p>\n</p><h2 id=\"section.1.1\">1.1 Purpose</h2>\nThe purpose of this standard is to promote the portability of Forth\nprograms for use on a wide variety of computing systems, to facilitate\nthe communication of programs, programming techniques, and ideas among\nForth programmers, and to serve as a basis for the future evolution of\nthe Forth language.\n<p>\n</p><h2 id=\"section.1.2\">1.2 Scope</h2>\nThis standard specifies an interface between a Forth System and a\nForth Program by defining the words provided by a Standard System.\n<p>\n</p><h3 id=\"subsection.1.2.1\">1.2.1 Inclusions</h3>\nThis standard specifies:\n<ul>\n<li> the forms that a program written in the Forth language may take;\n</li>\n<li> the rules for interpreting the meaning of a program and its data.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.1.2.2\">1.2.2 Exclusions</h3> <!-- 1.2.2 -->\n<a name=\"intro:exclusions\"></a>\n<p>\nThis standard does not specify:\n</p><ul>\n<li> the mechanism by which programs are transformed for use on\ncomputing systems;\n</li>\n<li> the operations required for setup and control of the use of\nprograms on computing systems;\n</li>\n<li> the method of transcription of programs or their input or\noutput data to or from a storage medium;\n</li>\n<li> the program and Forth system behavior when the rules of this\nstandard fail to establish an interpretation;\n</li>\n<li> the size or complexity of a program and its data that will\nexceed the capacity of any specific computing system or the\ncapability of a particular Forth system;\n</li>\n<li> the physical properties of input/output records, files, and units;\n</li>\n<li> the physical properties and implementation of storage.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.1.3\">1.3 Document organization</h2>\n<a name=\"intro:wordsets\"></a>\n<p>\n</p><h3 id=\"subsection.1.3.1\">1.3.1 Word sets</h3>\nThis standard groups Forth words and capabilities into <em>word sets</em>\nunder a name indicating some shared aspect, typically their common\nfunctional area. Each word set may have an extension, containing words\nthat offer additional functionality. These words are not required in an\nimplementation of the word set.\n<p>\nThe \"Core\" word set, defined in sections <a href=\"intro#chap:intro\">1</a> through <a href=\"core#chap:core\">6</a>, contains the\nrequired words and capabilities of a Standard System. The other word\nsets, defined in sections <a href=\"block#wordlist:block\">7</a> through\n<a href=\"xchar#wordlist:xchar\">18</a>, are optional, making it possible to provide\nStandard Systems with tailored levels of functionality.\n</p><p>\n</p><h4 id=\"subsubsection.1.3.1.1\">1.3.1.1 Text sections</h4>\n<a name=\"intro:numbering\"></a>\n<p>\nWithin each word set, section 1 contains introductory and explanatory\nmaterial and section 2 introduces terms and notation used throughout\nthe standard. There are no requirements in these sections.\n</p><p>\nSections 3 and 4 contain the usage and documentation requirements,\nrespectively, for Standard Systems and Programs, while section 5\nspecifies their labeling.\n</p><p>\nSections <em>x</em>.1–<em>x</em>.6 of each word set have the same section\nnumbering as sections 1–6 of the whole document to make it easy to\nrelate the sections to each other.  This may lead to gaps in section\nnumbers if a particular section does not occur in a word set.\n</p><p>\n</p><h4 id=\"subsubsection.1.3.1.2\">1.3.1.2 Glossary sections</h4>\n<p>\nSection 6 of each word set specifies the required behavior of the\ndefinitions in the word set and the extensions word set.\n</p><p>\n</p><h3 id=\"subsection.1.3.2\">1.3.2 Annexes</h3>\n<a name=\"intro:annex\"></a>\n<p>\nThe annexes do not contain any required material.\n</p><p>\nAnnex <a href=\"rationale#annex:rationale\">A</a> provides some of the rationale behind the\ncommittee's decisions in creating this standard, as well as\nimplementation examples. It has the same section numbering as the\nbody of the standard to make it easy to relate each requirements\nsection to its rationale section.\n</p><p>\nAnnex <a href=\"bib#annex:bib\">B</a> is a short bibliography on Forth.\n</p><p>\nAnnex <a href=\"diff#annex:diff\">C</a> discusses the compatibility of this standard\nwith earlier Forths.\n</p><p>\nAnnex <a href=\"port#annex:port\">D</a> presents some techniques for writing portable\nprograms.\n</p><p>\nAnnex <a href=\"alpha#annex:index\">H</a> is an index of all Forth words defined in this\nstandard.\n</p><p>\n</p><h2 id=\"section.1.4\">1.4 Future directions</h2>\n<p>\n</p><h3 id=\"subsection.1.4.1\">1.4.1 New technology</h3>\n<p>\nThis standard adopts certain words and practices that are\nincreasingly found in common practice. New words have also\nbeen adopted to ease creation of portable programs.\n</p><p>\n</p><h3 id=\"subsection.1.4.2\">1.4.2 Obsolescent features</h3>\n<a name=\"intro:obsoleat\"></a>\n<p>\nThis standard adopts certain words and practices that cause\nsome previously used words and practices to become obsolescent.\nAlthough retained here because of their widespread use, their\nuse in new implementations or new programs is discouraged,\nas they may be withdrawn from future revisions of the standard.\n</p><p>\nThis standard designates the following word as obsolescent:\n</p><p>\n\n</p><table>\n<tbody><tr valign=\"top\"><td class=\"r\"><a href=\"tools/FORGET\">15.6.2.1580</a>\t</td><td><a href=\"tools/FORGET\">FORGET</a>\t</td></tr>\n<tr valign=\"top\"><td class=\"r\"><a href=\"core/BracketCOMPILE\">6.2.2530</a></td><td><a href=\"core/BracketCOMPILE\">[COMPILE]</a> </td></tr>\n<tr valign=\"top\"><td class=\"r\"><a href=\"locals/LOCALS\">13.6.2.1795</a>\t</td><td><a href=\"locals/LOCALS\">LOCALS|</a>\n</td></tr></tbody></table>\n<p>\nThis standard designates the following practice as obsolescent:\n</p><p>\n</p><ul>\n<li> Using <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> to enquire whether a word set is present.\n</li>\n</ul>\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Purpose</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.1.1\">Purpose</a></li>\n        <li role=\"menuitem\"><a href=\"#section.1.2\">Scope</a></li>\n        <li role=\"menuitem\"><a href=\"#section.1.3\">Document organization</a></li>\n        <li role=\"menuitem\"><a href=\"#section.1.4\">Future directions</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "label": {
            "basename": "label",
            "name": "5 Compliance and labeling",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.5\">5 Compliance and labeling</h1>\n<a name=\"label\"></a>\n<p>\n</p><h2 id=\"section.5.1\">5.1 Forth-2012 systems</h2> <!-- 5.1 =================================== -->\n<a name=\"label:label\"></a>\n<p>\n</p><h3 id=\"subsection.5.1.1\">5.1.1 System compliance</h3> <!-- 5.1.1 -->\n<a name=\"label:system\"></a>\n<p>\nA system that complies with all the system requirements given in\nsections <strong><a href=\"usage#usage\">3 Usage requirements</a></strong> and <strong><a href=\"doc#doc:system\">4.1 System documentation</a></strong> and their sub-sections is\na Standard System. An otherwise Standard System that provides only\na portion of the Core words is a Standard System Subset. An\notherwise Standard System (Subset) that fails to comply with one or\nmore of the minimum values or ranges specified in <strong><a href=\"usage#usage\">3 Usage requirements</a></strong> and\nits sub-sections has environmental restrictions.\n</p><p>\n</p><h3 id=\"subsection.5.1.2\">5.1.2 System labeling</h3> <!-- 5.1.2 -->\nA Standard System (Subset) shall be labeled a \"Forth-2012 System\n(Subset)\". That label, by itself, shall not be applied to Standard\nSystems or Standard System Subsets that have environmental\nrestrictions.\n<p>\nThe phrase \"with Environmental Restrictions\" shall be appended to\nthe label of a Standard System (Subset) that has environmental\nrestrictions.\n</p><p>\nThe phrase \"Providing <em>name(s)</em> from the Core Extensions word\nset\" shall be appended to the label of any Standard System that\nprovides portions of the Core Extensions word set.\n</p><p>\nThe phrase \"Providing the Core Extensions word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Core Extensions word set.\n</p><p>\n</p><h2 id=\"section.5.2\">5.2 Forth-2012 programs</h2> <!-- 5.2 ================================== -->\n<h3 id=\"subsection.5.2.1\">5.2.1 Program compliance</h3> <!-- 5.2.1 -->\nA program that complies with all the program requirements given in\nsections <strong><a href=\"usage#usage\">3 Usage requirements</a></strong> and <strong><a href=\"doc#doc:program\">4.2 Program documentation</a></strong> and their sub-sections is\na Standard Program.\n<p>\n</p><h3 id=\"subsection.5.2.2\">5.2.2 Program labeling</h3> <!-- 5.2.2 -->\nA Standard Program shall be labeled a \"Forth-2012 Program\". That\nlabel, by itself, shall not be applied to Standard Programs that\nrequire the system to provide standard words outside the Core word\nset or that have environmental dependencies.\n<p>\nThe phrase \"with Environmental Dependencies\" shall be appended to\nthe label of Standard Programs that have environmental dependencies.\n</p><p>\nThe phrase \"Requiring <em>name(s)</em> from the Core Extensions word\nset\" shall be appended to the label of Standard Programs that\nrequire the system to provide portions of the Core Extensions word\nset.\n</p><p>\nThe phrase \"Requiring the Core Extensions word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide all of the Core Extensions word set.\n</p></div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Compliance and labeling</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\" class=\"current\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Forth-2012 systems</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.5.1\">Forth-2012 systems</a></li>\n        <li role=\"menuitem\"><a href=\"#section.5.2\">Forth-2012 programs</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "locals": {
            "basename": "locals",
            "name": "13 The optional Locals word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.13\">13 The optional Locals word set</h1> <!-- 13 -->\n<h2 id=\"section.13.1\">13.1 Introduction</h2> <!-- 13.1 -->\n<a name=\"locals:intro\"></a>\n<p>\n</p><h2 id=\"section.13.2\">13.2 Additional terms and notation</h2> <!-- 13.2 -->\nNone.\n<p>\n</p><h2 id=\"section.13.3\">13.3 Additional usage requirements</h2> <!-- 13.3 -->\n<h3 id=\"subsection.13.3.1\">13.3.1 Locals</h3> <!-- 13.3.1 -->\nA local is a data object whose execution semantics shall return its\nvalue, whose scope shall be limited to the definition in which it is\ndeclared, and whose use in a definition shall not preclude reentrancy\nor recursion.\n<p>\n</p><h3 id=\"subsection.13.3.2\">13.3.2 Environmental queries</h3> <!-- 13.3.2 -->\nAppend table <a href=\"locals#local:env\">13.1</a> to table <a href=\"usage#table:env\">3.4</a>.\n<p>\nSee: <strong><a href=\"usage#usage:env\">3.2.6 Environmental queries</a></strong>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 13.1: Environmental Query Strings</div>\n  <a name=\"local:env\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\">String  Value data type </td><td class=\"c\">Constant? </td><td style=\"width: 21em\">Meaning </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"><code>#LOCALS</code>\t\t</td><td class=\"r\"><em>n</em>\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">maximum number of local variables in a definition </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<h3 id=\"subsection.13.3.3\">13.3.3 Processing locals</h3> <!-- 13.3.3 -->\n<a name=\"local:locals\"></a>\n<p>\nTo support the locals word set, a system shall provide a mechanism\nto receive the messages defined by <a href=\"locals/LOCAL\">(LOCAL)</a> and respond as\ndescribed here.\n</p><p>\nDuring the compilation of a definition after <a href=\"core/Colon\">:</a> (colon),\n<a href=\"core/ColonNONAME\">:NONAME</a>, or <a href=\"core/DOES\">DOES&gt;</a>, a program may begin\nsending local identifier messages to the system. The process shall\nbegin when the first message is sent. The process shall end when the\n\"last local\" message is sent. The system shall keep track of the\nnames, order, and number of identifiers contained in the complete\nsequence.\n</p><p>\n</p><h4 id=\"subsubsection.13.3.3.1\">13.3.3.1 Compilation semantics</h4> <!-- 13.3.3.1 -->\nThe system, upon receipt of a sequence of local-identifier messages,\nshall take the following actions at compile time:\n<ol style=\"list-style-type: lower-alpha\">\n<li> Create temporary dictionary entries for each of the\nidentifiers passed to <a href=\"locals/LOCAL\">(LOCAL)</a>, such that each identifier\nwill behave as a <em>local</em>. These temporary dictionary\nentries shall vanish at the end of the definition, denoted by\n<a href=\"core/Semi\">;</a> (semicolon), <a href=\"tools/SemiCODE\">;CODE</a>, or\n<a href=\"core/DOES\">DOES&gt;</a>. The system need not maintain these\nidentifiers in the same way it does other dictionary entries\nas long as they can be found by normal dictionary searching\nprocesses. Furthermore, if the Search-Order word set is present,\nlocal identifiers shall always be searched before any of the\nword lists in any definable search order, and none of the\nSearch-Order words shall change the locals' privileged position\nin the search order. Local identifiers may reside in mass storage.\n<p>\n</p></li>\n<li> For each identifier passed to <a href=\"locals/LOCAL\">(LOCAL)</a>, the system shall\ngenerate an appropriate code sequence that does the following at\nexecution time:\n<p>\n</p><ol style=\"list-style-type: decimal\">\n<li> Allocate a storage resource adequate to contain the value\nof a local. The storage shall be allocated in a way that\ndoes not preclude re-entrancy or recursion in the definition\nusing the local.\n<p>\n</p></li>\n<li> Initialize the value using the top item on the data stack.\nIf more than one local is declared, the top item on the\nstack shall be moved into the first local identified, the\nnext item shall be moved into the second, and so on.\n</li>\n</ol>\n<p>\nThe storage resource may be the return stack or may be\nimplemented in other ways, such as in registers. The storage\nresource shall not be the data stack. Use of locals shall not\nrestrict use of the data stack before or after the point of\ndeclaration.\n</p><p>\n</p></li>\n<li> Arrange that any of the legitimate methods of terminating\nexecution of a definition, specifically <a href=\"core/Semi\">;</a>\n(semicolon), <a href=\"tools/SemiCODE\">;CODE</a>, <a href=\"core/DOES\">DOES&gt;</a> or\n<a href=\"core/EXIT\">EXIT</a>, will release the storage resource allocated\nfor the locals, if any, declared in that definition.\n<a href=\"core/ABORT\">ABORT</a> shall release all local storage resources,\nand <a href=\"exception/CATCH\">CATCH</a> / <a href=\"exception/THROW\">THROW</a> (if\nimplemented) shall release such resources for all definitions\nwhose execution is being terminated.\n<p>\n</p></li>\n<li> Separate sets of locals may be declared in defining words\nbefore <a href=\"core/DOES\">DOES&gt;</a> for use by the defining word, and\nafter <a href=\"core/DOES\">DOES&gt;</a> for use by the word defined.\n</li>\n</ol>\n<p>\nA system implementing the Locals word set shall support the\ndeclaration of at least sixteen locals in a definition.\n</p><p>\n</p><h4 id=\"subsubsection.13.3.3.2\">13.3.3.2 Syntax restrictions</h4> <!-- 13.3.3.2 -->\n<a name=\"locals:rules\"></a>\n<p>\nImmediate words in a program may use <a href=\"locals/LOCAL\">(LOCAL)</a> to implement\nsyntaxes for local declarations with the following restrictions:\n</p><p>\n</p><ol style=\"list-style-type: lower-alpha\">\n<li> A program shall not compile any executable code into the\ncurrent definition between the time <a href=\"locals/LOCAL\">(LOCAL)</a> is executed\nto identify the first local for that definition and the time of\nsending the single required \"last local\" message;\n<p>\n</p></li>\n<li> The position in program source at which the sequence of\n<a href=\"locals/LOCAL\">(LOCAL)</a> messages is sent, referred to here as the point\nat which locals are declared, shall not lie within the scope of\nany control structure;\n<p>\n</p></li>\n<li> Locals shall not be declared until values previously placed on\nthe return stack within the definition have been removed;\n<p>\n</p></li>\n<li> After a definition's locals have been declared, a program may\nplace data on the return stack. However, if this is done,\nlocals shall not be accessed until those values have been\nremoved from the return stack;\n<p>\n</p></li>\n<li> Words that return execution tokens, such as <a href=\"core/Tick\">'</a>\n(tick), <a href=\"core/BracketTick\">[']</a>, or <a href=\"core/FIND\">FIND</a>, shall not be\nused with local names;\n<p>\n</p></li>\n<li> A program that declares more than sixteen locals in a single\ndefinition has an environmental dependency;\n<p>\n</p></li>\n<li> Locals may be accessed or updated within control structures,\nincluding do-loops;\n<p>\n</p></li>\n<li> Local names shall not be referenced by <a href=\"core/POSTPONE\">POSTPONE</a>\nand <a href=\"core/BracketCOMPILE\">[COMPILE]</a>.\n</li>\n</ol>\n<p>\nSee: <strong><a href=\"usage#usage:command\">3.4 The Forth text interpreter</a></strong>.\n</p><p>\n</p><h2 id=\"section.13.4\">13.4 Additional documentation requirements</h2> <!-- 13.4 -->\n<h3 id=\"subsection.13.4.1\">13.4.1 System documentation</h3> <!-- 13.4.1 -->\n<h4 id=\"subsubsection.13.4.1.1\">13.4.1.1 Implementation-defined options</h4> <!-- 13.4.1.1 -->\n<ul>\n<li> maximum number of locals in a definition\n(<strong><a href=\"locals#local:locals\">13.3.3 Processing locals</a></strong>,\n<a href=\"locals/LOCALS\">13.6.2.1795 LOCALS|</a>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.13.4.1.2\">13.4.1.2 Ambiguous conditions</h4> <!-- 13.4.1.2 -->\n<a name=\"locals:ambiguous\"></a>\n<ul>\n<li> executing a named <em>local</em> while in interpretation state\n(<a href=\"locals/LOCAL\">13.6.1.0086 (LOCAL)</a>);\n</li>\n<li> a local name ends in \"<code>:</code>\", \"<code>[</code>\", \"<code>^</code>\";\n</li>\n<li> a local name is a single non-alphabetic character;\n</li>\n<li> the text between <a href=\"locals/bColon\">{:</a> and <code>:}</code> extends over more than one line;\n</li>\n<li> <a href=\"locals/bColon\">{:</a> ... <code>:}</code> is used more than once in a word.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.13.4.1.3\">13.4.1.3 Other system documentation</h4> <!-- 13.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.13.4.2\">13.4.2 Program documentation</h3> <!-- 13.4.2 -->\n<h4 id=\"subsubsection.13.4.2.1\">13.4.2.1 Environmental dependencies</h4> <!-- 13.4.2.1 -->\n<a name=\"locals:environment\"></a>\n<ul>\n<li> declaring more than sixteen locals in a single definition\n(<strong><a href=\"locals#local:locals\">13.3.3 Processing locals</a></strong>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.13.4.2.2\">13.4.2.2 Other program documentation</h4> <!-- 13.4.2.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.13.5\">13.5 Compliance and labeling</h2> <!-- 13.5 -->\n<h3 id=\"subsection.13.5.1\">13.5.1 Forth-2012 systems</h3> <!-- 13.5.1 -->\nThe phrase \"Providing the Locals word set\" shall be appended to\nthe label of any Standard System that provides all of the Locals\nword set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Locals Extensions\nword set\" shall be appended to the label of any Standard System\nthat provides portions of the Locals Extensions word set.\n</p><p>\nThe phrase \"Providing the Locals Extensions word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Locals and Locals Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.13.5.2\">13.5.2 Forth-2012 programs</h3> <!-- 13.5.2 -->\nThe phrase \"Requiring the Locals word set\" shall be appended to\nthe label of Standard Programs that require the system to provide\nthe Locals word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Locals Extensions\nword set\" shall be appended to the label of Standard Programs that\nrequire the system to provide portions of the Locals Extensions word\nset.\n</p><p>\nThe phrase \"Requiring the Locals Extensions word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide all of the Locals and Locals Extensions word sets.\n</p><p>\n</p><h2 id=\"section.13.6\">13.6 Glossary</h2> <!-- 13.6 -->\n<h3 id=\"subsection.13.6.1\">13.6.1 Locals words</h3> <!-- 13.6.1 -->\n\n<ul>\n<li><a href=\"locals/LOCAL\">13.6.1.0086 (LOCAL)</a></li>\n</ul>\n<h3 id=\"subsection.13.6.2\">13.6.2 Locals extension words</h3> <!-- 13.6.2 -->\n<ul>\n<li><a href=\"locals/LOCALS\">13.6.2.1795 LOCALS|</a></li>\n<li><a href=\"locals/bColon\">13.6.2.2550 {:</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Locals word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\" class=\"current\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.13.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.13.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.13.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.13.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.13.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.13.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">(LOCAL)</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"locals/LOCAL\">(LOCAL)</a></li>\n        <li role=\"menuitem\"><a href=\"locals/LOCALS\">LOCALS|</a></li>\n        <li role=\"menuitem\"><a href=\"locals/bColon\">{:</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "members-2x": {
            "basename": "members-2x",
            "name": "200x Membership",
            "html": "<div id=\"body\">\n<h1 id=\"section*.4\">200<em>x</em> Membership</h1>\n<a name=\"members\"></a>\n\nThis document is maintained by the Forth 200<em>x</em> Standards\nCommittee. The committee meetings are open to the public, anybody\nis allowed to join the committee in its deliberations.\n<p>\nMembership of the committee is open to anybody who can attend.  On\nattending a meeting of any kind a non-member becomes an observing\nmember (observer).  If they attend the next voting meeting, they\nwill become a voting member of the committee, otherwise they revert\nto non-member status.  An observer will not normally be allowed to\nvote, but may be allowed at the discretion of the committee.  A\nmember will be deemed to have resigned from the committee if they\nfail to attend two consecutive voting meetings.\n</p><p>\nCurrently the committee has the following voting members:\n</p><p>\n</p><table class=\"center\" width=\"620px\">\n<tbody><tr><td width=\"50%\">Dr. M. Anton Ertl (Chair)</td><td>Technische Universität Wien</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"at\",\"tuwien\",\"complang\",\"mips\",\"anton\")</script></code></td><td>Wien, Austria</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Dr. Peter Knaggs (Editor)</td><td>Independent Member</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"uk\",\"org\",\"bcs\",\"pjk\")</script></code></td><td>Trowbridge, UK</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Willem Botha</td><td>Construction Computer Software (Pty) Ltd</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"com\",\"ccssa\",\"willem.botha\")</script></code></td><td>Cape Town, South Africa</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Andrew Haley</td><td>Red Hat UK Ltd.</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"com\",\"redhat\",\"aph\")</script></code></td><td>Cambridge, UK</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Dr. Ulrich Hoffmann</td><td>FH Wedel</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"de\",\"forth-ev\",\"uho\")</script></code></td><td>Wedel, Germany</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Simon Kaphahn</td><td>Independent Member</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"de\",\"gmx\",\"Simon_K99\")</script></code></td><td>Munich, Germany</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Bernd Paysan</td><td>Net2o</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"de\",\"gmx\",\"bernd.paysan\")</script></code></td><td>Munich, Germany</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Stephen Pelc</td><td>MicroProcessor Engineering Ltd.</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"com\",\"mpeforth\",\"stephen\")</script></code></td><td>Southampton, UK</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Dr. Willi Stricker</td><td>Independent Member</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"de\",\"t-online\",\"stricker_w\")</script></code></td><td>Springe, Germany</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Leon Wagner</td><td>FORTH, Inc.</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"com\",\"forth\",\"leon\")</script></code></td><td>Los Angeles, USA</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Gerald Wodni</td><td>Independent Member</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"at\",\"wodni\",\"gerald\")</script></code></td><td>Wien, Austria</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n</tbody></table>\n<p>\nThe following organizations and individuals have also participated in\nthis project as committee members. The committee recognizes and\nrespects their contributions:\n</p><p>\n</p><table class=\"center\" width=\"620px\">\n<tbody><tr><td width=\"50%\">Federico de Ceballos</td><td>Universidad de Cantabria</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"es\",\"unican\",\"federico.ceballos\")</script></code></td><td>Santander, Spain</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Dr. Bill Stoddart</td><td>Teesside University</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"com\",\"gmail\",\"w.j.stoddart\")</script></code></td><td>Middlesbrough, UK</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n<tr><td width=\"50%\">Carsten Strotmann</td><td>Independent Member</td></tr>\n<tr><td><code><script type=\"text/javascript\">email(\"de\",\"strotmann\",\"carsten\")</script></code></td><td>Neuenkirchen, Germany</td></tr>\n<tr><td>&nbsp;</td></tr>\n\n</tbody></table>\n<p>\nThe committee would like to thank the following contributors:\n</p><p>\n</p><div class=\"minipage\" style=\"width: 15em\">\n\n  John\t\tHayes <br>\n  Marcel\t\tHendrix <br>\n  Gerry\t\tJackson <br>\n  Alex\t\tMcDonald <br>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  Bruce\t\tMcFarling <br>\n  Charles G.\tMontgomery <br>\n  Krishna\t\tMyneni <br>\n  \n  </div>\n\n<div class=\"minipage\" style=\"width: 15em\">\n\n  Howerd\t\tOakford <br>\n  Tim\t\t\tPartridge <br>\n  Elizabeth\tRather <br>\n  David N.\tWilliams <br>\n  \n  </div>\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">200<em>x</em> Membership</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\" class=\"current\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "memory": {
            "basename": "memory",
            "name": "14 The optional Memory-Allocation word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.14\">14 The optional Memory-Allocation word set</h1> <!-- 14 -->\n<h2 id=\"section.14.1\">14.1 Introduction</h2> <!-- 14.1 -->\n<h2 id=\"section.14.2\">14.2 Additional terms and notation</h2> <!-- 14.2 -->\nNone.\n<p>\n</p><h2 id=\"section.14.3\">14.3 Additional usage requirements</h2> <!-- 14.3 -->\n\n<h3 id=\"subsection.14.3.3\">14.3.3 Allocated regions (14.3.3)</h3> <!-- 14.3.3 -->\nA program may address memory in data space regions made available\nby <a href=\"memory/ALLOCATE\">ALLOCATE</a> or <a href=\"memory/RESIZE\">RESIZE</a> and not yet released by <a href=\"memory/FREE\">FREE</a>.\n<p>\nSee: <strong><a href=\"usage#usage:dataspace\">3.3.3 Data space</a></strong>.\n</p><p>\n</p><h2 id=\"section.14.4\">14.4 Additional documentation requirements</h2> <!-- 14.4 -->\n<a name=\"mem:docs\"></a>\n<p>\nNone.\n</p><p>\n</p><h2 id=\"section.14.5\">14.5 Compliance and labeling</h2> <!-- 14.5 -->\n<h3 id=\"subsection.14.5.1\">14.5.1 Forth-2012 systems</h3> <!-- 14.5.1 -->\nThe phrase \"Providing the Memory-Allocation word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Memory-Allocation word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Memory-Allocation\nExtensions word set\" shall be appended to the label of any Standard\nSystem that provides portions of the Memory-Allocation Extensions\nword set.\n</p><p>\nThe phrase \"Providing the Memory-Allocation Extensions word set\"\nshall be appended to the label of any Standard System that provides\nall of the Memory-Allocation and Memory-Allocation Extensions word\nsets.\n</p><p>\n</p><h3 id=\"subsection.14.5.2\">14.5.2 Forth-2012 programs</h3> <!-- 14.5.2 -->\nThe phrase \"Requiring the Memory-Allocation word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide the Memory-Allocation word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Memory-Allocation\nExtensions word set\" shall be appended to the label of Standard\nPrograms that require the system to provide portions of the\nMemory-Allocation Extensions word set.\n</p><p>\nThe phrase \"Requiring the Memory-Allocation Extensions word set\"\nshall be appended to the label of Standard Programs that require\nthe system to provide all of the Memory-Allocation and\nMemory-Allocation Extensions word sets.\n</p><p>\n</p><h2 id=\"section.14.6\">14.6 Glossary</h2> <!-- 14.6 -->\n<h3 id=\"subsection.14.6.1\">14.6.1 Memory-Allocation words</h3> <!-- 14.6.1 -->\n\n<ul>\n<li><a href=\"memory/ALLOCATE\">14.6.1.0707 ALLOCATE</a></li>\n\n<li><a href=\"memory/FREE\">14.6.1.1605 FREE</a></li>\n\n<li><a href=\"memory/RESIZE\">14.6.1.2145 RESIZE</a></li>\n\n</ul>\n<h3 id=\"subsection.14.6.2\">14.6.2 Memory-Allocation extension words</h3> <!-- 14.6.2 -->\nNone\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Memory-Allocation word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\" class=\"current\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.14.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.14.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.14.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.14.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.14.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.14.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">ALLOCATE</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"memory/ALLOCATE\">ALLOCATE</a></li>\n        <li role=\"menuitem\"><a href=\"memory/FREE\">FREE</a></li>\n        <li role=\"menuitem\"><a href=\"memory/RESIZE\">RESIZE</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "notation": {
            "basename": "notation",
            "name": "2 Terms, notation, and references",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.2\">2 Terms, notation, and references</h1>\n<p>\nThe phrase \"See:\" is used throughout this standard to direct the\nreader to other sections of the standard that have a direct bearing\non the current section.\n</p><p>\nIn this standard, \"shall\" states a requirement on a system or\nprogram; conversely, \"shall not\" is a prohibition; \"need not\"\nmeans \"is not required to\"; \"should\" describes a recommendation\nof the standard; and \"may\", depending on context, means \"is allowed\nto\" or \"might happen\".\n</p><p>\nThroughout the standard, typefaces are used in the following manner:\n</p><ul>\n<li> This proportional serif typeface is used for text, with\n<em>italic</em> used for symbols and the first appearance of new\nterms;\n</li>\n<li> A bold proportional sans-serif typeface is used for\n<strong>headings</strong>;\n</li>\n<li> A bold monospaced serif typeface is used for Forth-language\n<strong><code>text</code></strong>.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.2.1\">2.1 Definitions of terms</h2>\n<a name=\"notation:terms\"></a>\n<p>\nTerms defined in this section are used generally throughout this\nstandard. Additional terms specific to individual word sets are\ndefined in those word sets. Other terms are defined at their first\nappearance, indicated by italic type. Terms not defined in this\nstandard are to be construed according to the <em>Dictionary for\nInformation Systems,</em> ANSI X3.172-1990.\n</p><p>\n</p><dl class=\"desc\">\n<dt>address unit:</dt><dd>\nDepending on context, either\n1) the units into which a Forth address space is divided for the\npurposes of locating data objects such as characters and variables;\n2) the physical memory storage elements corresponding to those units;\n3) the contents of such a memory storage element; or\n4) the units in which the length of a region of memory is expressed.\n<p>\n</p></dd>\n<dt>aligned:</dt><dd>\nDivisible by a type-dependent power of 2 (typically used as\n\"&lt;<em>type</em>&gt;-aligned address\" or\n\"&lt;<em>type</em>&gt;-aligned value\").\n<p>\n</p></dd>\n<dt>aligned address:</dt><dd>\nThe address of a memory location at which a character, cell, cell\npair, or double-cell integer can be accessed.\n<p>\n</p></dd>\n<dt>ambiguous condition:</dt><dd>\nA circumstance for which this standard does not prescribe a\nspecific behavior.  See section <strong><a href=\"doc#doc:ambiguous\">4.1.2 Ambiguous conditions</a></strong>\nfor a list of such circumstances and\n<strong><a href=\"usage#usage:ambiguous\">3.4.4 Possible actions on an ambiguous condition</a></strong>.\n<p>\n</p></dd>\n<dt>cell:</dt><dd>\nThe primary unit of information in the architecture of a Forth\nsystem.\n<p>\n</p></dd>\n<dt>cell pair:</dt><dd>\nTwo cells that are treated as a single unit.\n<p>\n</p></dd>\n<dt>character:</dt><dd>\nDepending on context, either\n1) a storage unit capable of holding a character; or\n2) a member of a character set.\n<p>\n</p></dd>\n<dt>character-aligned address:</dt><dd>\nThe address of a memory location at which a character can be\naccessed.\n<p>\n</p></dd>\n<dt>character string:</dt><dd>\nData space that is associated with a sequence of consecutive\ncharacter-aligned addresses. Character strings usually contain\ntext. Unless otherwise indicated, the term \"string\" means\n\"character string\".\n<p>\n</p></dd>\n<dt>code space:</dt><dd>\nThe logical area of the dictionary in which word semantics are\nimplemented.\n<p>\n</p></dd>\n<dt>compile:</dt><dd>\nTo transform source code into dictionary definitions.\n<p>\n</p></dd>\n<dt>compilation semantics:</dt><dd>\nThe behavior of a Forth definition when its name is encountered\nby the text interpreter in compilation state.\n<p>\n</p></dd>\n<dt>counted string:</dt><dd>\nA data structure consisting of one character containing a length\nfollowed by zero or more contiguous data characters. Normally,\ncounted strings contain text.\n<p>\n</p></dd>\n<dt>cross compiler:</dt><dd>\nA system that compiles a program for later execution in an\nenvironment that may be physically and logically different\nfrom the compiling environment. In a cross compiler, the term\n\"host\" applies to the compiling environment, and the term\n\"target\" applies to the run-time environment.\n<p>\n</p></dd>\n<dt>current definition:</dt><dd>\nThe definition whose compilation has been started but not yet ended.\n<p>\n</p></dd>\n<dt>data field:</dt><dd>\nThe data space associated with a word defined via <a href=\"core/CREATE\">CREATE</a>.\n<p>\n</p></dd>\n<dt>data space:</dt><dd>\nThe logical area of the dictionary that can be accessed.\n<p>\n</p></dd>\n<dt>data-space pointer:</dt><dd>\nThe address of the next available data space location, i.e., the\nvalue returned by <a href=\"core/HERE\">HERE</a>.\n<p>\n</p></dd>\n<dt>data stack:</dt><dd>\nA stack that may be used for passing parameters between\ndefinitions. When there is no possibility of confusion, the\ndata stack is referred to as \"the stack\". Contrast with\n<strong>return stack</strong>.\n<p>\n</p></dd>\n<dt>data type:</dt><dd>\nAn identifier for the set of values that a data object may have.\n<p>\n</p></dd>\n<dt>defining word:</dt><dd>\nA Forth word that creates a new definition when executed.\n<p>\n</p></dd>\n<dt>definition:</dt><dd>\nA Forth execution procedure compiled into the dictionary.\n<p>\n</p></dd>\n<dt>dictionary:</dt><dd>\nAn extensible structure that contains definitions and\nassociated data space.\n<p>\n</p></dd>\n<dt>display:</dt><dd>\nTo send one or more characters to the user output device.\n<p>\n</p></dd>\n<dt>environmental dependencies:</dt><dd>\nA program's implicit assumptions about a Forth system's\nimplementation options or underlying hardware. For example,\na program that assumes a cell size greater than 16 bits is\nsaid to have an environmental dependency.\n<p>\n</p></dd>\n<dt>execution semantics:</dt><dd>\nThe behavior of a Forth definition when it is executed.\n<p>\n</p></dd>\n<dt>execution token:</dt><dd>\nA value that identifies the execution semantics of a definition.\n<p>\n</p></dd>\n<dt>find:</dt><dd>\nTo search the dictionary for a definition name matching a given\nstring.\n<p>\n</p></dd>\n<dt>immediate word:</dt><dd>\nA Forth word whose compilation semantics are to perform its\nexecution semantics.\n<p>\n</p></dd>\n<dt>implementation defined:</dt><dd>\nDenotes system behaviors or features that must be provided and\ndocumented by a system but whose further details are not prescribed\nby this standard.\n<p>\n</p></dd>\n<dt>implementation dependent:</dt><dd>\nDenotes system behaviors or features that must be provided by a\nsystem but whose further details are not prescribed by this standard.\n<p>\n</p></dd>\n<dt>initiation semantics:</dt><dd>\nDescribes the behavior at the start of some word definitions (those\nof words defined with <a href=\"core/Colon\">:</a>, <a href=\"core/ColonNONAME\">:NONAME</a>, <a href=\"core/CREATE\">CREATE</a>\n<a href=\"core/DOES\">DOES&gt;</a>).  Other parts of the specification of these defining\nwords (and nothing else) refer to initiation semantics.\n<p>\n</p></dd>\n<dt>input buffer:</dt><dd>\nA region of memory containing the sequence of characters from the\ninput source that is currently accessible to a program.\n<p>\n</p></dd>\n<dt>input source:</dt><dd>\nThe device, file, block, or other entity that supplies characters\nto refill the input buffer.\n<p>\n</p></dd>\n<dt>input source specification:</dt><dd>\nA set of information describing a particular state of the input\nsource, input buffer, and parse area. This information is\nsufficient, when saved and restored properly, to enable the nesting\nof parsing operations on the same or different input sources.\n<p>\n</p></dd>\n<dt>interpretation semantics:</dt><dd>\nThe behavior of a Forth definition when its name is encountered\nby the text interpreter in interpretation state.\n<p>\n</p></dd>\n<dt>keyboard event:</dt><dd>\nA value received by the system denoting a user action at the user\ninput device. The term \"keyboard\" in this document does not\nexclude other types of user input devices.\n<p>\n</p></dd>\n<dt>line:</dt><dd>\nA sequence of characters followed by an actual or implied line\nterminator.\n<p>\n</p></dd>\n<dt>name space:</dt><dd>\nThe logical area of the dictionary in which definition names are\nstored.\n<p>\n</p></dd>\n<dt>number:</dt><dd>\nIn this standard, \"number\" used without other qualification means\n\"integer\". Similarly, \"double number\" means \"double-cell\ninteger\".\n<p>\n</p></dd>\n<dt>parse:</dt><dd>\nTo select and exclude a character string from the parse area using\na specified set of delimiting characters, called delimiters.\n<p>\n</p></dd>\n<dt>parse area:</dt><dd>\nThe portion of the input buffer that has not yet been parsed, and\nis thus available to the system for subsequent processing by the\ntext interpreter and other parsing operations.\n<p>\n</p></dd>\n<dt>pictured-numeric output:</dt><dd>\nA number display format in which the number is converted using\nForth words that resemble a symbolic \"picture\" of the desired\noutput.\n<p>\n</p></dd>\n<dt>program:</dt><dd>\nA complete specification of execution to achieve a specific\nfunction (application task) expressed in Forth source code form.\n<p>\n</p></dd>\n<dt>receive:</dt><dd>\nTo obtain characters from the user input device.\n<p>\n</p></dd>\n<dt>return stack:</dt><dd>\nA stack that may be used for program execution nesting, do-loop\nexecution, temporary storage, and other purposes.\n<p>\n</p></dd>\n<dt>standard word:</dt><dd>\nA named Forth procedure, formally specified in this standard.\n<p>\n</p></dd>\n<dt>user input device:</dt><dd>\nThe input device currently selected as the source of received\ndata, typically a keyboard.\n<p>\n</p></dd>\n<dt>user output device:</dt><dd>\nThe output device currently selected as the destination of\ndisplay data.\n<p>\n</p></dd>\n<dt>variable:</dt><dd>\nA named region of data space located and accessed by its memory\naddress.\n<p>\n</p></dd>\n<dt>word:</dt><dd>\nDepending on context, either\n1) the name of a Forth definition; or\n2) a parsed sequence of non-space characters,\nwhich could be the name of a Forth definition.\n<p>\n</p></dd>\n<dt>word list:</dt><dd>\nA list of associated Forth definition names that may be examined\nduring a dictionary search.\n<p>\n</p></dd>\n<dt>word set:</dt><dd>\nA set of Forth definitions grouped together in this standard\nunder a name indicating some shared aspect, typically their\ncommon functional area.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h2 id=\"section.2.2\">2.2 Notation</h2> <!-- ================================================ -->\n<a name=\"notations\"></a>\n<p>\n</p><h3 id=\"subsection.2.2.1\">2.2.1 Numeric notation</h3>\n<a name=\"notation:numeric\"></a>\n<p>\nUnless otherwise stated, all references to numbers apply to signed\nsingle-cell integers. The inclusive range of values is shown as\n<strong>{<em>from ... to</em>}</strong>. The allowable range for the\ncontents of an address is shown in double braces, particularly for\nthe contents of variables,\ne.g., <a href=\"core/BASE\">BASE</a> <strong>{{2 ... 36}}</strong>.\n</p><p>\n</p><h3 id=\"subsection.2.2.2\">2.2.2 Stack notation</h3>\n<p>\nStack parameters input to and output from a definition are described\nusing the notation:\n</p><div class=\"quote\">\n\n  ( stack-id: <em>before</em> -- <em>after</em> )\n  \n  </div>\n<p>\nwhere <em>stack-id</em> specifies which stack is being described,\n<em>before</em> represents the stack-parameter data types before\nexecution of the definition and <em>after</em> represents them\nafter execution. The symbols used in <em>before</em> and <em>after</em>\nare shown in table <a href=\"usage#table:datatypes\">3.1</a>.\n</p><p>\nThe control-flow-stack <em>stack-id</em> is \"C:\", the data-stack\n<em>stack-id</em> is \"S:\", and the return-stack <em>stack-id</em>\nis \"R:\". When there is no confusion, the data-stack\n<em>stack-id</em> may be omitted.\n</p><p>\nWhen there are alternate <em>after</em> representations, they are\ndescribed by \"<em>after<sub>1</sub>  |  after<sub>2</sub></em>\". The top of the stack is\nto the right. Only those stack items required for or provided by\nexecution of the definition are shown.\n</p><p>\n</p><h3 id=\"subsection.2.2.3\">2.2.3 Parsed-text notation</h3>\n<a name=\"notation:parsed\"></a>\n<p>\nIf, in addition to using stack parameters, a definition parses text,\nthat text is specified by an abbreviation from table <a href=\"notation#table:syntax\">2.1</a>,\nshown surrounded by double-quotes and placed between the <em>before</em>\nparameters and the \"--\" separator in the first stack described, e.g.,\n</p><p>\n</p><div class=\"quote\">\n\n  ( S: <em>before \"parsed-text-abbreviation\"</em> -- <em>after</em> )\n  \n  </div>\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 2.1: Parsed text abbreviations</div>\n  <a name=\"table:syntax\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td>Abbreviation </td><td>Description </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>&lt;char&gt;</em>\t</td><td>the delimiting character marking the end of\n  the string being parsed </td></tr>\n  <tr valign=\"top\"><td><em>&lt;chars&gt;</em>\t</td><td>zero or more consecutive occurrences of the\n  character <em>&lt;char&gt;</em> </td></tr>\n  <tr valign=\"top\"><td><em>&lt;space&gt;</em> </td><td>a delimiting space character </td></tr>\n  <tr valign=\"top\"><td><em>&lt;spaces&gt;</em></td><td>zero or more consecutive occurrences of the\n  character <em>&lt;space&gt;</em> </td></tr>\n  <tr valign=\"top\"><td><em>&lt;quote&gt;</em>\t</td><td>a delimiting double quote </td></tr>\n  <tr valign=\"top\"><td><em>&lt;paren&gt;</em> </td><td>a delimiting right parenthesis </td></tr>\n  <tr valign=\"top\"><td><em>&lt;eol&gt;</em>\t</td><td>an implied delimiter marking the end of a line </td></tr>\n  <tr valign=\"top\"><td><em>ccc</em>\t\t</td><td>a parsed sequence of arbitrary characters,\n  excluding the delimiter character </td></tr>\n  <tr valign=\"top\"><td><em>name</em>\t</td><td>a token delimited by space, equivalent to\n  <em>ccc&lt;space&gt;</em> or <em>ccc&lt;eol&gt;</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\n<h3 id=\"subsection.2.2.4\">2.2.4 Glossary notation</h3>\n<a name=\"notation:glossary\"></a>\n<p>\nThe glossary entries for each word set are listed in the standard\nASCII collating sequence. Each glossary entry specifies a Forth\nword and consists of two parts:\nan <em>index line</em> and the <em>semantic description</em> of the\ndefinition.\n</p><p>\n</p><h4 id=\"subsubsection.2.2.4.1\">2.2.4.1 Glossary index line</h4>\n<p>\nThe index line is a single-line entry containing, from left to right:\n</p><p>\n</p><ul>\n<li> Section number, the last four digits of which assign a\nunique sequential number to all words included in this standard;\n<p>\n</p></li>\n<li> <strong>DEFINITION-NAME</strong> in upper-case, mono-spaced,\nbold-face letters;\n<p>\n</p></li>\n<li> Natural-language pronunciation in quotes if it differs from English;\n</li>\n<li> Word-set designator from table <a href=\"notation#table:wordsets\">2.2</a>.\nThe designation for extensions word sets includes \"EXT\".\n<p>\n</p></li>\n<li> <span class=\"sf\">Extension designator</span> in sans-serif font under the\nWord-set designator for words which have been added to the\nstandard via the named extension.\n</li>\n</ul>\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 2.2: Word set designators</div>\n  <a name=\"table:wordsets\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td>Word set </td><td class=\"r\">Designator </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td>Core word set\t\t\t\t</td><td class=\"r\">CORE\t\t\t</td></tr>\n  <tr valign=\"top\"><td>Block word set\t\t\t\t</td><td class=\"r\">BLOCK\t\t</td></tr>\n  <tr valign=\"top\"><td>Double-Number word set\t\t</td><td class=\"r\">DOUBLE\t\t</td></tr>\n  <tr valign=\"top\"><td>Exception word set\t\t\t</td><td class=\"r\">EXCEPTION\t</td></tr>\n  <tr valign=\"top\"><td>Facility word set\t\t\t\t</td><td class=\"r\">FACILITY\t\t</td></tr>\n  <tr valign=\"top\"><td>File-Access word set\t\t\t</td><td class=\"r\">FILE\t\t\t</td></tr>\n  <tr valign=\"top\"><td>Floating-Point word set\t\t</td><td class=\"r\">FLOATING\t\t</td></tr>\n  <tr valign=\"top\"><td>Locals word set\t\t\t\t</td><td class=\"r\">LOCALS\t\t</td></tr>\n  <tr valign=\"top\"><td>Memory-Allocation word set\t</td><td class=\"r\">MEMORY\t\t</td></tr>\n  <tr valign=\"top\"><td>Programming-Tools word set\t</td><td class=\"r\">TOOLS\t\t</td></tr>\n  <tr valign=\"top\"><td>Search-Order word set\t\t</td><td class=\"r\">SEARCH\t\t</td></tr>\n  <tr valign=\"top\"><td>String-Handling word set\t</td><td class=\"r\">STRING\t\t\t</td></tr>\n  <tr valign=\"top\"><td>Extended-Character word set </td><td class=\"r\">XCHAR </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\n<h4 id=\"subsubsection.2.2.4.2\">2.2.4.2 Glossary semantic description</h4>\n<p>\nThe first paragraph of the semantic description contains a stack\nnotation for each stack affected by execution of the word. The\nremaining paragraphs contain a text description of the semantics.\nSee <strong><a href=\"usage#usage:semantics\">3.4.3 Semantics</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.2.2.5\">2.2.5 BNF notation</h3>\n<a name=\"notation:BNF\"></a>\n<p>\nThe following notation is used to define the syntax of some\nelements within the document:\n</p><p>\n</p><ul>\n<li> Each component of the element is defined with a rule consisting\nof the name of the component (italicized in angle-brackets,\ne.g., &lt;<em>decdigit</em>&gt;), the characters <span class=\"sf\">:=</span> and a concatenation\nof tokens and metacharacters;\n<p>\n</p></li>\n<li> Tokens may be literal characters (in bold face, e.g.,\n<strong>E</strong>) or rule names in angle brackets (e.g.,\n &lt;<em>decdigit</em>&gt;);\n<p>\n</p></li>\n<li> The metacharacter * is used to specify zero or more occurrences of\nthe preceding token (e.g., &lt;<em>decdigit</em>&gt;*);\n<p>\n</p></li>\n<li> Tokens enclosed with [ and ] are optional (e.g., [<strong>-</strong>]);\n<p>\n</p></li>\n<li> Vertical bars separate choices from a list of tokens enclosed\nwith braces (e.g., { <strong>0</strong> | <strong>1</strong> }).\n</li>\n</ul>\n<p>\nSee:\n<strong><a href=\"usage#usage:numbers\">3.4.1.3 Text interpreter input number conversion</a></strong>,\n<strong><a href=\"float#float:conv\">12.3.7 Text interpreter input number conversion</a></strong>,\n<a href=\"float/toFLOAT\">12.6.1.0558 &gt;FLOAT</a>,\n<a href=\"float/FSd\">12.6.2.1613 FS.</a>,\n<a href=\"locals/bColon\">13.6.2.2550 {:</a>.\n</p><h2 id=\"section.2.3\">2.3 References</h2>\n<a name=\"notation:references\"></a>\n<p>\nThe following national and international standards are referenced\nin this standard:\n</p><p>\n</p><ul>\n<li> ISO/IEC 15145:1997 <em>Information technology.\nProgramming languages. FORTH</em>;\n<p>\n</p></li>\n<li> ANSI X3.215-1994 <em>Programming Languages – Forth</em>;\n<p>\n</p><p>\n</p></li>\n<li> ANSI X3.172-1990 <em>Dictionary for Information Systems</em>,\n(<strong><a href=\"notation#notation:terms\">2.1 Definitions of terms</a></strong>);\n<p>\n</p></li>\n<li> ANSI X3.4-1974 <em>American Standard Code for Information\nInterchange</em> (ASCII),\n(<strong><a href=\"usage#usage:ASCII\">3.1.2.1 Graphic characters</a></strong>);\n<p>\n</p></li>\n<li> ISO 646-1983 <em>ISO 7-bit coded characterset for\ninformation interchange, International Reference Version</em> (IRV)\n(<strong><a href=\"usage#usage:ASCII\">3.1.2.1 Graphic characters</a></strong>);\n<p>\n</p></li>\n<li> ANSI/IEEE 754-1985 <em>Floating-point Standard</em>,\n(<strong><a href=\"float#float:terms\">12.2.1 Definition of terms</a></strong>).\n</li>\n</ul>\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Terms, notation, and references</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\" class=\"current\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Definitions of terms</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.2.1\">Definitions of terms</a></li>\n        <li role=\"menuitem\"><a href=\"#section.2.2\">Notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.2.3\">References</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "port": {
            "basename": "port",
            "name": "Annex D: Portability guide",
            "html": "<div id=\"body\">\n<h1>Annex D: Portability guide</h1> <!-- E.  (informative annex) -->\n<a name=\"annex:port\"></a>\n<p>\n</p><h2 id=\"section.D.1\">D.1 Introduction</h2> <!-- E.1 -->\n<a name=\"port:intro\"></a>\n<p>\nA primary goal of Forth 94 was to enable a programmer to write Forth\nprograms that work on a wide variety of machines, Forth-2012\ncontinues this practice.  This goal is accomplished by allowing some\nkey Forth terms to be implementation defined (e.g., cell size) and\nby providing Forth operators (words) that conceal the implementation.\nThis allows the implementor to produce the Forth system that most\neffectively uses the native hardware. The machine independent\noperators, together with some programmer discipline, support program\nportability.\n</p><p>\nIt can be difficult for someone familiar with only one machine\narchitecture to imagine the problems caused by transporting programs\nbetween dissimilar machines.\nThis Annex provides guidelines for writing portable Forth programs.\nThe first section describes ways to make a program hardware independent.\n</p><p>\nThe second section describes assumptions about Forth implementations\nthat many programmers make, but can't be relied upon in a portable program.\n</p><p>\n</p><h2 id=\"section.D.2\">D.2 Hardware peculiarities</h2> <!-- E.2 -->\n<a name=\"port:hardware\"></a>\n<p>\n</p><h3 id=\"subsection.D.2.1\">D.2.1 Data/memory abstraction</h3> <!-- E.2.1 -->\nThis standard gives definitions for data and memory that\napply to a wide variety of computers. These definitions give us a way\nto talk about the common elements of data and memory while ignoring\nthe details of specific hardware. Similarly, Forth programs that\nuse data and memory in ways that conform to these definitions can\nalso ignore hardware details. The following sections discuss the\ndefinitions and describe how to write programs that are independent\nof the data and memory peculiarities of different computers.\n<p>\n</p><h3 id=\"subsection.D.2.2\">D.2.2 Definitions</h3> <!-- E.2.2 -->\nThree terms defined by this standard are address unit, cell, and\ncharacter.\n<p>\nThe address space of a Forth system is divided into an array of\naddress units; an address unit is the smallest collection of bits that\ncan be addressed. In other words, an address unit is the number of\nbits spanned by the addresses <em>addr</em> and <em>addr</em>+1.\nThe most prevalent machines use 8-bit address units, but other\naddress unit sizes exist.\n</p><p>\nIn this standard, the size of a cell is an implementation-defined\nnumber of address units. Forth implemented on a 16-bit microprocessor\ncould use a 16-bit cell and an implementation on a 32-bit machine\ncould use a 32-bit cell. Less common cell sizes (e.g., 18-bit or\n36-bit machines, etc.) could implement Forth systems with their native\ncell sizes. In all of these systems, Forth words such as <a href=\"core/DUP\">DUP</a>\nand <a href=\"core/Store\">!</a> do the same things (duplicate the top cell on the stack\nand store the second cell into the address given by the first cell,\nrespectively).\n</p><p>\nSimilarly, the definition of a character has been generalized to be\nan implementation-defined number of address units (but at least eight\nbits). This removes the need for a Forth implementor to provide 8-bit\ncharacters on processors where it is inappropriate. For example, on\nan 18-bit machine with a 9-bit address unit, a 9-bit character would\nbe most convenient. Since, by definition, you can't address anything\nsmaller than an address unit, a character must be at least as big as\nan address unit. This will result in big characters on machines with\nlarge address units. An example is a 16-bit cell addressed machine\nwhere a 16-bit character makes the most sense.\n</p><p>\n</p><h3 id=\"subsection.D.2.3\">D.2.3 Addressing memory</h3> <!-- E.2.3 -->\nOne of the most common portability problems is the addressing of \nsuccessive cells in memory. Given the memory address of a cell, how\ndo you find the address of the next cell? \nOn a byte-addressed machine\nwith 32-bit cells the code to find the next cell would be <code>4 +</code>.\nThe code would be <a href=\"core/OnePlus\">1+</a> on a cell-addressed processor and\n<code>16 +</code> on a bit-addressed processor with 16-bit cells.\nThis standard provides a\nnext-cell operator named <a href=\"core/CELLPlus\">CELL+</a> that can be used in all of these cases.\nGiven an address, <a href=\"core/CELLPlus\">CELL+</a> adjusts the address by the size of a cell\n(measured in address units).\n<p>\nA related problem is that of addressing an array of cells in an\narbitrary order. This standard provides a portable scaling operator named <a href=\"core/CELLS\">CELLS</a>.\nGiven a number <em>n</em>, <a href=\"core/CELLS\">CELLS</a> returns the number of address\nunits needed to hold <em>n</em> cells.   Using <a href=\"core/CELLS\">CELLS</a>, we can make\na portable definition of an <code>ARRAY</code> defining word:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Colon\">:</a> ARRAY <a href=\"core/p\">(</a> u -- ) <a href=\"core/CREATE\">CREATE</a>   <a href=\"core/CELLS\">CELLS</a> <a href=\"core/ALLOT\">ALLOT</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DOES\">DOES&gt;</a> <a href=\"core/p\">(</a> u -- addr ) <a href=\"core/SWAP\">SWAP</a> <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n<p>\nThere are also portability problems with addressing arrays of\ncharacters. \nIn a byte-addressed machine, the size of a character equals the\nsize of an address unit.  Addresses of successive characters\nin memory can be found using <a href=\"core/OnePlus\">1+</a> and scaling indices into a character\narray is a no-op (i.e., <code>1 *</code>).  However, there could be\nimplementations where a character is larger than an address unit.\nThe <a href=\"core/CHARPlus\">CHAR+</a> and <a href=\"core/CHARS\">CHARS</a> operators, analogous to\n<a href=\"core/CELLPlus\">CELL+</a> and <a href=\"core/CELLS\">CELLS</a> are available to allow maximum portability.\n</p><p>\nThis standard generalizes the definition of some Forth words that operate\non regions of memory to use address units. One example is\n<a href=\"core/ALLOT\">ALLOT</a>.  By prefixing <a href=\"core/ALLOT\">ALLOT</a> with the appropriate scaling operator\n(<a href=\"core/CELLS\">CELLS</a>, <a href=\"core/CHARS\">CHARS</a>, etc.), space for any desired data structure can\nbe allocated (see definition of array above). For example:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> ABUFFER 5 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/ALLOT\">ALLOT</a>\n    <a href=\"core/p\">(</a> <span class=\"rm\">allot 5 character buffer</span>)\n    \n    </div>\n  </div>\n<p>\n</p><h3 id=\"subsection.D.2.4\">D.2.4 Alignment problems</h3> <!-- E.2.4 -->\nSome processors have restrictions on the addresses that can be used by\nmemory access instructions. This standard does not require an\nimplementor of a Forth to make alignment transparent; on the\ncontrary, it requires (in Section <strong><a href=\"usage#usage:aaddr\">3.3.3.1 Address alignment</a></strong>) that\na standard Forth program assume that character and cell alignment may be\nrequired.\nOne pitfall caused by alignment restrictions\nis in creating tables containing both characters and cells. When\n<a href=\"core/Comma\">,</a> (comma) or <a href=\"core/CComma\">C,</a> is used to initialize a table, data\nare stored at the data-space pointer. Consequently, it must be\nsuitably aligned. For example, a non-portable table definition\nwould be:\n<p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> ATABLE 1 <a href=\"core/CComma\">C,</a> X <a href=\"core/Comma\">,</a> 2 <a href=\"core/CComma\">C,</a> Y <a href=\"core/Comma\">,</a>\n    \n    </div>\n  </div>\n<p>\nOn a machine that restricts memory fetches to aligned addresses,\n<a href=\"core/CREATE\">CREATE</a> would leave the data space pointer at an aligned address.\nHowever, the first <a href=\"core/CComma\">C,</a> would leave the data space pointer at an\nunaligned address,  and the subsequent <a href=\"core/Comma\">,</a> (comma) would violate\nthe alignment restriction by storing <code>X</code> at an unaligned address.\nA portable way to create the table is:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> ATABLE 1 <a href=\"core/CComma\">C,</a>\n    <a href=\"core/ALIGN\">ALIGN</a> X <a href=\"core/Comma\">,</a> 2 <a href=\"core/CComma\">C,</a> <a href=\"core/ALIGN\">ALIGN</a> Y <a href=\"core/Comma\">,</a>\n    \n    </div>\n  </div>\n<p>\n<a href=\"core/ALIGN\">ALIGN</a> adjusts the data space pointer to the first aligned\naddress greater than or equal to its current address. An aligned\naddress is suitable for storing or fetching characters, cells, cell\npairs, or double-cell numbers.\nAfter initializing the table, we would also like to read values from\nthe table. For example, assume we want to fetch the first cell,\n<code>X</code>, from the table. <code>ATABLE</code> <a href=\"core/CHARPlus\">CHAR+</a> gives the\naddress of the first thing after the character. However this may not\nbe the address of <code>X</code> since we aligned the dictionary pointer\nbetween the <a href=\"core/CComma\">C,</a> and the <a href=\"core/Comma\">,</a>. The portable way to get the\naddress of <code>X</code> is:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\nATABLE <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/ALIGNED\">ALIGNED</a>\n    \n    </div>\n  </div>\n<p>\n<a href=\"core/ALIGNED\">ALIGNED</a> adjusts the address on top of the stack to the first\naligned address greater than or equal to its current value.\n</p><p>\n</p><h2 id=\"section.D.3\">D.3 Number representation</h2> <!-- E.3 -->\n<h3 id=\"subsection.D.3.1\">D.3.1 Big endian vs. little endian</h3> <!-- E.3.1 -->\n<a name=\"port:endian\"></a>\n<p>\nThe constituent bits of a number in memory are kept in different\norders on different machines. Some machines place the most-significant\npart of a number at an address in memory with less-significant parts\nfollowing it at higher addresses; this is known as big-endian\nording. Other machines do the opposite; the\nleast-significant part is stored at the lowest address (little-endian\nordering).\n</p><p>\nFor example, the following code for a 16-bit little endian Forth\nwould produce the answer 1:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/VARIABLE\">VARIABLE</a> FOO\n    &nbsp;&nbsp; 1 FOO <a href=\"core/Store\">!</a>\n    &nbsp;&nbsp; FOO <a href=\"core/CFetch\">C@</a>\n    \n    </div>\n  </div>\n<p>\nThe same code on a 16-bit big-endian Forth would produce the\nanswer 0. A portable program cannot exploit the representation\nof a number in memory.\n</p><p>\nA related issue is the representation of cell pairs and double-cell\nnumbers in memory. When a cell pair is moved from the stack to memory\nwith <a href=\"core/TwoStore\">2!</a>, the cell that was on top of the stack is placed at the\nlower memory address. It is useful and reasonable to manipulate the\nindividual cells when they are in memory.\n</p><p>\n</p><h3 id=\"subsection.D.3.2\">D.3.2 ALU organization</h3> <!-- E.3.2 -->\nDifferent computers use different bit patterns to represent integers.\nPossibilities include binary representations (two's complement, one's\ncomplement, sign magnitude, etc.) and decimal representations (BCD,\netc.). Each of these formats creates advantages and disadvantages in\nthe design of a computer's arithmetic logic unit (ALU). The most\ncommonly used representation, two's complement, is popular because of\nthe simplicity of its addition and subtraction operations.\n<p>\nProgrammers who have grown up on two's complement machines tend to\nbecome intimate with their representation of numbers and take some\nproperties of that representation for granted. For example, a trick\nto find the remainder of a number divided by a power of two is to mask\noff some bits with <a href=\"core/AND\">AND</a>. A common application of this trick is\nto test a number for oddness using 1 <a href=\"core/AND\">AND</a>. However, this will\nnot work on a one's complement machine if the number is negative (a\nportable technique is 2 <a href=\"core/MOD\">MOD</a>).\n</p><p>\nThe remainder of this section is a (non-exhaustive) list of things to\nwatch for when portability between machines with binary representations\nother than two's complement is desired.\n</p><p>\nTo convert a single-cell number to a double-cell number, Forth 94\nprovided the operator <a href=\"core/StoD\">S&gt;D</a>. To convert a double-cell number to\nsingle-cell, Forth programmers have traditionally used <a href=\"core/DROP\">DROP</a>.\nHowever, this trick doesn't work on sign-magnitude machines. For\nportability a <a href=\"double/DtoS\">D&gt;S</a> operator is available. Converting an\nunsigned single-cell number to a double-cell number can be done portably\nby pushing a zero on the stack.\n</p><p>\n</p><h2 id=\"section.D.4\">D.4 Forth system implementation</h2> <!-- E.4 -->\nDuring Forth's history, an amazing variety of implementation techniques\nhave been developed. The ANS Forth Standard encourages this diversity\nand consequently restricts the assumptions a user can make about the\nunderlying implementation of an ANS Forth system. Users of a particular\nForth implementation frequently become accustomed to aspects of the\nimplementation and assume they are common to all Forths. This section\npoints out many of these incorrect assumptions.\n<p>\n</p><h3 id=\"subsection.D.4.1\">D.4.1 Definitions</h3> <!-- E.4.1 -->\nTraditionally, Forth definitions have consisted of the name of the\nForth word, a dictionary search link, data describing how to execute\nthe definition, and parameters describing the definition itself. These\ncomponents have historically been referred to as the name, link, code,\nand parameter fields.\nNo method for accessing these fields has been found that works\nacross all of the Forth implementations currently in use. Therefore,\na portable Forth program may not use the name, link, or code field\nin any way. Use of the parameter field (renamed to data field for\nclarity) is limited to the operations described below.\n<p>\nOnly words defined with <a href=\"core/CREATE\">CREATE</a> or with other defining words\nthat call <a href=\"core/CREATE\">CREATE</a> have data fields. The other defining words\nin the standard (<a href=\"core/VARIABLE\">VARIABLE</a>, <a href=\"core/CONSTANT\">CONSTANT</a>, <a href=\"core/Colon\">:</a>, etc.)\nmight not be implemented with <a href=\"core/CREATE\">CREATE</a>. Consequently, a Standard\nProgram must assume that words defined by <a href=\"core/VARIABLE\">VARIABLE</a>,\n<a href=\"core/CONSTANT\">CONSTANT</a>, <a href=\"core/Colon\">:</a>, etc., may have no data fields. There is no\nportable way for a Standard Program to modify the value of a constant or to\n\"patch\" a colon definition at run time.\nThe <a href=\"core/DOES\">DOES&gt;</a> part of a defining word operates on a data field,\nso <a href=\"core/DOES\">DOES&gt;</a> may only be used on words ultimately defined by <a href=\"core/CREATE\">CREATE</a>.\n</p><p>\nIn standard Forth, <a href=\"core/FIND\">FIND</a>, <a href=\"core/BracketTick\">[']</a> and <a href=\"core/Tick\">'</a> (tick) return an\nunspecified entity called an execution token. There are only a\nfew things that may be done with an execution token. The token may be\npassed to <a href=\"core/EXECUTE\">EXECUTE</a> to execute the word ticked or compiled into\nthe current definition with <a href=\"core/COMPILEComma\">COMPILE,</a>. The token can also be\nstored in a variable or other data structure and used later.\nFinally, if the word ticked was defined via <a href=\"core/CREATE\">CREATE</a>, <a href=\"core/toBODY\">&gt;BODY</a>\nconverts the execution token into the word's data-field address.\n</p><p>\nAn execution token cannot be assumed to be an address and may not\nbe used as one.\n</p><p>\n</p><h3 id=\"subsection.D.4.2\">D.4.2 Stacks</h3> <!-- E.4.2 -->\nIn some Forth implementations, it is possible to find the address of\na stack in memory and manipulate the stack as an array of cells. This\ntechnique is not portable. On some systems, especially\nForth-in-hardware systems, the stacks might be in memory\nthat can't be addressed by the program or might not be in memory at\nall. Forth's parameter and return stacks must be treated as stacks.\n<p>\nA Standard Program may use the return stack directly only for\ntemporarily storing values. Every value examined or removed from the\nreturn stack using <a href=\"core/RFetch\">R@</a>, <a href=\"core/Rfrom\">R&gt;</a>, or <a href=\"core/TwoRfrom\">2R&gt;</a> must have been\nput on the stack explicitly using <a href=\"core/toR\">&gt;R</a> or <a href=\"core/TwotoR\">2&gt;R</a>. Even this\nmust be done carefully because the system may use the return stack to\nhold return addresses and loop-control parameters. Section\n<strong><a href=\"usage#usage:returnstack\">3.2.3.3 Return stack</a></strong> of the standard has a\nlist of restrictions.\n</p><p>\n</p><h2 id=\"section.D.5\">D.5 Summary</h2> <!-- E.6 -->\nThe Forth Standard does not force anyone to write\na portable program. In situations where performance is paramount,\nthe programmer is encouraged to use every trick available. On the\nother hand, if portability to a wide variety of systems is needed(or anticipated), this standard provides the tools to accomplish this. There\nmight be no such thing as a completely portable program. A programmer, using\nthis guide, should intelligently weigh the tradeoffs of providing\nportability to specific machines. For example, machines that use\nsign-magnitude numbers are rare and probably don't deserve much\nthought. But, systems with different cell sizes will certainly be\nencountered and should be provided for. In general, making a program\nportable clarifies both the programmer's thinking process and the\nfinal program.\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Portability guide</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\" class=\"current\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.D.1\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.D.2\">Hardware peculiarities</a></li>\n        <li role=\"menuitem\"><a href=\"#section.D.3\">Number representation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.D.4\">Forth system implementation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.D.5\">Summary</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "process": {
            "basename": "process",
            "name": "Proposals Process",
            "html": "<div id=\"body\">\n<h1 id=\"section*.3\">Proposals Process</h1>\n<a name=\"process\"></a>\n\nIn developing a standard it is necessary for the standards committee to\nknow what the system implementors and the programmers are already doing\nin that area, and what they would be willing to do, or wish for.\n<p>\nTo that end we have introduced a system of consultation with the Forth\ncommunity:\n</p><p>\n</p><ol style=\"list-style-type: lower-alpha\">\n<li>\nA proponent of an extension or change to the standard writes a\nproposal.\n<p>\n</p></li>\n<li>\nThe proponent publishes the proposal as an <em>RfD</em> (Request for\nDiscussion) by sending a copy to the <code>forth200x@yahoogroups.com</code>\nemail list <em>and</em> to the <code>comp.lang.forth</code> usenet news group\nwhere it can be discussed.  The maintainers of the\n<code>www.forth200x.org</code> web site will then place a copy of the\nproposal on that web site.\n<p>\nBe warned, this will generate a lot of heated discussion.\n</p><p>\nIn order for the results to be available in time for a standards\nmeeting, an RfD should be published at least 12 weeks before the\nnext meeting.\n</p><p>\nIf a proposal does not propose extensions or changes to the Forth\nlanguage, but a rewording of the current document, there is nothing\nfor a system implementor to implement, or a programmer to use.  In\nsuch a case, the proposal should be published as a Request for Comment\n(RfC). The proposal will be considered, along with any comments, at\nthe next committee meeting.\n</p><p>\n</p></li>\n<li>\nThe proponent can modify the proposal, taking any comments into\nconsideration.  Where comments have been dismissed, both the comment \nand the reasons for its dismissal should be given.  The revised\nproposal is published as a revised RfD/RfC.\n<p>\n</p></li>\n<li>\nOnce a proposal has settled down, it is frozen, and submitted to a\nvote taker, who then publishes a <em>CfV</em> (Call for Votes) on the\nproposal. The vote taker will normally be a member of the standards\ncommittee.  In the poll, system implementors can state, whether\ntheir systems implement the proposal, or what the chances are that\nit ever will.  Similarly, programmers can state whether they have\nused something similar to the proposed extension and whether they\nwould use the proposed extension once it is standardized.  The\nresults of this poll are used by the standards committee when\ndeciding whether to accept the proposal into the standards document.\n<p>\nIn order for the results to be available in time for a standards\nmeeting, the CfV should be started at least 6 weeks before that\nmeeting.\n</p><p>\n</p></li>\n<li>\nOne to two weeks after publishing the CfV, the vote taker will\npublish a <em>Current Standings</em>.  Note that the poll will remain\nopen, especially for information on additional systems, and the\nresults will be updated on the Forth200<em>x</em> web page.  The\nresults considered at a standards meeting are those from four weeks\nprior to that meeting.  If no poll results are available by that\ndeadline, the proposal will be considered at a later meeting.\n<p>\n</p></li>\n<li>\nA proposal will only be accepted into the new basis document by\nconsensus of those present at a standards meeting. If you can\nnot attend a meeting, you should ask somebody who is attending\nto champion the proposal on your behalf.\n</li>\n</ol>\n<p>\nShould a contributor consider their comments to have been dismissed\nwithout due consideration, they are encouraged to submit a counter\nproposal.\n</p><p>\nProposals which have passed the poll will be integrated into the basis\ndocument in preparation for the approaching standards committee meeting.\nProposals often require some rewording in this process, so the proponent\nshould work with the editor to integrate the proposal into the document.\n</p><p>\nA proposal should give a rationale for the proposal, so that system\nimplementors and programmers may see the relevance of the proposal and\nwhy they should adopt (and vote for) it. The proposal should include\nthe following sections, where appropriate.\n</p><p>\n</p><dl class=\"desc\">\n<dt>Author:</dt><dd>  The name of the author(s) of the proposal.\n<p>\n</p><p>\n</p></dd>\n<dt>Change Log:</dt><dd>  A list of changes to the last published edition on the proposal.\n<p>\n</p><p>\n</p></dd>\n<dt>Problem:</dt><dd>  This states what problem the proposal addresses.\n<p>\n</p><p>\n</p></dd>\n<dt>Solution:</dt><dd>  An informal description of the proposed solution to the problem\nidentified by the proposal.\n<p>\n</p></dd>\n<dt>Typical use:</dt><dd>  Shows a typical use of the word/feature you propose; this should\nmake the formal wording easier to understand.\n<p>\n</p></dd>\n<dt>Remarks:</dt><dd>  This gives the rationale for specific decisions you have taken in\nthe proposal (often in response to comments in the RfD phase), or\ndiscusses specific issues that have not been decided yet.\n<p>\n</p></dd>\n<dt>Proposal:</dt><dd>  This is the formal or normative part of the proposal and should be\nas well specified as possible.\n<p>\nSome issues could be left undecided in the initial RfDs, leaving\nthe issue open for discussion.  These issues should be mentioned\nin the Remarks section as well as in the Proposal section.\n</p><p>\nIf you want to leave something open to the system implementor, make\nthat explicit, e.g., by making it an ambiguous condition.\n</p><p>\nFor the wording of word definitions, it is normally a good idea to\ntake your inspiration from existing word definitions in the basis\ndocument.  Where possible you should include the rationale for the\ndefinition.  Should a proposal be accepted where no rationale has\nbeen provided, the editor will construct a rationale from other\nparts of the proposal.  The proponent should work with the editor\nin the development of this rationale.\n</p><p>\n</p></dd>\n<dt>Reference implementation:</dt><dd>  This makes it easier for system implementors to adopt your proposal.\nWhere possible they should be provided in standard Forth, as defined\nby this document.\nWhere this is not possible, system specific knowledge is required or\nnon standard words are used, this should be documented.\n<p>\n</p></dd>\n<dt>Testing:</dt><dd>  This should test the feature/words you propose, in particular, it\nshould test boundary conditions.  Where possible test cases should\nbe written to conform with John Hayes <code>tester.f</code> test harness.\n<p>\n</p></dd>\n<dt>Experience:</dt><dd>  Indicate where the proposal has already been implemented and/or\nused.\n<p>\n</p></dd>\n<dt>Comments:</dt><dd>  Initially this is blank.  As comments are made on the proposal,\nthey should be incorporated into the proposal.  Comment which can\nnot be incorporated should be included in this section.  A response\nto the comment may be included after the comment itself.\n<p>\n</p></dd>\n<dt>Instructions for responding to the poll:</dt><dd>  Once the proposal enters the CfV stage, the vote taker will add\nthese instructions to the proposal.\n</dd></dl>\n<br class=\"clear\">\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Proposals Process</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\" class=\"current\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "rationale": {
            "basename": "rationale",
            "name": "Annex A: Rationale",
            "html": "<div id=\"body\">\n<h1>Annex A: Rationale</h1> <!-- A. (informative annex)}}} -->\n<a name=\"annex:rationale\"></a>\n\n\n\n<h2 id=\"section.A.1\">A.1 Introduction</h2> <!-- A.1 -->\n<h3 id=\"subsection.A.1.1\">A.1.1 Purpose</h3> <!-- A.1.1 -->\n<h3 id=\"subsection.A.1.2\">A.1.2 Scope</h3> <!-- A.1.2 -->\n<a name=\"rat:scope\"></a>\n<p>\nWhen judging relative merits of proposed changes to the standard, the\nmembers of the committee were guided by the following goals (listed\nin alphabetic order):\n</p><p>\n</p><table>\n<tbody><tr valign=\"top\"><td>Consistency\t</td><td style=\"width: 37.5em\">The standard provides a functionally complete set of words with\nminimal functional overlap.\n</td></tr>\n<tr valign=\"top\"><td>Cost of compliance </td><td style=\"width: 37.5em\">This goal includes such issues as common practice, how much\nexisting code would be broken by the proposed change, and the\namount of effort required to bring existing applications and\nsystems into conformity with the standard.\n</td></tr>\n<tr valign=\"top\"><td>Efficiency </td><td style=\"width: 37.5em\">Execution speed, memory compactness.\n</td></tr>\n<tr valign=\"top\"><td>Portability\t</td><td style=\"width: 37.5em\">Words chosen for inclusion should be free of system-dependent\nfeatures.\n</td></tr>\n<tr valign=\"top\"><td>Readability </td><td style=\"width: 37.5em\">Forth definition names should clearly delineate their behavior.\nThat behavior should have an apparent simplicity which supports\nrapid understanding. Forth should be easily taught and support\nreadily maintained code.\n</td></tr>\n<tr valign=\"top\"><td>Utility\t</td><td style=\"width: 37.5em\">Be judged to have sufficiently essential functionality and\nfrequency of use to be deemed suitable for inclusion.\n</td></tr></tbody></table>\n<p>\n</p><h2 id=\"section.A.2\">A.2 Terms and notation</h2> <!-- A.2 -->\n<h3 id=\"subsection.A.2.1\">A.2.1 Definitions of terms</h3> <!-- A.2.1 -->\n<dl class=\"desc\">\n<dt>aligned</dt><dd> \nData can only be loaded from and stored to addresses that are aligned\naccording to the alignment requirements of the accessed type.  Field\noffsets that are added to structure addresses also need to be aligned.\n<p>\n</p></dd>\n<dt>ambiguous condition</dt><dd>  \nThe response of a Standard System to an ambiguous condition is left\nto the discretion of the implementor. A Standard System need not\nexplicitly detect or report the occurrence of ambiguous conditions.\n<p>\n</p></dd>\n<dt>cross compiler</dt><dd>  \nCross compilers may be used to prepare a program for execution in an\nembedded system, or may be used to generate Forth kernels either for\nthe same or a different run-time environment.\n<p>\n</p></dd>\n<dt>data field</dt><dd>  \nIn earlier standards, data fields were known as \"parameter fields\".\n<p>\nOn subroutine threaded Forth systems, everything is object code.\nThere are no traditional code or data fields. Only a word defined by\n<a href=\"core/CREATE\">CREATE</a> or by a word that calls <a href=\"core/CREATE\">CREATE</a> has a data field.\nOnly a data field defined via <a href=\"core/CREATE\">CREATE</a> can be manipulated portably.\n</p><p>\n</p></dd>\n<dt>word set</dt><dd>  \nThis standard recognizes that some functions, while useful in certain\napplication areas, are not sufficiently general to justify requiring\nthem in all Forth systems. Further, it is helpful to group Forth\nwords according to related functions. These issues are dealt with\nusing the concept of word sets.\n<p>\nThe \"Core\" word set contains the essential body of words in a Forth\nsystem. It is the only \"required\" word set. Other word sets defined\nin this standard are optional additions to make it possible to\nprovide Standard Systems with tailored levels of functionality.\n</p></dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.A.2.2\">A.2.2 Notation</h3> <!-- A.2.2 -->\n\n<h4 id=\"subsubsection.A.2.2.2\">A.2.2.2 Stack notation</h4> <!-- A.2.2.2 -->\nThe use of <em>-sys</em>, <em>orig</em>, and <em>dest</em> data types in\nstack effect diagrams conveys two pieces of information. First, it\nwarns the reader that many implementations use the data stack in\nunspecified ways for those purposes, so that items underneath on\neither the control-flow or data stacks are unavailable. Second, in\ncases where <em>orig</em> and <em>dest</em> are used, explicit pairing\nrules are documented on the assumption that all systems will\nimplement that model so that its results are equivalent to employment\nof some stack, and that in fact many implementations do use the data\nstack for this purpose. However, nothing in this standard requires\nthat implementations actually employ the data stack (or any other)\nfor this purpose so long as the implied behavior of the model is\nmaintained.\n<p>\n</p><h2 id=\"section.A.3\">A.3 Usage requirements</h2> <!-- A.3 -->\nForth systems are unusually simple to develop, in comparison with\ncompilers for more conventional languages such as C. In addition to\nForth systems supported by vendors, public-domain implementations and\nimplementation guides have been widely available for nearly twenty\nyears, and a large number of individuals have developed their own\nForth systems. As a result, a variety of implementation approaches\nhave developed, each optimized for a particular platform or target\nmarket.\n<p>\nThe committee has endeavored to accommodate this diversity by\nconstraining implementors as little as possible, consistent with a\ngoal of defining a standard interface between an underlying Forth\nSystem and an application program being developed on it.\n</p><p>\nSimilarly, we will not undertake in this section to tell you how to\nimplement a Forth System, but rather will provide some guidance as\nto what the minimum requirements are for systems that can properly\nclaim compliance with this standard.\n</p><p>\n</p><h3 id=\"subsection.A.3.1\">A.3.1 Data types</h3> <!-- A.3.1 -->\n<a name=\"rat:types\"></a>\n<p>\nMost computers deal with arbitrary bit patterns. There is no way to\ndetermine by inspection whether a cell contains an address or an\nunsigned integer. The only meaning a datum possesses is the meaning\nassigned by an application.\n</p><p>\nWhen data are operated upon, the meaning of the result depends on\nthe meaning assigned to the input values. Some combinations of input\nvalues produce meaningless results: for instance, what meaning can\nbe assigned to the arithmetic sum of the ASCII representation of the\ncharacter \"A\" and a TRUE flag? The answer may be \"no meaning\";\nor alternatively, that operation might be the first step in\nproducing a checksum. Context is the determiner.\n</p><p>\nThe discipline of circumscribing meaning which a program may assign\nto various combinations of bit patterns is sometimes called\n<em>data typing</em>. Many computer languages impose explicit data\ntyping and have compilers that prevent ill-defined operations.\n</p><p>\nForth rarely explicitly imposes data-type restrictions. Still, data\ntypes implicitly do exist, and discipline is required, particularly\nif portability of programs is a goal. In Forth, it is incumbent upon\nthe programmer (rather than the compiler) to determine that data are\naccurately typed.\n</p><p>\nThis section attempts to offer guidance regarding <em>de facto</em>\ndata typing in Forth.\n</p><p>\n\n</p><h4 id=\"subsubsection.A.3.1.2\">A.3.1.2 Character types</h4> <!-- A.3.1.2 -->\nThe correct identification and proper manipulation of the character\ndata type is beyond the purview of Forth's enforcement of data type\nby means of stack depth. Characters do not necessarily occupy the\nentire width of their single stack entry with meaningful data. While\nthe distinction between signed and unsigned character is entirely\nabsent from the formal specification of Forth, the tendency in\npractice is to treat characters as short positive integers when\nmathematical operations come into play.\n<p>\n</p><ol style=\"list-style-type: lower-alpha\">\n<li> <strong>Standard Character Set</strong>\n<p>\n</p><ol style=\"list-style-type: decimal\">\n<li> The storage unit for the character data type\n(<a href=\"core/CFetch\">C@</a>, <a href=\"core/CStore\">C!</a>, <a href=\"core/FILL\">FILL</a>, etc.)\nmust be able to contain unsigned numbers from 0 through 255.\n<p>\n</p></li>\n<li> An implementation is not required to restrict character\nstorage to that range, but a Standard Program without\nenvironmental dependencies cannot assume the ability to\nstore numbers outside that range in a \"char\" location.\n<p>\n</p></li>\n<li> The allowed number representations are two's-complement,\none's-complement, and signed-magnitude. Note that all of\nthese number systems agree on the representation of positive\nnumbers.\n<p>\n</p></li>\n<li> Since a \"<em>char</em>\" can store small positive numbers\nand since the character data type is a sub-range of the\nunsigned integer data type, <a href=\"core/CStore\">C!</a> must store the <em>n</em>\nleast-significant bits of a cell (<em>8 &lt;= n &lt;=</em> bits/cell).\nGiven the enumeration of allowed number representations and\ntheir known encodings, \"<a href=\"core/TRUE\">TRUE</a> <code>xx</code> <a href=\"core/CStore\">C!</a>\n<code>xx</code> <a href=\"core/CFetch\">C@</a>\" must leave a stack item with some\nnumber of bits set, which will thus will be accepted as\nnon-zero by <a href=\"core/IF\">IF</a>.\n<p>\n</p></li>\n<li> For the purposes of input (<a href=\"core/KEY\">KEY</a>, <a href=\"core/ACCEPT\">ACCEPT</a>, etc.)\nand output (<a href=\"core/EMIT\">EMIT</a>, <a href=\"core/TYPE\">TYPE</a>, etc.), the encoding\nbetween numbers and human-readable symbols is ISO646/IRV\n(ASCII) within the range from 32 to 126 (space to ~).\nEBCDIC is out (most \"EBCDIC\" computer systems support ASCII\ntoo). Outside that range, it is up to the implementation. The\nobvious implementation choice is to use ASCII control\ncharacters for the range from 0 to 31, at least for the\n\"displayable\" characters in that range (TAB, RETURN, LINEFEED,\nFORMFEED). However, this is not as clear-cut as it may seem,\nbecause of the variation between operating systems on the\ntreatment of those characters. For example, some systems TAB\nto 4 character boundaries, others to 8 character boundaries,\nand others to preset tab stops. Some systems perform an automatic\nlinefeed after a carriage return, others perform an automatic\ncarriage return after a linefeed, and others do neither.\n<p>\nThe codes from 128 to 255 may eventually be standardized,\neither formally or informally, for use as international\ncharacters, such as the letters with diacritical marks found\nin many European languages. One such encoding is the 8-bit\nISO Latin-1 character set. The computer marketplace at large\nwill eventually decide which encoding set of those characters\nprevails. For Forth implementations running under an\noperating system (the majority of those running on standard\nplatforms these days), most Forth implementors will probably\nchoose to do whatever the system does, without performing any\nremapping within the domain of the Forth system itself.\n</p><p>\n</p></li>\n<li> A Standard Program can depend on the ability to receive\nany character in the range 32 ... 126 through <a href=\"core/KEY\">KEY</a>,\nand similarly to display the same set of characters with\n<a href=\"core/EMIT\">EMIT</a>. If a program must be able to receive or display\nany particular character outside that range, it can declare\nan environmental dependency on the ability to receive or\ndisplay that character.\n<p>\n</p></li>\n<li> A Standard Program cannot use control characters in\ndefinition names. However, a Standard System is not required\nto enforce this prohibition. Thus, existing systems that\ncurrently allow control characters in words names from\n<a href=\"block/BLOCK\">BLOCK</a> source may continue to allow them, and\nprograms running on those systems will continue to work. In\ntext file source, the parsing action with space as a\ndelimiter (e.g., <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a>) treats control\ncharacters the same as spaces. This effectively implies that\nyou cannot use control characters in definition names from\ntext-file source, since the text interpreter will treat the\ncontrol characters as delimiters. Note that this\n\"control-character folding\" applies only when space is the\ndelimiter, thus the phrase \"<a href=\"core/CHAR\">CHAR</a> <code>)</code> <a href=\"core/WORD\">WORD</a>\"\nmay collect a string containing control characters.\n</li>\n</ol>\n<p>\n</p></li>\n<li> <strong>Storage and retrieval</strong>\n<p>\nCharacters are transferred from the data stack to memory by\n<a href=\"core/CStore\">C!</a> and from memory to the data stack by <a href=\"core/CFetch\">C@</a>. A\nnumber of lower-significance bits equivalent to the\nimplementation-dependent width of a <em>character</em> are\ntransferred from a popped data stack entry to an address by the\naction of <a href=\"core/CStore\">C!</a> without affecting any bits which may comprise\nthe higher-significance portion of the cell at the destination\naddress; however, the action of <a href=\"core/CFetch\">C@</a> clears all\nhigher-significance bits of the data stack entry which it pushes\nthat are beyond the implementation-dependent width of a character\n(which may include implementation-defined display information in\nthe higher-significance bits). The programmer should keep in mind\nthat operating upon arbitrary stack entries with words intended\nfor the character data type may result in truncation of such data.\n</p><p>\n</p></li>\n<li> <strong>Manipulation on the stack</strong>\n<p>\nIn addition to <a href=\"core/CFetch\">C@</a> and <a href=\"core/CStore\">C!</a>, characters are moved to,\nfrom and upon the data stack by the following words:\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/toR\">&gt;R</a>\t<a href=\"core/qDUP\">?DUP</a>\t<a href=\"core/DROP\">DROP</a>\t<a href=\"core/DUP\">DUP</a>\n    <a href=\"core/OVER\">OVER</a>\t<a href=\"core/PICK\">PICK</a>\t<a href=\"core/Rfrom\">R&gt;</a>\t<a href=\"core/RFetch\">R@</a>\n    <a href=\"core/ROLL\">ROLL</a>\t<a href=\"core/ROT\">ROT</a>\t<a href=\"core/SWAP\">SWAP</a>\n    \n    </div>\n  </div>\n<p>\n\n</p></li>\n<li> <strong>Additional operations</strong>\n<p>\nThe following mathematical operators are valid for character data:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Plus\">+</a>\t<a href=\"core/Minus\">-</a>\t<a href=\"core/Times\">*</a>\t<a href=\"core/Div\">/</a>\n    <a href=\"core/DivMOD\">/MOD</a>\t<a href=\"core/MOD\">MOD</a>\n    \n    </div>\n  </div>\n<p>\nThe following comparison and bitwise operators may be valid for\ncharacters, keeping in mind that display information cached in\nthe most significant bits of characters in an implementation-defined\nfashion may have to be masked or otherwise dealt with:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/AND\">AND</a>\t\t<a href=\"core/OR\">OR</a>\t\t<a href=\"core/more\">&gt;</a>\t<a href=\"core/less\">&lt;</a>\n    <a href=\"core/Umore\">U&gt;</a>\t<a href=\"core/Uless\">U&lt;</a>\t<a href=\"core/Equal\">=</a>\t<a href=\"core/ne\">&lt;&gt;</a>\n    <a href=\"core/ZeroEqual\">0=</a>\t\t<a href=\"core/Zerone\">0&lt;&gt;</a>\t\t<a href=\"core/MAX\">MAX</a>\t<a href=\"core/MIN\">MIN</a>\n    <a href=\"core/LSHIFT\">LSHIFT</a>\t<a href=\"core/RSHIFT\">RSHIFT</a>\n    \n    </div>\n  </div>\n</li>\n</ol>\n<p>\n</p><h4 id=\"subsubsection.A.3.1.3\">A.3.1.3 Single-cell types</h4> <!-- A.3.1.3 -->\nA single-cell stack entry viewed without regard to typing is the\nfundamental data type of Forth. All other data types are actually\nrepresented by one or more single-cell stack entries.\n<p>\n</p><ol style=\"list-style-type: lower-alpha\">\n<li> <strong>Storage and retrieval</strong>\n<p>\nSingle-cell data are transferred from the stack to memory by\n<a href=\"core/Store\">!</a>; from memory to the stack by <a href=\"core/Fetch\">@</a>. All bits are\ntransferred in both directions and no type checking of any sort\nis performed, nor does the Standard System check that a memory\naddress used by <a href=\"core/Store\">!</a> or <a href=\"core/Fetch\">@</a> is properly aligned or\nproperly sized to hold the datum thus transferred.\n</p><p>\n</p></li>\n<li> <strong>Manipulation on the stack</strong>\n<p>\nHere is a selection of the most important words which move\nsingle-cell data to, from and upon the data stack:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Store\">!</a>\t<a href=\"core/Fetch\">@</a>\t<a href=\"core/toR\">&gt;R</a>\t<a href=\"core/qDUP\">?DUP</a>\n    <a href=\"core/DROP\">DROP</a>\t<a href=\"core/DUP\">DUP</a>\t<a href=\"core/OVER\">OVER</a>\t<a href=\"core/PICK\">PICK</a>\n    <a href=\"core/Rfrom\">R&gt;</a>\t<a href=\"core/RFetch\">R@</a>\t<a href=\"core/ROLL\">ROLL</a>\t<a href=\"core/ROT\">ROT</a>\n    <a href=\"core/SWAP\">SWAP</a>\n    \n    </div>\n  </div>\n<p>\n</p></li>\n<li> <strong>Comparison operators</strong>\n<p>\nThe following comparison operators are universally valid for one\nor more single cells:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Equal\">=</a>\t<a href=\"core/ne\">&lt;&gt;</a>\t<a href=\"core/ZeroEqual\">0=</a>\t<a href=\"core/Zerone\">0&lt;&gt;</a>\n    \n    </div>\n  </div>\n</li>\n</ol>\n<p>\n</p><h5 id=\"paragraph.A.3.1.3.1\">A.3.1.3.1 Flags</h5>   <!-- A.3.1.3.1 -->\nA <a href=\"core/FALSE\">FALSE</a> flag is a single-cell datum with all bits unset, and\na <a href=\"core/TRUE\">TRUE</a> flag is a single-cell datum with all bits set. While\nForth words which test flags accept any non-null bit pattern as true,\nthere exists the concept of the <em>well-formed flag</em>. If an\noperation whose result is to be used as a flag may produce any\nbit-mask other than <a href=\"core/TRUE\">TRUE</a> or <a href=\"core/FALSE\">FALSE</a>, the recommended\ndiscipline is to convert the result to a well-formed flag by means\nof the Forth word <a href=\"core/Zerone\">0&lt;&gt;</a> so that the result of any subsequent\nlogical operations on the flag will be predictable.\n<p>\nIn addition to the words which move, fetch and store single-cell\nitems, the following words are valid for operations on one or more\nflag data residing on the data stack:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/AND\">AND</a>\t<a href=\"core/OR\">OR</a>\t<a href=\"core/XOR\">XOR</a>\t<a href=\"core/INVERT\">INVERT</a>\n    \n    </div>\n  </div>\n<p>\n</p><h5 id=\"paragraph.A.3.1.3.2\">A.3.1.3.2 Integers</h5>   <!-- A.3.1.3.2 -->\nA single-cell datum may be treated by a Standard Program as a signed\ninteger. Moving and storing such data is performed as for any\nsingle-cell data. In addition to the universally-applicable operators\nfor single-cell data specified above, the following mathematical and\ncomparison operators are valid for single-cell signed integers:\n<p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Times\">*</a>\t<a href=\"core/TimesDiv\">*/</a>\t<a href=\"core/TimesDivMOD\">*/MOD</a>\t<a href=\"core/DivMOD\">/MOD</a>\n    <a href=\"core/MOD\">MOD</a>\t<a href=\"core/Plus\">+</a>\t<a href=\"core/PlusStore\">+!</a>\t\t<a href=\"core/Minus\">-</a>\n    <a href=\"core/Div\">/</a>\t<a href=\"core/OnePlus\">1+</a>\t<a href=\"core/OneMinus\">1-</a>\t\t<a href=\"core/ABS\">ABS</a>\n    <a href=\"core/MAX\">MAX</a>\t<a href=\"core/MIN\">MIN</a>\t<a href=\"core/NEGATE\">NEGATE</a>\t<a href=\"core/Zeroless\">0&lt;</a>\n    <a href=\"core/Zeromore\">0&gt;</a>\t<a href=\"core/less\">&lt;</a>\t<a href=\"core/more\">&gt;</a>\n    \n    </div>\n  </div>\n<p>\nGiven the same number of bits, unsigned integers usually represent\ntwice the number of absolute values representable by signed integers.\n</p><p>\nA single-cell datum may be treated by a Standard Program as an\nunsigned integer. Moving and storing such data is performed as for\nany single-cell data. In addition, the following mathematical and\ncomparison operators are valid for single-cell unsigned integers:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/UMTimes\">UM*</a>\t<a href=\"core/UMDivMOD\">UM/MOD</a>\t<a href=\"core/Plus\">+</a>\t<a href=\"core/PlusStore\">+!</a>\n    <a href=\"core/Minus\">-</a>\t<a href=\"core/OnePlus\">1+</a>\t\t<a href=\"core/OneMinus\">1-</a>\t<a href=\"core/Times\">*</a>\n    <a href=\"core/Uless\">U&lt;</a>\t<a href=\"core/Umore\">U&gt;</a>\n    \n    </div>\n  </div>\n<p>\n</p><h5 id=\"paragraph.A.3.1.3.3\">A.3.1.3.3 Addresses</h5>   <!-- A.3.1.3.3 -->\nAn address is uniquely represented as a single cell unsigned number\nand can be treated as such when being moved to, from, or upon the\nstack. Conversely, each unsigned number represents a unique address\n(which is not necessarily an address of accessible memory). This\none-to-one relationship between addresses and unsigned numbers forces\nan equivalence between address arithmetic and the corresponding\noperations on unsigned numbers.\n<p>\nSeveral operators are provided specifically for address arithmetic:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/CHARPlus\">CHAR+</a>\t<a href=\"core/CHARS\">CHARS</a>\n    <a href=\"core/CELLPlus\">CELL+</a>\t<a href=\"core/CELLS\">CELLS</a>\n    \n    </div>\n  </div>\n<p>\nand, if the floating-point word set is present:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"float/FLOATPlus\">FLOAT+</a>\t\t<a href=\"float/FLOATS\">FLOATS</a>\n    <a href=\"float/SFLOATPlus\">SFLOAT+</a>\t<a href=\"float/SFLOATS\">SFLOATS</a>\n    <a href=\"float/DFLOATPlus\">DFLOAT+</a>\t<a href=\"float/DFLOATS\">DFLOATS</a>\n    \n    </div>\n  </div>\n<p>\nA Standard Program may never assume a particular correspondence\nbetween a Forth address and the physical address to which it is\nmapped.\n</p><p>\n</p><h5 id=\"paragraph.A.3.1.3.4\">A.3.1.3.4 Counted strings</h5>   <!-- A.3.1.3.4 -->\n<a name=\"rat:cstring\"></a>\n<p>\nForth 94 moved toward the consistent use of the \"<em>c-addr u</em>\"\nrepresentation of strings on the stack. The use of the alternate\n\"address of counted string\" stack representation is discouraged.\nThe traditional Forth words <a href=\"core/WORD\">WORD</a> and <a href=\"core/FIND\">FIND</a> continue\nto use the \"address of counted string\" representation for historical\nreasons. The new word <a href=\"core/Cq\">C\"</a>, added as a porting aid for existing\nprograms, also uses the counted string representation.\n</p><p>\nCounted strings remain useful as a way to store strings in memory.\nThis use is not discouraged, but when references to such strings\nappear on the stack, it is preferable to use the \"<em>c-addr u</em>\"\nrepresentation.\n</p><p>\n</p><h5 id=\"paragraph.A.3.1.3.5\">A.3.1.3.5 Execution tokens</h5>   <!-- A.3.1.3.5 -->\nThe association between an execution token and a definition is static.\nOnce made, it does not change with changes in the search order or\nanything else. However it may not be unique, e.g., the phrases\n<p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Tick\">'</a> <a href=\"core/OnePlus\">1+</a> and <br>\n    <a href=\"core/Tick\">'</a> <a href=\"core/CHARPlus\">CHAR+</a>\n    \n    </div>\n  </div>\n<p>\nmight return the same value.\n</p><p>\n</p><h5 id=\"paragraph.A.3.1.3.6\">A.3.1.3.6 Error results</h5>   <!-- A.3.1.3.6 -->\n<a name=\"rat:ior\"></a>\n<p>\nThe term <em>ior</em> was originally defined to describe the result of\nan input/output operation.  This was extended to include other\noperations.\n</p><p>\n</p><h4 id=\"subsubsection.A.3.1.4\">A.3.1.4 Cell-pair types</h4> <!-- A.3.1.4 -->\n<ol style=\"list-style-type: lower-alpha\">\n<li> <strong>Storage and retrieval</strong>\n<p>\nTwo operators are provided to fetch and store cell pairs:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/TwoFetch\">2@</a>\t<a href=\"core/TwoStore\">2!</a>\n    \n    </div>\n  </div>\n<p>\n</p></li>\n<li> <strong>Manipulation on the stack</strong>\n<p>\nAdditionally, these operators may be used to move cell pairs\nfrom, to and upon the stack:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/TwotoR\">2&gt;R</a>\t<a href=\"core/TwoDROP\">2DROP</a>\t<a href=\"core/TwoDUP\">2DUP</a>\t<a href=\"core/TwoOVER\">2OVER</a>\n    <a href=\"core/TwoRfrom\">2R&gt;</a>\t<a href=\"core/TwoSWAP\">2SWAP</a>\t<a href=\"double/TwoROT\">2ROT</a>\n    \n    </div>\n  </div>\n<p>\n</p></li>\n<li> <strong>Comparison</strong>\n<p>\nThe following comparison operations are universally valid for\ncell pairs:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"double/DEqual\">D=</a>\t<a href=\"double/DZeroEqual\">D0=</a>\n    \n    </div>\n  </div>\n</li>\n</ol>\n<p>\n</p><h5 id=\"paragraph.A.3.1.4.1\">A.3.1.4.1 Double-Cell Integers</h5>   <!-- A.3.1.4.1 -->\nIf a double-cell integer is to be treated as signed, the following\ncomparison and mathematical operations are valid:\n<p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"double/DPlus\">D+</a>\t\t<a href=\"double/DMinus\">D-</a>\t\t<a href=\"double/Dless\">D&lt;</a>\n    <a href=\"double/DZeroless\">D0&lt;</a>\t<a href=\"double/DABS\">DABS</a>\t\t<a href=\"double/DMAX\">DMAX</a>\n    <a href=\"double/DMIN\">DMIN</a>\t\t<a href=\"double/DNEGATE\">DNEGATE</a>\n    <a href=\"double/MTimesDiv\">M*/</a>\t\t<a href=\"double/MPlus\">M+</a>\n    \n    </div>\n  </div>\n<p>\nIf a double-cell integer is to be treated as unsigned, the following\ncomparison and mathematical operations are valid:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"double/DPlus\">D+</a>\t<a href=\"double/DMinus\">D-</a>\n    <a href=\"core/UMDivMOD\">UM/MOD</a>\t\t<a href=\"double/DUless\">DU&lt;</a>\n    \n    </div>\n  </div>\n<p>\n</p><h5 id=\"paragraph.A.3.1.4.2\">A.3.1.4.2 Character strings</h5>   <!-- A.3.1.4.2 -->\nSee: <strong><a href=\"rationale#rat:cstring\">A.3.1.3.4 Counted strings</a></strong>.\n<p>\n</p><h3 id=\"subsection.A.3.2\">A.3.2 The Implementation environment</h3> <!-- A.3.2 -->\n<h4 id=\"subsubsection.A.3.2.1\">A.3.2.1 Numbers</h4> <!-- A.3.2.1 -->\nTraditionally, Forth has been implemented on two's-complement machines\nwhere there is a one-to-one mapping of signed numbers to unsigned\nnumbers — any single cell item can be viewed either as a signed or\nunsigned number. Indeed, the signed representation of any positive\nnumber is identical to the equivalent unsigned representation. Further,\naddresses are treated as unsigned numbers: there is no distinct pointer\ntype. Arithmetic ordering on two's complement machines allows <a href=\"core/Plus\">+</a>\nand <a href=\"core/Minus\">-</a> to work on both signed and unsigned numbers. This\narithmetic behavior is deeply embedded in common Forth practice.\n<p>\nAs a consequence of these behaviors, the likely ranges of signed and\nunsigned numbers for implementations hosted on each of the permissible\narithmetic architectures is:\n</p><p>\n</p><div class=\"center\">\n\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"8\"><hr></td></tr>\n  <tr valign=\"top\"><td class=\"c\"><strong>Arithmetic architecture</strong>\n  </td><td colspan=\"2\" class=\"c\"><strong>signed numbers</strong>\n  </td><td colspan=\"3\" class=\"c\"><strong>unsigned numbers</strong> </td></tr>\n  <tr valign=\"top\"><td colspan=\"8\"><hr></td></tr>\n  <tr valign=\"top\"><td class=\"c\">Two's complement\t</td><td class=\"r\"><em>-n-1</em> </td><td> to </td><td><em>n</em>\t\t</td><td></td><td class=\"r\"><em>0</em> </td><td> to </td><td><em>2n+1</em>\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">One's complement\t</td><td class=\"r\"><em>-n</em> </td><td> to </td><td><em>n</em>\t\t</td><td></td><td class=\"r\"><em>0</em> </td><td> to </td><td><em>n</em>\t\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">Signed magnitude\t</td><td class=\"r\"><em>-n</em> </td><td> to </td><td><em>n</em>\t\t</td><td></td><td class=\"r\"><em>0</em> </td><td> to </td><td><em>n</em>\t\t</td></tr>\n  <tr valign=\"top\"><td colspan=\"8\"><hr></td></tr>\n  <tr valign=\"top\"><td class=\"c\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<p>\nwhere <em>n</em> is the largest positive signed number. For all three\narchitectures, signed numbers in the <em>0</em> to <em>n</em> range are bitwise\nidentical to the corresponding unsigned number. Note that unsigned\nnumbers on a signed magnitude machine are equivalent to signed\nnon-negative numbers as a consequence of the forced correspondence\nbetween addresses and unsigned numbers and of the required behavior\nof <a href=\"core/Plus\">+</a> and <a href=\"core/Minus\">-</a>.\n</p><p>\nFor reference, these number representations may be defined by the\nway that <a href=\"core/NEGATE\">NEGATE</a> is implemented:\n</p><p>\n</p><div class=\"quote\">\n\n  <table>\n  <tbody><tr valign=\"top\"><td>two's complement: </td><td><a href=\"core/Colon\">:</a> <a href=\"core/NEGATE\">NEGATE</a> <a href=\"core/INVERT\">INVERT</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/Semi\">;</a> </td></tr>\n  <tr valign=\"top\"><td>one's complement: </td><td><a href=\"core/Colon\">:</a> <a href=\"core/NEGATE\">NEGATE</a> <a href=\"core/INVERT\">INVERT</a> <a href=\"core/Semi\">;</a> </td></tr>\n  <tr valign=\"top\"><td>signed-magnitude: </td><td><a href=\"core/Colon\">:</a> <a href=\"core/NEGATE\">NEGATE</a> <code>HIGH-BIT</code> <a href=\"core/XOR\">XOR</a> <a href=\"core/Semi\">;</a>\n  </td></tr></tbody></table>\n  \n  </div>\n<p>\nwhere <code>HIGH-BIT</code> is a bit mask with only the most-significant\nbit set. Note that all of these number systems agree on the\nrepresentation of non-negative numbers.\n</p><p>\nPer <strong><a href=\"usage#usage:number\">3.2.1.1 Internal number representation</a></strong> and\n<a href=\"core/ZeroEqual\">6.1.0270 0=</a>, the implementor must ensure that no standard or\nsupported word return negative zero for any numeric (non-Boolean or\nflag) result. Many existing programmer assumptions will be violated\notherwise.\n</p><p>\nThere is no requirement to implement circular unsigned arithmetic,\nnor to set the range of unsigned numbers to the full size of a cell.\nThere is historical precedent for limiting the range of <em>u</em> to\nthat of <em>+n</em>, which is permissible when the cell size is greater\nthan 16 bits.\n</p><p>\n\n</p><h5 id=\"paragraph.A.3.2.1.2\">A.3.2.1.2 Digit conversion</h5>   <!-- A.3.2.1.2 -->\nFor example, an implementation might convert the characters \"a\"\nthrough \"z\" identically to the characters \"A\" through \"Z\", or\nit might treat the characters \" [ \" through \" \" as additional\ndigits with decimal values 36 through 71, respectively.\n<p>\n</p><h4 id=\"subsubsection.A.3.2.2\">A.3.2.2 Arithmetic</h4> <!-- A.3.2.2 -->\n<h5 id=\"paragraph.A.3.2.2.1\">A.3.2.2.1 Integer division</h5>   <!-- A.3.2.2.1 -->\nThe Forth-79 Standard specifies that the signed division operators\n(<a href=\"core/Div\">/</a>, <a href=\"core/DivMOD\">/MOD</a>, <a href=\"core/MOD\">MOD</a>, <a href=\"core/TimesDivMOD\">*/MOD</a>, and <a href=\"core/TimesDiv\">*/</a>)\nround non-integer quotients towards zero (symmetric division).\nForth 83 changed the semantics of these operators to round towards\nnegative infinity (floored division). Some in the Forth community\nhave declined to convert systems and applications from the Forth-79\nto the Forth-83 divide.  To resolve this issue, a Forth-2012 system\nis permitted to supply either floored or symmetric operators. In\naddition, a standard system must provide a floored division primitive\n(<a href=\"core/FMDivMOD\">FM/MOD</a>), a symmetric division primitive (<a href=\"core/SMDivREM\">SM/REM</a>), and\na mixed precision multiplication operator (<a href=\"core/MTimes\">M*</a>).\n<p>\nThis compromise protects the investment made in current Forth\napplications; Forth-79 and Forth-83 programs are automatically\ncompliant with Forth 94 with respect to division. In practice, the\nrounding direction rarely matters to applications. However, if a\nprogram requires a specific rounding direction, it can use the\nfloored division primitive <a href=\"core/FMDivMOD\">FM/MOD</a> or the symmetric division\nprimitive <a href=\"core/SMDivREM\">SM/REM</a> to construct a division operator of the\ndesired flavor. This simple technique can be used to convert Forth-79\nand Forth-83 programs to Forth 94 without any analysis of the\noriginal programs.\n</p><p>\n</p><h5 id=\"paragraph.A.3.2.2.2\">A.3.2.2.2 Other integer operations</h5>   <!-- A.3.2.2.2 -->\nWhether underflow occurs depends on the data-type of the result. For\nexample, the phrase <code>1 2</code> <a href=\"core/Minus\">-</a> underflows if the result is\nunsigned and produces the valid signed result -1.\n<p>\n</p><h4 id=\"subsubsection.A.3.2.3\">A.3.2.3 Stacks</h4> <!-- A.3.2.3 -->\nThe only data type in Forth which has concrete rather than abstract\nexistence is the stack entry. Even this primitive typing Forth only\nenforces by the hard reality of stack underflow or overflow. The\nprogrammer must have a clear idea of the number of stack entries to\nbe consumed by the execution of a word and the number of entries that\nwill be pushed back to a stack by the execution of a word. The\nobservation of anomalous occurrences on the data stack is the first\nline of defense whereby the programmer may recognize errors in an\napplication program. It is also worth remembering that multiple stack\nerrors caused by erroneous application code are frequently of equal\nand opposite magnitude, causing complementary (and deceptive) results.\n<p>\nFor these reasons and a host of other reasons, the one unambiguous,\nuncontroversial, and indispensable programming discipline observed\nsince the earliest days of Forth is that of providing a stack diagram\nfor all additions to the application dictionary with the exception of\nstatic constructs such as <a href=\"core/VARIABLE\">VARIABLE</a>s and <a href=\"core/CONSTANT\">CONSTANT</a>s.\n</p><p>\n\n</p><h5 id=\"paragraph.A.3.2.3.2\">A.3.2.3.2 Control-flow stack</h5> <!-- A.3.2.3.2 -->\nThe simplest use of control-flow words is to implement the basic\ncontrol structures shown in figure <strong><a href=\"rationale#fig:basic\">A.1</a></strong>.\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"fbox\">\n    <img width=\"100%\" src=\"/images/standards/2012/basic.png\">\n    </div>\n  <div class=\"caption\">Figure A.1: The basic control-flow patterns</div>\n  <a name=\"fig:basic\"></a>\n  \n  </div>\n<p>\n</p><p>\nIn control flow every branch, or transfer of control, must terminate\nat some destination. A natural implementation uses a stack to\nremember the origin of forward branches and the destination of\nbackward branches. At a minimum, only the location of each origin or\ndestination must be indicated, although other implementation-dependent\ninformation also may be maintained.\n</p><p>\nAn origin is the location of the branch itself. A destination is\nwhere control would continue if the branch were taken. A destination\nis needed to resolve the branch address for each origin, and conversely,\nif every control-flow path is completed no unused destinations can\nremain.\n</p><p>\nWith the addition of just three words (<a href=\"tools/AHEAD\">AHEAD</a>,\n<a href=\"tools/CS-ROLL\">CS-ROLL</a> and <a href=\"tools/CS-PICK\">CS-PICK</a>), the basic control-flow\nwords supply the primitives necessary to compile a variety of transportable\ncontrol structures. The abilities required are compilation of forward\nand backward conditional and unconditional branches and compile-time\nmanagement of branch origins and destinations.\nTable <strong><a href=\"rationale#table:control\">A.1</a></strong> shows the desired behavior.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table A.1: Compilation behavior of control-flow words</div>\n  <a name=\"table:control\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"4\">at compile-time, </td></tr>\n  <tr valign=\"top\"><td>word: </td><td class=\"c\">supplies: </td><td class=\"c\">resolves: </td><td>is used to: </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td><a href=\"core/IF\">IF</a>\t\t\t\t</td><td class=\"c\"><em>orig</em>\t</td><td class=\"c\"></td><td>mark origin of forward conditional branch </td></tr>\n  <tr valign=\"top\"><td><a href=\"core/THEN\">THEN</a>\t\t\t</td><td class=\"c\"></td><td class=\"c\"><em>orig</em>\t</td><td>resolve <a href=\"core/IF\">IF</a> or <a href=\"tools/AHEAD\">AHEAD</a> </td></tr>\n  <tr valign=\"top\"><td><a href=\"core/BEGIN\">BEGIN</a>\t\t\t</td><td class=\"c\"><em>dest</em>\t</td><td class=\"c\"></td><td>mark backward destination </td></tr>\n  <tr valign=\"top\"><td><a href=\"core/AGAIN\">AGAIN</a>\t\t\t</td><td class=\"c\"></td><td class=\"c\"><em>dest</em>\t</td><td>resolve with backward unconditional branch </td></tr>\n  <tr valign=\"top\"><td><a href=\"core/UNTIL\">UNTIL</a>\t\t\t</td><td class=\"c\"></td><td class=\"c\"><em>dest</em>\t</td><td>resolve with backward conditional branch </td></tr>\n  <tr valign=\"top\"><td><a href=\"tools/AHEAD\">AHEAD</a>\t\t</td><td class=\"c\"><em>orig</em>\t</td><td class=\"c\"></td><td>mark origin of forward unconditional branch </td></tr>\n  <tr valign=\"top\"><td><a href=\"tools/CS-PICK\">CS-PICK</a>\t</td><td class=\"c\"></td><td class=\"c\"></td><td>copy item on control-flow stack </td></tr>\n  <tr valign=\"top\"><td><a href=\"tools/CS-ROLL\">CS-ROLL</a>\t</td><td class=\"c\"></td><td class=\"c\"></td><td>reorder items on control-flow stack </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\nThe requirement that control-flow words are properly balanced by other\ncontrol-flow words makes reasonable the description of a compile-time\nimplementation-defined <em>control-flow stack</em>. There is no\nprescription as to how the control-flow stack is implemented, e.g.,\ndata stack, linked list, special array. Each element of the\ncontrol-flow stack mentioned above is the same size.\n<p>\nWith these tools, the remaining basic control-structure elements,\nshown in figure <strong><a href=\"rationale#fig:additional\">A.2</a></strong>, can be defined. The\nstack notation used here for immediate words is ( <em>compilation\n/ execution</em> ).\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<div class=\"tabbing\">\n       <a href=\"core/Colon\">:</a> <a href=\"core/WHILE\">WHILE</a>  <a href=\"core/p\">(</a> dest -- orig dest / flag -- ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> conditional exit from loops <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/IF\">IF</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> conditional forward brach <br>\n      &nbsp;&nbsp;&nbsp;\t1 <a href=\"tools/CS-ROLL\">CS-ROLL</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> keep dest on top <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br><br><br><br>\n      \t<a href=\"core/Colon\">:</a> <a href=\"core/REPEAT\">REPEAT</a>  <a href=\"core/p\">(</a> orig dest -- / -- ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> resolve a single WHILE and return to BEGIN <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/AGAIN\">AGAIN</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> uncond. backward branch to dest <br>\n      &nbsp;&nbsp;&nbsp;\t<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/THEN\">THEN</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> resolve forward branch from orig <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br><br><br><br>\n       <a href=\"core/Colon\">:</a> <a href=\"core/ELSE\">ELSE</a>  <a href=\"core/p\">(</a> orig1 -- orig2 / -- ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> resolve IF supplying alternate execution <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"tools/AHEAD\">AHEAD</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> unconditional forward branch orig2 <br>\n      &nbsp;&nbsp;&nbsp;1 <a href=\"tools/CS-ROLL\">CS-ROLL</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> put orig1 back on top <br>\n      &nbsp;&nbsp;&nbsp;\t<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/THEN\">THEN</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> resolve forward branch from orig1 <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"fbox\">\n    <img width=\"100%\" src=\"/images/standards/2012/additional.png\">\n    </div>\n  <div class=\"caption\">Figure A.2: Additional basic control-flow patterns</div>\n  <a name=\"fig:additional\"></a>\n  \n  </div>\n<p>\n</p><p>\nForth control flow provides a solution for well-known problems with\nstrictly structured programming.\n</p><p>\nThe basic control structures can be supplemented, as shown in the\nexamples in figure <strong><a href=\"rationale#fig:extended\">A.3</a></strong>, with additional\n<a href=\"core/WHILE\">WHILE</a>s in <a href=\"core/BEGIN\">BEGIN</a> ... <a href=\"core/UNTIL\">UNTIL</a> and <a href=\"core/BEGIN\">BEGIN</a>\n... <a href=\"core/WHILE\">WHILE</a> ... <a href=\"core/REPEAT\">REPEAT</a> structures. However, for\neach additional <a href=\"core/WHILE\">WHILE</a> there must be a <a href=\"core/THEN\">THEN</a> at the end\nof the structure. <a href=\"core/THEN\">THEN</a> completes the syntax with <a href=\"core/WHILE\">WHILE</a>\nand indicates where to continue execution when the <a href=\"core/WHILE\">WHILE</a>\ntransfers control. The use of more than one additional <a href=\"core/WHILE\">WHILE</a>\nis possible but not common. Note that if the user finds this use of\n<a href=\"core/THEN\">THEN</a> undesirable, an alias with a more likable name could be\ndefined.\n</p><p>\nAdditional actions may be performed between the control flow word (the\n<a href=\"core/REPEAT\">REPEAT</a> or <a href=\"core/UNTIL\">UNTIL</a>) and the <a href=\"core/THEN\">THEN</a> that matches the\nadditional <a href=\"core/WHILE\">WHILE</a>. Further, if additional actions are desired\nfor normal termination and early termination, the alternative actions\nmay be separated by the ordinary Forth <a href=\"core/ELSE\">ELSE</a>. The termination\nactions are all specified after the body of the loop.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"fbox\">\n    <img width=\"100%\" src=\"/images/standards/2012/extended.png\">\n    </div>\n  <div class=\"caption\">Figure A.3: Extended control-flow patterns</div>\n  <a name=\"fig:extended\"></a>\n  \n  </div>\n<p>\n</p><p>\nNote that <a href=\"core/REPEAT\">REPEAT</a> creates an anomaly when matching the\n<a href=\"core/WHILE\">WHILE</a> with <a href=\"core/ELSE\">ELSE</a> or <a href=\"core/THEN\">THEN</a>, most notably when\ncompared with the <a href=\"core/BEGIN\">BEGIN</a>...<a href=\"core/UNTIL\">UNTIL</a> case. That is,\nthere will be one less <a href=\"core/ELSE\">ELSE</a> or <a href=\"core/THEN\">THEN</a> than there are\n<code>WHILE</code>s because <a href=\"core/REPEAT\">REPEAT</a> resolves one <a href=\"core/THEN\">THEN</a>. As\nabove, if the user finds this count mismatch undesirable, <a href=\"core/REPEAT\">REPEAT</a>\ncould be replaced in-line by its own definition.\n</p><p>\nOther loop-exit control-flow words, and even other loops, can be\ndefined. The only requirements are that the control-flow stack is\nproperly maintained and manipulated.\n</p><p>\nThe simple implementation of the <a href=\"core/CASE\">CASE</a> structure\nbelow is an example of control structure extension. Note the\nmaintenance of the data stack to prevent interference with the\npossible control-flow stack usage.\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<div class=\"tabbing\">\n      0 <a href=\"core/CONSTANT\">CONSTANT</a> <a href=\"core/CASE\">CASE</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>  <a href=\"core/p\">(</a> init count of OFs ) <br><br><br><br>\n       <a href=\"core/Colon\">:</a> <a href=\"core/OF\">OF</a>  <a href=\"core/p\">(</a> #of -- orig #of+1 / x -- ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/OnePlus\">1+</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> count OFs ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/toR\">&gt;R</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> move off the stack in case the control-flow ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> stack is the data stack. ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/OVER\">OVER</a>  <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/Equal\">=</a> \n      <a href=\"core/p\">(</a> copy and test case value) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> add orig to control flow stack ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/DROP\">DROP</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> discards case value if = ) <br>\n      &nbsp;&nbsp;&nbsp;\t<a href=\"core/Rfrom\">R&gt;</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> we can bring count back now ) <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br><br><br><br>\n       <a href=\"core/Colon\">:</a> <a href=\"core/ENDOF\">ENDOF</a>  <a href=\"core/p\">(</a> orig1 #of -- orig2 #of ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/toR\">&gt;R</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> move off the stack in case the control-flow ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> stack is the data stack. ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp;&nbsp;\t<a href=\"core/Rfrom\">R&gt;</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> we can bring count back now ) <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br><br><br><br>\n       <a href=\"core/Colon\">:</a> <a href=\"core/ENDCASE\">ENDCASE</a>  <a href=\"core/p\">(</a> orig1..orign #of -- ) <br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/DROP\">DROP</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> discard case value ) <br>\n      &nbsp;&nbsp;&nbsp;0 <a href=\"core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n<p>\n</p><h5 id=\"paragraph.A.3.2.3.3\">A.3.2.3.3 Return stack</h5>   <!-- A.3.2.3.3 -->\nThe restrictions in section <strong><a href=\"usage#usage:returnstack\">3.2.3.3 Return stack</a></strong>\nare necessary if implementations are to be allowed to place loop\nparameters on the return stack.\n<p>\n\n</p><h4 id=\"subsubsection.A.3.2.6\">A.3.2.6 Environmental queries</h4> <!-- A.3.2.6 -->\nThe size in address units of various data types may be determined by\nphrases such as <code>1</code> <a href=\"core/CHARS\">CHARS</a>. Similarly, alignment may be\ndetermined by phrases such as <code>1</code> <a href=\"core/ALIGNED\">ALIGNED</a>.\n<p>\nThe environmental queries are divided into two groups: those that\nalways produce the same value and those that might not. The former\ngroups include entries such as <code>MAX-N</code>. This information is\nfixed by the hardware or by the design of the Forth system; a user\nis guaranteed that asking the question once is sufficient.\n</p><p>\nThe other, now obsolescent, group of queries are for things that may\nlegitimately change over time. For example an application might test\nfor the presence of the Double Number word set using an environment\nquery.  If it is missing, the system could invoke a system-dependent\nprocess to load the word set. The system is permitted to change\n<a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>'s database so that subsequent queries about\nit indicate that it is present.\n</p><p>\nNote that a query that returns an \"unknown\" response could produce\na \"known\" result on a subsequent query.\n</p><p>\n</p><h4 id=\"subsubsection.A.3.2.7\">A.3.2.7 Obsolescent Environmental Queries</h4> <!-- A.3.2.7 -->\n<a name=\"rat:obsolete\"></a>\n<p>\nWhen reviewing the Forth 94 Standard, the question of adapting the\nword set queries had to be addressed.  Despite the recommendation\nin Forth 94, word set queries have not been\nsupported in a meaningful way by many systems.  Consequently, these\nqueries are not used by many programmers.  The committee was unwilling\nto exacerbate the problem by introducing additional queries for the\nrevised word sets.  The committee has therefore declared the word set\nenvironment queries (see table <a href=\"usage#table:obsolete\">3.5</a>) as obsolescent\nwith the intention of removing them altogether in the next revision.\nThey are retained in this standard to support existing Forth 94\nprograms.  New programs should not use them.\n</p><p>\n</p><h4 id=\"subsubsection.A.3.2.8\">A.3.2.8 Extension queries</h4> <!-- A.3.2.8 -->\n<h3 id=\"subsection.A.3.3\">A.3.3 The Forth dictionary</h3> <!-- A.3.3 -->\nA Standard Program may redefine a standard word with a non-standard\ndefinition. The program is still standard (since it can be built on\nany Standard System), but the effect is to make the combined entity\n(Standard System plus Standard Program) a non-standard system.\n<p>\n</p><h4 id=\"subsubsection.A.3.3.1\">A.3.3.1 Name space</h4> <!-- A.3.3.1 -->\n\n<h5 id=\"paragraph.A.3.3.1.2\">A.3.3.1.2 Definition names</h5>   <!-- A.3.3.1.2 -->\nThe language in this section is there to ensure the portability of\nStandard Programs. If a program uses something outside the Standard\nthat it does not provide itself, there is no guarantee that another\nimplementation will have what the program needs to run. There is no\nintent whatsoever to imply that all Forth programs will be somehow\nlacking or inferior because they are not standard; some of the finest\njewels of the programmer's art will be non-standard. At the same time,\nthe committee is trying to ensure that a program labeled \"Standard\"\nwill meet certain expectations, particularly with regard to portability.\n<p>\nIn many system environments the input source is unable to supply\ncertain non-graphic characters due to external factors, such as the\nuse of those characters for flow control or editing. In addition,\nwhen interpreting from a text file, the parsing function specifically\ntreats non-graphic characters like spaces; thus words received by the\ntext interpreter will not contain embedded non-graphic characters. To\nallow implementations in such environments to call themselves standard,\nthis minor restriction on Standard Programs is necessary.\n</p><p>\nA Standard System is allowed to permit the creation of definition\nnames containing non-graphic characters. Historically, such names\nwere used for keyboard editing functions and \"invisible\" words.\n</p><p>\n</p><h4 id=\"subsubsection.A.3.3.2\">A.3.3.2 Code space</h4> <!-- A.3.3.2 -->\n<h4 id=\"subsubsection.A.3.3.3\">A.3.3.3 Data space</h4> <!-- A.3.3.3 -->\n<a name=\"rat:dataspace\"></a>\n<p>\nThe words <a href=\"core/toIN\">&gt;IN</a>, <a href=\"core/BASE\">BASE</a>, <a href=\"block/BLK\">BLK</a>, <a href=\"block/SCR\">SCR</a>,\n<a href=\"core/SOURCE\">SOURCE</a>, <a href=\"core/SOURCE-ID\">SOURCE-ID</a>, <a href=\"core/STATE\">STATE</a>  contain information\nused by the Forth system in its operation and may be of use to the\napplication. Any assumption made by the application about data\navailable in the Forth system it did not store other than the data\njust listed is an environmental dependency.\n</p><p>\nThere is no point in specifying (in the Standard) both what is and\nwhat is not addressable. A Standard Program may NOT address:\n</p><p>\n</p><ul>\n<li> Directly into the data or return stacks;\n</li>\n<li> Into a definition's data field if not stored by the application.\n</li>\n</ul>\n<p>\nThe read-only restrictions arise because some Forth systems run from\nROM and some share I/O buffers with other users or systems. Portable\nprograms cannot know which areas are affected, hence the general\nrestrictions.\n</p><p>\n</p><h5 id=\"paragraph.A.3.3.3.1\">A.3.3.3.1 Address alignment</h5>   <!-- A.3.3.3.1 -->\n<a name=\"rat:aaddr\"></a>\n<p>\nSome processors have restrictions on the addresses that can be used\nby memory access instructions. For example, some architectures require\n16-bit data to be loaded or stored only at even addresses and 32-bit\ndata only at addresses that are multiples of four.\n</p><p>\nAn implementor can handle these alignment restrictions in one of two\nways. Forth's memory access words (<a href=\"core/Fetch\">@</a>, <a href=\"core/Store\">!</a>, <a href=\"core/PlusStore\">+!</a>,\netc.) could be implemented in terms of smaller-width access instructions,\nwhich have no alignment restrictions.  For example, on a system with\n16-bit cells, <a href=\"core/Fetch\">@</a> could be implemented with two byte-fetch\ninstructions and a reassembly of the bytes into a 16-bit cell.  Although\nthis conceals hardware restrictions from the programmer, it is inefficient,\nand may have unintended side effects in some hardware environments.\nAn alternate implementation could define each memory-access word\nusing the native instructions that most closely match the word's function.\nThe 16-bit cell system could implement <a href=\"core/Fetch\">@</a> using the processor's\n16-bit fetch instruction, in this case, the responsibility for giving\n<a href=\"core/Fetch\">@</a> a correctly-aligned address falls on the programmer.  A\nportable program must assume that alignment may be required and\nfollow the requirements of this section.\n</p><p>\n\n</p><h5 id=\"paragraph.A.3.3.3.2\">A.3.3.3.2 Contiguous regions</h5>   <!-- A.3.3.3.2 -->\n<a name=\"rat:regions\"></a>\n<p>\nThe data space of a Forth system comes in discontiguous regions. The\nlocation of some regions is provided by the system, some by the\nprogram. Data space is contiguous within regions, allowing address\narithmetic to generate valid addresses only within a single region.\nA Standard Program cannot make any assumptions about the relative\nplacement of multiple regions in memory.\n</p><p>\nSection <a href=\"usage#usage:contiguous\">3.3.3.2</a> does prescribe conditions under which\ncontiguous regions of data space may be obtained. For example:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> TABLE &nbsp;&nbsp;\n    1 <a href=\"core/CComma\">C,</a> 2 <a href=\"core/CComma\">C,</a> <a href=\"core/ALIGN\">ALIGN</a> 1000 <a href=\"core/Comma\">,</a> 2000 <a href=\"core/Comma\">,</a>\n    \n    </div>\n  </div>\n<p>\nmakes a table whose address is returned by <code>TABLE</code>. In\naccessing this table,\n</p><p>\n</p><div class=\"quote\">\n\n  <table>\n  <tbody><tr valign=\"top\"><td><code>TABLE</code> <a href=\"core/CFetch\">C@</a>\t\t\t\t\t</td><td>will return 1 </td></tr>\n  <tr valign=\"top\"><td><code>TABLE</code> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/CFetch\">C@</a>\t\t</td><td>will return 2 </td></tr>\n  <tr valign=\"top\"><td><code>TABLE</code> <code>2</code> <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Plus\">+</a>\n  <a href=\"core/ALIGNED\">ALIGNED</a> <a href=\"core/Fetch\">@</a>\t\t\t\t\t</td><td>will return 1000 </td></tr>\n  <tr valign=\"top\"><td><code>TABLE</code> <code>2</code> <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Plus\">+</a>\n  <a href=\"core/ALIGNED\">ALIGNED</a> <a href=\"core/CELLPlus\">CELL+</a> <a href=\"core/Fetch\">@</a>\t</td><td>will return 2000. </td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\n<p>\nSimilarly,\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> DATA &nbsp;&nbsp; 1000 <a href=\"core/ALLOT\">ALLOT</a>\n    \n    </div>\n  </div>\n<p>\nmakes an array 1000 address units in size. A more portable strategy\nwould define the array in application units, such as:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n500 <a href=\"core/CONSTANT\">CONSTANT</a> NCELLS <br>\n    <a href=\"core/CREATE\">CREATE</a> CELL-DATA NCELLS <a href=\"core/CELLS\">CELLS</a> <a href=\"core/ALLOT\">ALLOT</a>\n    \n    </div>\n  </div>\n<p>\nThis array can be indexed like this:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Colon\">:</a> LOOK &nbsp;&nbsp;\n    NCELLS 0 <a href=\"core/DO\">DO</a>\n    CELL-DATA <a href=\"core/I\">I</a> <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"tools/q\">?</a>\n    <a href=\"core/LOOP\">LOOP</a>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n<p>\n\n</p><h5 id=\"paragraph.A.3.3.3.6\">A.3.3.3.6 Other transient regions</h5>   <!-- A.3.3.3.6 -->\nIn many existing Forth systems, these areas are at <a href=\"core/HERE\">HERE</a> or\njust beyond it, hence the many restrictions.\n<p>\n<em>(2*n)+2</em> is the size of a character string containing the\nunpunctuated binary representation of the maximum double number with\na leading minus sign and a trailing space.\n</p><p>\nImplementation note: Since the minimum value of <em>n</em> is 16, the\nabsolute minimum size of the pictured numeric output string is 34\ncharacters. But if your implementation has a larger <em>n</em>, you must\nalso increase the size of the pictured numeric output string.\n</p><p>\n</p><h3 id=\"subsection.A.3.4\">A.3.4 The Forth text interpreter</h3> <!-- A.3.4 -->\n\n<h4 id=\"subsubsection.A.3.4.3\">A.3.4.3 Semantics</h4> <!-- A.3.4.3 -->\nThe \"initiation semantics\" correspond to the code that is executed\nupon entering a definition, analogous to the code executed by\n<a href=\"core/EXIT\">EXIT</a> upon leaving a definition. The \"run-time semantics\"\ncorrespond to code fragments, such as literals or branches, that are\ncompiled inside colon definitions by words with explicit compilation\nsemantics.\n<p>\nIn a Forth cross compiler, the execution semantics may be specified\nto occur in the host system only, the target system only, or in both\nsystems. For example, it may be appropriate for words such as\n<a href=\"core/CELLS\">CELLS</a> to execute on the host system returning a value describing\nthe target, for colon definitions to execute only on the target, and\nfor <a href=\"core/CONSTANT\">CONSTANT</a> and <a href=\"core/VARIABLE\">VARIABLE</a> to have execution behaviors on\nboth systems. Details of cross compiler behavior are beyond the scope\nof this standard.\n</p><p>\n\n</p><h5 id=\"paragraph.A.3.4.3.2\">A.3.4.3.2 Interpretation semantics</h5>   <!-- A.3.4.3.2 -->\n<a name=\"rat:interpret\"></a>\n<p>\nFor a variety of reasons, this standard does not define interpretation\nsemantics for every word. Examples of these words are <a href=\"core/toR\">&gt;R</a>,\n<a href=\"core/Dotq\">.\"</a>, <a href=\"core/DO\">DO</a>, and <a href=\"core/IF\">IF</a>. Nothing in this Standard precludes\nan implementation from providing interpretation semantics for these\nwords, such as interactive control-flow words. However, a Standard\nProgram may not use them in interpretation state.\n</p><p>\n\n</p><h4 id=\"subsubsection.A.3.4.5\">A.3.4.5 Compilation</h4> <!-- A.3.4.5 -->\nCompiler recursion at the definition level consumes excessive\nresources, especially to support locals. The committee does not\nbelieve that the benefits justify the costs. Nesting definitions\nis also not common practice and won't work on many systems.\n<p>\n</p><h2 id=\"section.A.4\">A.4 Documentation requirements</h2> <!-- A.4 ========================== -->\n<h3 id=\"subsection.A.4.1\">A.4.1 System documentation</h3> <!-- A.4.1 -->\n<h3 id=\"subsection.A.4.2\">A.4.2 Program documentation</h3> <!-- A.4.2 -->\n<h2 id=\"section.A.5\">A.5 Compliance and labeling</h2> <!-- A.5 ============================= -->\n<h3 id=\"subsection.A.5.1\">A.5.1 Forth-2012 systms</h3> <!-- A.5.1 -->\nSection <a href=\"label#label:label\">5.1</a> defines the criteria that a system must\nmeet in order to justify the label \"Forth-2012 System\". Briefly,\nthe minimum requirement is that the system must \"implement\" the\nCore word set. There are several ways in which this requirement may\nbe met. The most obvious is that all Core words may be in a pre-compiled\nkernel. This is not the only way of satisfying the requirement,\nhowever. For example, some words may be provided in source blocks or\nfiles with instructions explaining how to add them to the system if\nthey are needed. So long as the words are provided in such a way that\nthe user can obtain access to them with a clear and straightforward\nprocedure, they may be considered to be present.\n<p>\nA Forth cross compiler has many characteristics in common with a standard\nsystem, in that both use similar compiling tools to process a program.\nHowever, in order to fully specify a Forth-2012 standard\ncross compiler it would be necessary to address complex issues dealing with\ncompilation\nand execution semantics in both host and target environments as well as\nROMability issues. The level of effort to do this properly has proved to\nbe impractical at this time. As a result, although it may be possible\nfor a Forth cross compiler to correctly prepare a Forth-2012\nstandard program for execution in a target environment, it is inappropriate\nfor a cross compiler to be labeled a Forth-2012 standard system.\n</p><p>\n</p><h3 id=\"subsection.A.5.2\">A.5.2 Forth-2012 programs</h3> <!-- A.5.2 -->\n\n<h4 id=\"subsubsection.A.5.2.2\">A.5.2.2 Program labeling</h4> <!-- A.5.2.2 -->\nDeclaring an environmental dependency should not be considered\nundesirable, merely an acknowledgment that the author has taken\nadvantage of some assumed architecture. For example, most computers\nin common use are based on two's complement binary arithmetic. By\nacknowledging an environmental dependency on this architecture,\na programmer becomes entitled to use the number <code>-1</code> to\nrepresent all bits set without significantly restricting the\nportability of the program.\n<p>\nBecause all programs require space for data and instructions, and\ntime to execute those instructions, they depend on the presence of\nan environment providing those resources. It is impossible to predict\nhow little of some of these resources (e.g. stack space) might be\nnecessary to perform some task, so this standard does not do so.\n</p><p>\nOn the other hand, as a program requires increasing levels of\nresources, there will probably be sucessively fewer systems on\nwhich it will execute sucessfully. An algorithm requiring an array\nof <em>10<sup>9</sup></em> cells might run on fewer computers than one requiring\nonly <em>10<sup>3</sup></em>.\n</p><p>\nSince there is also no way of knowing what minimum level of resources\nwill be implemented in a system useful for at least some tasks, any\nprogram performing real work labeled simply\na \"Standard Forth-2012 Program\" is unlikely to be labeled\ncorrectly.\n</p><p>\n</p><h2 id=\"section.A.6\">A.6 Glossary</h2> <!-- A.6 ============================================ -->\nIn this and following sections we present rationales for the handling\nof specific words: why we included them, why we placed them in certain\nword sets, or why we specified their names or meaning as we did.\n<p>\nWords in this section are organized by word set, retaining their index\nnumbers for easy cross-referencing to the glossary.\n</p><p>\nHistorically, many Forth systems have been written in Forth. Many of\nthe words in Forth originally had as their primary purpose support of\nthe Forth system itself. For example, <a href=\"core/WORD\">WORD</a> and <a href=\"core/FIND\">FIND</a> are\noften used as the principle instruments of the Forth text interpreter,\nand <a href=\"core/CREATE\">CREATE</a> in many systems is the primitive for building\ndictionary entries. In defining words such as these in a standard way,\nwe have endeavored not to do so in such a way as to preclude their use\nby implementors. One of the features of Forth that has endeared it to\nits users is that the same tools that are used to implement the system\nare available to the application programmer — a result of this\napproach is the compactness and efficiency that characterizes most\nForth implementations.\n</p><p>\n\n</p><div class=\"wordHead\" id=\"rat:core:'\">\n  <div class=\"wordNumber\">A.6.1.0070</div>\n  <div class=\"wordName\">'</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: ... <strong>'</strong> <em>name</em>.\n    <p>\n    Many Forth systems use a state-smart tick. Many do not.\n    Forth-2012 follows the usage of Forth 94.\n    </p><p>\n    \n    </p></div>\n  </div>\n<div class=\"secdef\">\n\n  <div class=\"secname\">See:</div>\n  <div class=\"sec\">\n\n <strong><a href=\"rationale#rat:interpret\">A.3.4.3.2 Interpretation semantics</a></strong>,\n    <a href=\"rationale#rat:core:FIND\">A.6.1.1550 FIND</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:p\">\n  <div class=\"wordNumber\">A.6.1.0080</div>\n  <div class=\"wordName\">(</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: ... <strong>(</strong> <em>ccc</em><code>)</code> ...\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:+LOOP\">\n  <div class=\"wordNumber\">A.6.1.0140</div>\n  <div class=\"wordName\">+LOOP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code>  ... limit first <a href=\"core/DO\">DO</a>\n    ... step <strong>+LOOP</strong>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:,\">\n  <div class=\"wordNumber\">A.6.1.0150</div>\n  <div class=\"wordName\">,</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The use of <strong>,</strong> (comma) for compiling execution tokens is\n    not portable.\n    <p>\n    See: <a href=\"core/COMPILEComma\">6.2.0945 COMPILE,</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:.q\">\n  <div class=\"wordNumber\">A.6.1.0190</div>\n  <div class=\"wordName\">.\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>.\"</strong> <em>ccc</em><code>\"</code> ...\n    <a href=\"core/Semi\">;</a>\n    <p>\n    An implementation may define interpretation semantics for\n    <strong>.\"</strong> if desired. In one plausible implementation,\n    interpreting <strong>.\"</strong> would display the delimited message.\n    In another plausible implementation, interpreting <strong>.\"</strong>\n    would compile code to display the message later. In still\n    another plausible implementation, interpreting <strong>.\"</strong> would\n    be treated as an exception. Given this variation a Standard\n    Program may not use <strong>.\"</strong> while interpreting. Similarly,\n    a Standard Program may not compile <a href=\"core/POSTPONE\">POSTPONE</a> <strong>.\"</strong>\n    inside a new word, and then use that word while interpreting.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core::\">\n  <div class=\"wordNumber\">A.6.1.0450</div>\n  <div class=\"wordName\">:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <strong>:</strong> <em>name</em> ... <a href=\"core/Semi\">;</a>\n    <p>\n    In Forth 83, this word was specified to alter the search order.\n    This specification is explicitly removed in this standard. We\n    believe that in most cases this has no effect; however, systems\n    that allow many search orders found the Forth-83 behavior of\n    colon very undesirable.\n    </p><p>\n    Note that colon does not itself invoke the compiler. Colon sets\n    compilation state so that later words in the parse area are\n    compiled.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:;\">\n  <div class=\"wordNumber\">A.6.1.0460</div>\n  <div class=\"wordName\">;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <em>name</em> ... <strong>;</strong>\n    <p>\n    One function performed by both <strong>;</strong> and <a href=\"tools/SemiCODE\">;CODE</a>\n    is to allow the current definition to be found in the\n    dictionary. If the current definition was created by\n    <a href=\"core/ColonNONAME\">:NONAME</a> the current definition has no definition name\n    and thus cannot be found in the dictionary. If <a href=\"core/ColonNONAME\">:NONAME</a>\n    is implemented the Forth compiler must maintain enough\n    information about the current definition to allow <strong>;</strong> and\n    <a href=\"tools/SemiCODE\">;CODE</a> to determine whether or not any action must\n    be taken to allow it to be found.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:toBODY\">\n  <div class=\"wordNumber\">A.6.1.0550</div>\n  <div class=\"wordName\">&gt;BODY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <em>a-addr</em> is the address that <a href=\"core/HERE\">HERE</a> would have\n    returned had it been executed immediately after the execution\n    of the <a href=\"core/CREATE\">CREATE</a> that defined <em>xt</em>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ABORTq\">\n  <div class=\"wordNumber\">A.6.1.0680</div>\n  <div class=\"wordName\">ABORT\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <strong>ABORT\"</strong> <em>ccc</em><code>\"</code>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ACCEPT\">\n  <div class=\"wordNumber\">A.6.1.0695</div>\n  <div class=\"wordName\">ACCEPT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Specification of a non-zero, positive integer count (<em>+n<sub>1</sub></em>)\n    for <strong>ACCEPT</strong> allows some implementors to continue their\n    practice of using a zero or negative value as a flag to trigger\n    special behavior. Insofar as such behavior is outside the\n    standard, Standard Programs cannot depend upon it, but the\n    committee doesn't wish to preclude it unnecessarily.\n    Because actual values are almost always small integers, no\n    functionality is impaired by this restriction.\n    <p>\n    It is recommended that all non-graphic characters be reserved\n    for editing or control functions and not be stored in the input\n    string.\n    </p><p>\n    Because external system hardware and software may perform the\n    <strong>ACCEPT</strong> function, when a line terminator is received the\n    action of the cursor, and therefore the display, is\n    implementation-defined. It is recommended that the cursor remain\n    immediately following the entered text after a line terminator\n    is received.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ALIGN\">\n  <div class=\"wordNumber\">A.6.1.0705</div>\n  <div class=\"wordName\">ALIGN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    In this standard we have attempted to provide transportability\n    across various CPU architectures. One of the frequent causes\n    of transportability problems is the requirement of cell-aligned\n    addresses on some CPUs. On these systems, <strong>ALIGN</strong> and\n    <a href=\"core/ALIGNED\">ALIGNED</a> may be required to build and traverse data\n    structures built with <a href=\"core/CComma\">C,</a>. Implementors may define these\n    words as no-ops on systems for which they aren't functional.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:BEGIN\">\n  <div class=\"wordNumber\">A.6.1.0760</div>\n  <div class=\"wordName\">BEGIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>BEGIN</strong> ... <em>test</em> <a href=\"core/UNTIL\">UNTIL</a>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    or\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>BEGIN</strong> ...\n    <em>test</em> <a href=\"core/WHILE\">WHILE</a> ...\n    <a href=\"core/REPEAT\">REPEAT</a>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:BL\">\n  <div class=\"wordNumber\">A.6.1.0770</div>\n  <div class=\"wordName\">BL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Because space is used throughout Forth as the standard\n    delimiter, this word is the only way a program has to find and\n    use the system value of \"space\". The value of a space\n    character can not be obtained with <a href=\"core/CHAR\">CHAR</a>, for instance.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:CELL+\">\n  <div class=\"wordNumber\">A.6.1.0880</div>\n  <div class=\"wordName\">CELL+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    As with <a href=\"core/ALIGN\">ALIGN</a> and <a href=\"core/ALIGNED\">ALIGNED</a>, the words <a href=\"core/CELLS\">CELLS</a>\n    and <strong>CELL+</strong> were added to aid in transportability across\n    systems with different cell sizes. They are intended to be used\n    in manipulating indexes and addresses in integral numbers of\n    cell-widths. Example:\n        <div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"double/TwoVARIABLE\">2VARIABLE</a> DATA\n        <p>\n        0 100 DATA <a href=\"core/TwoStore\">2!</a>\n        </p><p>\n        DATA <a href=\"core/Fetch\">@</a> <a href=\"core/d\">.</a> 100\n        </p><p>\n        DATA <strong>CELL+</strong> <a href=\"core/Fetch\">@</a> <a href=\"core/d\">.</a> 0\n        \n        </p></div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:CELLS\">\n  <div class=\"wordNumber\">A.6.1.0890</div>\n  <div class=\"wordName\">CELLS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Example:\n        <div class=\"quote\">\n\n      <a href=\"core/CREATE\">CREATE</a> <code>NUMBERS</code>  \n      <code>100</code> <strong>CELLS</strong> <a href=\"core/ALLOT\">ALLOT</a>\n      \n      </div>\n    Allots space in the array <code>NUMBERS</code> for 100 cells\n    of data.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:CHAR\">\n  <div class=\"wordNumber\">A.6.1.0895</div>\n  <div class=\"wordName\">CHAR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: ...\n    <strong>CHAR</strong> <code>A</code> <a href=\"core/CONSTANT\">CONSTANT</a> <code>\"A\"</code> ...\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:CONSTANT\">\n  <div class=\"wordNumber\">A.6.1.0950</div>\n  <div class=\"wordName\">CONSTANT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: ...\n    <a href=\"core/DECIMAL\">DECIMAL</a> <code>10</code> <strong>CONSTANT</strong> <code>TEN</code>\n    ...\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:CREATE\">\n  <div class=\"wordNumber\">A.6.1.1000</div>\n  <div class=\"wordName\">CREATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The data-field address of a word defined by <strong>CREATE</strong> is\n    given by the data-space pointer immediately following the\n    execution of <strong>CREATE</strong>.\n    <p>\n    Reservation of data field space is typically done with\n    <a href=\"core/ALLOT\">ALLOT</a>.\n    </p><p>\n    Typical use: ...\n    <strong>CREATE</strong> <code>SOMETHING</code> ...\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:DO\">\n  <div class=\"wordNumber\">A.6.1.1240</div>\n  <div class=\"wordName\">DO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>limit</em> <em>first</em> <strong>DO</strong>\n    ...\n    <a href=\"core/LOOP\">LOOP</a>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    or\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>limit</em> <em>first</em> <strong>DO</strong>\n    ...\n    <em>step</em> <a href=\"core/PlusLOOP\">+LOOP</a>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:DOES\">\n  <div class=\"wordNumber\">A.6.1.1250</div>\n  <div class=\"wordName\">DOES&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ... <strong>DOES&gt;</strong> ... <a href=\"core/Semi\">;</a>\n    <p>\n    Following <strong>DOES&gt;</strong>, a Standard Program may not make any\n    assumptions regarding the ability to find either the name of\n    the definition containing the <strong>DOES&gt;</strong> or any previous\n    definition whose name may be concealed by it. <strong>DOES&gt;</strong>\n    effectively ends one definition and begins another as far as\n    local variables and control-flow structures are concerned.\n    The compilation behavior makes it clear that the user is not\n    entitled to place <strong>DOES&gt;</strong> inside any control-flow\n    structures.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ELSE\">\n  <div class=\"wordNumber\">A.6.1.1310</div>\n  <div class=\"wordName\">ELSE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <a href=\"core/IF\">IF</a> ...\n    <strong>ELSE</strong> ... <a href=\"core/THEN\">THEN</a>\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ENVIRONMENTq\">\n  <div class=\"wordNumber\">A.6.1.1345</div>\n  <div class=\"wordName\">ENVIRONMENT?</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    In a Standard System that contains only the Core word set,\n    effective use of <strong>ENVIRONMENT?</strong> requires either its use\n    within a definition, or the use of user-supplied auxiliary\n    definitions. The Core word set lacks both a direct method for\n    collecting a string in interpretation state (<a href=\"file/Sq\">11.6.1.2165 S\"</a>\n    is in an optional word set) and also a means to test the\n    returned flag in interpretation state (e.g. the optional\n    <a href=\"tools/BracketIF\">15.6.2.2532 [IF]</a>).\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:EXIT\">\n  <div class=\"wordNumber\">A.6.1.1380</div>\n  <div class=\"wordName\">EXIT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <a href=\"core/IF\">IF</a>\n    ... <strong>EXIT</strong> <a href=\"core/THEN\">THEN</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:FIND\">\n  <div class=\"wordNumber\">A.6.1.1550</div>\n  <div class=\"wordName\">FIND</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    One of the more difficult issues which the committee took on\n    was the problem of divorcing the specification of\n    implementation mechanisms from the specification of the\n    Forth language. Three basic implementation approaches can be\n    quickly enumerated:\n    <p>\n    </p><ol style=\"list-style-type: decimal\">\n    <li> Threaded code mechanisms.\n    These are the traditional approaches to implementing Forth,\n    but other techniques may be used.\n    <p>\n    </p></li>\n    <li> Subroutine threading with \"macro-expansion\" (code\n    copying). Short routines, like the code for <a href=\"core/DUP\">DUP</a>,\n    are copied into a definition rather than compiling a\n    <code>JSR</code> reference.\n    <p>\n    </p></li>\n    <li> Native coding with optimization.\n    This may include stack optimization (replacing such phrases\n    as <a href=\"core/SWAP\">SWAP</a> <a href=\"core/ROT\">ROT</a> <a href=\"core/Plus\">+</a> with one or two machine\n    instructions, for example), parallelization (the trend in\n    the newer RISC chips is to have several functional subunits\n    which can execute in parallel), and so on.\n    </li>\n</ol>\n    <p>\n    The initial requirement (inherited from Forth 83) that\n    compilation addresses be compiled into the dictionary\n    disallowed type 2 and type 3 implementations.\n    </p><p>\n    Type 3 mechanisms and optimizations of type 2 implementations\n    were hampered by the explicit specification of immediacy or\n    non-immediacy of all standard words. <a href=\"core/POSTPONE\">POSTPONE</a> allowed\n    de-specification of immediacy or non-immediacy for all but a\n    few Forth words whose behavior must be <a href=\"core/STATE\">STATE</a>-independent.\n    </p><p>\n    One type 3 implementation, Charles Moore's cmForth, has both\n    compiling and interpreting versions of many Forth words. At the\n    present, this appears to be a common approach for type 3\n    implementations. The committee felt that this implementation\n    approach must be allowed. Consequently, it is possible that\n    words without interpretation semantics can be found only during\n    compilation, and other words may exist in two versions: a\n    compiling version and an interpreting version. Hence the values\n    returned by <strong>FIND</strong> may depend on <a href=\"core/STATE\">STATE</a>, and <a href=\"core/Tick\">'</a>\n    and <a href=\"core/BracketTick\">[']</a> may be unable to find words without\n    interpretation semantics.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:FM/MOD\">\n  <div class=\"wordNumber\">A.6.1.1561</div>\n  <div class=\"wordName\">FM/MOD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    By introducing the requirement for \"floored\" division,\n    Forth 83 produced much controversy and concern on the part of\n    those who preferred the more common practice followed in other\n    languages of implementing division according to the behavior\n    of the host CPU, which is most often symmetric (rounded toward\n    zero). In attempting to find a compromise position, this\n    standard provides primitives for both common varieties, floored\n    and symmetric (see <a href=\"core/SMDivREM\">SM/REM</a>). <strong>FM/MOD</strong> is the floored\n    version.\n    <p>\n    The committee considered providing two complete sets\n    of explicitly named division operators, and declined to do so\n    on the grounds that this would unduly enlarge and complicate\n    the standard. Instead, implementors may define the normal\n    division words in terms of either <strong>FM/MOD</strong> or\n    <a href=\"core/SMDivREM\">SM/REM</a> providing they document their choice. People\n    wishing to have explicitly named sets of operators are\n    encouraged to do so. <strong>FM/MOD</strong> may be used, for example,\n    to define:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> /_MOD <a href=\"core/p\">(</a> n1 n2 -- n3 n4)\n        <a href=\"core/toR\">&gt;R</a> <a href=\"core/StoD\">S&gt;D</a> <a href=\"core/Rfrom\">R&gt;</a> <strong>FM/MOD</strong>\n        <a href=\"core/Semi\">;</a>\n        <p>\n        <a href=\"core/Colon\">:</a> /_ <a href=\"core/p\">(</a> n1 n2 -- n3)\n        /_MOD <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> _MOD <a href=\"core/p\">(</a> n1 n2 -- n3)\n        /_MOD <a href=\"core/DROP\">DROP</a>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> */_MOD <a href=\"core/p\">(</a> n1 n2 n3 -- n4 n5)\n        <a href=\"core/toR\">&gt;R</a> <a href=\"core/MTimes\">M*</a> <a href=\"core/Rfrom\">R&gt;</a> <strong>FM/MOD</strong>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> */_ <a href=\"core/p\">(</a> n1 n2 n3 -- n4 )\n        */_MOD <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a>\n        <a href=\"core/Semi\">;</a>\n        \n        </p></div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:IF\">\n  <div class=\"wordNumber\">A.6.1.1700</div>\n  <div class=\"wordName\">IF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <strong>IF</strong> ... <a href=\"core/THEN\">THEN</a>\n    ... <a href=\"core/Semi\">;</a>\n    </p><p>\n    or\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <strong>IF</strong>\n    ... <a href=\"core/ELSE\">ELSE</a> ... <a href=\"core/THEN\">THEN</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:IMMEDIATE\">\n  <div class=\"wordNumber\">A.6.1.1710</div>\n  <div class=\"wordName\">IMMEDIATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code>\n    ... <a href=\"core/Semi\">;</a> <strong>IMMEDIATE</strong>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:INVERT\">\n  <div class=\"wordNumber\">A.6.1.1720</div>\n  <div class=\"wordName\">INVERT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The word <code>NOT</code> was originally provided in Forth as a\n    flag operator to make control structures readable. Under its\n    intended usage the following two definitions would produce\n    identical results:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> ONE <a href=\"core/p\">(</a> flag -- ) <br>\n        &nbsp;&nbsp; <a href=\"core/IF\">IF</a>\n        <a href=\"core/Dotq\">.\"</a> true\"\n        <a href=\"core/ELSE\">ELSE</a>\n        <a href=\"core/Dotq\">.\"</a> false\"\n        <a href=\"core/THEN\">THEN</a>\n        <a href=\"core/Semi\">;</a>\n        <p>\n        <a href=\"core/Colon\">:</a> TWO <a href=\"core/p\">(</a> flag -- ) <br>\n        &nbsp;&nbsp; NOT <a href=\"core/IF\">IF</a>\n        <a href=\"core/Dotq\">.\"</a> false\"\n        <a href=\"core/ELSE\">ELSE</a>\n        <a href=\"core/Dotq\">.\"</a> true\"\n        <a href=\"core/THEN\">THEN</a>\n        <a href=\"core/Semi\">;</a>\n        \n        </p></div>\n      </div>\n    <p>\n    This was common usage prior to the Forth-83 Standard which\n    redefined <code>NOT</code> as a cell-wide one's-complement\n    operation, functionally equivalent to the phrase <code>-1</code>\n    <a href=\"core/XOR\">XOR</a>. At the same time, the data type manipulated by\n    this word was changed from a flag to a cell-wide collection of\n    bits and the standard value for true was changed from \"1\"\n    (rightmost bit only set) to \"-1\" (all bits set). As these\n    definitions of <a href=\"core/TRUE\">TRUE</a> and <code>NOT</code> were incompatible\n    with their previous definitions, many Forth users continue to\n    rely on the old definitions. Hence both versions are in common\n    use.\n    </p><p>\n    Therefore, usage of <code>NOT</code> cannot be standardized at\n    this time. The two traditional meanings of <code>NOT</code> —\n    that of negating the sense of a flag and that of doing a one's\n    complement operation — are made available by <a href=\"core/ZeroEqual\">0=</a> and\n    <strong>INVERT</strong>, respectively.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:J\">\n  <div class=\"wordNumber\">A.6.1.1730</div>\n  <div class=\"wordName\">J</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>J</strong> may only be used with a nested\n    <a href=\"core/DO\">DO</a> ... <a href=\"core/LOOP\">LOOP</a>,\n    <a href=\"core/DO\">DO</a> ... <a href=\"core/PlusLOOP\">+LOOP</a>,\n    <a href=\"core/qDO\">?DO</a> ... <a href=\"core/LOOP\">LOOP</a>, or\n    <a href=\"core/qDO\">?DO</a> ... <a href=\"core/PlusLOOP\">+LOOP</a>,\n    for example, in the form:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code>\n    ... <a href=\"core/DO\">DO</a>\n    ... <a href=\"core/DO\">DO</a>\n    ... <strong>J</strong> ...\n    <a href=\"core/LOOP\">LOOP</a>\n    ... <a href=\"core/PlusLOOP\">+LOOP</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:KEY\">\n  <div class=\"wordNumber\">A.6.1.1750</div>\n  <div class=\"wordName\">KEY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Use of <strong>KEY</strong> indicates that the application is processing\n    primitive characters.  Some input devices, e.g., keyboards,\n    may provide more information than can be represented as a\n    primitive character and such an event may be received as an\n    implementation-specific sequence of primitive characters.\n    <p>\n    See <a href=\"rationale#rat:facility:EKEY\">A.10.6.2.1305 EKEY</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:LEAVE\">\n  <div class=\"wordNumber\">A.6.1.1760</div>\n  <div class=\"wordName\">LEAVE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Note that <strong>LEAVE</strong> immediately exits the loop. No words\n    following <strong>LEAVE</strong> within the loop will be executed.\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ... <a href=\"core/DO\">DO</a>\n    ... <a href=\"core/IF\">IF</a>\n    ... <strong>LEAVE</strong>\n    <a href=\"core/THEN\">THEN</a> ... <a href=\"core/LOOP\">LOOP</a> ...\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:LITERAL\">\n  <div class=\"wordNumber\">A.6.1.1780</div>\n  <div class=\"wordName\">LITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/Bracket\">[</a> <code>x</code> <a href=\"right-bracket\">]</a> <strong>LITERAL</strong>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:LOOP\">\n  <div class=\"wordNumber\">A.6.1.1800</div>\n  <div class=\"wordName\">LOOP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    \n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>limit</em> <em>first</em> <a href=\"core/DO\">DO</a>\n    ...\n    <strong>LOOP</strong>\n    ... <a href=\"core/Semi\">;</a>\n    </p><p>\n    or\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>limit</em> <em>first</em> <a href=\"core/qDO\">?DO</a>\n    ...\n    <strong>LOOP</strong>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:M*\">\n  <div class=\"wordNumber\">A.6.1.1810</div>\n  <div class=\"wordName\">M*</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    This word is a useful early step in calculation, going to\n    extra precision conveniently. It has been in use since the\n    Forth systems of the early 1970's.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:MOVE\">\n  <div class=\"wordNumber\">A.6.1.1900</div>\n  <div class=\"wordName\">MOVE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <a href=\"string/CMOVE\">CMOVE</a> and <a href=\"string/CMOVEtop\">CMOVE&gt;</a> are the primary\n    move operators in Forth 83. They specify a behavior for moving\n    that implies propagation if the move is suitably invoked. In\n    some hardware, this specific behavior cannot be achieved using\n    the best move instruction. Further, <a href=\"string/CMOVE\">CMOVE</a> and\n    <a href=\"string/CMOVEtop\">CMOVE&gt;</a> move characters; Forth needs a move\n    instruction capable of dealing with address units. Thus\n    <strong>MOVE</strong> has been defined and added to the Core word set,\n    and <a href=\"string/CMOVE\">CMOVE</a> and <a href=\"string/CMOVEtop\">CMOVE&gt;</a> have been\n    moved to the String word set.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:POSTPONE\">\n  <div class=\"wordNumber\">A.6.1.2033</div>\n  <div class=\"wordName\">POSTPONE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>ENDIF</code>\n    <strong>POSTPONE</strong> <a href=\"core/THEN\">THEN</a>\n    <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/IF\">IF</a> ... <code>ENDIF</code>\n    ... <a href=\"core/Semi\">;</a>\n    </p><p>\n    <strong>POSTPONE</strong> replaces most of the functionality of\n    <code>COMPILE</code> and  <a href=\"core/BracketCOMPILE\">[COMPILE]</a>. <code>COMPILE</code> and\n    \n    <a href=\"core/BracketCOMPILE\">[COMPILE]</a> are used for the same purpose: postpone the\n    compilation behavior of the next word in the parse area.\n    <code>COMPILE</code> was designed to be applied to non-immediate\n    words and <a href=\"core/BracketCOMPILE\">[COMPILE]</a> to immediate words. This burdens\n    the programmer with needing to know which words in a system\n    are immediate. Consequently, Forth standards have had to\n    specify the immediacy or non-immediacy of all words covered by\n    the standard. This unnecessarily constrains implementors.\n    </p><p>\n    A second problem with <code>COMPILE</code> is that some\n    programmers have come to expect and exploit a particular\n    implementation, namely:\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>COMPILE</code> <a href=\"core/Rfrom\">R&gt;</a>\n    <a href=\"core/DUP\">DUP</a> <a href=\"core/Fetch\">@</a> <a href=\"core/Comma\">,</a> <a href=\"core/CELLPlus\">CELL+</a> <a href=\"core/toR\">&gt;R</a>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    This implementation will not work on native code Forth systems.\n    In a native code Forth using inline code expansion and peephole\n    optimization, the size of the object code produced varies; this\n    information is difficult to communicate to a \"dumb\"\n    <code>COMPILE</code>. A \"smart\" (i.e., immediate) <code>COMPILE</code>\n    would not have this problem, but this was forbidden in previous\n    standards.\n    </p><p>\n    For these reasons, <code>COMPILE</code> has not been included in\n    the standard and <a href=\"core/BracketCOMPILE\">[COMPILE]</a> has been moved in favor of\n    <strong>POSTPONE</strong>. Additional discussion can be found in Hayes,\n    J.R., \"Postpone\", <em>Proceedings of the 1989 Rochester\n    Forth Conference</em>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:RECURSE\">\n  <div class=\"wordNumber\">A.6.1.2120</div>\n  <div class=\"wordName\">RECURSE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ... <strong>RECURSE</strong> ... <a href=\"core/Semi\">;</a>\n    <p>\n    This is Forth's recursion operator; in some implementations it\n    is called <code>MYSELF</code>. The usual example is the coding of\n    the factorial function.\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> FACTORIAL <a href=\"core/p\">(</a> +n1 -- +n2) <br>\n        &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> 2 <a href=\"core/less\">&lt;</a> <a href=\"core/IF\">IF</a> \n        <a href=\"core/DROP\">DROP</a> 1 <a href=\"core/EXIT\">EXIT</a> \n        <a href=\"core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> 1-  <strong>RECURSE</strong>  <a href=\"core/Times\">*</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    <p>\n    <em>n<sub>2</sub> = n<sub>1</sub>(n<sub>1</sub>-1)(n<sub>1</sub>-2)...(2)(1)</em>, the product of <em>n<sub>1</sub></em>\n    with all positive integers less than itself (as a special case,\n    zero factorial equals one). While beloved of computer scientists,\n    recursion makes unusually heavy use of both stacks and should\n    therefore be used with caution. See alternate definition in\n    <a href=\"rationale#rat:core:REPEAT\">A.6.1.2140 REPEAT</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:REPEAT\">\n  <div class=\"wordNumber\">A.6.1.2140</div>\n  <div class=\"wordName\">REPEAT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> FACTORIAL <a href=\"core/p\">(</a> +n1 -- +n2 ) <br>\n        &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> 2 <a href=\"core/less\">&lt;</a> <a href=\"core/IF\">IF</a> \n        <a href=\"core/DROP\">DROP</a> 1 <a href=\"core/EXIT\">EXIT</a>  <a href=\"core/THEN\">THEN</a> <br>\n        &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <br>\n        &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a>  <a href=\"core/DUP\">DUP</a> 2 <a href=\"core/more\">&gt;</a> <a href=\"core/WHILE\">WHILE</a> <br>\n        &nbsp;&nbsp;   1-  <a href=\"core/SWAP\">SWAP</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Times\">*</a>  <a href=\"core/SWAP\">SWAP</a> <br>\n        &nbsp;&nbsp; <strong>REPEAT</strong> <a href=\"core/DROP\">DROP</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:Sq\">\n  <div class=\"wordNumber\">A.6.1.2165</div>\n  <div class=\"wordName\">S\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>S\"</strong> <em>ccc</em><code>\"</code>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:SM/REM\">\n  <div class=\"wordNumber\">A.6.1.2214</div>\n  <div class=\"wordName\">SM/REM</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    See the previous discussion of division under <a href=\"core/FMDivMOD\">FM/MOD</a>.\n    <strong>SM/REM</strong> is the symmetric-division primitive, which allows\n    programs to define the following symmetric-division operators:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> /-REM <a href=\"core/p\">(</a> n1 n2 -- n3 n4 )\n        <a href=\"core/toR\">&gt;R</a> <a href=\"core/StoD\">S&gt;D</a> <a href=\"core/Rfrom\">R&gt;</a> <strong>SM/REM</strong>\n        <a href=\"core/Semi\">;</a>\n        <p>\n        <a href=\"core/Colon\">:</a> /- <a href=\"core/p\">(</a> n1 n2 -- n3 )\n        /-REM <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> -REM <a href=\"core/p\">(</a> n1 n2 -- n3 )\n        /-REM <a href=\"core/DROP\">DROP</a>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> */-REM <a href=\"core/p\">(</a> n1 n2 n3 -- n4 n5 )\n        <a href=\"core/toR\">&gt;R</a> <a href=\"core/MTimes\">M*</a> <a href=\"core/Rfrom\">R&gt;</a> <strong>SM/REM</strong>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> */- <a href=\"core/p\">(</a> n1 n2 n3 -- n4 )\n        */-REM <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a>\n        <a href=\"core/Semi\">;</a>\n        \n        </p></div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:SOURCE\">\n  <div class=\"wordNumber\">A.6.1.2216</div>\n  <div class=\"wordName\">SOURCE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>SOURCE</strong> simplifies the process of directly accessing the\n    input buffer by hiding the differences between its location\n    for different input sources. This also gives implementors more\n    flexibility in their implementation of buffering mechanisms\n    for different input sources. The committee moved away from an\n    input buffer specification consisting of a collection of\n    individual variables.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:STATE\">\n  <div class=\"wordNumber\">A.6.1.2250</div>\n  <div class=\"wordName\">STATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Although\n    <a href=\"core/EVALUATE\">EVALUATE</a>,\n    <a href=\"block/LOAD\">LOAD</a>,\n    <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a> and\n    <a href=\"file/INCLUDED\">INCLUDED</a>\n    are not listed as words which alter <strong>STATE</strong>, the text\n    interpreted by any one of these words could include one or\n    more words which explicitly alter <strong>STATE</strong>.\n    <a href=\"core/EVALUATE\">EVALUATE</a>,\n    <a href=\"block/LOAD\">LOAD</a>,\n    <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a> and\n    <a href=\"file/INCLUDED\">INCLUDED</a>\n    do not in themselves alter <strong>STATE</strong>.\n    <p>\n    <strong>STATE</strong> does not nest with text interpreter nesting. For\n    example, the code sequence:\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>FOO</code> \n    <a href=\"core/Sq\">S\"</a> <code>]\"</code> <a href=\"core/EVALUATE\">EVALUATE</a>\n    <a href=\"core/Semi\">;</a>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <code>FOO</code>\n    </p><p>\n    will leave the system in compilation state. Similarly, after\n    <a href=\"block/LOAD\">LOAD</a>ing a block containing <a href=\"right-bracket\">]</a>, the system\n    will be in compilation state.\n    </p><p>\n    Note that <a href=\"right-bracket\">]</a> does not affect the parse area and that the\n    only effect that <a href=\"core/Colon\">:</a> has on the parse area is to parse a\n    word. This entitles a program to use these words to set the\n    state with known side-effects on the parse area. For example:\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>NOP</code> \n    <a href=\"core/Colon\">:</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    <a href=\"core/Semi\">;</a>\n    </p><p>\n    &nbsp;&nbsp; <code>NOP</code> <a href=\"core/ALIGN\">ALIGN</a> <br>\n    &nbsp;&nbsp; <code>NOP</code> <a href=\"core/ALIGNED\">ALIGNED</a>\n    </p><p>\n    Some non-compliant systems have <a href=\"right-bracket\">]</a> invoke a\n    compiler loop in addition to setting <strong>STATE</strong>. Such a\n    system would inappropriately attempt to compile the second\n    use of <code>NOP</code>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:THEN\">\n  <div class=\"wordNumber\">A.6.1.2270</div>\n  <div class=\"wordName\">THEN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <a href=\"core/IF\">IF</a> ... <strong>THEN</strong>\n    ... <a href=\"core/Semi\">;</a>\n    </p><p>\n    or\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <em>test</em> <a href=\"core/IF\">IF</a> ... <a href=\"core/ELSE\">ELSE</a> ... <strong>THEN</strong>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:UNLOOP\">\n  <div class=\"wordNumber\">A.6.1.2380</div>\n  <div class=\"wordName\">UNLOOP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <a href=\"core/Colon\">:</a> <code>X</code> ... <br>\n      &nbsp;&nbsp; <em>limit</em> <em>first</em> <a href=\"core/DO\">DO</a> <br>\n      &nbsp;&nbsp;   ... <em>test</em> <a href=\"core/IF\">IF</a>\n      ... <strong>UNLOOP</strong> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> ... <br>\n      &nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> ... <br>\n      <a href=\"core/Semi\">;</a>\n      \n      </div>\n    <p>\n    <strong>UNLOOP</strong> allows the use of <a href=\"core/EXIT\">EXIT</a> within the context\n    of <a href=\"core/DO\">DO</a> ... <a href=\"core/LOOP\">LOOP</a> and related do-loop constructs.\n    <strong>UNLOOP</strong> as a function has been called <code>UNDO</code>.\n    <strong>UNLOOP</strong> is more indicative of the action: nothing gets\n    undone — we simply stop doing it.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:UNTIL\">\n  <div class=\"wordNumber\">A.6.1.2390</div>\n  <div class=\"wordName\">UNTIL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/BEGIN\">BEGIN</a> ... <em>test</em> <strong>UNTIL</strong>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:VARIABLE\">\n  <div class=\"wordNumber\">A.6.1.2410</div>\n  <div class=\"wordName\">VARIABLE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <strong>VARIABLE</strong> <code>XYZ</code>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:WHILE\">\n  <div class=\"wordNumber\">A.6.1.2430</div>\n  <div class=\"wordName\">WHILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/BEGIN\">BEGIN</a> ...\n    <em>test</em> <strong>WHILE</strong>\n    ... <a href=\"core/REPEAT\">REPEAT</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:WORD\">\n  <div class=\"wordNumber\">A.6.1.2450</div>\n  <div class=\"wordName\">WORD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: <em>char</em> <strong>WORD</strong> <em>ccc</em>&lt;<em>char</em>&gt;\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:[\">\n  <div class=\"wordNumber\">A.6.1.2500</div>\n  <div class=\"wordName\">[</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>[</strong> <code>4321</code> <a href=\"right-bracket\">]</a> <a href=\"core/LITERAL\">LITERAL</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:[']\">\n  <div class=\"wordNumber\">A.6.1.2510</div>\n  <div class=\"wordName\">[']</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>[']</strong> <em>name</em>\n    ... <a href=\"core/Semi\">;</a>\n    <p>\n    See:\n    <a href=\"rationale#rat:core:FIND\">A.6.1.1550 FIND</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:[CHAR]\">\n  <div class=\"wordNumber\">A.6.1.2520</div>\n  <div class=\"wordName\">[CHAR]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>[CHAR]</strong> <em>c</em>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:]\">\n  <div class=\"wordNumber\">A.6.1.2540</div>\n  <div class=\"wordName\">]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/Bracket\">[</a> <code>4321</code> <strong>]</strong> <a href=\"core/LITERAL\">LITERAL</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n<p>\n\n</p><h3 id=\"subsection.A.7.2\">A.7.2 Core extension words</h3> <!-- A.6.2 ================= -->\n<a name=\"rat:core-ext\"></a>\n<p>\nThe words in this collection fall into several categories:\n</p><p>\n</p><ul>\n<li> Words that are in common use but are deemed less essential than\nCore words (e.g., <a href=\"core/Zerone\">0&lt;&gt;</a>);\n<p>\n</p></li>\n<li> Words that are in common use but can be trivially defined from\nCore words (e.g., <a href=\"core/FALSE\">FALSE</a>);\n<p>\n</p></li>\n<li> Words that are primarily useful in narrowly defined types of\napplications or are in less frequent use (e.g., <a href=\"core/PARSE\">PARSE</a>);\n<p>\n</p></li>\n<li> Words that are being deprecated in favor of new words introduced\nto solve specific problems.\n</li>\n</ul>\n<p>\nBecause of the varied justifications for inclusion of these words,\nthe committee does not encourage implementors to offer the complete\ncollection, but to select those words deemed most valuable to their\nclientele.\n</p><p>\n\n</p><div class=\"wordHead\" id=\"rat:core:.p\">\n  <div class=\"wordNumber\">A.6.2.0200</div>\n  <div class=\"wordName\">.(</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <strong>.(</strong> <em>ccc</em><code>)</code>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:.R\">\n  <div class=\"wordNumber\">A.6.2.0210</div>\n  <div class=\"wordName\">.R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    In <strong>.R</strong>, \"R\" is short for RIGHT.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:2toR\">\n  <div class=\"wordNumber\">A.6.2.0340</div>\n  <div class=\"wordName\">2&gt;R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The primary advantage of <strong>2&gt;R</strong> is that it puts the top\n    stack entry on the top of the return stack. For instance, a\n    double-cell number may be transferred to the return stack and\n    still have the most significant cell accessible on the top of\n    the return stack.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:2Rfrom\">\n  <div class=\"wordNumber\">A.6.2.0410</div>\n  <div class=\"wordName\">2R&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Note that <strong>2R&gt;</strong> is not equivalent to <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Rfrom\">R&gt;</a>.\n    Instead, it mirrors the action of <a href=\"core/TwotoR\">2&gt;R</a>\n    (see <a href=\"rationale#rat:core:2toR\">A.6.2.0340</a>).\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core::NONAME\">\n  <div class=\"wordNumber\">A.6.2.0455</div>\n  <div class=\"wordName\">:NONAME</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/DEFER\">DEFER</a> <code>print</code> <br>\n    \n    &nbsp;&nbsp; <strong>:NONAME</strong> <a href=\"core/p\">(</a> n -- ) <a href=\"core/d\">.</a> <a href=\"core/Semi\">;</a> <a href=\"core/IS\">IS</a> <code>print</code>\n    </p><p>\n    \n    </p></div>\n  </div>\n<div class=\"secdef\">\n\n  <div class=\"secname\">Note:</div>\n  <div class=\"sec\">\n\n <a href=\"core/RECURSE\">RECURSE</a> and <a href=\"core/DOES\">DOES&gt;</a> are allowed within a <strong>:NONAME</strong> definition.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:qDO\">\n  <div class=\"wordNumber\">A.6.2.0620</div>\n  <div class=\"wordName\">?DO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ... <strong>?DO</strong> ... <a href=\"core/LOOP\">LOOP</a> ... <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:AGAIN\">\n  <div class=\"wordNumber\">A.6.2.0700</div>\n  <div class=\"wordName\">AGAIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code>\n    ... <a href=\"core/BEGIN\">BEGIN</a> ... <strong>AGAIN</strong>\n    ... <a href=\"core/Semi\">;</a>\n    <p>\n    Unless word-sequence has a way to terminate, this is an\n    endless loop.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:BUFFER:\">\n  <div class=\"wordNumber\">A.6.2.0825</div>\n  <div class=\"wordName\">BUFFER:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>BUFFER:</strong> provides a means of defining an uninitialized buffer.\n    In systems that use a single memory space, this can effectively\n    be defined as:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <strong>BUFFER:</strong> <a href=\"core/p\">(</a> u \"&lt;name&gt;\" -- ; -- addr ) <br>\n        &nbsp;&nbsp;&nbsp;<a href=\"core/CREATE\">CREATE</a> <a href=\"core/ALLOT\">ALLOT</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    <p>\n    However, many systems profit from a separation of uninitialized and\n    initialized data areas.  Such systems can implement <strong>BUFFER:</strong> so\n    that it allocates memory from a separate uninitialized memory area.\n    Embedded systems can take advantage of the lack of initialization of the\n    memory area while hosted systems are permitted to <a href=\"memory/ALLOCATE\">ALLOCATE</a>\n    a buffer.\n    A system may select a region of memory for performance reasons.\n    A detailed knowledge of the memory allocation within the system\n    is required to provide a version of <strong>BUFFER:</strong> that can take\n    advantage of the system.\n    </p><p>\n    It should be noted that the memory buffer provided by <strong>BUFFER:</strong>\n    is not initialized by the system and that if the application requires\n    it to be initialized, it is the responsibility of the application to\n    initialize it.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:Cq\">\n  <div class=\"wordNumber\">A.6.2.0855</div>\n  <div class=\"wordName\">C\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <strong>C\"</strong> <em>ccc</em><code>\"</code>\n    ... <a href=\"core/Semi\">;</a>\n    <p>\n    See: <strong><a href=\"rationale#rat:cstring\">A.3.1.3.4 Counted strings</a></strong>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:CASE\">\n  <div class=\"wordNumber\">A.6.2.0873</div>\n  <div class=\"wordName\">CASE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <a href=\"core/Colon\">:</a> <code>X</code> ... <br>\n      &nbsp;&nbsp; <strong>CASE</strong> <br>\n      &nbsp;&nbsp;   <em>test1</em> <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;   <em>testn</em> <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;   ... <a href=\"core/p\">(</a> default ) <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> ... <br>\n      <a href=\"core/Semi\">;</a>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:COMPILE,\">\n  <div class=\"wordNumber\">A.6.2.0945</div>\n  <div class=\"wordName\">COMPILE,</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>COMPILE,</strong> is the compilation equivalent of <a href=\"core/EXECUTE\">EXECUTE</a>.\n    <p>\n    In traditional threaded-code implementations, compilation is\n    performed by <a href=\"core/Comma\">,</a> (comma). This usage is not portable; it\n    doesn't work for subroutine-threaded, native code, or\n    relocatable implementations. Use of <strong>COMPILE,</strong> is portable.\n    </p><p>\n    In most systems it is possible to implement <strong>COMPILE,</strong> so\n    it will generate code that is optimized to the same extent as\n    code that is generated by the normal compilation process.\n    However, in some implementations there are two different\n    \"tokens\" corresponding to a particular definition name:\n    the normal \"execution token\" that is used while interpreting\n    or with <a href=\"core/EXECUTE\">EXECUTE</a>, and another \"compilation token\" that\n    is used while compiling. It is not always possible to obtain\n    the compilation token from the execution token. In these\n    implementations, <strong>COMPILE,</strong> might not generate code that\n    is as efficient as normally compiled code.\n    </p><p>\n    The intention is that <strong>COMPILE,</strong> can be used as follows to write\n    the classic interpreter/compiler loop:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n... \t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/p\">(</a> c-addr ) <br>\n        <a href=\"core/FIND\">FIND</a> <a href=\"core/qDUP\">?DUP</a> <a href=\"core/IF\">IF</a>\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> xt +-1 ) <br>\n        &nbsp;&nbsp; <a href=\"core/STATE\">STATE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> xt +-1 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Zeromore\">0&gt;</a> <a href=\"core/IF\">IF</a> \t\t\t\t<a href=\"core/EXECUTE\">EXECUTE</a> \t\t\t<a href=\"core/ELSE\">ELSE</a> \t\t\t\t<strong>COMPILE,</strong> \t\t\t<a href=\"core/THEN\">THEN</a>\t\t\t\t\t\t\t\t&nbsp;\t<a href=\"core/p\">(</a> ??? ) <br>\n        &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> xt +-1 ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> <a href=\"core/EXECUTE\">EXECUTE</a> \t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> ??? ) <br>\n        &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n        <a href=\"core/ELSE\">ELSE</a> \t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/p\">(</a> c-addr ) <br>\n        &nbsp;&nbsp; <a href=\"core/p\">(</a> <span class=\"rm\">whatever you do for an undefined word</span> ) <br>\n        <a href=\"core/THEN\">THEN</a> <br>\n        ...\n        \n        </div>\n      </div>\n    <p>\n    Thus the interpretation semantics are left undefined, as <strong>COMPILE,</strong>\n    will not be executed during interpretation.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ENDCASE\">\n  <div class=\"wordNumber\">A.6.2.1342</div>\n  <div class=\"wordName\">ENDCASE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <a href=\"core/Colon\">:</a> <code>X</code> ... <br>\n      &nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> <br>\n      &nbsp;&nbsp;   <em>test1</em> <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;   <em>testn</em> <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;   ... <a href=\"core/p\">(</a> default ) <br>\n      &nbsp;&nbsp; <strong>ENDCASE</strong> ... <br>\n      <a href=\"core/Semi\">;</a>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ENDOF\">\n  <div class=\"wordNumber\">A.6.2.1343</div>\n  <div class=\"wordName\">ENDOF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <a href=\"core/Colon\">:</a> <code>X</code> ... <br>\n      &nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> <br>\n      &nbsp;&nbsp;   <em>test1</em> <a href=\"core/OF\">OF</a> ... <strong>ENDOF</strong> <br>\n      &nbsp;&nbsp;   <em>testn</em> <a href=\"core/OF\">OF</a> ... <strong>ENDOF</strong> <br>\n      &nbsp;&nbsp;   ... <a href=\"core/p\">(</a> default ) <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> ... <br>\n      <a href=\"core/Semi\">;</a>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:MARKER\">\n  <div class=\"wordNumber\">A.6.2.1850</div>\n  <div class=\"wordName\">MARKER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    As dictionary implementations have become more elaborate\n    and in some cases have used multiple address spaces,\n    <a href=\"tools/FORGET\">FORGET</a> has become prohibitively difficult or\n    impossible to implement on many Forth systems. <strong>MARKER</strong>\n    greatly eases the problem by making it possible for the\n    system to remember \"landmark information\" in advance that\n    specifically marks the spots where the dictionary may at some\n    future time have to be rearranged.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:OF\">\n  <div class=\"wordNumber\">A.6.2.1950</div>\n  <div class=\"wordName\">OF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <a href=\"core/Colon\">:</a> <code>X</code> ... <br>\n      &nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> <br>\n      &nbsp;&nbsp;   <em>test1</em> <strong>OF</strong> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;   <em>testn</em> <strong>OF</strong> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;   ... <a href=\"core/p\">(</a> default ) <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> ... <br>\n      <a href=\"core/Semi\">;</a>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:PAD\">\n  <div class=\"wordNumber\">A.6.2.2000</div>\n  <div class=\"wordName\">PAD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>PAD</strong> has been available as scratch storage for strings\n    since the earliest Forth implementations. It was brought to\n    our attention that many programmers are reluctant to use\n    <strong>PAD</strong>, fearing incompatibilities with system uses.\n    <strong>PAD</strong> is specifically intended as a programmer convenience,\n    however, which is why we documented the fact that no standard\n    words use it.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:PARSE\">\n  <div class=\"wordNumber\">A.6.2.2008</div>\n  <div class=\"wordName\">PARSE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: <em>char</em> <strong>PARSE</strong> <em>ccc</em>&lt;<em>char</em>&gt;\n    <p>\n    The traditional Forth word for parsing is <a href=\"core/WORD\">WORD</a>.\n    <strong>PARSE</strong> solves the following problems with <a href=\"core/WORD\">WORD</a>:\n    </p><p>\n    </p><ol style=\"list-style-type: decimal\">\n    <li> <a href=\"core/WORD\">WORD</a> always skips leading delimiters. This\n    behavior is appropriate for use by the text interpreter,\n    which looks for sequences of non-blank characters, but is\n    inappropriate for use by words like <a href=\"core/p\">(</a> , <a href=\"core/Dotp\">.(</a>,\n    and <a href=\"core/Dotq\">.\"</a>. Consider the following (flawed) definition\n    of <a href=\"core/Dotp\">.(</a>:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <a href=\"core/Dotp\">.(</a>  \n    <a href=\"core/BracketCHAR\">[CHAR]</a> <code>)</code>  \n    <a href=\"core/WORD\">WORD</a> <a href=\"core/COUNT\">COUNT</a> <a href=\"core/TYPE\">TYPE</a>\n    <a href=\"core/Semi\">;</a>   <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    </p><p>\n    This works fine when used in a line like:\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Dotp\">.(</a> <code>HELLO)</code> &nbsp;&nbsp; <code>5</code> <a href=\"core/d\">.</a>\n    </p><p>\n    but consider what happens if the user enters an empty\n    string:\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Dotp\">.(</a> <code>)</code> &nbsp;&nbsp; <code>5</code> <a href=\"core/d\">.</a>\n    </p><p>\n    The definition of <a href=\"core/Dotp\">.(</a> shown above would treat the\n    <code>)</code> as a leading delimiter, skip it, and continue\n    consuming characters until it located another <code>)</code>\n    that followed a non-<code>)</code> character, or until the\n    parse area was empty. In the example shown, the\n    <code>5</code> <a href=\"core/d\">.</a>\n    would be treated as part of the string to be printed.\n    </p><p>\n    With <strong>PARSE</strong>, we could write a correct definition of\n    <a href=\"core/Dotp\">.(</a>:\n    </p><p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <a href=\"core/Dotp\">.(</a>  \n    <a href=\"core/BracketCHAR\">[CHAR]</a> <code>)</code>  \n    <strong>PARSE</strong> <a href=\"core/TYPE\">TYPE</a>\n    <a href=\"core/Semi\">;</a>   <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    </p><p>\n    This definition avoids the \"empty string\" anomaly.\n    </p><p>\n    </p></li>\n    <li> <a href=\"core/WORD\">WORD</a> returns its result as a counted string.\n    This has four bad effects:\n    <p>\n    </p><ol style=\"list-style-type: lower-alpha\">\n    <li> The characters accepted by <a href=\"core/WORD\">WORD</a> must be\n    copied from the input buffer into a transient buffer,\n    in order to make room for the count character that\n    must be at the beginning of the counted string. The\n    copy step is inefficient, compared to <strong>PARSE</strong>,\n    which leaves the string in the input buffer and doesn't\n    need to copy it anywhere.\n    <p>\n    </p></li>\n    <li> <a href=\"core/WORD\">WORD</a> must be careful not to store too many\n    characters into the transient buffer, thus overwriting\n    something beyond the end of the buffer. This adds to\n    the overhead of the copy step. (<a href=\"core/WORD\">WORD</a> may have\n    to scan a lot of characters before finding the trailing\n    delimiter.)\n    <p>\n    </p></li>\n    <li> The count character limits the length of the string\n    returned by <a href=\"core/WORD\">WORD</a> to 255 characters (longer\n    strings can easily be stored in blocks!). This\n    limitation does not exist for <strong>PARSE</strong>.\n    <p>\n    </p></li>\n    <li> The transient buffer is typically overwritten by the\n    next use of <a href=\"core/WORD\">WORD</a>.\n    </li>\n</ol>\n    <p>\n    The need for <a href=\"core/WORD\">WORD</a> has largely been eliminated by\n    <strong>PARSE</strong> and <a href=\"core/PARSE-NAME\">PARSE-NAME</a>. <a href=\"core/WORD\">WORD</a> is\n    retained for backward compatibility.\n    </p></li>\n</ol>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:PICK\">\n  <div class=\"wordNumber\">A.6.2.2030</div>\n  <div class=\"wordName\">PICK</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <code>0</code> <strong>PICK</strong> is equivalent to <a href=\"core/DUP\">DUP</a> and\n    <code>1</code> <strong>PICK</strong> is equivalent to <a href=\"core/OVER\">OVER</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:REFILL\">\n  <div class=\"wordNumber\">A.6.2.2125</div>\n  <div class=\"wordName\">REFILL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>REFILL</strong> is designed to behave reasonably for all possible\n    input sources. If the input source is coming from the user,\n    <strong>REFILL</strong> could still return a false value if, for instance,\n    a communication channel closes so that the system knows that no\n    more input will be available.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:ROLL\">\n  <div class=\"wordNumber\">A.6.2.2150</div>\n  <div class=\"wordName\">ROLL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <code>2</code> <strong>ROLL</strong> is equivalent to <a href=\"core/ROT\">ROT</a>,\n    <code>1</code> <strong>ROLL</strong> is equivalent to <a href=\"core/SWAP\">SWAP</a> and\n    <code>0</code> <strong>ROLL</strong> is a null operation.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:SAVE-INPUT\">\n  <div class=\"wordNumber\">A.6.2.2182</div>\n  <div class=\"wordName\">SAVE-INPUT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>SAVE-INPUT</strong> and <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> allow the same\n    degree of input source repositioning within a text file as is\n    available with <a href=\"block/BLOCK\">BLOCK</a> input. <strong>SAVE-INPUT</strong>\n    and <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> \"hide the details\" of the operations\n    necessary to accomplish this repositioning, and are used the\n    same way with all input sources. This makes it easier for\n    programs to reposition the input source, because they do not\n    have to inspect several variables and take different action\n    depending on the values of those variables.\n    <p>\n    <strong>SAVE-INPUT</strong> and <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> are intended for\n    repositioning within a single input source; for example, the\n    following scenario is NOT allowed for a Standard Program:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> XX <br>\n        &nbsp;&nbsp; <strong>SAVE-INPUT</strong>   <a href=\"core/CREATE\">CREATE</a> <br>\n        &nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> RESTORE-INPUT\" <a href=\"core/EVALUATE\">EVALUATE</a> <br>\n        &nbsp;&nbsp; <a href=\"core/ABORTq\">ABORT\"</a> couldn't restore input\" <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    <p>\n    This is incorrect because, at the time <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> is\n    executed, the input source is the string via <a href=\"core/EVALUATE\">EVALUATE</a>,\n    which is not the same input source that was in effect when\n    <strong>SAVE-INPUT</strong> was executed.\n    </p><p>\n    The following code is allowed:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> XX <br>\n        &nbsp;&nbsp; <strong>SAVE-INPUT</strong>   <a href=\"core/CREATE\">CREATE</a> <br>\n        &nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> <a href=\"core/Dotp\">.(</a> Hello)\" <a href=\"core/EVALUATE\">EVALUATE</a> <br>\n        &nbsp;&nbsp; <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> <a href=\"core/ABORTq\">ABORT\"</a> couldn't restore input\" <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    <p>\n    After <a href=\"core/EVALUATE\">EVALUATE</a> returns, the input source specification\n    is restored to its previous state, thus\n    <a href=\"core:SAVE-INPUT\"><strong><code>SAVE-</code></strong></a>\n    <a href=\"core:SAVE-INPUT\"><strong><code>INPUT</code></strong></a>\n    and <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> are called with the same input source\n    in effect.\n    </p><p>\n    In the above examples, the <a href=\"core/EVALUATE\">EVALUATE</a> phrase could have\n    been replaced by a phrase involving <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a>\n    and the same rules would apply.\n    </p><p>\n    The standard does not specify what happens if a program\n    violates the above rules. A Standard System might check for\n    the violation and return an exception indication from\n    <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a>, or it might fail in an unpredictable\n    way.\n    </p><p>\n    The return value from <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> is primarily\n    intended to report the case where the program attempts to\n    restore the position of an input source whose position cannot\n    be restored. The keyboard might be such an input source.\n    </p><p>\n    Nesting of <strong>SAVE-INPUT</strong> and <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> is\n    allowed. For example, the following situation works as\n    expected:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> XX <br>\n        &nbsp;&nbsp; <strong>SAVE-INPUT</strong> <br>\n        &nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> f1\" <a href=\"file/INCLUDED\">INCLUDED</a> <br>\n        &nbsp;&nbsp;   <a href=\"core/bs\">\\</a> The file \"f1\" includes: <br>\n        &nbsp;&nbsp;   <a href=\"core/bs\">\\</a>    ... SAVE-INPUT ... RESTORE-INPUT ... <br>\n        &nbsp;&nbsp;   <a href=\"core/bs\">\\</a> End of file \"f1\" <br>\n        &nbsp;&nbsp; <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a>   <a href=\"core/ABORTq\">ABORT\"</a> couldn't restore input\" <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    <p>\n    In principle, <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> could be implemented to\n    \"always fail\", e.g.:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> <a href=\"core/p\">(</a> x1 ... xn n -- flag ) <br>\n        &nbsp;&nbsp; 0 <a href=\"core/qDO\">?DO</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/TRUE\">TRUE</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    <p>\n    Such an implementation would not be useful in most cases. It\n    would be preferable for a system to leave <strong>SAVE-INPUT</strong>\n    and <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> undefined, rather than to create a\n    useless implementation. In the absence of the words, the\n    application programmer could choose whether or not to create\n    \"dummy\" implementations or to work-around the problem in\n    some other way.\n    </p><p>\n    Examples of how an implementation might use the return values\n    from <strong>SAVE-INPUT</strong> to accomplish the save/restore function:\n    </p><p>\n    </p><div class=\"center\">\n\n      <table class=\"center\">\n      <tbody><tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n      <tr valign=\"top\"><td>Input Source </td><td colspan=\"4\">possible stack values </td></tr>\n      <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n      <tr valign=\"top\"><td>block\t\t\t</td><td><a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Fetch\">@</a> </td><td><a href=\"block/BLK\">BLK</a> <a href=\"core/Fetch\">@</a> </td><td><code>2</code> </td></tr>\n      <tr valign=\"top\"><td><a href=\"core/EVALUATE\">EVALUATE</a>\t</td><td><a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Fetch\">@</a> </td><td><code>1</code> </td></tr>\n      <tr valign=\"top\"><td>keyboard\t\t</td><td><a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Fetch\">@</a> </td><td><code>1</code> </td></tr>\n      <tr valign=\"top\"><td>text file\t\t</td><td><a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Fetch\">@</a> </td><td><code>lo-pos</code> </td><td><code>hi-pos</code> </td><td><code>3</code> </td></tr>\n      <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n      <tr valign=\"top\"><td></td></tr>\n      </tbody></table>\n      \n      </div>\n    <p>\n    These are examples only; a Standard Program may not assume any\n    particular meaning for the individual stack items returned by\n    <strong>SAVE-INPUT</strong>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:TO\">\n  <div class=\"wordNumber\">A.6.2.2295</div>\n  <div class=\"wordName\">TO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: <code>x</code> <strong>TO</strong> <em>name</em>\n    <p>\n    Some implementations of <strong>TO</strong> do not parse; instead they set\n    a mode flag that is tested by the subsequent execution of\n    <em>name</em>.  Standard programs must use <strong>TO</strong> as if it\n    parses.  Therefore <strong>TO</strong> and <em>name</em> must be\n    contiguous and on the same line in the source text.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:TRUE\">\n  <div class=\"wordNumber\">A.6.2.2298</div>\n  <div class=\"wordName\">TRUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>TRUE</strong> is equivalent to the phrase\n    <code>0</code> <a href=\"core/ZeroEqual\">0=</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:VALUE\">\n  <div class=\"wordNumber\">A.6.2.2405</div>\n  <div class=\"wordName\">VALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n      <div class=\"tt\">\n0 <strong>VALUE</strong> data\n        <p>\n        <a href=\"core/Colon\">:</a> EXCHANGE <a href=\"core/p\">(</a> n1 -- n2 )\n        data <a href=\"core/SWAP\">SWAP</a> <a href=\"core/TO\">TO</a> data\n        <a href=\"core/Semi\">;</a>\n        \n        </p></div>\n      </div>\n    <code>EXCHANGE</code> leaves <em>n<sub>1</sub></em> in <code>data</code> and\n    returns the prior value <em>n<sub>2</sub></em>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:WITHIN\">\n  <div class=\"wordNumber\">A.6.2.2440</div>\n  <div class=\"wordName\">WITHIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    We describe <strong>WITHIN</strong> without mentioning circular number\n    spaces (an undefined term) or providing the code. Here is a\n    number line with the overflow point (<em>o</em>) at the far right and\n    the underflow point (<em>u</em>) at the far left:\n    <div class=\"center\">\n\n      <em>u</em>---------------<em>o</em>\n      \n      </div>\n    There are two cases to consider: either the\n    <em>n<sub>2</sub> | u<sub>2</sub>... n<sub>3</sub> | u<sub>3</sub></em> range straddles the overflow/underflow\n    points or it does not. Lets examine the non-straddle case\n    first:\n    <div class=\"center\">\n\n      <em>u</em>-----[.....)-----<em>o</em>\n      \n      </div>\n    The [ denotes <em>n<sub>2</sub> | u<sub>2</sub></em>, the ) denotes <em>n<sub>3</sub> | u<sub>3</sub></em>,\n    and the dots and [ are numbers <strong>WITHIN</strong> the range.\n    <em>n<sub>3</sub> | u<sub>3</sub></em> is greater than <em>n<sub>2</sub> | u<sub>2</sub></em>, so the\n    following tests will determine if <em>n<sub>1</sub> | u<sub>1</sub></em> is\n    <strong>WITHIN</strong> <em>n<sub>2</sub> | u<sub>2</sub></em> and <em>n<sub>3</sub> | u<sub>3</sub></em>:\n    <div class=\"center\">\n\n      <em>n<sub>2</sub> | u<sub>2</sub></em> <em>&lt;=</em> <em>n<sub>1</sub> | u<sub>1</sub></em> and <em>n<sub>1</sub> | u<sub>1</sub></em> &lt; <em>n<sub>3</sub> | u<sub>3</sub></em>.\n      \n      </div>\n    In the case where the comparison range straddles the\n    overflow/underflow points:\n    <div class=\"center\">\n\n      <em>u</em>.....)-----[.....<em>o</em>\n      \n      </div>\n    <em>n<sub>3</sub> | u<sub>3</sub></em> is less than <em>n<sub>2</sub> | u<sub>2</sub></em> and the following\n    tests will determine if <em>n<sub>1</sub> | u<sub>1</sub></em> is <strong>WITHIN</strong>\n    <em>n<sub>2</sub> | u<sub>2</sub></em> and <em>n<sub>3</sub> | u<sub>3</sub></em>:\n    <div class=\"center\">\n\n      <em>n<sub>2</sub> | u<sub>2</sub></em> <em>&lt;=</em> <em>n<sub>1</sub> | u<sub>1</sub></em> or <em>n<sub>1</sub> | u<sub>1</sub></em> &lt; <em>n<sub>3</sub> | u<sub>3</sub></em>.\n      \n      </div>\n    <strong>WITHIN</strong> must work for both signed and unsigned arguments.\n    One obvious implementation does not work:\n        <div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <strong>WITHIN</strong> <a href=\"core/p\">(</a> test low high -- flag ) <br>\n        &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/less\">&lt;</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/p\">(</a> test flag1 )\n        <a href=\"core/SWAP\">SWAP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/less\">&lt;</a> <a href=\"core/p\">(</a> flag1 flag2 )\n        <a href=\"core/AND\">AND</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    Assume two's-complement arithmetic on a 16-bit machine, and\n    consider the following test:\n    <p>\n    &nbsp;&nbsp; <code>33000   32000   34000   WITHIN</code>\n    </p><p>\n    The above implementation returns <em>false</em> for that test,\n    even though the unsigned number 33000 is clearly within the\n    range {{32000 ... 34000}}.\n    </p><p>\n    The problem is that, in the incorrect implementation, the\n    signed comparison <a href=\"core/less\">&lt;</a> gives the wrong answer when 32000\n    is compared to 33000, because when those numbers are treated\n    as signed numbers, 33000 is treated as negative 32536, while\n    32000 remains positive.\n    </p><p>\n    Replacing <a href=\"core/less\">&lt;</a> with <a href=\"core/Uless\">U&lt;</a> in the above implementation\n    makes it work with unsigned numbers, but causes problems with\n    certain signed number ranges; in particular, the test:\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n1   -5   5   WITHIN\n        \n        </div>\n      </div>\n    would give an incorrect answer.\n    <p>\n    For two's-complement machines that ignore arithmetic overflow\n    (most machines), the following implementation works in all\n    cases:\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <strong>WITHIN</strong> <a href=\"core/p\">(</a> test low high -- flag )\t \n        <a href=\"core/OVER\">OVER</a> <a href=\"core/Minus\">-</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/Minus\">-</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Uless\">U&lt;</a>  \n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:[COMPILE]\">\n  <div class=\"wordNumber\">A.6.2.2530</div>\n  <div class=\"wordName\">[COMPILE]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>name2</code> ...\n    <strong>[COMPILE]</strong> <code>name1</code>\n    ... <a href=\"core/Semi\">;</a>   <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:core:bs\">\n  <div class=\"wordNumber\">A.6.2.2535</div>\n  <div class=\"wordName\">\\</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n      <div class=\"tt\">\n5 <a href=\"core/CONSTANT\">CONSTANT</a> THAT\n          <strong>\\</strong>   <span class=\"rm\">This is a comment about THAT</span>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.9\">A.9 The optional Block word set</h2> <!-- A.7 ========================= -->\n\n<a name=\"rat:block\"></a>\n<p>\nEarly Forth systems ran without a host OS; these are known as native\nsystems.  Such systems provide mass storage in blocks of 1024 bytes.\nThe Block Word set includes the most common words for accessing\nprogram source and data on disk.\n</p><p>\n\n</p><h3 id=\"subsection.A.9.2\">A.9.2 Additional terms</h3> <!-- A.7.2 =============================== -->\n<a name=\"rat:block:terms\"></a>\n<p>\n</p><dl class=\"desc\">\n<dt>block</dt><dd>  \nForth systems may use blocks to contain program source.\nConventionally such blocks are formatted for editing as\n16 lines of 64 characters. Source blocks are often referred\nto as \"screens\".\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.A.9.3\">A.9.3 Additional usage requirements</h3>\n\n<h4 id=\"subsubsection.A.9.3.2\">A.9.3.2 Block buffer regions</h4>\n<a name=\"rat:block:buffers\"></a>\n<p>\nWhile the standard does not address multitasking per se, the\nitems listed in <strong><a href=\"block#block:buffers\">7.3.2 Block buffer regions</a></strong> that may render block-buffer\naddresses invalid are due to multitasking considerations.\nThe standard restricts programs such that items that could fail on\nmultitasking systems are not standard usage.  It also permits\nmultitasking systems to be declared standard systems.\n</p><p>\n\n</p><h3 id=\"subsection.A.9.6\">A.9.6 Glossary</h3> <!-- A.7.6 ============================= -->\n\n<div class=\"wordHead\" id=\"rat:block:SCR\">\n  <div class=\"wordNumber\">A.7.6.2.2190</div>\n  <div class=\"wordName\">SCR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>SCR</strong> is short for screen.\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.11\">A.11 The optional Double-Number word set</h2> <!-- A.8 ================= -->\n\n<a name=\"rat:double\"></a>\n<p>\nForth systems on 8-bit and 16-bit processors often find it necessary\nto deal with double-length numbers. But many Forths on small embedded\nsystems do not, and many users of Forth on systems with a cell size of\n32-bits or more find that the necessity for double-length numbers is\nmuch diminished. Therefore, we have factored the words that manipulate\ndouble-length entities into this optional word set.\n</p><p>\nPlease note that the naming convention used in this word set conveys\nsome important information:\n</p><p>\n</p><ol style=\"list-style-type: lower-alpha\">\n<li>\nWords whose names are of the form <code>2</code><em>xxx</em> deal\nwith cell pairs, where the relationship between the cells is\nunspecified. They may be two-vectors, double-length numbers, or\nany pair of cells that it is convenient to manipulate together.\n<p>\n</p></li>\n<li>\nWords with names of the form <code>D</code><em>xxx</em> deal\nspecifically with double-length integers.\n<p>\n</p></li>\n<li>\nWords with names of the form <code>M</code><em>xxx</em> deal with\nsome combination of single and double integers. The order in\nwhich these appear on the stack is determined by long-standing\ncommon practice.\n</li>\n</ol>\n<p>\nRefer to <a href=\"rationale#rat:types\">A.3.1</a> for a discussion of data types in Forth.\n</p><p>\n\n</p><h3 id=\"subsection.A.11.6\">A.11.6 Glossary</h3> <!-- A.8.6 ============================= -->\n\n<div class=\"wordHead\" id=\"rat:double:2CONSTANT\">\n  <div class=\"wordNumber\">A.8.6.1.0360</div>\n  <div class=\"wordName\">2CONSTANT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <code>x1</code> <code>x2</code> <strong>2CONSTANT</strong> <em>name</em>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:2LITERAL\">\n  <div class=\"wordNumber\">A.8.6.1.0390</div>\n  <div class=\"wordName\">2LITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    \n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/Bracket\">[</a> <code>x1</code> <code>x2</code> <a href=\"right-bracket\">]</a> <a href=\"double/TwoLITERAL\">2LITERAL</a>\n    ... <a href=\"core/Semi\">;</a>\n    \n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:2VARIABLE\">\n  <div class=\"wordNumber\">A.8.6.1.0440</div>\n  <div class=\"wordName\">2VARIABLE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <strong>2VARIABLE</strong> <em>name</em>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:D.R\">\n  <div class=\"wordNumber\">A.8.6.1.1070</div>\n  <div class=\"wordName\">D.R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    In <strong>D.R</strong>, the \"R\" is short for RIGHT.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:DtoS\">\n  <div class=\"wordNumber\">A.8.6.1.1140</div>\n  <div class=\"wordName\">D&gt;S</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    There exist number representations, e.g., the sign-magnitude\n    representation, where reduction from double- to single-precision\n    cannot simply be done with <a href=\"core/DROP\">DROP</a>. This word,\n    equivalent to <a href=\"core/DROP\">DROP</a> on two's complement systems,\n    desensitizes application code to number representation and\n    facilitates portability.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:M*/\">\n  <div class=\"wordNumber\">A.8.6.1.1820</div>\n  <div class=\"wordName\">M*/</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>M*/</strong> was once described by Chuck Moore as the most\n    useful arithmetic operator in Forth. It is the main workhorse\n    in most computations involving double-cell numbers. Note that\n    some systems allow signed divisors. This can cost a lot in\n    performance on some CPUs. The requirement for a positive\n    divisor has not proven to be a problem.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:M+\">\n  <div class=\"wordNumber\">A.8.6.1.1830</div>\n  <div class=\"wordName\">M+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>M+</strong> is the classical method for integrating.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:double:2VALUE\">\n  <div class=\"wordNumber\">A.8.6.2.0435</div>\n  <div class=\"wordName\">2VALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> fn1 <a href=\"core/Sq\">S\"</a> filename\" <a href=\"core/Semi\">;</a> <br>\n        fn1 <strong>2VALUE</strong> myfile <br>\n        myfile <a href=\"file/INCLUDED\">INCLUDED</a> <br>\n        \n        <a href=\"core/Colon\">:</a> fn2 <a href=\"core/Sq\">S\"</a> filename2\" <a href=\"core/Semi\">;</a> <br>\n        fn2 <a href=\"core/TO\">TO</a> myfile <br>\n        myfile <a href=\"file/INCLUDED\">INCLUDED</a>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.13\">A.13 The optional Exception word set</h2> <!-- A.9 ===================== -->\n\n<a name=\"rat:exception\"></a>\n<p>\n<a href=\"exception/CATCH\">CATCH</a> and <a href=\"exception/THROW\">THROW</a> provide a reliable mechanism for\nhandling exceptions, without having to propagate exception flags\nthrough multiple levels of word nesting. It is similar in spirit\nto the \"non-local return\" mechanisms of many other languages,\nsuch as C's <code>setjmp()</code> and <code>longjmp()</code>, and LISP's\n<code>CATCH</code> and <code>THROW</code>. In the Forth context, <a href=\"exception/THROW\">THROW</a>\nmay be described as a \"multi-level <a href=\"core/EXIT\">EXIT</a>\", with\n<a href=\"exception/CATCH\">CATCH</a> marking a location to which a <a href=\"exception/THROW\">THROW</a> may return.\n</p><p>\nSeveral similar Forth \"multi-level <a href=\"core/EXIT\">EXIT</a>\"\nexception-handling schemes have been described and used in past years.\nIt is not possible to implement such a scheme using only standard words\n(other than <a href=\"exception/CATCH\">CATCH</a> and <a href=\"exception/THROW\">THROW</a>), because there is no portable\nway to \"unwind\" the return stack to a predetermined place.\n</p><p>\n<a href=\"exception/THROW\">THROW</a> also provides a convenient implementation technique for\nthe standard words <a href=\"exception/ABORT\">ABORT</a> and <a href=\"exception/ABORTq\">ABORT\"</a>, allowing an\napplication to define, through the use of <a href=\"exception/CATCH\">CATCH</a>, the behavior\nin the event of a system <a href=\"exception/ABORT\">ABORT</a>.\n</p><p>\n<a href=\"exception/CATCH\">CATCH</a> and <a href=\"exception/THROW\">THROW</a> provide a convenient way for an\nimplementation to \"clean up\" the state of open files if an\nexception occurs during the text interpretation of a file with\n<a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a>. The implementation of\n<a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a> may guard (with <a href=\"exception/CATCH\">CATCH</a>) the word\nthat performs the text interpretation, and if <a href=\"exception/CATCH\">CATCH</a> returns\nan exception code, the file may be closed and the exception\nre<a href=\"exception/THROW\">THROW</a>n so that the files being included at an outer nesting\nlevel may be closed also. Note that the standard allows, but does not\nrequire, <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a> to close its open files if an\nexception occurs. However, it does require <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a>\nto unnest the input source specification if an exception is\n<a href=\"exception/THROW\">THROW</a>n.\n</p><p>\n\n</p><h3 id=\"subsection.A.13.3\">A.13.3 Additional usage requirements</h3> <!-- A.9.3 ======== -->\nOne important use of an exception handler is to maintain program\ncontrol under many conditions which <a href=\"exception/ABORT\">ABORT</a>.  This is practicable\nonly if a range of codes is reserved.  Note that an application may\noverload many standard words in such a way as to <a href=\"exception/THROW\">THROW</a>\nambiguous conditions not normally <a href=\"exception/THROW\">THROW</a>n by a particular\nsystem.\n<p>\n\n</p><h4 id=\"subsubsection.A.13.3.6\">A.13.3.6 Exception handling</h4> <!-- A.9.3.6 ============== -->\nThe method of accomplishing this coupling is implementation dependent.\nFor example, <a href=\"block/LOAD\">LOAD</a> could \"know\" about <a href=\"exception/CATCH\">CATCH</a> and\n<a href=\"exception/THROW\">THROW</a> (by using <a href=\"exception/CATCH\">CATCH</a> itself, for example), or\n<a href=\"exception/CATCH\">CATCH</a> and <a href=\"exception/THROW\">THROW</a> could \"know\" about <a href=\"block/LOAD\">LOAD</a>\n(by maintaining input source nesting information in a data structure\nknown to <a href=\"exception/THROW\">THROW</a>, for example). Under these circumstances it is\nnot possible for a Standard Program to define words such as\n<a href=\"block/LOAD\">LOAD</a> in a completely portable way.\n<p>\n\n</p><h3 id=\"subsection.A.13.6\">A.13.6 Glossary</h3> <!-- A.9.6 ============================= -->\n\n<div class=\"wordHead\" id=\"rat:exception:THROW\">\n  <div class=\"wordNumber\">A.9.6.1.2275</div>\n  <div class=\"wordName\">THROW</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    If <strong>THROW</strong> is executed with a non zero argument, the effect\n    is as if the corresponding <a href=\"exception/CATCH\">CATCH</a> had returned it. In that\n    case, the stack depth is the same as it was just before <a href=\"exception/CATCH\">CATCH</a>\n    began execution. The values of the <em>i * x</em> stack arguments could\n    have been modified arbitrarily during the execution of <em>xt</em>.\n    In general, nothing useful may be done with those stack items, but\n    since their number is known (because the stack depth is deterministic),\n    the application may <a href=\"core/DROP\">DROP</a> them to return to a predictable\n    stack state.\n    <p>\n    Typical use:\n    \n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> could-fail <a href=\"core/p\">(</a> -- char ) <br>\n        &nbsp;&nbsp; <a href=\"core/KEY\">KEY</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/BracketCHAR\">[CHAR]</a> Q <a href=\"core/Equal\">=</a> \n        <a href=\"core/IF\">IF</a>  1 <a href=\"exception/THROW\">THROW</a>\n        <a href=\"core/THEN\">THEN</a>\n        <a href=\"core/Semi\">;</a>\n        <p>\n        <a href=\"core/Colon\">:</a> do-it <a href=\"core/p\">(</a> a b -- c)  \n        <a href=\"core/TwoDROP\">2DROP</a> could-fail <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> try-it <a href=\"core/p\">(</a> --) <br>\n        &nbsp;&nbsp; 1 2 <a href=\"core/BracketTick\">[']</a> do-it  <a href=\"exception/CATCH\">CATCH</a>  <a href=\"core/IF\">IF</a> <br>\n        &nbsp;&nbsp;   <a href=\"core/p\">(</a> x1 x2 ) <a href=\"core/TwoDROP\">2DROP</a>\n        <a href=\"core/Dotq\">.\"</a>  There was an exception\" <a href=\"core/CR\">CR</a> <br>\n        &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a>\n        <a href=\"core/Dotq\">.\"</a> The character was \" <a href=\"core/EMIT\">EMIT</a> <a href=\"core/CR\">CR</a> <br>\n        &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n        <a href=\"core/Semi\">;</a>\n        </p><p>\n        <a href=\"core/Semi\">;</a> retry-it <a href=\"core/p\">(</a> -- ) <br>\n        &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a>  1 2 <a href=\"core/BracketTick\">[']</a> do-it <a href=\"exception/CATCH\">CATCH</a> \n        <a href=\"core/WHILE\">WHILE</a> <br>\n        &nbsp;&nbsp;   <a href=\"core/p\">(</a> x1 x2) <a href=\"core/TwoDROP\">2DROP</a>\n        <a href=\"core/Dotq\">.\"</a> Exception, keep trying\" <a href=\"core/CR\">CR</a> <br>\n        &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/p\">(</a> char ) <br>\n        &nbsp;&nbsp; <a href=\"core/Dotq\">.\"</a> The character was \" <a href=\"core/EMIT\">EMIT</a> <a href=\"core/CR\">CR</a> <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </p></div>\n      </div>\n    \n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.15\">A.15 The optional Facility word set</h2> <!-- A.10 ===================== -->\n\n<a name=\"rat:facility\"></a>\n<p>\n\n</p><h3 id=\"subsection.A.15.6\">A.15.6 Glossary</h3> <!-- A.10.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:facility:KEYq\">\n  <div class=\"wordNumber\">A.10.6.1.1755</div>\n  <div class=\"wordName\">KEY?</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The committee has gone around several times on the\n    stack effects. Whatever is decided will violate somebody's\n    practice and penalize some machine. This way doesn't interfere\n    with type-ahead on some systems, while requiring the\n    implementation of a single-character buffer on machines where\n    polling the keyboard inevitably results in the destruction of\n    the character.\n    <p>\n    Use of <a href=\"core/KEY\">KEY</a> or <strong>KEY?</strong> indicates that the\n    application does not wish to process non-character events,\n    so they are discarded, in anticipation of eventually receiving\n    a valid character. Applications wishing to handle non-character\n    events must use <a href=\"facility/EKEY\">EKEY</a> and <a href=\"facility/EKEYq\">EKEY?</a>. It is possible\n    to mix uses of <strong>KEY?</strong>/<a href=\"core/KEY\">KEY</a> and\n    <a href=\"facility/EKEYq\">EKEY?</a>/<a href=\"facility/EKEY\">EKEY</a> within a single application, but\n    the application must use <strong>KEY?</strong> and <a href=\"core/KEY\">KEY</a> only\n    when it wishes to discard non-character events until a valid\n    character is received.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:+FIELD\">\n  <div class=\"wordNumber\">A.10.6.2.0135</div>\n  <div class=\"wordName\">+FIELD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>+FIELD</strong> is not required to align items.  This is\n    deliberate and allows the construction of unaligned data\n    structures for communication with external elements such\n    as a hardware register map or protocol packet.\n    Field alignment has been left to the appropriate\n    <em>x</em><code>FIELD:</code> definition.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:BEGIN-STRUCTURE\">\n  <div class=\"wordNumber\">A.10.6.2.0763</div>\n  <div class=\"wordName\">BEGIN-STRUCTURE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    There are two schools of thought regarding named data\n    structures: name first and name last.  The name last\n    school can define a named data structure as follows:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n0 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> initial total byte count <br>\n        &nbsp;&nbsp; 1 <a href=\"core/CELLS\">CELLS</a> <a href=\"facility/PlusFIELD\">+FIELD</a> p.x\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> A single cell filed named p.x <br>\n        &nbsp;&nbsp; 1 <a href=\"core/CELLS\">CELLS</a> <a href=\"facility/PlusFIELD\">+FIELD</a> p.y   &nbsp;&nbsp; <a href=\"core/bs\">\\</a> A single cell field named p.y <br>\n        <a href=\"core/CONSTANT\">CONSTANT</a> point &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> save structure size\n        \n        </div>\n      </div>\n    <p>\n    While the name first school would define the same data\n    structure as:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<strong>BEGIN-STRUCTURE</strong> point  <a href=\"core/bs\">\\</a> create the named structure <br>\n        &nbsp;&nbsp; 1 <a href=\"core/CELLS\">CELLS</a> <a href=\"facility/PlusFIELD\">+FIELD</a> p.x\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> A single cell filed named p.x <br>\n        &nbsp;&nbsp; 1 <a href=\"core/CELLS\">CELLS</a> <a href=\"facility/PlusFIELD\">+FIELD</a> p.y   &nbsp;&nbsp; <a href=\"core/bs\">\\</a> A single cell field named p.y <br>\n        <a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a>\n        \n        </div>\n      </div>\n    <p>\n    Although many systems provide a name first structure there\n    is no common practice to the words used.  The words\n    <strong>BEGIN-STRUCTURE</strong> and <a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a> have been\n    defied as a means of providing a portable notation that does\n    not conflict with existing systems.\n    </p><p>\n    The field defining words (<em>x</em><code>FIELD:</code> and\n    <a href=\"facility/PlusFIELD\">+FIELD</a>) are defined so they can be used by both\n    schools.  Compatibility between the two schools comes from\n    defining a new stack item <em>struct-sys</em>, which is\n    implementation dependent and can be 0 or more cells.\n    The name first school would provide an address (<em>addr</em>)\n    as the <em>struct-sys</em> parameter, while the name last\n    school would defined <em>struct-sys</em> as being empty.\n    </p><p>\n    Executing the name of the data structure, returns the size of\n    the data structure.  This allows the data stricture to be used\n    within another data structure:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<strong>BEGIN-STRUCTURE</strong> point  <a href=\"core/bs\">\\</a> -- a-addr 0 ; -- lenp <br>\n        &nbsp;&nbsp; <a href=\"facility/FIELDColon\">FIELD:</a> p.x\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> -- a-addr cell <br>\n        &nbsp;&nbsp; <a href=\"facility/FIELDColon\">FIELD:</a> p.y      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> -- a-addr cell*2 <br>\n        <a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a> <br>\n        <strong>BEGIN-STRUCTURE</strong> rect  &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> -- a-addr 0 ; -- lenr <br>\n        &nbsp;&nbsp; point <a href=\"facility/PlusFIELD\">+FIELD</a> r.tlhc   &nbsp;&nbsp; <a href=\"core/bs\">\\</a> -- a-addr cell*2 <br>\n        &nbsp;&nbsp; point <a href=\"facility/PlusFIELD\">+FIELD</a> r.brhc   &nbsp;&nbsp; <a href=\"core/bs\">\\</a> -- a-addr cell*4 <br>\n        <a href=\"facility/END-STRUCTURE\">END-STRUCTURE</a>\n        \n        </div>\n      </div>\n    <p>\n    \n    </p></div>\n  </div>\n<div class=\"secdef\">\n\n  <div class=\"secname\">Alignment:</div>\n  <div class=\"sec\">\n\n  In practice, structures are used for two different purposes\n    with incompatible requirements:\n    <ol style=\"list-style-type: decimal\">\n    <li> For collecting related internal-use data into a\n    convenient \"package\" that can be referred to by a\n    single \"handle\". For this use, alignment is important,\n    so that efficient native fetch and store instructions\n    can be used.\n    <p>\n    </p></li>\n    <li> For mapping external data structures like hardware\n    register maps and protocol packets. For this use,\n    automatic alignment is inappropriate, because the\n    alignment of the external data structure often doesn't\n    match the rules for a given processor.\n    </li>\n</ol>\n    <p>\n    Many languages cater for the first use, but ignore the\n    second.  This leads to various customized solutions, usage\n    requirements, portability problems, bugs, etc.\n    <a href=\"facility/PlusFIELD\">+FIELD</a> is defined to be non-aligning, while the\n    named field defining words (<em>x</em><code>FIELD:</code>) are\n    aligning.  This is intentional and allows for both uses.\n    </p><p>\n    The standard currently defines an aligned field defining\n    word for each of the standard data types:\n    </p><p>\n    </p><div class=\"center\">\n\n      <table class=\"center\">\n      <tbody><tr valign=\"top\"><td class=\"r\"><a href=\"facility/CFIELDColon\">CFIELD:</a>\t\t\t\t\t</td><td>a character </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><a href=\"facility/FIELDColon\">FIELD:</a>\t\t\t\t\t</td><td>a native integer (single cell) </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><a href=\"float/FFIELDColon\">FFIELD:</a>\t</td><td>a native float </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><a href=\"float/SFFIELDColon\">SFFIELD:</a>\t</td><td>a 32 bit float </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><a href=\"float/DFFIELDColon\">DFFIELD:</a>\t</td><td>a 64 bit float\n      </td></tr></tbody></table>\n      \n      </div>\n    <p>\n    Although this is a sufficient set, most systems provide\n    facilities to define field defining words for standard\n    data types.\n    \n    </p></div>\n  </div>\n<div class=\"secdef\">\n\n  <div class=\"secname\">Future:</div>\n  <div class=\"sec\">\n\n  The following cannot be defined until the required addressing\n    has been defined. The names should be considered reserved\n    until then.\n    <p>\n    </p><div class=\"center\">\n\n      <table class=\"center\">\n      <tbody><tr valign=\"top\"><td class=\"r\"><code>BFIELD:</code> </td><td>1 byte (8 bit) field </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><code>WFIELD:</code> </td><td>16 bit field </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><code>LFIELD:</code> </td><td>32 bit field </td></tr>\n      <tr valign=\"top\"><td class=\"r\"><code>XFIELD:</code> </td><td>64 bit field </td></tr>\n      <tr valign=\"top\"><td class=\"r\"></td></tr>\n      </tbody></table>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:EKEY\">\n  <div class=\"wordNumber\">A.10.6.2.1305</div>\n  <div class=\"wordName\">EKEY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    For some input devices, such as keyboards, more information is\n    available than can be returned by a single execution of\n    <a href=\"core/KEY\">KEY</a>.  <strong>EKEY</strong> provides a standard word to access a\n    system-dependent set of events.\n    <p>\n    <strong>EKEY</strong> and <a href=\"facility/EKEYq\">EKEY?</a> are implementation specific; no\n    assumption can be made regarding the interaction between the\n    pairs <strong>EKEY</strong>/<a href=\"facility/EKEYq\">EKEY?</a> and <a href=\"core/KEY\">KEY</a>/<a href=\"facility/KEYq\">KEY?</a>.\n    This standard does not define a timing relationship between\n    <a href=\"facility/KEYq\">KEY?</a> and <a href=\"facility/EKEYq\">EKEY?</a>.  Undefined results may be\n    avoided by using only one pairing of <a href=\"core/KEY\">KEY</a>/ <a href=\"facility/KEYq\">KEY?</a>\n    or <strong>EKEY</strong>/<a href=\"facility/EKEYq\">EKEY?</a> in a program for each input\n    stream.\n    </p><p>\n    <strong>EKEY</strong> assumes no particular numerical correspondence\n    between particular event code values and the values\n    representing standard characters.  On some systems, this may\n    allow two separate keys that correspond to the same standard\n    character to be distinguished from one another.  A standard\n    program may only interpret the results of <strong>EKEY</strong> via the\n    translation words provided for that purpose\n    (<a href=\"facility/EKEYtoCHAR\">EKEY&gt;CHAR</a> and <a href=\"facility/EKEYtoFKEY\">EKEY&gt;FKEY</a>).\n    </p><p>\n    See: <a href=\"rationale#rat:core:KEY\">A.6.1.1750 KEY</a>, <a href=\"facility/EKEYtoCHAR\">10.6.2.1306 EKEY&gt;CHAR</a> and\n    <a href=\"facility/EKEYtoFKEY\">10.6.2.1306.40 EKEY&gt;FKEY</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:EKEYtoCHAR\">\n  <div class=\"wordNumber\">A.10.6.2.1306</div>\n  <div class=\"wordName\">EKEY&gt;CHAR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>EKEY&gt;CHAR</strong> translates a keyboard event into the\n    corresponding member of the character set, if such a\n    correspondence exists for that event.\n    <p>\n    It is possible that several different keyboard events may\n    correspond to the same character, and other keyboard events\n    may correspond to no character.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:EKEYtoFKEY\">\n  <div class=\"wordNumber\">A.10.6.2.1306.40</div>\n  <div class=\"wordName\">EKEY&gt;FKEY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <a href=\"facility/EKEY\">EKEY</a> produces an abstract cell type for a keyboard\n    event (e.g., a keyboard scan code).  <strong>EKEY&gt;FKEY</strong> checks\n    if such an event corresponds to a special (non-graphic) key\n    press, and if so, returns a code for the special key press.\n    The encoding of special keys (returned by <strong>EKEY&gt;FKEY</strong>)\n    may be different from the encoding of these keys as keyboard\n    events (input to <strong>EKEY&gt;FKEY</strong>).\n    <p>\n    Typical Use:\n    </p><p>\n        </p><div class=\"quote\">\n\n      ... <a href=\"facility/EKEY\">EKEY</a> <strong>EKEY&gt;FKEY</strong> <a href=\"core/IF\">IF</a> <br>\n      &nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"facility/K-UP\">K-UP</a> <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"facility/K-FOne\">K-F1</a> <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"facility/K-LEFT\">K-LEFT</a> <a href=\"facility/K-SHIFT-MASK\">K-SHIFT-MASK</a> <a href=\"core/OR\">OR</a>\n      <a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a> <a href=\"core/OR\">OR</a>\n      <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n      <a href=\"core/ELSE\">ELSE</a> <br>\n      &nbsp;&nbsp; ... <br>\n      <a href=\"core/THEN\">THEN</a>\n      \n      </div>\n    <p>\n    The codes for the special keys are system-dependent, but this\n    standard provides words for getting the key codes for a number\n    of keys:\n    </p><p>\n    </p><div class=\"center\">\n\n      <table class=\"center\">\n      <tbody><tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n      <tr valign=\"top\"><td>Word </td><td>Key </td><td class=\"c\">&nbsp;&nbsp;&nbsp;&nbsp; </td><td>Word </td><td>Key </td></tr>\n      <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-FOne\">K-F1</a>\t\t</td><td>F1\t</td><td class=\"c\"></td><td><a href=\"facility/K-LEFT\">K-LEFT</a>\t</td><td>cursor left\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-FTwo\">K-F2</a>\t\t</td><td>F2\t</td><td class=\"c\"></td><td><a href=\"facility/K-RIGHT\">K-RIGHT</a>\t</td><td>cursor right\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F3\">K-F3</a>\t\t</td><td>F3\t</td><td class=\"c\"></td><td><a href=\"facility/K-UP\">K-UP</a>\t\t</td><td>cursor up\t\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F4\">K-F4</a>\t\t</td><td>F4\t</td><td class=\"c\"></td><td><a href=\"facility/K-DOWN\">K-DOWN</a>\t</td><td>cursor down\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F5\">K-F5</a>\t\t</td><td>F5\t</td><td class=\"c\"></td><td><a href=\"facility/K-HOME\">K-HOME</a>\t</td><td>home or Pos1\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F6\">K-F6</a>\t\t</td><td>F6\t</td><td class=\"c\"></td><td><a href=\"facility/K-END\">K-END</a>\t</td><td>End\t\t\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F7\">K-F7</a>\t\t</td><td>F7\t</td><td class=\"c\"></td><td><a href=\"facility/K-PRIOR\">K-PRIOR</a>\t</td><td>PgUp or Prior\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F8\">K-F8</a>\t\t</td><td>F8\t</td><td class=\"c\"></td><td><a href=\"facility/K-NEXT\">K-NEXT</a>\t</td><td>PgDn or Next\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-F9\">K-F9</a>\t\t</td><td>F9\t</td><td class=\"c\"></td><td><a href=\"facility/K-INSERT\">K-INSERT</a>\t</td><td>Insert\t\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-FOneZero\">K-F10</a>\t</td><td>F10\t</td><td class=\"c\"></td><td><a href=\"facility/K-DELETE\">K-DELETE</a>\t</td><td>Delete\t\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-FOneOne\">K-F11</a>\t</td><td>F11\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-FOneTwo\">K-F12</a>\t</td><td>F12\t</td></tr>\n      <tr valign=\"top\"><td colspan=\"5\"><hr></td></tr>\n      <tr valign=\"top\"><td></td></tr>\n      </tbody></table>\n      \n      </div>\n    <p>\n    In addition, you can get codes for shifted variants of these\n    keys by <a href=\"core/OR\">OR</a>ing with <a href=\"facility/K-SHIFT-MASK\">K-SHIFT-MASK</a>, <a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a>\n    and/or <a href=\"facility/K-ALT-MASK\">K-ALT-MASK</a>, e.g. <a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a>\n    <a href=\"facility/K-ALT-MASK\">K-ALT-MASK</a> <a href=\"core/OR\">OR</a> <a href=\"facility/K-DELETE\">K-DELETE</a> <a href=\"core/OR\">OR</a>.\n    The masks for the shift keys are:\n    </p><p>\n    </p><div class=\"center\">\n\n      <table class=\"center\">\n      <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n      <tr valign=\"top\"><td>Word \t\t\t\t</td><td>Key\t</td></tr>\n      <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-SHIFT-MASK\">K-SHIFT-MASK</a>\t</td><td>Shift\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a>\t</td><td>Ctrl\t</td></tr>\n      <tr valign=\"top\"><td><a href=\"facility/K-ALT-MASK\">K-ALT-MASK</a>\t</td><td>Alt\t</td></tr>\n      <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n      <tr valign=\"top\"><td></td></tr>\n      </tbody></table>\n      \n      </div>\n    <p>\n    Note that not all of these keys are available on all systems, and not\n    all combinations of keys and shift keys are available.  Therefore\n    programs should be written such that they continue to work (although\n    less conveniently or with less functionality) if these key combinations\n    cannot be produced.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:EMITq\">\n  <div class=\"wordNumber\">A.10.6.2.1325</div>\n  <div class=\"wordName\">EMIT?</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    An indefinite delay is a device related condition, such as\n    printer off-line, that requires operator intervention before\n    the device will accept new data.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:FIELD:\">\n  <div class=\"wordNumber\">A.10.6.2.1518</div>\n  <div class=\"wordName\">FIELD:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Create an aligned single-cell field in a data structure.\n    <p>\n    The various <em>x</em><code>FIELD:</code> words provide for different\n    alignment and size allocation.\n    </p><p>\n    The <em>x</em><code>FIELD:</code> words could be defined as:\n    </p><p>\n    </p><div class=\"tabbing\">\n      &nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> <strong>FIELD:</strong>   &nbsp;&nbsp;&nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ALIGNED\">ALIGNED</a>    1 <a href=\"core/CELLS\">CELLS</a>    <a href=\"facility/PlusFIELD\">+FIELD</a> <a href=\"core/Semi\">;</a> <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> <a href=\"facility/CFIELDColon\">CFIELD:</a>  &nbsp;&nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   1 <a href=\"core/CHARS\">CHARS</a>   &nbsp; <a href=\"facility/PlusFIELD\">+FIELD</a> <a href=\"core/Semi\">;</a> <br>\n      \n      &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <a href=\"float/FFIELDColon\">FFIELD:</a>  &nbsp;&nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FALIGNED\">FALIGNED</a>   1 <a href=\"float/FLOATS\">FLOATS</a>   <a href=\"facility/PlusFIELD\">+FIELD</a> <a href=\"core/Semi\">;</a> <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> <a href=\"float/SFFIELDColon\">SFFIELD:</a> &nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/SFALIGNED\">SFALIGNED</a>  1 <a href=\"float/SFLOATS\">SFLOATS</a>  <a href=\"facility/PlusFIELD\">+FIELD</a> <a href=\"core/Semi\">;</a> <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> <a href=\"float/DFFIELDColon\">DFFIELD:</a> &nbsp;( n1 \"name\" -- n2 ; addr1 -- addr2 )&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/DFALIGNED\">DFALIGNED</a>  1 <a href=\"float/DFLOATS\">DFLOATS</a>  <a href=\"facility/PlusFIELD\">+FIELD</a> <a href=\"core/Semi\">;</a>\n      \n      <br>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:MS\">\n  <div class=\"wordNumber\">A.10.6.2.1905</div>\n  <div class=\"wordName\">MS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Although their frequencies vary, every system has a clock.\n    Since many programs need to time intervals, this word is\n    offered. Use of milliseconds as an internal unit of time is\n    a practical \"least common denominator\" external unit. It\n    is assumed implementors will use \"clock ticks\" (whatever\n    size they are) as an internal unit and convert as appropriate.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:facility:TIMEandDATE\">\n  <div class=\"wordNumber\">A.10.6.2.2292</div>\n  <div class=\"wordName\">TIME&amp;DATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Most systems have a real-time clock/calendar.\n    This word gives portable access to it.\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.17\">A.17 The optional File-Access word set</h2> <!-- A.11 ================== -->\n\n<a name=\"rat:file\"></a>\n<p>\n\n</p><h3 id=\"subsection.A.17.3\">A.17.3 Additional usage requirements</h3> <!-- A.11.3 ======= -->\n\n<h4 id=\"subsubsection.A.17.3.2\">A.17.3.2 Blocks in files</h4> <!-- 11.3.2 ================== -->\nMany systems reuse file identifiers; when a file is closed, a\nsubsequently opened file may be given the same identifier. If the\noriginal file has blocks still in block buffers, these will be\nincorrectly associated with the newly opened file with disastrous\nresults. The block buffer system must be flushed to avoid this.\n<p>\n\n</p><h4 id=\"subsubsection.A.17.3.4\">A.17.3.4 Other transient regions</h4>\n<a name=\"rat:file:buffers\"></a>\n<p>\nAdditional transient buffers are provided for use by <a href=\"file/Sq\">S\"</a> and <a href=\"file/Seq\">S\\\"</a>.\nThe buffers should be able to store two consecutive strings, thus allowing the\ncommand line:\n</p><p>\n</p><div class=\"quote\">\n\n  <code><a href=\"file/Sq\">S\"</a> name1\" <a href=\"file/Sq\">S\"</a> name2\" <a href=\"file/RENAME-FILE\">RENAME-FILE</a></code>\n  \n  </div>\n<p>\nThe buffers may be implemented in a circular arrangement, where a string\nis placed into the next available buffer. When there are no buffers available,\nthe oldest buffer is overwritten.\n</p><p>\n<a href=\"file/Sq\">S\"</a> and <a href=\"file/Seq\">S\\\"</a> may share the same buffers.\n</p><p>\nThe list of words using memory in transient regions is extended to include\n<a href=\"file/Sq\">11.6.1.2165 S\"</a> and <a href=\"file/Seq\">11.6.2.2266 S\\\"</a>.\nSee <strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>.\n</p><p>\n\n</p><h3 id=\"subsection.A.17.6\">A.17.6 Glossary</h3> <!-- A.11.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:file:BIN\">\n  <div class=\"wordNumber\">A.11.6.1.0765</div>\n  <div class=\"wordName\">BIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Some operating systems require that files be opened in a\n    different mode to access their contents as an unstructured\n    stream of binary data rather than as a sequence of lines.\n    <p>\n    The arguments to <a href=\"file/READ-FILE\">READ-FILE</a> and <a href=\"file/WRITE-FILE\">WRITE-FILE</a> are\n    arrays of character storage elements, each element consisting\n    of at least 8 bits. The committee intends that, in\n    <strong>BIN</strong> mode, the contents of these storage elements can be\n    written to a file and later read back without alteration.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:CREATE-FILE\">\n  <div class=\"wordNumber\">A.11.6.1.1010</div>\n  <div class=\"wordName\">CREATE-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"file/Sq\">S\"</a> <code>TEST.FTH\"</code> <a href=\"file/RDivW\">R/W</a>\n    <strong>CREATE-FILE</strong>\n    <a href=\"core/ABORTq\">ABORT\"</a> <code>CREATE-FILE FAILED\"</code>\n    <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:INCLUDE-FILE\">\n  <div class=\"wordNumber\">A.11.6.1.1717</div>\n  <div class=\"wordName\">INCLUDE-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Here are two implementation alternatives for saving the input\n    source specification in the presence of text file input:\n    <p>\n    </p><ol style=\"list-style-type: decimal\">\n    <li> Save the file position (as returned by\n    <a href=\"file/FILE-POSITION\">FILE-POSITION</a>) of the beginning of the line being\n    interpreted. To restore the input source specification,\n    seek to that position and re-read the line into the input\n    buffer.\n    <p>\n    </p></li>\n    <li> Allocate a separate line buffer for each active text\n    input file, using that buffer as the input buffer. This\n    method avoids the \"seek and reread\" step, and allows the\n    use of \"pseudo-files\" such as pipes and other\n    sequential-access-only communication channels.\n    </li>\n</ol>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:INCLUDED\">\n  <div class=\"wordNumber\">A.11.6.1.1718</div>\n  <div class=\"wordName\">INCLUDED</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    ... <a href=\"file/Sq\">S\"</a> <code>filename\"</code> <strong>INCLUDED</strong> ...\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:OPEN-FILE\">\n  <div class=\"wordNumber\">A.11.6.1.1970</div>\n  <div class=\"wordName\">OPEN-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n    &nbsp;&nbsp; <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"file/Sq\">S\"</a> <code> TEST.FTH\"</code> <a href=\"file/RDivW\">R/W</a>\n    <strong>OPEN-FILE</strong>  <a href=\"core/ABORTq\">ABORT\"</a> <code>OPEN-FILE FAILED\"</code>\n    ... <a href=\"core/Semi\">;</a>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:READ-FILE\">\n  <div class=\"wordNumber\">A.11.6.1.2080</div>\n  <div class=\"wordName\">READ-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    A typical sequential file-processing algorithm might look like:\n        <div class=\"quote\">\n      <div class=\"tt\">\n\n        <div class=\"tabbing\">\n          <a href=\"core/BEGIN\">BEGIN</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> ) <br>\n          &nbsp;&nbsp;&nbsp; ... <a href=\"file/READ-FILE\">READ-FILE</a> <a href=\"exception/THROW\">THROW</a>\n          &nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"core/p\">(</a> length ) <br>\n          <a href=\"core/qDUP\">?DUP</a> <a href=\"core/WHILE\">WHILE</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> length ) <br>\n          &nbsp;&nbsp;&nbsp; ...\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"core/p\">(</a> ) <br>\n          <a href=\"core/REPEAT\">REPEAT</a>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> )\n          <br>\n          \n          </div>\n        \n        </div>\n      </div>In this example, <a href=\"exception/THROW\">THROW</a> is used to handle\n    exception conditions, which are reported as\n    non-zero values of the <em>ior</em> return value from\n    <strong>READ-FILE</strong>. End-of-file is reported as a zero value of\n    the \"length\" return value.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:READ-LINE\">\n  <div class=\"wordNumber\">A.11.6.1.2090</div>\n  <div class=\"wordName\">READ-LINE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Implementations are allowed to store the line terminator in\n    the memory buffer in order to allow the use of line reading\n    functions provided by host operating systems, some of which\n    store the terminator. Without this provision, a transient\n    buffer might be needed. The two-character limitation is\n    sufficient for the vast majority of existing operating\n    systems. Implementations on host operating systems whose line\n    terminator sequence is longer than two characters may have to\n    take special action to prevent the storage of more than two\n    terminator characters.\n    <p>\n    Standard Programs may not depend on the presence of any such\n    terminator sequence in the buffer.\n    </p><p>\n    A typical line-oriented sequential file-processing algorithm\n    might look like:\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n\n        <div class=\"tabbing\">\n          <a href=\"core/BEGIN\">BEGIN</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> ) <br>\n          &nbsp;&nbsp;&nbsp; ... <a href=\"file/READ-LINE\">READ-LINE</a> <a href=\"exception/THROW\">THROW</a>\n          &nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"core/p\">(</a> length not-eof-flag ) <br>\n          <a href=\"core/WHILE\">WHILE</a> \t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> length ) <br>\n          &nbsp;&nbsp;&nbsp; ...\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t <a href=\"core/p\">(</a> ) <br>\n          <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/DROP\">DROP</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> ) <br>\n          \n          </div>\n        \n        </div>\n      </div><strong>READ-LINE</strong> needs a separate end-of-file flag because\n    empty (zero-length) lines are a routine occurrence, so a\n    zero-length line cannot be used to signify end-of-file.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:Sq\">\n  <div class=\"wordNumber\">A.11.6.1.2165</div>\n  <div class=\"wordName\">S\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    ... <strong>S\"</strong> <em>ccc</em><code>\"</code> ...\n    <p>\n    The interpretation semantics for <strong>S\"</strong> are intended to\n    provide a simple mechanism for entering a string in the\n    interpretation state. Since an implementation may choose to\n    provide only one buffer for interpreted strings, an\n    interpreted string is subject to being overwritten by the\n    next execution of <strong>S\"</strong> in interpretation state. It is\n    intended that no standard words other than <strong>S\"</strong> should\n    in themselves cause the interpreted string to be overwritten.\n    However, since words such as <a href=\"core/EVALUATE\">EVALUATE</a>,\n    <a href=\"block/LOAD\">LOAD</a>, <a href=\"file/INCLUDE-FILE\">INCLUDE-FILE</a> and\n    <a href=\"file/INCLUDED\">INCLUDED</a> can result in the interpretation of arbitrary\n    text, possibly including instances of <strong>S\"</strong>, the\n    interpreted string may be invalidated by some uses of these\n    words.\n    </p><p>\n    When the possibility of overwriting a string can arise, it is\n    prudent to copy the string to a \"safe\" buffer allocated by\n    the application.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:INCLUDE\">\n  <div class=\"wordNumber\">A.11.6.2.1714</div>\n  <div class=\"wordName\">INCLUDE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <strong>INCLUDE</strong> <code>filename</code>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:REQUIRE\">\n  <div class=\"wordNumber\">A.11.6.2.2144.10</div>\n  <div class=\"wordName\">REQUIRE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <strong>REQUIRE</strong> <code>filename</code>\n      \n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:file:REQUIRED\">\n  <div class=\"wordNumber\">A.11.6.2.2144.50</div>\n  <div class=\"wordName\">REQUIRED</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n        <div class=\"quote\">\n\n      <a href=\"file/Sq\">S\"</a> <code>filename\"</code> <strong>REQUIRED</strong>\n      \n      </div>\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.19\">A.19 The optional Floating-Point word set</h2> <!-- A.12 =============== -->\n\n<a name=\"rat:float\"></a>\n<p>\nThe current base for floating-point input must be <a href=\"core/DECIMAL\">DECIMAL</a>.\nFloating-point input is not allowed in an arbitrary base. All\nfloating-point numbers to\nbe interpreted by a standard system must contain the exponent\nindicator \"<code>E</code>\" (see <strong><a href=\"float#float:conv\">12.3.7 Text interpreter input number conversion</a></strong>). Consensus in the committee deemed\nthis form of floating-point input to be in more common use than\nthe alternative that would have a floating-point input mode that\nwould allow numbers with embedded decimal points to be treated\nas floating-point numbers.\n</p><p>\nAlthough the format and precision of the significand and the format\nand range of the exponent of a floating-point number are\nimplementation defined in Forth-2012, the Floating-Point\nExtensions word set contains the words\n<a href=\"float/DFFetch\">DF@</a>, <a href=\"float/SFFetch\">SF@</a>, <a href=\"float/DFStore\">DF!</a>, and <a href=\"float/SFStore\">SF!</a>\nfor fetching and storing double- and single-precision IEEE\nfloating-point-format numbers to memory. The IEEE floating-point\nformat is commonly used by numeric math co-processors and for\nexchange of floating-point data between programs and systems.\n</p><p>\n\n</p><h3 id=\"subsection.A.19.3\">A.19.3 Additional usage requirements</h3> <!-- A.12.3 ======= -->\n\n<h4 id=\"subsubsection.A.19.3.5\">A.19.3.5 Address alignment</h4> <!-- A.12.3.5 ============== -->\nIn defining custom floating-point data structures, be aware that\n<a href=\"core/CREATE\">CREATE</a> doesn't necessarily leave the data space pointer\naligned for various floating-point data types. Programs may comply\nwith the requirement for the various kinds of floating-point alignment\nby specifying the appropriate alignment both at compile-time and\nexecution time. For example:\n<p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"float/FCONSTANT\">FCONSTANT</a> <a href=\"core/p\">(</a> F: r -- ) <br>\n    &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> <a href=\"float/FALIGN\">FALIGN</a>  <a href=\"core/HERE\">HERE</a> \n    1 <a href=\"float/FLOATS\">FLOATS</a> <a href=\"core/ALLOT\">ALLOT</a>  <a href=\"float/FStore\">F!</a> <br>\n    &nbsp;&nbsp; <a href=\"core/DOES\">DOES&gt;</a> <a href=\"core/p\">(</a> F: -- r )\n     <a href=\"float/FALIGNED\">FALIGNED</a> <a href=\"float/FFetch\">F@</a> <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n<p>\n\n</p><h4 id=\"subsubsection.A.19.3.7\">A.19.3.7 Text interpreter input number conversion</h4> <!-- A.12.3.7 -->\nThe committee has more than once received the suggestion that the\ntext interpreter in standard Forth systems should treat numbers\nthat have an embedded decimal point, but no exponent, as\nfloating-point numbers rather than double cell numbers. This\nsuggestion, although it has merit, has always been voted down because\nit would break too much existing code; many existing implementations\nput the full digit string on the stack as a double number and use\nother means to inform the application of the location of the decimal\npoint.\n<p>\n\n</p><h3 id=\"subsection.A.19.6\">A.19.6 Glossary</h3> <!-- A.12.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:float:toFLOAT\">\n  <div class=\"wordNumber\">A.12.6.1.0558</div>\n  <div class=\"wordName\">&gt;FLOAT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>&gt;FLOAT</strong> enables programs to read floating-point data in\n    legible ASCII format. It accepts a much broader syntax than\n    does the text interpreter since the latter defines rules for\n    composing source programs whereas <strong>&gt;FLOAT</strong> defines rules\n    for accepting data. <strong>&gt;FLOAT</strong> is defined as broadly as is\n    feasible to permit input of data from Forth-2012 systems\n    as well as other widely used standard programming environments.\n    <p>\n    This is a synthesis of common FORTRAN practice. Embedded spaces\n    are explicitly forbidden in much scientific usage, as are other\n    field separators such as comma or slash.\n    </p><p>\n    While <strong>&gt;FLOAT</strong> is not required to treat a string of blanks\n    as zero, this behavior is strongly encouraged, since a future\n    version of this standard may include such a requirement.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:FCONSTANT\">\n  <div class=\"wordNumber\">A.12.6.1.1492</div>\n  <div class=\"wordName\">FCONSTANT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use: <code>r</code> <strong>FCONSTANT</strong> <em>name</em>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:FLITERAL\">\n  <div class=\"wordNumber\">A.12.6.1.1552</div>\n  <div class=\"wordName\">FLITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>X</code> ...\n    <a href=\"core/Bracket\">[</a> ... <a href=\"core/p\">(</a> r ) <a href=\"right-bracket\">]</a>\n    <strong>FLITERAL</strong> ...\n    <a href=\"core/Semi\">;</a>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:FVARIABLE\">\n  <div class=\"wordNumber\">A.12.6.1.1630</div>\n  <div class=\"wordName\">FVARIABLE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <strong>FVARIABLE</strong> <em>name</em>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:REPRESENT\">\n  <div class=\"wordNumber\">A.12.6.1.2143</div>\n  <div class=\"wordName\">REPRESENT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    This word provides a primitive for floating-point display.\n    Some floating-point formats, including those specified by\n    IEEE-754, allow representations of numbers outside of an\n    implementation-defined range. These include plus and minus\n    infinities, denormalized numbers, and others. In these cases\n    we expect that <strong>REPRESENT</strong> will usually be implemented\n    to return appropriate character strings, such as \"+infinity\"\n    or \"nan\", possibly truncated.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:Fd\">\n  <div class=\"wordNumber\">A.12.6.2.1427</div>\n  <div class=\"wordName\">F.</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    For example, <code>1E3</code> <strong>F.</strong> displays <code>1000.</code>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:FATAN2\">\n  <div class=\"wordNumber\">A.12.6.2.1489</div>\n  <div class=\"wordName\">FATAN2</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <a href=\"float/FSINCOS\">FSINCOS</a> and <strong>FATAN2</strong> are a complementary pair of\n    operators which convert angles to 2-vectors and vice-versa.\n    They are essential to most geometric and physical applications\n    since they correctly and unambiguously handle this conversion\n    in all cases except null vectors, even when the tangent of the\n    angle would be infinite.\n    <p>\n    <a href=\"float/FSINCOS\">FSINCOS</a> returns a Cartesian unit vector in the direction\n    of the given angle, measured counter-clockwise from the positive\n    X-axis. The order of results on the stack, namely <em>y</em> underneath\n    <em>x</em>, permits the 2-vector data type to be additionally viewed\n    and used as a ratio approximating the tangent of the angle.\n    Thus the phrase <a href=\"float/FSINCOS\">FSINCOS</a> <a href=\"float/FDiv\">F/</a> is functionally\n    equivalent to <a href=\"float/FTAN\">FTAN</a>, but is useful over only a limited\n    and discontinuous range of angles, whereas <a href=\"float/FSINCOS\">FSINCOS</a> and\n    <strong>FATAN2</strong> are useful for all angles.\n    </p><p>\n    The argument order for <strong>FATAN2</strong> is the same, converting a\n    vector in the conventional representation to a scalar angle.\n    Thus, for all angles, <a href=\"float/FSINCOS\">FSINCOS</a> <strong>FATAN2</strong> is an identity\n    within the accuracy of the arithmetic and the argument range of\n    <a href=\"float/FSINCOS\">FSINCOS</a>. Note that while <a href=\"float/FSINCOS\">FSINCOS</a> always returns a\n    valid unit vector, <strong>FATAN2</strong> will accept any non-null vector.\n    An ambiguous condition exists if the vector argument to\n    <strong>FATAN2</strong> has zero magnitude.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:FEXPM1\">\n  <div class=\"wordNumber\">A.12.6.2.1516</div>\n  <div class=\"wordName\">FEXPM1</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    This function allows accurate computation when its arguments\n    are close to zero, and provides a useful base for the standard\n    exponential functions. Hyperbolic functions such as\n    <span class=\"sf\">sinh(<em>x</em>)</span> can be efficiently and accurately\n    implemented by using <strong>FEXPM1</strong>; accuracy is lost in this\n    function for small values of <em>x</em> if the word <a href=\"float/FEXP\">FEXP</a> is\n    used.\n    <p>\n    An important application of this word is in finance; say a loan\n    is repaid at 15% per year; what is the daily rate? On a computer\n    with single-precision (six decimal digit) accuracy:\n    </p><p>\n    </p><ol style=\"list-style-type: decimal\">\n    <li> Using <a href=\"float/FLN\">FLN</a> and <a href=\"float/FEXP\">FEXP</a>:\n    <a href=\"float/FLN\">FLN</a> of 1.15 = 0.139762, <br>\n    divide by 365 = 3.82910E-4, <br>\n    form the exponent using <a href=\"float/FEXP\">FEXP</a> = 1.00038, and <br>\n    subtract one (1) and convert to percentage = 0.038%.\n    </li>\n</ol>\n    Thus we only have two-digit accuracy.\n    <ol style=\"list-style-type: decimal\">\n    <li> Using <a href=\"float/FLNPOne\">FLNP1</a> and <strong>FEXPM1</strong>:\n    <a href=\"float/FLNPOne\">FLNP1</a> of 0.15 = 0.139762, (this is the same value\n    as in the first example, although with the argument closer\n    to zero it may not be so) <br>\n    divide by 365 = 3.82910E-4, <br>\n    form the exponent and subtract one (1) using\n    <strong>FEXPM1</strong> = 3.82983E-4, and <br>\n    convert to percentage = 0.0382983%.\n    </li>\n</ol>\n    This calculation method allows the hyperbolic functions to be\n    computed with six-digit accuracy. For example, <span class=\"sf\">sinh</span>\n    can be defined as:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"float/FSINH\">FSINH</a>  <a href=\"core/p\">(</a> r1 -- r2 ) <br>\n        &nbsp;&nbsp; <strong>FEXPM1</strong>  <a href=\"float/FDUP\">FDUP</a> \n        <a href=\"float/FDUP\">FDUP</a> 1.0E0 <a href=\"float/FPlus\">F+</a>  <a href=\"float/FDiv\">F/</a>  <a href=\"float/FPlus\">F+</a> \n        2.0E0 <a href=\"float/FDiv\">F/</a>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:FLNP1\">\n  <div class=\"wordNumber\">A.12.6.2.1554</div>\n  <div class=\"wordName\">FLNP1</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    This function allows accurate compilation when its arguments\n    are close to zero, and provides a useful base for the standard\n    logarithmic functions. For example, <a href=\"float/FLN\">FLN</a> can be\n    implemented as:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"float/FLN\">FLN</a>  \n        1.0E0 <a href=\"float/FMinus\">F-</a>   <strong>FLNP1</strong>\n        <a href=\"core/Semi\">;</a>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n<div class=\"secdef\">\n\n  <div class=\"secname\">See:</div>\n  <div class=\"sec\">\n\n <a href=\"rationale#rat:float:FEXPM1\">A.12.6.2.1516 FEXPM1</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:float:Ftilde\">\n  <div class=\"wordNumber\">A.12.6.2.1640</div>\n  <div class=\"wordName\">F~</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    This provides the three types of \"floating point equality\"\n    in common use — \"close\" in absolute terms, exact equality\n    as represented, and \"relatively close\".\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.21\">A.21 The optional Locals word set</h2> <!-- A.13 ======================= -->\n\n<a name=\"rat:locals\"></a>\n<p>\n\n</p><h3 id=\"subsection.A.21.3\">A.21.3 Additional usage requirements</h3> <!-- A.13.3 ======= -->\nRule <a href=\"locals#locals:rules\">13.3.3.2</a>d could be relaxed without affecting the\nintegrity of the rest of this structure. <a href=\"locals#locals:rules\">13.3.3.2</a>c could\nnot be.\n<p>\n<a href=\"locals#locals:rules\">13.3.3.2</a>b forbids the use of the data stack for local\nstorage because no usage rules have been articulated for programmer\nusers in such a case. Of course, if the data stack is somehow employed\nin such a way that there are no usage rules, then the locals are\ninvisible to the programmer, are logically not on the stack, and the\nimplementation conforms.\n</p><p>\nAccess to previously declared local variables is prohibited by Section\n<a href=\"locals#locals:rules\">13.3.3.2</a>d until any data placed onto the return stack by the\napplication has been removed, due to the possible use of the return\nstack for storage of locals.\n</p><p>\nAuthorization for a Standard Program to manipulate the return stack\n(e.g., via <a href=\"core/toR\">&gt;R</a> <a href=\"core/Rfrom\">R&gt;</a>) while local variables\nare active overly constrains implementation possibilities. The consensus\nof users of locals was that Local facilities represent an effective\nfunctional replacement for return stack manipulation, and restriction\nof standard usage to only one method was reasonable.\n</p><p>\nAccess to Locals within <a href=\"core/DO\">DO</a>...<a href=\"core/LOOP\">LOOP</a>s is\nexpressly permitted as an additional requirement of conforming systems\nby Section <a href=\"locals#locals:rules\">13.3.3.2</a>g. Although words, such as <a href=\"locals/LOCAL\">(LOCAL)</a>,\nwritten by a System Implementor, may require inside knowledge of the\ninternal structure of the return stack, such knowledge is not required\nof a user of compliant Forth systems.\n</p><p>\n\n</p><h3 id=\"subsection.A.21.6\">A.21.6 Glossary</h3> <!-- A.13.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:locals:b:\">\n  <div class=\"wordNumber\">A.13.6.2.2550</div>\n  <div class=\"wordName\">{:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The Forth 94 Technical Committee was unable to identify any\n    common practice for locals.  It provided a way to define locals\n    and a method of parsing them in the hope that a common practice\n    would emerge.\n    <p>\n    Since then, common practice has emerged.  Most implementations that\n    provide <a href=\"locals/LOCAL\">(LOCAL)</a> and  <a href=\"locals/LOCALS\">LOCALS|</a> also provide some form of the\n    { ... } notation; however, the phrase { ... } conflicts with\n    other systems.  The <strong>{:</strong> ... <code>:}</code> notation is a compromise\n    to avoid name conflicts.\n    </p><p>\n    The notation provides for different kinds of local: those that are\n    initialized from the data stack at run-time, uninitialized locals, and\n    outputs.  Initialized locals are separated from uninitialized locals by\n    `<code>|</code>'.  The definition of locals is terminated by\n    `<code>--</code>' or `<code>:}</code>'.\n    </p><p>\n    All text between `<code>--</code>' and `<code>:}</code>' is ignored.  This eases\n    documentation by allowing a complete stack comment in the locals definition.\n    </p><p>\n    The `<code>|</code>' (ASCII $7C) character is widely used as the\n    separator between local arguments and local values.  Some implementations\n    have used `<code>\\</code>' (ASCII $5C) or `<code>¦</code>' ($A6).\n    Systems are free to continue to provide these alternative separators.\n    However, only the recognition of the `<code>|</code>' separator is\n    mandatory. Therefore portable programs must use the `<code>|</code>'\n    separator.\n    </p><p>\n    A number of systems extend the locals notation in various ways.  Some of\n    these extensions may emerge as common practice.  This standard has reserved\n    the notation used by these extensions to avoid difficulties when porting\n    code to these systems.  In particular local names ending in\n    `<code>:</code>' (colon),\n    `<code>[</code>' (open bracket), or\n    `<code>^</code>' (caret) are reserved.\n    \n    </p></div>\n  </div>\n<p>\n</p><h2 id=\"section.A.23\">A.23 The optional Memory-Allocation word set</h2> <!-- A.14 ============ -->\n\n<a name=\"rat:memory\"></a>\n<p>\nThe Memory-Allocation word set provides a means for acquiring memory\nother than the contiguous data space that is allocated by <a href=\"core/ALLOT\">ALLOT</a>.\nIn many operating system environments it is inappropriate for a process\nto pre-allocate large amounts of contiguous memory (as would be\nnecessary for the use of <a href=\"core/ALLOT\">ALLOT</a>).  The Memory-Allocation word set\ncan acquire memory from the system at any time, without knowing in\nadvance the address of the memory that will be acquired.\n</p><p>\n</p><h2 id=\"section.A.24\">A.24 The optional Programming-Tools word set</h2> <!-- A.15 ============ -->\n\n<a name=\"rat:tools\"></a>\n<p>\nThese words have been in widespread common use since the earliest\nForth systems.\n</p><p>\nAlthough there are environmental dependencies intrinsic to programs\nusing an assembler, virtually all Forth systems provide such a\ncapability. Insofar as many Forth programs are intended for real-time\napplications and are intrinsically non-portable for this reason, the\ncommittee believes that providing a standard window into\nassemblers is a useful contribution to Forth programmers.\n</p><p>\nSimilarly, the programming aids <a href=\"tools/DUMP\">DUMP</a>, etc., are valuable tools\neven though their specific formats will differ between CPUs and Forth\nimplementations. These words are primarily intended for use by the\nprogrammer, and are rarely invoked in programs.\n</p><p>\nOne of the original aims of Forth was to erase the boundary between\n\"user\" and \"programmer\" — to give all possible power to anyone\nwho had occasion to use a computer. Nothing in the above labeling or\nremarks should be construed to mean that this goal has been abandoned.\n</p><p>\n\n</p><h4 id=\"subsubsection.A.24.3.1\">A.24.3.1 Name tokens</h4>\n<a name=\"rat:tools:nt\"></a>\n<p>\nName tokens are an abstract data type identifying named words.\nYou can use words such as <a href=\"tools/NAMEtoSTRING\">NAME&gt;STRING</a> to get information\nout of name tokens.\n</p><p>\n\n</p><h3 id=\"subsection.A.24.6\">A.24.6 Glossary</h3> <!-- A.15.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:tools:.S\">\n  <div class=\"wordNumber\">A.15.6.1.0220</div>\n  <div class=\"wordName\">.S</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>.S</strong> is a debugging convenience found on almost\n    all Forth systems. It is universally mentioned in Forth texts.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:SEE\">\n  <div class=\"wordNumber\">A.15.6.1.2194</div>\n  <div class=\"wordName\">SEE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>SEE</strong> acts as an on-line form of documentation of\n    words, allowing modification of words by decompiling and\n    regenerating with appropriate changes.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:WORDS\">\n  <div class=\"wordNumber\">A.15.6.1.2465</div>\n  <div class=\"wordName\">WORDS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>WORDS</strong> is a debugging convenience found on almost\n    all Forth systems. It is universally referred to in Forth texts.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:;CODE\">\n  <div class=\"wordNumber\">A.15.6.2.0470</div>\n  <div class=\"wordName\">;CODE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <a href=\"core/Colon\">:</a> <code>namex</code>\n    ... &lt;<em>create</em>&gt; ...\n    <strong>;CODE</strong> ...\n    <p>\n    where <code>namex</code> is a defining word, and &lt;<em>create</em>&gt; is\n    <a href=\"core/CREATE\">CREATE</a> or any user defined word that calls\n    <a href=\"core/CREATE\">CREATE</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:CODE\">\n  <div class=\"wordNumber\">A.15.6.2.0930</div>\n  <div class=\"wordName\">CODE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Some Forth systems implement the assembly function by adding\n    an <a href=\"tools/ASSEMBLER\">ASSEMBLER</a> word list to the search order,\n    using the text interpreter to parse a postfix assembly\n    language with lexical characteristics similar to Forth source\n    code. Typically, in such systems, assembly ends when a word\n    <code>END-CODE</code> is interpreted.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:CS-PICK\">\n  <div class=\"wordNumber\">A.15.6.2.1015</div>\n  <div class=\"wordName\">CS-PICK</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The intent is to copy a <em>dest</em> on the control-flow\n    stack so that it can be resolved more than once. For example:\n    \n        <div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/bs\">\\</a> Conditionally transfer control to beginning of <br>\n        <a href=\"core/bs\">\\</a> loop.  This is similar in spirit to C's \"continue\" <br>\n        <a href=\"core/bs\">\\</a> statement.\n        <p>\n        <a href=\"core/Colon\">:</a> ?REPEAT   <a href=\"core/p\">(</a> dest -- dest ) <a href=\"core/bs\">\\</a> Compilation <br>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> flag -- ) &nbsp;&nbsp; <a href=\"core/bs\">\\</a> Execution <br>\n        &nbsp;&nbsp; 0 <a href=\"tools/CS-PICK\">CS-PICK</a>   <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/UNTIL\">UNTIL</a> <br>\n        <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n        </p><p>\n        <a href=\"core/Colon\">:</a> XX <a href=\"core/p\">(</a> -- ) <a href=\"core/bs\">\\</a> Example use of ?REPEAT <br>\n        &nbsp;&nbsp; <a href=\"core/BEGIN\">BEGIN</a> <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n        &nbsp;&nbsp; flag ?REPEAT <a href=\"core/p\">(</a> Go back to BEGIN if flag is false ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n        &nbsp;&nbsp; flag ?REPEAT <a href=\"core/p\">(</a> Go back to BEGIN if flag is false ) <br>\n        &nbsp;&nbsp;&nbsp;&nbsp; ... <br>\n        &nbsp;&nbsp; flag <a href=\"core/UNTIL\">UNTIL</a>   <a href=\"core/p\">(</a> Go back to BEGIN if flag is false ) <br>\n        <a href=\"core/Semi\">;</a>\n        \n        </p></div>\n      </div>\n    \n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:CS-ROLL\">\n  <div class=\"wordNumber\">A.15.6.2.1020</div>\n  <div class=\"wordName\">CS-ROLL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The intent is to modify the order in which the <em>orig</em>s\n    and <em>dest</em>s on the control-flow stack are to be resolved\n    by subsequent control-flow words. For example, <a href=\"core/WHILE\">WHILE</a>\n    could be implemented in terms of <a href=\"core/IF\">IF</a> and\n    <strong>CS-ROLL</strong>, as follows:\n    <p>\n    \n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"core/WHILE\">WHILE</a>   <a href=\"core/p\">(</a> dest -- orig dest ) <br>\n        &nbsp;&nbsp; <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/IF\">IF</a>   1 <a href=\"tools/CS-ROLL\">CS-ROLL</a> <br>\n        <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n        \n        </div>\n      </div>\n    \n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:FORGET\">\n  <div class=\"wordNumber\">A.15.6.2.1580</div>\n  <div class=\"wordName\">FORGET</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    ... <strong>FORGET</strong> <em>name</em> ...\n    <p>\n    <strong>FORGET</strong> <em>name</em> tries to infer the previous dictionary\n    state from <em>name</em>; this is not always possible.  As a\n    consequence, <strong>FORGET</strong> <em>name</em> removes <em>name</em> and\n    all following words in the name space.\n    </p><p>\n    See <a href=\"rationale#rat:core:MARKER\">A.6.2.1850 MARKER</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:NtoR\">\n  <div class=\"wordNumber\">A.15.6.2.1908</div>\n  <div class=\"wordName\">N&gt;R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    An implementation may store the stack items in any manner.  It may\n    store them on the return stack, in any order.  A stack-constrained\n    system may prefer to use a buffer to store the items and place a\n    reference to the buffer on the return stack.\n    <p>\n    \n    </p></div>\n  </div>\n<div class=\"secdef\">\n\n  <div class=\"secname\">See:</div>\n  <div class=\"sec\">\n\n <a href=\"core/SAVE-INPUT\">6.2.2182 SAVE-INPUT</a>,\n    <a href=\"core/RESTORE-INPUT\">6.2.2148 RESTORE-INPUT</a>,\n    <a href=\"search/GET-ORDER\">16.6.1.1647 GET-ORDER</a>, \n    <a href=\"search/SET-ORDER\">16.6.1.2197 SET-ORDER</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:NAMEtoCOMPILE\">\n  <div class=\"wordNumber\">A.15.6.2.1909.10</div>\n  <div class=\"wordName\">NAME&gt;COMPILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    In a traditional <em>xt</em>+immediate-flag system, the\n    <em>x xt</em> returned by <strong>NAME&gt;COMPILE</strong> is\n    typically <em>xt1 xt2</em>, where <em>xt1</em> is the\n    <em>xt</em> of the word under consideration, and\n    <em>xt2</em> is the <em>xt</em> of <a href=\"core/EXECUTE\">EXECUTE</a>\n    (for immediate words) or <a href=\"core/COMPILEComma\">COMPILE,</a> (for words\n    with default compilation semantics).\n    <p>\n    If you want to <a href=\"core/POSTPONE\">POSTPONE</a> <em>nt</em>, you can\n    do so with\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<strong>NAME&gt;COMPILE</strong> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/POSTPONE\">POSTPONE</a>\n        <a href=\"core/LITERAL\">LITERAL</a> <a href=\"core/COMPILEComma\">COMPILE,</a>\n        \n        </div>\n      </div>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:TRAVERSE-WORDLIST\">\n  <div class=\"wordNumber\">A.15.6.2.2297</div>\n  <div class=\"wordName\">TRAVERSE-WORDLIST</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    <p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> WORDS-COUNT <a href=\"core/p\">(</a> x nt – x' f )\n        <a href=\"core/DROP\">DROP</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/TRUE\">TRUE</a>\n        <a href=\"core/Semi\">;</a>\n        <br>\n        0 <a href=\"core/Tick\">'</a> WORDS-COUNT\n        <a href=\"search/FORTH-WORDLIST\">FORTH-WORDLIST</a>\n        <strong>TRAVERSE-WORDLIST</strong> <a href=\"core/d\">.</a>\n        \n        </div>\n      </div>\n    <p>\n    prints a count of the number of words in the <a href=\"search/FORTH-WORDLIST\">FORTH-WORDLIST</a>.\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> ALL-WORDS\n        <a href=\"tools/NAMEtoSTRING\">NAME&gt;STRING</a> <a href=\"core/CR\">CR</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/TRUE\">TRUE</a>\n        <a href=\"core/Semi\">;</a>\n        <br>\n        <a href=\"core/Tick\">'</a> ALL-WORDS\n        <a href=\"search/GET-CURRENT\">GET-CURRENT</a>\n        <strong>TRAVERSE-WORDLIST</strong>\n        \n        </div>\n      </div>\n    <p>\n    prints the names of words in the current compilation wordlist.\n    </p><p>\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> CONTAINS-STRING <br>\n        &nbsp;&nbsp; \t\t\t<a href=\"tools/NAMEtoSTRING\">NAME&gt;STRING</a> <a href=\"core/TwoOVER\">2OVER</a>\n        <a href=\"string/SEARCH\">SEARCH</a> <a href=\"core/IF\">IF</a>\n        <a href=\"core/CR\">CR</a> <a href=\"core/TYPE\">TYPE</a>\n        <a href=\"core/THEN\">THEN</a> <a href=\"core/FALSE\">FALSE</a> <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/Sq\">S\"</a> COM\" <a href=\"core/Tick\">'</a> CONTAINS-STRING\n        <a href=\"search/GET-CURRENT\">GET-CURRENT</a> <strong>TRAVERSE-WORDLIST</strong>\n        \n        </div>\n      </div>\n    <p>\n    prints the name of a word containing the string\n    \"COM\", if it exists, and then terminates.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:[ELSE]\">\n  <div class=\"wordNumber\">A.15.6.2.2531</div>\n  <div class=\"wordName\">[ELSE]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    ... <em>flag</em>\n    <a href=\"tools/BracketIF\">[IF]</a> ...\n    <strong>[ELSE]</strong> ...\n    <a href=\"tools/BracketTHEN\">[THEN]</a> ...\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:[IF]\">\n  <div class=\"wordNumber\">A.15.6.2.2532</div>\n  <div class=\"wordName\">[IF]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    ... <em>flag</em>\n    <strong>[IF]</strong> ...\n    <a href=\"tools/BracketELSE\">[ELSE]</a> ...\n    <a href=\"tools/BracketTHEN\">[THEN]</a> ...\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:tools:[THEN]\">\n  <div class=\"wordNumber\">A.15.6.2.2533</div>\n  <div class=\"wordName\">[THEN]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Typical use:\n    ... <em>flag</em>\n    <a href=\"tools/BracketIF\">[IF]</a> ...\n    <a href=\"tools/BracketELSE\">[ELSE]</a> ...\n    <strong>[THEN]</strong> ...\n    <p>\n    Software that runs in several system environments often\n    contains some source code that is environmentally dependent.\n    Conditional compilation — the selective inclusion or\n    exclusion of portions of the source code at compile time —\n    is one technique that is often used to assist in the\n    maintenance of such source code.\n    </p><p>\n    Conditional compilation is sometimes done with \"smart\n    comments\" — definitions that either skip or do not skip\n    the remainder of the line based on some test. For example:\n    </p><p>\n    \n        </p><div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/bs\">\\</a> If 16-Bit? contains TRUE, lines preceded by 16BIT\\ <br>\n        <a href=\"core/bs\">\\</a> will be skipped. Otherwise, they will not be skipped.\n        <p>\n        <a href=\"core/VARIABLE\">VARIABLE</a> 16-BIT?\n        </p><p>\n        <a href=\"core/Colon\">:</a> 16BIT\\  <a href=\"core/p\">(</a> -- )  \n        16-BIT? <a href=\"core/Fetch\">@</a>  \n        <a href=\"core/IF\">IF</a>   <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/bs\">\\</a>   <a href=\"core/THEN\">THEN</a> <br>\n        <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n        \n        </p></div>\n      </div>\n    This technique works on a line by line basis, and is good for\n    short, isolated variant code sequences.\n    <p>\n    More complicated conditional compilation problems suggest a\n    nestable method that can encompass more than one source line\n    at a time. The words included in the optional Programming tools\n    extensions word set are useful for this purpose.\n    \n    </p></div>\n  </div>\n<p>\n</p><h2 id=\"section.A.26\">A.26 The optional Search-Order word set</h2> <!-- A.16 ================= -->\n\n<a name=\"rat:search\"></a>\n<p>\nThe search-order word set is intended to be a portable \"construction\nset\" from which search-order words may be built.  <a href=\"search/ALSO\">ALSO</a>/<a href=\"search/ONLY\">ONLY</a>\nor the various \"vocabulary\" schemes supported by the major Forth\nvendors can be defined in terms of the primitive search-order word set.\n</p><p>\nThe encoding for word list identifiers <em>wid</em> might be a\nsmall-integer index into an array of word-list definition records, the\ndata-space address of such a record, a user-area offset, the execution\ntoken of a sealed vocabulary, the link-field address of the first definition\nin a word list, or anything else. It is entirely up to the system implementor.\n</p><p>\n\n</p><h3 id=\"subsection.A.26.2\">A.26.2 Additional terms and notation</h3> <!-- A.16.2 ================= -->\n<dl class=\"desc\">\n<dt>search order</dt><dd>  \nNote that the use of the term \"list\" does not necessarily\nimply implementation as a linked list\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n\n</p><h3 id=\"subsection.A.26.3\">A.26.3 Additional usage requirements</h3> <!-- A 16.3 ============ -->\n\n<h4 id=\"subsubsection.A.26.3.3\">A.26.3.3 Finding definition names</h4> <!-- A.16.3.3 ======= -->\nIn other words, the following is not guaranteed to work:\n<p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n<a href=\"core/Colon\">:</a> FOO ...\n    <a href=\"core/Bracket\">[</a> ... <a href=\"search/SET-CURRENT\">SET-CURRENT</a> <a href=\"right-bracket\">]</a>\n    ... <a href=\"core/RECURSE\">RECURSE</a> ... <br>\n    <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n    \n    </div>\n  </div>\n<a href=\"core/RECURSE\">RECURSE</a>, <a href=\"core/Semi\">;</a> (semicolon), and <a href=\"core/IMMEDIATE\">IMMEDIATE</a> may\nor may not need information stored in the compilation word list.\n<p>\n\n</p><h3 id=\"subsection.A.26.6\">A.26.6 Glossary</h3> <!-- A.16.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:search:SEARCH-WORDLIST\">\n  <div class=\"wordNumber\">A.16.6.1.2192</div>\n  <div class=\"wordName\">SEARCH-WORDLIST</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    When <strong>SEARCH-WORDLIST</strong> fails to find the word, it does\n    not return the string, unlike <a href=\"search/FIND\">FIND</a>. This is in\n    accordance with the general principle that Forth words consume\n    their arguments.\n    \n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.A.28\">A.28 The optional String word set</h2> <!-- A.17 ======================= -->\n\n<a name=\"rat:string\"></a>\n<p>\n\n</p><h3 id=\"subsection.A.28.6\">A.28.6 Glossary</h3> <!-- A.17.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:string:/STRING\">\n  <div class=\"wordNumber\">A.17.6.1.0245</div>\n  <div class=\"wordName\">/STRING</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    <strong>/STRING</strong> is used to remove or add characters relative\n    to the current position in the character string. Positive values\n    of <em>n</em> will exclude characters from the string while\n    negative values of <em>n</em> will include characters to the\n    left of the string.\n    <p>\n    <a href=\"core/Sq\">S\"</a> ABC\" 2 <strong>/STRING</strong> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/bs\">\\</a> outputs \"C\" <br>\n    -1 <strong>/STRING</strong> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/bs\">\\</a> outputs \"BC\"\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:string:CMOVE\">\n  <div class=\"wordNumber\">A.17.6.1.0910</div>\n  <div class=\"wordName\">CMOVE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    If <em>c-addr<sub>2</sub></em> lies within the source region (i.e., when\n    <em>c-addr<sub>2</sub></em> is not less than <em>c-addr<sub>1</sub></em> and\n    <em>c-addr<sub>2</sub></em> is less than the quantity <em>c-addr<sub>1</sub> u</em>\n    <a href=\"core/CHARS\">CHARS</a> <a href=\"core/Plus\">+</a>), memory propagation occurs.\n    <p>\n    Assume a character string at address\n    100: \"ABCD\". Then after\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n100 <a href=\"core/DUP\">DUP</a>   <a href=\"core/CHARPlus\">CHAR+</a>   3 <strong>CMOVE</strong>\n        \n        </div>\n      </div>\n    the string at address 100 is \"AAAA\".\n    <p>\n    See <a href=\"rationale#rat:core:MOVE\">A.6.1.1900 MOVE</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:string:CMOVEtop\">\n  <div class=\"wordNumber\">A.17.6.1.0920</div>\n  <div class=\"wordName\">CMOVE&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    If <em>c-addr<sub>1</sub></em> lies within the destination region (i.e.,\n    when <em>c-addr<sub>1</sub></em> is greater than or equal to\n    <em>c-addr<sub>2</sub></em> and <em>c-addr<sub>2</sub></em> is less than the\n    quantity <em>c-addr<sub>1</sub> u</em> <a href=\"core/CHARS\">CHARS</a>\n    <a href=\"core/Plus\">+</a>), memory propagation\toccurs.\n    <p>\n    Assume a character string at address\n    100: \"ABCD\". Then after\n        </p><div class=\"quote\">\n      <div class=\"tt\">\n100 <a href=\"core/DUP\">DUP</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/SWAP\">SWAP</a>\n        3 <strong>CMOVE&gt;</strong>\n        \n        </div>\n      </div>\n    the string at address 100 is \"DDDD\".\n    <p>\n    See <a href=\"rationale#rat:core:MOVE\">A.6.1.1900 MOVE</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:string:SLITERAL\">\n  <div class=\"wordNumber\">A.17.6.1.2212</div>\n  <div class=\"wordName\">SLITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The current functionality of <a href=\"core/Sq\">6.1.2165 S\"</a> may be\n    provided by the following definition:\n    \n        <div class=\"quote\">\n      <div class=\"tt\">\n<a href=\"core/Colon\">:</a> <a href=\"core/Sq\">S\"</a> <a href=\"core/p\">(</a> \"ccc&lt;quote&gt;\" -- ) <br>\n        &nbsp;&nbsp; <a href=\"core/BracketCHAR\">[CHAR]</a> \" <a href=\"core/PARSE\">PARSE</a>  \n        <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"string/SLITERAL\">SLITERAL</a> <br>\n        <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n        \n        </div>\n      </div>\n    \n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"rat:string:SUBSTITUTE\">\n  <div class=\"wordNumber\">A.17.6.2.2255</div>\n  <div class=\"wordName\">SUBSTITUTE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    Many applications need to be able to perform text substitution, for\n    example:\n    <p>\n    </p><div class=\"center\">\n\n      Your balance at &lt;<em>time</em>&gt; on &lt;<em>date</em>&gt; is &lt;<em>currencyvalue</em>&gt;.\n      \n      </div>\n    <p>\n    Translation of a sentence or message from one language to another may\n    result in changes to the displayed parameter order.  The example, the\n    Afrikaans translation of this sentence requires a different order:\n    </p><p>\n    </p><div class=\"center\">\n\n      Jou balans op &lt;<em>date</em>&gt; om &lt;<em>time</em>&gt; is &lt;<em>currencyvalue</em>&gt;.\n      \n      </div>\n    <p>\n    The words <strong>SUBSTITUTE</strong> and <a href=\"string/REPLACES\">REPLACES</a> provide for this\n    requirements by defining a text substitution facility.  For example,\n    we can provide an initial string in the form:\n    </p><p>\n    </p><div class=\"center\">\n\n      <code>Your balance at %time% on %date% is %currencyvalue%.</code>\n      \n      </div>\n    <p>\n    The <code>%</code> is used as delimiters for the substitution name.  The\n    text \"<code>currencyvalue</code>\", \"<code>date</code>\" and \"<code>time</code>\"\n    are text substitutions, where the replacement text is defined by\n    <a href=\"string/REPLACES\">REPLACES</a>:\n    </p><p>\n    \n    \n        </p><div class=\"quote\">\n      <div class=\"tt\">\n\n        <a href=\"core/Colon\">:</a> date <a href=\"core/Sq\">S\"</a> 10/Nov/2014\" <a href=\"core/Semi\">;</a> <br>\n        <a href=\"core/Colon\">:</a> time <a href=\"core/Sq\">S\"</a> 02:52\" <a href=\"core/Semi\">;</a> <br>\n        date \\= <a href=\"core/Sq\">S\"</a> date\" <a href=\"string/REPLACES\">REPLACES</a> <br>\n        time  <a href=\"core/Sq\">S\"</a> time\" <a href=\"string/REPLACES\">REPLACES</a>\n        <br>\n        \n        </div>\n      </div>\n    </div>\n  </div>\nThe substitution name \"date\" is defined to be replaced with the string\n\"10/Nov/2014\" and \"time\" to be replaced with \"02:52\".  Thus\n<strong>SUBSTITUTE</strong> would produce the string:\n<p>\n</p><div class=\"center\">\n\n  <code>Your balance at 02:52 on 10/Nov/2014 is %currencyvalue%.</code>\n  \n  </div>\n<p>\nAs the substitution name \"currencyvalue\" has not been defined, it is\nleft unchanged in the resulting string.\n</p><p>\nThe return value <em>n</em> is nonnegative on success and indicates the\nnumber of substitutions made.  In the above example, this would be two.\nA negative value indicates that an error occurred.\nAs substitution is not recursive, the return value could be used to\nprovide a recursive substitution.\n</p><p>\nImplementation of <strong>SUBSTITUTE</strong> may be considered as being equivalent\nto a wordlist which is searched.  If the substitution name is found, the\nword is executed, returning a substitution string.\nSuch words can be deferred or multiple wordlists can be used.\nThe implementation techniques required are similar to those used by\n<a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>.\nThere is no provision for changing the delimiter character, although a\nsystem may provide system-specific extensions.\n</p><h2 id=\"section.A.30\">A.30 The optional Extended-Character word set</h2> <!-- A.18 ======================= -->\n\n<a name=\"rat:xchar\"></a>\n<p>\nForth defines graphic and control characters from the ASCII character\nset.  ASCII was originally designed for the English language.\nHowever, most western languages fit somewhat into the Forth framework,\nsince a single byte is sufficient to encode all characters in each\nlanguage, although different languages may use different encodings;\nLatin-1 and Latin-15 are widely used.  For other languages, different\ncharacter sets have to be used, several of which are variable-width.\nCurrently, the most popular representative of the variable-width\ncharacter sets is UTF-8.\n</p><p>\nMany Forth systems today are case insensitive, to accept lower case\nstandard words.  It is sufficient to be case insensitive for the ASCII\nsubset to make this work — this saves a large code mapping table for\ncomparison of other symbols.  Case is mostly an issue of European\nlanguages (Latin, Greek, and Cyrillic), but similar issues exist\nbetween traditional and simplified Chinese (finally being dealt with\nby Unihan), and between different Latin code pages in the Universal\nCharacter Set (UCS), e.g., full width vs. normal half width Latin\nletters.\n</p><p>\nFurthermore, UCS allows composition of glyphs and has direct encoding for\ncomposed glyphs, which look the same, but have different encodings.  This\nis not a problem for a Forth system to solve.\n</p><p>\nSome encodings (not UTF-8) might give surprises when you use a case\ninsensitive ASCII-compare that's 8-bit safe, but not aware of the\ncurrent encoding.\n</p><p>\nThe xchar word set does not address problems that come from using\nmultiple different encodings and switching or converting between them.\nIt is good practice for a system implementing xchar to support UTF–8.\n</p><p>\n\n</p><h3 id=\"subsection.A.30.6\">A.30.6 Glossary</h3> <!-- A.18.6 ============================ -->\n\n<div class=\"wordHead\" id=\"rat:xchar:CHAR\">\n  <div class=\"wordNumber\">A.18.6.2.0895</div>\n  <div class=\"wordName\">CHAR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"rationale\">\n\n    The behavior of the extended version of <strong>CHAR</strong> is fully backward\n    compatible with <a href=\"core/CHAR\">6.1.0895 CHAR</a>.\n    \n    </div>\n  </div>\n<p>\n\n</p></div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Rationale</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\" class=\"current\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" class=\"scroll-bar\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.A.1\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.2\">Terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.3\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.4\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.6\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.7\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.8\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.9\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.10\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.11\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.12\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.13\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.14\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.15\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.16\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.17\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.18\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.19\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.21\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.23\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.24\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.26\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.28\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.A.30\">Extended-Character word set</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "right-bracket": {
            "basename": "right-bracket",
            "name": "",
            "html": "<div id=\"body\">\n\n\n<div class=\"wordHead\" id=\"core:]\">\n  <div class=\"wordNumber\">6.1.2540</div>\n  <div class=\"wordName\">]</div>\n  <div class=\"wordEnglish\">right-bracket</div>\n  <div class=\"wordList\">CORE</div>\n</div>\n<div class=\"wordBody\">\n\n  <div class=\"secdef\">\n\n    <div class=\"secname\">&nbsp;</div>\n    <div class=\"sec\">\n\n ( -- )\n      <p>\n      Enter compilation state.\n      </p><p>\n        \n      </p></div>\n    </div>\n<div class=\"secdef\">\n\n    <div class=\"secname\">See:</div>\n    <div class=\"sec\">\n\n <strong><a href=\"../usage#usage:command\">3.4 The Forth text interpreter</a></strong>,\n      <strong><a href=\"../usage#usage:compilation\">3.4.5 Compilation</a></strong>,\n      <a href=\"../core/Bracket\">6.1.2500 [</a>,\n      <a href=\"../rationale#rat:core:]\">A.6.1.2540 ]</a>.\n      <p>\n        \n      </p></div>\n    </div>\n<div class=\"secdef\">\n\n    <div class=\"secname\">Rationale:</div>\n    <div class=\"secrationale\">\n\n <!-- A.6.1.2540 ] -->\n      Typical use:\n      <a href=\"../core/Colon\">:</a> <code>X</code> ...\n      <a href=\"../core/Bracket\">[</a> <code>4321</code> <strong>]</strong> <a href=\"../core/LITERAL\">LITERAL</a>\n      ... <a href=\"../core/Semi\">;</a>\n        \n      </div>\n    </div>\n<div class=\"secdef\">\n\n    <div class=\"secname\">Testing:</div>\n    <div class=\"sectesting\">\n\n <!-- T.6.1.2540 ] -->\n      See <a href=\"../testsuite#test:core:[\">F.6.1.2500 [</a>.\n      \n      \n      </div>\n    </div>\n  </div>\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"../index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Glossary</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"../foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"../process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"../members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"../intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"../notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"../usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"../doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"../label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"../core\" class=\"current\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"../block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"../double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"../exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"../facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"../file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"../float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"../locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"../memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"../tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"../search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"../string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"../xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"../rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"../bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"../diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"../port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"../implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"../testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"../alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">]</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"Store\">!</a></li>\n        <li role=\"menuitem\"><a href=\"num\">#</a></li>\n        <li role=\"menuitem\"><a href=\"num-end\">#&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"numS\">#S</a></li>\n        <li role=\"menuitem\"><a href=\"Tick\">'</a></li>\n        <li role=\"menuitem\"><a href=\"p\">(</a></li>\n        <li role=\"menuitem\"><a href=\"Times\">*</a></li>\n        <li role=\"menuitem\"><a href=\"TimesDiv\">*/</a></li>\n        <li role=\"menuitem\"><a href=\"TimesDivMOD\">*/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"Plus\">+</a></li>\n        <li role=\"menuitem\"><a href=\"PlusStore\">+!</a></li>\n        <li role=\"menuitem\"><a href=\"PlusLOOP\">+LOOP</a></li>\n        <li role=\"menuitem\"><a href=\"Comma\">,</a></li>\n        <li role=\"menuitem\"><a href=\"Minus\">-</a></li>\n        <li role=\"menuitem\"><a href=\"d\">.</a></li>\n        <li role=\"menuitem\"><a href=\"Dotq\">.\"</a></li>\n        <li role=\"menuitem\"><a href=\"Div\">/</a></li>\n        <li role=\"menuitem\"><a href=\"DivMOD\">/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"Zeroless\">0&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"ZeroEqual\">0=</a></li>\n        <li role=\"menuitem\"><a href=\"OnePlus\">1+</a></li>\n        <li role=\"menuitem\"><a href=\"OneMinus\">1-</a></li>\n        <li role=\"menuitem\"><a href=\"TwoStore\">2!</a></li>\n        <li role=\"menuitem\"><a href=\"TwoTimes\">2*</a></li>\n        <li role=\"menuitem\"><a href=\"TwoDiv\">2/</a></li>\n        <li role=\"menuitem\"><a href=\"TwoFetch\">2@</a></li>\n        <li role=\"menuitem\"><a href=\"TwoDROP\">2DROP</a></li>\n        <li role=\"menuitem\"><a href=\"TwoDUP\">2DUP</a></li>\n        <li role=\"menuitem\"><a href=\"TwoOVER\">2OVER</a></li>\n        <li role=\"menuitem\"><a href=\"TwoSWAP\">2SWAP</a></li>\n        <li role=\"menuitem\"><a href=\"Colon\">:</a></li>\n        <li role=\"menuitem\"><a href=\"Semi\">;</a></li>\n        <li role=\"menuitem\"><a href=\"less\">&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"num-start\">&lt;#</a></li>\n        <li role=\"menuitem\"><a href=\"Equal\">=</a></li>\n        <li role=\"menuitem\"><a href=\"more\">&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"toBODY\">&gt;BODY</a></li>\n        <li role=\"menuitem\"><a href=\"toIN\">&gt;IN</a></li>\n        <li role=\"menuitem\"><a href=\"toNUMBER\">&gt;NUMBER</a></li>\n        <li role=\"menuitem\"><a href=\"toR\">&gt;R</a></li>\n        <li role=\"menuitem\"><a href=\"qDUP\">?DUP</a></li>\n        <li role=\"menuitem\"><a href=\"Fetch\">@</a></li>\n        <li role=\"menuitem\"><a href=\"ABORT\">ABORT</a></li>\n        <li role=\"menuitem\"><a href=\"ABORTq\">ABORT\"</a></li>\n        <li role=\"menuitem\"><a href=\"ABS\">ABS</a></li>\n        <li role=\"menuitem\"><a href=\"ACCEPT\">ACCEPT</a></li>\n        <li role=\"menuitem\"><a href=\"ALIGN\">ALIGN</a></li>\n        <li role=\"menuitem\"><a href=\"ALIGNED\">ALIGNED</a></li>\n        <li role=\"menuitem\"><a href=\"ALLOT\">ALLOT</a></li>\n        <li role=\"menuitem\"><a href=\"AND\">AND</a></li>\n        <li role=\"menuitem\"><a href=\"BASE\">BASE</a></li>\n        <li role=\"menuitem\"><a href=\"BEGIN\">BEGIN</a></li>\n        <li role=\"menuitem\"><a href=\"BL\">BL</a></li>\n        <li role=\"menuitem\"><a href=\"CStore\">C!</a></li>\n        <li role=\"menuitem\"><a href=\"CComma\">C,</a></li>\n        <li role=\"menuitem\"><a href=\"CFetch\">C@</a></li>\n        <li role=\"menuitem\"><a href=\"CELLPlus\">CELL+</a></li>\n        <li role=\"menuitem\"><a href=\"CELLS\">CELLS</a></li>\n        <li role=\"menuitem\"><a href=\"CHAR\">CHAR</a></li>\n        <li role=\"menuitem\"><a href=\"CHARPlus\">CHAR+</a></li>\n        <li role=\"menuitem\"><a href=\"CHARS\">CHARS</a></li>\n        <li role=\"menuitem\"><a href=\"CONSTANT\">CONSTANT</a></li>\n        <li role=\"menuitem\"><a href=\"COUNT\">COUNT</a></li>\n        <li role=\"menuitem\"><a href=\"CR\">CR</a></li>\n        <li role=\"menuitem\"><a href=\"CREATE\">CREATE</a></li>\n        <li role=\"menuitem\"><a href=\"DECIMAL\">DECIMAL</a></li>\n        <li role=\"menuitem\"><a href=\"DEPTH\">DEPTH</a></li>\n        <li role=\"menuitem\"><a href=\"DO\">DO</a></li>\n        <li role=\"menuitem\"><a href=\"DOES\">DOES&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"DROP\">DROP</a></li>\n        <li role=\"menuitem\"><a href=\"DUP\">DUP</a></li>\n        <li role=\"menuitem\"><a href=\"ELSE\">ELSE</a></li>\n        <li role=\"menuitem\"><a href=\"EMIT\">EMIT</a></li>\n        <li role=\"menuitem\"><a href=\"ENVIRONMENTq\">ENVIRONMENT?</a></li>\n        <li role=\"menuitem\"><a href=\"EVALUATE\">EVALUATE</a></li>\n        <li role=\"menuitem\"><a href=\"EXECUTE\">EXECUTE</a></li>\n        <li role=\"menuitem\"><a href=\"EXIT\">EXIT</a></li>\n        <li role=\"menuitem\"><a href=\"FILL\">FILL</a></li>\n        <li role=\"menuitem\"><a href=\"FIND\">FIND</a></li>\n        <li role=\"menuitem\"><a href=\"FMDivMOD\">FM/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"HERE\">HERE</a></li>\n        <li role=\"menuitem\"><a href=\"HOLD\">HOLD</a></li>\n        <li role=\"menuitem\"><a href=\"I\">I</a></li>\n        <li role=\"menuitem\"><a href=\"IF\">IF</a></li>\n        <li role=\"menuitem\"><a href=\"IMMEDIATE\">IMMEDIATE</a></li>\n        <li role=\"menuitem\"><a href=\"INVERT\">INVERT</a></li>\n        <li role=\"menuitem\"><a href=\"J\">J</a></li>\n        <li role=\"menuitem\"><a href=\"KEY\">KEY</a></li>\n        <li role=\"menuitem\"><a href=\"LEAVE\">LEAVE</a></li>\n        <li role=\"menuitem\"><a href=\"LITERAL\">LITERAL</a></li>\n        <li role=\"menuitem\"><a href=\"LOOP\">LOOP</a></li>\n        <li role=\"menuitem\"><a href=\"LSHIFT\">LSHIFT</a></li>\n        <li role=\"menuitem\"><a href=\"MTimes\">M*</a></li>\n        <li role=\"menuitem\"><a href=\"MAX\">MAX</a></li>\n        <li role=\"menuitem\"><a href=\"MIN\">MIN</a></li>\n        <li role=\"menuitem\"><a href=\"MOD\">MOD</a></li>\n        <li role=\"menuitem\"><a href=\"MOVE\">MOVE</a></li>\n        <li role=\"menuitem\"><a href=\"NEGATE\">NEGATE</a></li>\n        <li role=\"menuitem\"><a href=\"OR\">OR</a></li>\n        <li role=\"menuitem\"><a href=\"OVER\">OVER</a></li>\n        <li role=\"menuitem\"><a href=\"POSTPONE\">POSTPONE</a></li>\n        <li role=\"menuitem\"><a href=\"QUIT\">QUIT</a></li>\n        <li role=\"menuitem\"><a href=\"Rfrom\">R&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"RFetch\">R@</a></li>\n        <li role=\"menuitem\"><a href=\"RECURSE\">RECURSE</a></li>\n        <li role=\"menuitem\"><a href=\"REPEAT\">REPEAT</a></li>\n        <li role=\"menuitem\"><a href=\"ROT\">ROT</a></li>\n        <li role=\"menuitem\"><a href=\"RSHIFT\">RSHIFT</a></li>\n        <li role=\"menuitem\"><a href=\"Sq\">S\"</a></li>\n        <li role=\"menuitem\"><a href=\"StoD\">S&gt;D</a></li>\n        <li role=\"menuitem\"><a href=\"SIGN\">SIGN</a></li>\n        <li role=\"menuitem\"><a href=\"SMDivREM\">SM/REM</a></li>\n        <li role=\"menuitem\"><a href=\"SOURCE\">SOURCE</a></li>\n        <li role=\"menuitem\"><a href=\"SPACE\">SPACE</a></li>\n        <li role=\"menuitem\"><a href=\"SPACES\">SPACES</a></li>\n        <li role=\"menuitem\"><a href=\"STATE\">STATE</a></li>\n        <li role=\"menuitem\"><a href=\"SWAP\">SWAP</a></li>\n        <li role=\"menuitem\"><a href=\"THEN\">THEN</a></li>\n        <li role=\"menuitem\"><a href=\"TYPE\">TYPE</a></li>\n        <li role=\"menuitem\"><a href=\"Ud\">U.</a></li>\n        <li role=\"menuitem\"><a href=\"Uless\">U&lt;</a></li>\n        <li role=\"menuitem\"><a href=\"UMTimes\">UM*</a></li>\n        <li role=\"menuitem\"><a href=\"UMDivMOD\">UM/MOD</a></li>\n        <li role=\"menuitem\"><a href=\"UNLOOP\">UNLOOP</a></li>\n        <li role=\"menuitem\"><a href=\"UNTIL\">UNTIL</a></li>\n        <li role=\"menuitem\"><a href=\"VARIABLE\">VARIABLE</a></li>\n        <li role=\"menuitem\"><a href=\"WHILE\">WHILE</a></li>\n        <li role=\"menuitem\"><a href=\"WORD\">WORD</a></li>\n        <li role=\"menuitem\"><a href=\"XOR\">XOR</a></li>\n        <li role=\"menuitem\"><a href=\"Bracket\">[</a></li>\n        <li role=\"menuitem\"><a href=\"BracketTick\">[']</a></li>\n        <li role=\"menuitem\"><a href=\"BracketCHAR\">[CHAR]</a></li>\n        <li role=\"menuitem\"><a href=\"right-bracket\" class=\"current\">]</a></li>\n        <li role=\"menuitem\"><a href=\"Dotp\">.(</a></li>\n        <li role=\"menuitem\"><a href=\"DotR\">.R</a></li>\n        <li role=\"menuitem\"><a href=\"Zerone\">0&lt;&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"Zeromore\">0&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"TwotoR\">2&gt;R</a></li>\n        <li role=\"menuitem\"><a href=\"TwoRfrom\">2R&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"TwoRFetch\">2R@</a></li>\n        <li role=\"menuitem\"><a href=\"ColonNONAME\">:NONAME</a></li>\n        <li role=\"menuitem\"><a href=\"ne\">&lt;&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"qDO\">?DO</a></li>\n        <li role=\"menuitem\"><a href=\"ACTION-OF\">ACTION-OF</a></li>\n        <li role=\"menuitem\"><a href=\"AGAIN\">AGAIN</a></li>\n        <li role=\"menuitem\"><a href=\"BUFFERColon\">BUFFER:</a></li>\n        <li role=\"menuitem\"><a href=\"Cq\">C\"</a></li>\n        <li role=\"menuitem\"><a href=\"CASE\">CASE</a></li>\n        <li role=\"menuitem\"><a href=\"COMPILEComma\">COMPILE,</a></li>\n        <li role=\"menuitem\"><a href=\"DEFER\">DEFER</a></li>\n        <li role=\"menuitem\"><a href=\"DEFERStore\">DEFER!</a></li>\n        <li role=\"menuitem\"><a href=\"DEFERFetch\">DEFER@</a></li>\n        <li role=\"menuitem\"><a href=\"ENDCASE\">ENDCASE</a></li>\n        <li role=\"menuitem\"><a href=\"ENDOF\">ENDOF</a></li>\n        <li role=\"menuitem\"><a href=\"ERASE\">ERASE</a></li>\n        <li role=\"menuitem\"><a href=\"FALSE\">FALSE</a></li>\n        <li role=\"menuitem\"><a href=\"HEX\">HEX</a></li>\n        <li role=\"menuitem\"><a href=\"HOLDS\">HOLDS</a></li>\n        <li role=\"menuitem\"><a href=\"IS\">IS</a></li>\n        <li role=\"menuitem\"><a href=\"MARKER\">MARKER</a></li>\n        <li role=\"menuitem\"><a href=\"NIP\">NIP</a></li>\n        <li role=\"menuitem\"><a href=\"OF\">OF</a></li>\n        <li role=\"menuitem\"><a href=\"PAD\">PAD</a></li>\n        <li role=\"menuitem\"><a href=\"PARSE\">PARSE</a></li>\n        <li role=\"menuitem\"><a href=\"PARSE-NAME\">PARSE-NAME</a></li>\n        <li role=\"menuitem\"><a href=\"PICK\">PICK</a></li>\n        <li role=\"menuitem\"><a href=\"REFILL\">REFILL</a></li>\n        <li role=\"menuitem\"><a href=\"RESTORE-INPUT\">RESTORE-INPUT</a></li>\n        <li role=\"menuitem\"><a href=\"ROLL\">ROLL</a></li>\n        <li role=\"menuitem\"><a href=\"Seq\">S\\\"</a></li>\n        <li role=\"menuitem\"><a href=\"SAVE-INPUT\">SAVE-INPUT</a></li>\n        <li role=\"menuitem\"><a href=\"SOURCE-ID\">SOURCE-ID</a></li>\n        <li role=\"menuitem\"><a href=\"TO\">TO</a></li>\n        <li role=\"menuitem\"><a href=\"TRUE\">TRUE</a></li>\n        <li role=\"menuitem\"><a href=\"TUCK\">TUCK</a></li>\n        <li role=\"menuitem\"><a href=\"UDotR\">U.R</a></li>\n        <li role=\"menuitem\"><a href=\"Umore\">U&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"UNUSED\">UNUSED</a></li>\n        <li role=\"menuitem\"><a href=\"VALUE\">VALUE</a></li>\n        <li role=\"menuitem\"><a href=\"WITHIN\">WITHIN</a></li>\n        <li role=\"menuitem\"><a href=\"BracketCOMPILE\">[COMPILE]</a></li>\n        <li role=\"menuitem\"><a href=\"bs\">\\</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n"
        },
        "search": {
            "basename": "search",
            "name": "16 The optional Search-Order word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.16\">16 The optional Search-Order word set</h1> <!-- 16 -->\n<h2 id=\"section.16.1\">16.1 Introduction</h2> <!-- 16.1 -->\n<h2 id=\"section.16.2\">16.2 Additional terms and notation</h2> <!-- 16.2 -->\n<dl class=\"desc\">\n<dt>compilation word list:</dt><dd>\nThe word list into which new definition names are placed.\n<p>\n</p></dd>\n<dt>search order:</dt><dd>\nA list of word lists specifying the order in which the\ndictionary will be searched.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h2 id=\"section.16.3\">16.3 Additional usage requirements</h2> <!-- 16.3 -->\n<h3 id=\"subsection.16.3.1\">16.3.1 Data types</h3> <!-- 16.3.1 -->\nWord list identifiers are implementation-dependent single-cell\nvalues that identify word lists.\n<p>\nAppend table <a href=\"search#search:types\">16.1</a> to table <a href=\"usage#table:datatypes\">3.1</a>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 16.1: Data types</div>\n  <a name=\"search:types\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em> </td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>wid</em>\t\t</td><td>word list identifiers\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\nSee: <strong><a href=\"usage#usage:data\">3.1 Data types</a></strong>,\n<strong><a href=\"usage#usage:find\">3.4.2 Finding definition names</a></strong>,\n<strong><a href=\"usage#usage:command\">3.4 The Forth text interpreter</a></strong>.\n<p>\n</p><h3 id=\"subsection.16.3.2\">16.3.2 Environmental queries</h3> <!-- 16.3.2 -->\nAppend table <a href=\"search#search:env\">16.2</a> to table <a href=\"usage#table:env\">3.4</a>.\n<p>\nSee: <strong><a href=\"usage#usage:env\">3.2.6 Environmental queries</a></strong>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 16.2: Environmental Query Strings</div>\n  <a name=\"search:env\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\">String  Value data type </td><td class=\"c\">Constant? </td><td style=\"width: 21em\">Meaning </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>WORDLISTS</code>\t\t\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\t</td><td style=\"width: 21em\">maximum number of word lists usable in the search order</td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<h3 id=\"subsection.16.3.3\">16.3.3 Finding definition names</h3> <!-- 16.3.3 -->\n<a name=\"search:find\"></a>\n<p>\nWhen searching a word list for a definition name, the system shall\nsearch each word list from its last definition to its first. The\nsearch may encompass only a single word list, as with\n<a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>, or all the word lists in the search order,\nas with the text interpreter and <a href=\"search/FIND\">FIND</a>.\n</p><p>\nChanging the search order shall only affect the subsequent finding\nof definition names in the dictionary. A system with the Search-Order\nword set shall allow at least eight word lists in the search order.\n</p><p>\nAn ambiguous condition exists if a program changes the compilation\nword list during the compilation of a definition or before\nmodification of the behavior of the most recently compiled definition\nwith <a href=\"tools/SemiCODE\">;CODE</a>, <a href=\"core/DOES\">DOES&gt;</a>, or\n<a href=\"core/IMMEDIATE\">IMMEDIATE</a>.\n</p><p>\nA program that requires more than eight word lists in the search\norder has an environmental dependency.\n</p><p>\nSee: <strong><a href=\"usage#usage:find\">3.4.2 Finding definition names</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.16.3.4\">16.3.4 Contiguous regions</h3> <!-- 16.3.4 -->\nThe regions of data space produced by the operations described in\n<strong><a href=\"usage#usage:contiguous\">3.3.3.2 Contiguous regions</a></strong> may be\nnon-contiguous if <a href=\"search/WORDLIST\">WORDLIST</a> is executed between allocations.\n<p>\n</p><h2 id=\"section.16.4\">16.4 Additional documentation requirements</h2> <!-- 16.4 -->\n<h3 id=\"subsection.16.4.1\">16.4.1 System documentation</h3> <!-- 16.4.1 -->\n<h4 id=\"subsubsection.16.4.1.1\">16.4.1.1 Implementation-defined options</h4> <!-- 16.4.1.1 -->\n<ul>\n<li> maximum number of word lists in the search order\n(<strong><a href=\"search#search:find\">16.3.3 Finding definition names</a></strong>,\n<a href=\"search/SET-ORDER\">16.6.1.2197 SET-ORDER</a>);\n</li>\n<li> minimum search order\n(<a href=\"search/SET-ORDER\">16.6.1.2197 SET-ORDER</a>,\n<a href=\"search/ONLY\">16.6.2.1965 ONLY</a>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.16.4.1.2\">16.4.1.2 Ambiguous conditions</h4> <!-- 16.4.1.2 -->\n<ul>\n<li> changing the compilation word list\n(<strong><a href=\"search#search:find\">16.3.3 Finding definition names</a></strong>);\n</li>\n<li> search order empty\n(<a href=\"search/PREVIOUS\">16.6.2.2037 PREVIOUS</a>);\n</li>\n<li> too many word lists in search order\n(<a href=\"search/ALSO\">16.6.2.0715 ALSO</a>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.16.4.1.3\">16.4.1.3 Other system documentation</h4> <!-- 16.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.16.4.2\">16.4.2 Program documentation</h3> <!-- 16.4.2 -->\n<h4 id=\"subsubsection.16.4.2.1\">16.4.2.1 Environmental dependencies</h4> <!-- 16.4.2.1 -->\n<ul>\n<li> requiring more than eight word-lists in the search order\n(<strong><a href=\"search#search:find\">16.3.3 Finding definition names</a></strong>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.16.4.2.2\">16.4.2.2 Other program documentation</h4> <!-- 16.4.2.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.16.5\">16.5 Compliance and labeling</h2> <!-- 16.5 -->\n<h3 id=\"subsection.16.5.1\">16.5.1 Forth-2012 systems</h3> <!-- 16.5.1 -->\nThe phrase \"Providing the Search-Order word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Search-Order word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Search-Order\nExtensions word set\" shall be appended to the label of any\nStandard System that provides portions of the Search-Order\nExtensions word set.\n</p><p>\nThe phrase \"Providing the Search-Order Extensions word set\" shall\nbe appended to the label of any Standard System that provides all of\nthe Search-Order and Search-Order Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.16.5.2\">16.5.2 Forth-2012 programs</h3> <!-- 16.5.2 -->\nThe phrase \"Requiring the Search-Order word set\" shall be appended\nto the label of Standard Programs that require the system to provide\nthe Search-Order word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Search-Order\nExtensions word set\" shall be appended to the label of Standard\nPrograms that require the system to provide portions of the\nSearch-Order Extensions word set.\n</p><p>\nThe phrase \"Requiring the Search-Order Extensions word set\" shall\nbe appended to the label of Standard Programs that require the system\nto provide all of the Search-Order and Search-Order Extensions word\nsets.\n</p><p>\n</p><h2 id=\"section.16.6\">16.6 Glossary</h2> <!-- 16.6 -->\n<h3 id=\"subsection.16.6.1\">16.6.1 Search-Order words</h3> <!-- 16.6.1 -->\n<ul>\n<li><a href=\"search/DEFINITIONS\">16.6.1.1180 DEFINITIONS</a></li>\n<li><a href=\"search/FIND\">16.6.1.1550 FIND</a></li>\n<li><a href=\"search/FORTH-WORDLIST\">16.6.1.1595 FORTH-WORDLIST</a></li>\n<li><a href=\"search/GET-CURRENT\">16.6.1.1643 GET-CURRENT</a></li>\n<li><a href=\"search/GET-ORDER\">16.6.1.1647 GET-ORDER</a></li>\n<li><a href=\"search/SEARCH-WORDLIST\">16.6.1.2192 SEARCH-WORDLIST</a></li>\n<li><a href=\"search/SET-CURRENT\">16.6.1.2195 SET-CURRENT</a></li>\n<li><a href=\"search/SET-ORDER\">16.6.1.2197 SET-ORDER</a></li>\n\n<li><a href=\"search/WORDLIST\">16.6.1.2460 WORDLIST</a></li>\n</ul>\n<h3 id=\"subsection.16.6.2\">16.6.2 Search-Order extension words</h3> <!-- 16.6.2 -->\n<ul>\n<li><a href=\"search/ALSO\">16.6.2.0715 ALSO</a></li>\n<li><a href=\"search/FORTH\">16.6.2.1590 FORTH</a></li>\n<li><a href=\"search/ONLY\">16.6.2.1965 ONLY</a></li>\n<li><a href=\"search/ORDER\">16.6.2.1985 ORDER</a></li>\n<li><a href=\"search/PREVIOUS\">16.6.2.2037 PREVIOUS</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Search-Order word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\" class=\"current\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.16.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.16.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.16.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.16.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.16.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.16.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">DEFINITIONS</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"search/DEFINITIONS\">DEFINITIONS</a></li>\n        <li role=\"menuitem\"><a href=\"search/FIND\">FIND</a></li>\n        <li role=\"menuitem\"><a href=\"search/FORTH-WORDLIST\">FORTH-WORDLIST</a></li>\n        <li role=\"menuitem\"><a href=\"search/GET-CURRENT\">GET-CURRENT</a></li>\n        <li role=\"menuitem\"><a href=\"search/GET-ORDER\">GET-ORDER</a></li>\n        <li role=\"menuitem\"><a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a></li>\n        <li role=\"menuitem\"><a href=\"search/SET-CURRENT\">SET-CURRENT</a></li>\n        <li role=\"menuitem\"><a href=\"search/SET-ORDER\">SET-ORDER</a></li>\n        <li role=\"menuitem\"><a href=\"search/WORDLIST\">WORDLIST</a></li>\n        <li role=\"menuitem\"><a href=\"search/ALSO\">ALSO</a></li>\n        <li role=\"menuitem\"><a href=\"search/FORTH\">FORTH</a></li>\n        <li role=\"menuitem\"><a href=\"search/ONLY\">ONLY</a></li>\n        <li role=\"menuitem\"><a href=\"search/ORDER\">ORDER</a></li>\n        <li role=\"menuitem\"><a href=\"search/PREVIOUS\">PREVIOUS</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "string": {
            "basename": "string",
            "name": "17 The optional String word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.17\">17 The optional String word set</h1> <!-- 17 -->\n<h2 id=\"section.17.1\">17.1 Introduction</h2> <!-- 17.1 -->\n<h2 id=\"section.17.2\">17.2 Additional terms and notation</h2> <!-- 17.2 -->\nNone.\n<p>\n</p><h2 id=\"section.17.3\">17.3 Additional usage requirements</h2> <!-- 17.3 -->\nNone.\n<p>\n</p><h2 id=\"section.17.4\">17.4 Additional documentation requirements</h2> <!-- 17.4 -->\n<a name=\"string:document\"></a>\n<p>\n</p><h3 id=\"subsection.17.4.1\">17.4.1 System documentation</h3>\n<h4 id=\"subsubsection.17.4.1.1\">17.4.1.1 Implementation-defined options</h4>\n<ul>\n<li> no additional options.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.17.4.1.2\">17.4.1.2 Ambiguous conditions</h4>\n<ul>\n<li> The substitution cannot be created (<a href=\"string/REPLACES\">REPLACES</a>);\n</li>\n<li> The name of a substitution contains the `<code>%</code>' delimiter character (<a href=\"string/REPLACES\">REPLACES</a>);\n</li>\n<li> Result of a substitution is too long to fit into the given buffer (<a href=\"string/SUBSTITUTE\">SUBSTITUTE</a> and <a href=\"string/UNESCAPE\">UNESCAPE</a>);\n</li>\n<li> Source and destination buffers for <a href=\"string/SUBSTITUTE\">SUBSTITUTE</a> are the same.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.17.4.1.3\">17.4.1.3 Other system documentation</h4>\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.17.4.2\">17.4.2 Program documentation</h3>\n<p>\n</p><h4 id=\"subsubsection.17.4.2.1\">17.4.2.1 Environmental dependencies</h4>\n<ul>\n<li> no additional dependencies.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.17.4.2.2\">17.4.2.2 Other program documentation</h4>\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.17.5\">17.5 Compliance and labeling</h2> <!-- 17.5 -->\n<h3 id=\"subsection.17.5.1\">17.5.1 Forth-2012 systems</h3> <!-- 17.5.1 -->\nThe phrase \"Providing the String word set\" shall be appended to\nthe label of any Standard System that provides all of the String\nword set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the String Extensions\nword set\" shall be appended to the label of any Standard System\nthat provides portions of the String Extensions word set.\n</p><p>\nThe phrase \"Providing the String Extensions word set\" shall be\nappended to the label of any Standard System that provides all of\nthe String and String Extensions word sets.\n</p><p>\n</p><h3 id=\"subsection.17.5.2\">17.5.2 Forth-2012 programs</h3> <!-- 17.5.2 -->\nThe phrase \"Requiring the String word set\" shall be appended to\nthe label of Standard Programs that require the system to provide\nthe String word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the String Extensions\nword set\" shall be appended to the label of Standard Programs that\nrequire the system to provide portions of the String Extensions\nword set.\n</p><p>\nThe phrase \"Requiring the String Extensions word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide all of the String and String Extensions word sets.\n</p><p>\n</p><h2 id=\"section.17.6\">17.6 Glossary</h2> <!-- 17.6 -->\n<h3 id=\"subsection.17.6.1\">17.6.1 String words</h3> <!-- 17.6.1 -->\n<ul>\n<li><a href=\"string/MinusTRAILING\">17.6.1.0170 -TRAILING</a></li>\n<li><a href=\"string/DivSTRING\">17.6.1.0245 /STRING</a></li>\n<li><a href=\"string/BLANK\">17.6.1.0780 BLANK</a></li>\n<li><a href=\"string/CMOVE\">17.6.1.0910 CMOVE</a></li>\n<li><a href=\"string/CMOVEtop\">17.6.1.0920 CMOVE&gt;</a></li>\n<li><a href=\"string/COMPARE\">17.6.1.0935 COMPARE</a></li>\n<li><a href=\"string/SEARCH\">17.6.1.2191 SEARCH</a></li>\n<li><a href=\"string/SLITERAL\">17.6.1.2212 SLITERAL</a></li>\n</ul>\n<h3 id=\"subsection.17.6.2\">17.6.2 String extension words</h3> <!-- 17.6.2 -->\n<ul>\n<li><a href=\"string/REPLACES\">17.6.2.2141 REPLACES</a></li>\n<li><a href=\"string/SUBSTITUTE\">17.6.2.2255 SUBSTITUTE</a></li>\n<li><a href=\"string/UNESCAPE\">17.6.2.2375 UNESCAPE</a></li>\n\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">String word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\" class=\"current\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.17.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.17.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.17.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.17.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.17.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.17.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">-TRAILING</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"string/MinusTRAILING\">-TRAILING</a></li>\n        <li role=\"menuitem\"><a href=\"string/DivSTRING\">/STRING</a></li>\n        <li role=\"menuitem\"><a href=\"string/BLANK\">BLANK</a></li>\n        <li role=\"menuitem\"><a href=\"string/CMOVE\">CMOVE</a></li>\n        <li role=\"menuitem\"><a href=\"string/CMOVEtop\">CMOVE&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"string/COMPARE\">COMPARE</a></li>\n        <li role=\"menuitem\"><a href=\"string/SEARCH\">SEARCH</a></li>\n        <li role=\"menuitem\"><a href=\"string/SLITERAL\">SLITERAL</a></li>\n        <li role=\"menuitem\"><a href=\"string/REPLACES\">REPLACES</a></li>\n        <li role=\"menuitem\"><a href=\"string/SUBSTITUTE\">SUBSTITUTE</a></li>\n        <li role=\"menuitem\"><a href=\"string/UNESCAPE\">UNESCAPE</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "testsuite": {
            "basename": "testsuite",
            "name": "Annex F: Test Suite",
            "html": "<div id=\"body\">\n<h1>Annex F: Test Suite</h1> <!-- F. (informative annex) -->\n<a name=\"annex:test\"></a>\n<h2 id=\"section.F.1\">F.1 Introduction</h2> <!-- F.1 -->\n<a name=\"test:intro\"></a>\n<p>\nAfter the publication of the original ANS Forth document\n(ANSI X3.215-1994), John Hayes developed a test suite, which\nincluded both a test harness and a suite of core tests.  The\nharness was extended by Anton Ertl and David N. Williams to\nallow the testing of floating point operations.\nThe current revision of the test harness is available from the\nweb site:\n</p><p>\n</p><div class=\"quote\">\n\n  <a href=\"http://www.forth200x.org/tests/ttester.fs\">http://www.forth200x.org/tests/ttester.fs</a>\n  \n  </div>\n<p>\nThe teat harness can be used to define regression tests for a set of\napplication words.  It can also be used to define tests of words in\na standard-conforming implementation.\nNumerous people have contributed to the test cases given in section\n<a href=\"testsuite#test:core\">F.3</a> onwards.  The majority of the test cases have been\ntaken from John Hayes' test suite<sup>[1]</sup>,\nGerry Jackson's test suite<sup>[2]</sup>\nand David Williams with significant contributions from the committee.\n</p><p>\n</p><p>\n  <sup>[1]</sup> <a href=\"http://www.taygeta.com/forth.html\">http://www.taygeta.com/forth.html</a><br>\n  <sup>[2]</sup> <a href=\"http://soton.mpeforth.com/flag/anstests/index.html\">http://soton.mpeforth.com/flag/anstests/index.html</a></p>\n\n<h2 id=\"section.F.2\">F.2 Test Harness</h2>\n<a name=\"test:harness\"></a>\n<p>\nThe tester defines functions that compare the results of a test with\na set of expected results.  The syntax for each test starts with\n\"<code>T{</code>\" (T-open brace) followed by a code sequence to test.\nThis is followed by \"<code>-&gt;</code>\", the expected results, and\n\"<code>}T</code>\" (close brace-T).  For example, the following:\n</p><p>\n</p><div class=\"quote\">\n\n  <span class=\"tt\">T{ 1&nbsp;1&nbsp;<a href=\"core/Plus\">+</a> -&gt; 2 }T</span>\n  \n  </div>\n<p>\ntests that one plus one indeed equals two.\n</p><p>\nThe \"<code>T{</code>\" records the stack depth prior to the test code\nso that they can be eliminated from the test.\nThe \"<code>-&gt;</code>\" records the stack depth and moves the entire stack\ncontents to an array.  In the example test, the recorded stack depth\nis one and the saved array contains one value, two.\nThe \"<code>}T</code>\" compares the current stack depth to the saved\nstack depth.  If they are equal each value on the stack is removed\nfrom the stack and compared to its corresponding value in the array.\nIf the depths are not equal or if the stack comparison fails, an error\nis reported.  For example:\n</p><p>\n<span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;<a href=\"core/SWAP\">SWAP</a> -&gt; 1&nbsp;3&nbsp;2 }T</span> <br>\n<span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;<a href=\"core/SWAP\">SWAP</a> -&gt; 1&nbsp;2&nbsp;3 }T</span> <code>INCORRECT RESULT:</code> <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;SWAP -&gt; 1&nbsp;2&nbsp;3 }T</span> <br>\n<span class=\"tt\">T{ 1&nbsp;2&nbsp;<a href=\"core/SWAP\">SWAP</a> -&gt; 1 }T</span>   <code>WRONG NUMBER OF RESULTS:</code> <span class=\"tt\">T{ 1&nbsp;2&nbsp;SWAP -&gt; 1 }T</span> <br>\n</p><h3 id=\"subsection.F.2.1\">F.2.1 Floating-Point</h3>\nFloating point testing can involve further complications.  The harness\nattempts to determine whether floating-point support is present, and\nif so, whether there is a separate floating-point stack, and behave\naccordingly.  The <a href=\"core/CONSTANT\">CONSTANT</a>s <code>HAS-FLOATING</code> and\n<code>HAS-FLOATING-STACK</code> contain the results of its efforts, so\nthe behavior of the code can be modified by the user if necessary.\n<p>\nThen there are the perennial issues of floating point value\ncomparisons.  Exact equality is specified by <code>SET-EXACT</code>\n(the default).  If approximate equality tests are desired, execute\n<code>SET-NEAR</code>.  Then the \n<a href=\"float/FVARIABLE\">FVARIABLE</a>s <code>REL-NEAR</code> (default 1E-12) and\n<code>ABS-NEAR</code> (default 0E) contain the values to be used in\ncomparisons by the (internal) word <code>FNEARLY=</code>.\n</p><p>\nWhen there is not a separate floating point stack, and you want to use\napproximate equality for FP values, it is necessary to identify which\nstack items are floating point quantities.  This can be done by\nreplacing the closing <code>}T</code> with a version that specifies\nthis, such as <code>RRXR}T</code> which identifies the stack picture\n (<em>r r x r</em>).  The harness provides such words for all\ncombinations of R and X with up to four stack items.  They can be\nused with either an integrated or a separate floating point stacks.\nAdding more if you need them is straightforward; see the examples in\nthe source.  Here is an example which also illustrates controlling\nthe precision of comparisons:\n</p><p>\n</p><div class=\"tt\">\n\n  SET-NEAR <br>\n  1E-6 REL-NEAR <a href=\"float/FStore\">F!</a> <br>\n  <span class=\"tt\">T{ S\"&nbsp;3.14159E\"&nbsp;<a href=\"float/toFLOAT\">&gt;FLOAT</a> -&gt; -1E&nbsp;<a href=\"float/FACOS\">FACOS</a>&nbsp;&lt;TRUE&gt; RX}T</span>\n  \n  </div>\n<p>\n</p><h3 id=\"subsection.F.2.2\">F.2.2 Error Processing</h3>\n<p>\nThe internal word <code>ERROR</code> is vectored, through the\n<code>ERROR-XT</code> variable, so that its action can be changed by\nthe user (for example, to add a counter for the number of errors).\nThe default action <code>ERROR1</code> can be used as a factor in the\ndisplay of error reports.\n</p><p>\n</p><h3 id=\"subsection.F.2.3\">F.2.3 Source</h3>\n<p>\nThe following source code provides the test harness.\n</p><p>\n\n\n\n</p><div class=\"tt\">\n\n  <a href=\"core/bs\">\\</a> This is the source for the ANS test harness, it is based on the<br>\n  <a href=\"core/bs\">\\</a> harness originally developed by John Hayes<br>\n  <br>\n  <a href=\"core/bs\">\\</a> (C) 1995 JOHNS HOPKINS UNIVERSITY / APPLIED PHYSICS LABORATORY<br>\n  <a href=\"core/bs\">\\</a> MAY BE DISTRIBUTED FREELY AS LONG AS THIS COPYRIGHT NOTICE REMAINS.<br>\n  <a href=\"core/bs\">\\</a> VERSION 1.1<br>\n  <br>\n  <a href=\"core/bs\">\\</a> Revision history and possibly newer versions can be found at<br>\n  <a href=\"core/bs\">\\</a> http://www.forth200x/tests/ttester.fs<br>\n  <br>\n  <a href=\"core/BASE\">BASE</a> <a href=\"core/Fetch\">@</a> <br>\n  <a href=\"core/HEX\">HEX</a> <br>\n  <br>\n  <a href=\"core/VARIABLE\">VARIABLE</a> ACTUAL-DEPTH         <a href=\"core/bs\">\\</a> stack record <br>\n  <a href=\"core/CREATE\">CREATE</a> ACTUAL-RESULTS 20 <a href=\"core/CELLS\">CELLS</a> <a href=\"core/ALLOT\">ALLOT</a> <br>\n  <a href=\"core/VARIABLE\">VARIABLE</a> START-DEPTH <br>\n  <a href=\"core/VARIABLE\">VARIABLE</a> XCURSOR              <a href=\"core/bs\">\\</a> for ...}T <br>\n  <a href=\"core/VARIABLE\">VARIABLE</a> ERROR-XT <br>\n  <br>\n  <a href=\"core/Colon\">:</a> ERROR ERROR-XT <a href=\"core/Fetch\">@</a> <a href=\"core/EXECUTE\">EXECUTE</a> <a href=\"core/Semi\">;</a>  <a href=\"core/bs\">\\</a> for vectoring of error reporting <br>\n  <br>\n  <a href=\"core/Colon\">:</a> \"FLOATING\" <a href=\"core/Sq\">S\"</a> FLOATING\" <a href=\"core/Semi\">;</a>   <a href=\"core/bs\">\\</a> only compiled S\" in CORE <br>\n  <a href=\"core/Colon\">:</a> \"FLOATING-STACK\" <a href=\"core/Sq\">S\"</a> FLOATING-STACK\" <a href=\"core/Semi\">;</a> <br>\n  \"FLOATING\" <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TRUE\">TRUE</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketELSE\">[ELSE]</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/FALSE\">FALSE</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n  <a href=\"tools/BracketELSE\">[ELSE]</a> <br>\n  &nbsp;&nbsp; <a href=\"core/FALSE\">FALSE</a> <br>\n  <a href=\"tools/BracketTHEN\">[THEN]</a> <a href=\"core/CONSTANT\">CONSTANT</a> HAS-FLOATING <br>\n  <br>\n  \"FLOATING-STACK\" <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/TRUE\">TRUE</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketELSE\">[ELSE]</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/FALSE\">FALSE</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n  <a href=\"tools/BracketELSE\">[ELSE]</a>            <a href=\"core/bs\">\\</a> We don't know whether the FP stack is separate. <br>\n  &nbsp;&nbsp; HAS-FLOATING   <a href=\"core/bs\">\\</a> If we have FLOATING, we assume it is. <br>\n  <a href=\"tools/BracketTHEN\">[THEN]</a> <a href=\"core/CONSTANT\">CONSTANT</a> HAS-FLOATING-STACK <br>\n  <br>\n  HAS-FLOATING <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp; <a href=\"core/bs\">\\</a> Set the following to the relative and absolute tolerances you <br>\n  &nbsp;&nbsp; <a href=\"core/bs\">\\</a> want for approximate float equality, to be used with F  in <br>\n  &nbsp;&nbsp; <a href=\"core/bs\">\\</a> FNEARLY=.  Keep the signs, because F  needs them. <br>\n  &nbsp;&nbsp; <a href=\"float/FVARIABLE\">FVARIABLE</a> REL-NEAR <a href=\"core/DECIMAL\">DECIMAL</a> 1E-12 <a href=\"core/HEX\">HEX</a> REL-NEAR <a href=\"float/FStore\">F!</a> <br>\n  &nbsp;&nbsp; <a href=\"float/FVARIABLE\">FVARIABLE</a> ABS-NEAR <a href=\"core/DECIMAL\">DECIMAL</a>    0E <a href=\"core/HEX\">HEX</a> ABS-NEAR <a href=\"float/FStore\">F!</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/bs\">\\</a> When EXACT? is TRUE, }F uses FEXACTLY=, otherwise FNEARLY=. <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/TRUE\">TRUE</a> <a href=\"core/VALUE\">VALUE</a> EXACT? <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> SET-EXACT  <a href=\"core/p\">(</a> -- )   <a href=\"core/TRUE\">TRUE</a> <a href=\"core/TO\">TO</a> EXACT? <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> SET-NEAR   <a href=\"core/p\">(</a> -- )  <a href=\"core/FALSE\">FALSE</a> <a href=\"core/TO\">TO</a> EXACT? <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/DECIMAL\">DECIMAL</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> FEXACTLY=  <a href=\"core/p\">(</a> F: X Y -- S: FLAG ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; Leave TRUE if the two floats are identical. <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; 0E <a href=\"float/Ftilde\">F~</a> <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/HEX\">HEX</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> FABS=  <a href=\"core/p\">(</a> F: X Y -- S: FLAG ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; Leave TRUE if the two floats are equal within the tolerance <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; stored in ABS-NEAR. <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ABS-NEAR <a href=\"float/FFetch\">F@</a> <a href=\"float/Ftilde\">F~</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> FREL=  <a href=\"core/p\">(</a> F: X Y -- S: FLAG ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; Leave TRUE if the two floats are relatively equal based on the <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; tolerance stored in ABS-NEAR. <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; REL-NEAR <a href=\"float/FFetch\">F@</a> <a href=\"float/FNEGATE\">FNEGATE</a> <a href=\"float/Ftilde\">F~</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F2DUP  <a href=\"float/FOVER\">FOVER</a> <a href=\"float/FOVER\">FOVER</a> <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F2DROP <a href=\"float/FDROP\">FDROP</a> <a href=\"float/FDROP\">FDROP</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> FNEARLY=  <a href=\"core/p\">(</a> F: X Y -- S: FLAG ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; Leave TRUE if the two floats are nearly equal.  This is a  <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; refinement of Dirk Zoller's FEQ to also allow X = Y, including <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; both zero, or to allow approximately equality when X and Y are too <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; small to satisfy the relative approximation mode in the F~ <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; specification. <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; F2DUP FEXACTLY= <a href=\"core/IF\">IF</a> F2DROP <a href=\"core/TRUE\">TRUE</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; F2DUP FREL=     <a href=\"core/IF\">IF</a> F2DROP <a href=\"core/TRUE\">TRUE</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; FABS= <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> FCONF= <a href=\"core/p\">(</a> R1 R2 -- F ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; EXACT? <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  FEXACTLY= <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  FNEARLY= <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n  <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n  <br>\n  HAS-FLOATING-STACK <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp; <a href=\"core/VARIABLE\">VARIABLE</a> ACTUAL-FDEPTH <br>\n  &nbsp;&nbsp; <a href=\"core/CREATE\">CREATE</a> ACTUAL-FRESULTS 20 <a href=\"float/FLOATS\">FLOATS</a> <a href=\"core/ALLOT\">ALLOT</a> <br>\n  &nbsp;&nbsp; <a href=\"core/VARIABLE\">VARIABLE</a> START-FDEPTH <br>\n  &nbsp;&nbsp; <a href=\"core/VARIABLE\">VARIABLE</a> FCURSOR <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> EMPTY-FSTACK <a href=\"core/p\">(</a> ... -- ... ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/less\">&lt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DO\">DO</a> 0E <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/DO\">DO</a> <a href=\"float/FDROP\">FDROP</a> <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F{ <a href=\"core/p\">(</a> -- ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Store\">!</a> 0 FCURSOR <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F-&gt; <a href=\"core/p\">(</a> ... -- ... ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDEPTH\">FDEPTH</a> <a href=\"core/DUP\">DUP</a> ACTUAL-FDEPTH <a href=\"core/Store\">!</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Minus\">-</a> 0 <a href=\"core/DO\">DO</a> ACTUAL-FRESULTS <a href=\"core/I\">I</a> <a href=\"float/FLOATS\">FLOATS</a> <a href=\"core/Plus\">+</a> <a href=\"float/FStore\">F!</a> <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F} <a href=\"core/p\">(</a> ... -- ... ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDEPTH\">FDEPTH</a> ACTUAL-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Minus\">-</a> 0 <a href=\"core/DO\">DO</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    ACTUAL-FRESULTS <a href=\"core/I\">I</a> <a href=\"float/FLOATS\">FLOATS</a> <a href=\"core/Plus\">+</a> <a href=\"float/FFetch\">F@</a> FCONF= <a href=\"core/INVERT\">INVERT</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     <a href=\"core/Sq\">S\"</a> INCORRECT FP RESULT: \" ERROR <a href=\"core/LEAVE\">LEAVE</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"core/Sq\">S\"</a> WRONG NUMBER OF FP RESULTS: \" ERROR <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F...}T <a href=\"core/p\">(</a> -- ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; FCURSOR <a href=\"core/Fetch\">@</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Plus\">+</a> ACTUAL-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/ne\">&lt;&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> NUMBER OF FLOAT RESULTS BEFORE '-&gt;' DOES NOT MATCH ...}T \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> SPECIFICATION: \" ERROR <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <a href=\"float/FDEPTH\">FDEPTH</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Equal\">=</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> NUMBER OF FLOAT RESULTS BEFORE AND AFTER '-&gt;' DOES NOT MATCH: \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   ERROR <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> FTESTER <a href=\"core/p\">(</a> R -- ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"float/FDEPTH\">FDEPTH</a> <a href=\"core/ZeroEqual\">0=</a> ACTUAL-FDEPTH <a href=\"core/Fetch\">@</a> FCURSOR <a href=\"core/Fetch\">@</a> START-FDEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Plus\">+</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/less\">&lt;</a> <a href=\"core/OR\">OR</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> NUMBER OF FLOAT RESULTS AFTER '-&gt;' BELOW ...}T SPECIFICATION: \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   ERROR  <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> ACTUAL-FRESULTS FCURSOR <a href=\"core/Fetch\">@</a> <a href=\"float/FLOATS\">FLOATS</a> <a href=\"core/Plus\">+</a> <a href=\"float/FFetch\">F@</a> FCONF= <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> INCORRECT FP RESULT: \" ERROR <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; 1 FCURSOR <a href=\"core/PlusStore\">+!</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"tools/BracketELSE\">[ELSE]</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> EMPTY-FSTACK <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F{ <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F-&gt; <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F} <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> F...}T <a href=\"core/Semi\">;</a> <br>\n  <br>\n  &nbsp;&nbsp; HAS-FLOATING <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DECIMAL\">DECIMAL</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> COMPUTE-CELLS-PER-FP <a href=\"core/p\">(</a> -- U ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/DEPTH\">DEPTH</a> 0E <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/OneMinus\">1-</a> <a href=\"core/toR\">&gt;R</a> <a href=\"float/FDROP\">FDROP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/Minus\">-</a> <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/HEX\">HEX</a> <br>\n  <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; COMPUTE-CELLS-PER-FP <a href=\"core/CONSTANT\">CONSTANT</a> CELLS-PER-FP <br>\n  <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> FTESTER <a href=\"core/p\">(</a> R -- ) <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"core/DEPTH\">DEPTH</a> CELLS-PER-FP <a href=\"core/less\">&lt;</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ACTUAL-DEPTH <a href=\"core/Fetch\">@</a> XCURSOR <a href=\"core/Fetch\">@</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Plus\">+</a> CELLS-PER-FP <a href=\"core/Plus\">+</a> <a href=\"core/less\">&lt;</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"core/OR\">OR</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> NUMBER OF RESULTS AFTER '-&gt;' BELOW ...}T SPECIFICATION: \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ERROR <a href=\"core/EXIT\">EXIT</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"core/ELSE\">ELSE</a> ACTUAL-RESULTS XCURSOR <a href=\"core/Fetch\">@</a> <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"float/FFetch\">F@</a> FCONF= <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> INCORRECT FP RESULT: \" ERROR <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CELLS-PER-FP XCURSOR <a href=\"core/PlusStore\">+!</a> <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n  <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> EMPTY-STACK\t<a href=\"core/bs\">\\</a> ( ... -- ) empty stack; handles underflowed stack too. <br>\n  &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/less\">&lt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DO\">DO</a> 0 <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/DO\">DO</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; EMPTY-FSTACK <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> ERROR1\t<a href=\"core/bs\">\\</a> ( C-ADDR U -- ) display an error message  <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> followed by the line that had the error. <br>\n  &nbsp;&nbsp; <a href=\"core/TYPE\">TYPE</a> <a href=\"core/SOURCE\">SOURCE</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a>\t\t\t<a href=\"core/bs\">\\</a> display line corresponding to error <br>\n  &nbsp;&nbsp; EMPTY-STACK         <a href=\"core/bs\">\\</a> throw away everything else <br>\n  <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Tick\">'</a> ERROR1 ERROR-XT <a href=\"core/Store\">!</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> T{\t\t<a href=\"core/bs\">\\</a> ( -- ) record the pre-test depth. <br>\n  &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Store\">!</a> 0 XCURSOR <a href=\"core/Store\">!</a> F{ <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> -&gt;\t\t<a href=\"core/bs\">\\</a> ( ... -- ) record depth and contents of stack. <br>\n  &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/DUP\">DUP</a> ACTUAL-DEPTH <a href=\"core/Store\">!</a>\t\t<a href=\"core/bs\">\\</a> record depth <br>\n  &nbsp;&nbsp; START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a>\t\t<a href=\"core/bs\">\\</a> if there is something on the stack <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Minus\">-</a> 0 <a href=\"core/DO\">DO</a> <a href=\"core/bs\">\\</a> save them <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \t\tACTUAL-RESULTS <a href=\"core/I\">I</a> <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"core/Store\">!</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; F-&gt; <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> }T\t\t<a href=\"core/bs\">\\</a> ( ... -- ) comapre stack (expected) contents with saved <br>\n  &nbsp;&nbsp;   <a href=\"core/bs\">\\</a> (actual) contents. <br>\n  &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> ACTUAL-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> if depths match <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> if something on the stack <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Minus\">-</a> 0 <a href=\"core/DO\">DO</a>\t&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> for each stack item <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ACTUAL-RESULTS <a href=\"core/I\">I</a> <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"core/Fetch\">@</a>\t&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> compare actual with expected <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ne\">&lt;&gt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/Sq\">S\"</a> INCORRECT RESULT: \" ERROR <a href=\"core/LEAVE\">LEAVE</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> depth mismatch <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> WRONG NUMBER OF RESULTS: \" ERROR <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; F} <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> ...}T <a href=\"core/p\">(</a> -- ) <br>\n  &nbsp;&nbsp; XCURSOR <a href=\"core/Fetch\">@</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Plus\">+</a> ACTUAL-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/ne\">&lt;&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> NUMBER OF CELL RESULTS BEFORE '-&gt;' DOES NOT MATCH ...}T \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> SPECIFICATION: \" ERROR <br>\n  &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <a href=\"core/DEPTH\">DEPTH</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Equal\">=</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> NUMBER OF CELL RESULTS BEFORE AND AFTER '-&gt;' DOES NOT MATCH: \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ERROR <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; F...}T <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> XTESTER <a href=\"core/p\">(</a> X -- ) <br>\n  &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/ZeroEqual\">0=</a> ACTUAL-DEPTH <a href=\"core/Fetch\">@</a> XCURSOR <a href=\"core/Fetch\">@</a> START-DEPTH <a href=\"core/Fetch\">@</a> <a href=\"core/Plus\">+</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/less\">&lt;</a> <a href=\"core/OR\">OR</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> NUMBER OF CELL RESULTS AFTER '-&gt;' BELOW ...}T SPECIFICATION: \" <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; ERROR <a href=\"core/EXIT\">EXIT</a> <br>\n  &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> ACTUAL-RESULTS XCURSOR <a href=\"core/Fetch\">@</a> <a href=\"core/CELLS\">CELLS</a> <a href=\"core/Plus\">+</a> <a href=\"core/Fetch\">@</a> <a href=\"core/ne\">&lt;&gt;</a> <a href=\"core/IF\">IF</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Sq\">S\"</a> INCORRECT CELL RESULT: \" ERROR <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp; 1 XCURSOR <a href=\"core/PlusStore\">+!</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> X}T    XTESTER                         ...}T <a href=\"core/Semi\">;</a> <br>\n  <a href=\"core/Colon\">:</a> XX}T   XTESTER XTESTER                 ...}T <a href=\"core/Semi\">;</a> <br>\n  <a href=\"core/Colon\">:</a> XXX}T  XTESTER XTESTER XTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  <a href=\"core/Colon\">:</a> XXXX}T XTESTER XTESTER XTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  <br>\n  HAS-FLOATING <a href=\"tools/BracketIF\">[IF]</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> R}T    FTESTER                         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XR}T   FTESTER XTESTER                 ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RX}T   XTESTER FTESTER                 ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RR}T   FTESTER FTESTER                 ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XXR}T  FTESTER XTESTER XTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XRX}T  XTESTER FTESTER XTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XRR}T  FTESTER FTESTER XTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RXX}T  XTESTER XTESTER FTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RXR}T  FTESTER XTESTER FTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RRX}T  XTESTER FTESTER FTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RRR}T  FTESTER FTESTER FTESTER         ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XXXR}T FTESTER XTESTER XTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XXRX}T XTESTER FTESTER XTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XXRR}T FTESTER FTESTER XTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XRXX}T XTESTER XTESTER FTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XRXR}T FTESTER XTESTER FTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XRRX}T XTESTER FTESTER FTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> XRRR}T FTESTER FTESTER FTESTER XTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RXXX}T XTESTER XTESTER XTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RXXR}T FTESTER XTESTER XTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RXRX}T XTESTER FTESTER XTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RXRR}T FTESTER FTESTER XTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RRXX}T XTESTER XTESTER FTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RRXR}T FTESTER XTESTER FTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RRRX}T XTESTER FTESTER FTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  &nbsp;&nbsp; <a href=\"core/Colon\">:</a> RRRR}T FTESTER FTESTER FTESTER FTESTER ...}T <a href=\"core/Semi\">;</a> <br>\n  <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n  <br>\n  <a href=\"core/bs\">\\</a> Set the following flag to TRUE for more verbose output; this may <br>\n  <a href=\"core/bs\">\\</a> allow you to tell which test caused your system to hang. <br>\n  <a href=\"core/VARIABLE\">VARIABLE</a> VERBOSE <br>\n  \n  <a href=\"core/FALSE\">FALSE</a> VERBOSE <a href=\"core/Store\">!</a> <br>\n  <br>\n  <a href=\"core/Colon\">:</a> TESTING\t<a href=\"core/bs\">\\</a> ( -- ) TALKING COMMENT. <br>\n  &nbsp;&nbsp; <a href=\"core/SOURCE\">SOURCE</a> VERBOSE <a href=\"core/Fetch\">@</a> <br>\n  &nbsp;&nbsp; <a href=\"core/IF\">IF</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Store\">!</a> <br>\n  &nbsp;&nbsp; <a href=\"core/ELSE\">ELSE</a> <a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Store\">!</a> <a href=\"core/DROP\">DROP</a> <br>\n  &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n  <br>\n  <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a>\n  \n  </div>\n\n\n<h2 id=\"section.F.3\">F.3 Core Tests</h2>\n<a name=\"test:core\"></a>\n<p>\nThe test cases in John Hayes' original test suite were designed to\ntest features before they were used in later tests.  Due to the\nstructure of this annex the progressive testing has been lost.  This\nsection attempts to retain the integrity of the original test suite\nby laying out the test progression for the core word set.\n</p><p>\nWhile this suite does test many aspects of the core word set, it is\nnot comprehensive.  A standard system <em>should</em> pass all of the\ntests within this suite.  A system cannot claim to be standard simply\nbecause it passes this test suite.\n</p><p>\nThe test starts by verifying basic assumptions about number\nrepresentation.  It then builds on this with tests of boolean logic,\nshifting, and comparisons.  It then tests the basic stack manipulations\nand arithmetic.  Ultimately, it tests the Forth interpreter and\ncompiler.\n</p><p>\nNote that all of the tests in this suite assume the current base is\n<em>hexadecimal</em>.\n</p><p>\n</p><h3 id=\"subsection.F.3.1\">F.3.1 Basic Assumptions</h3>\n<p>\nThese test assume a two's complement implementation where the range of\nsigned numbers is <em>-2<sup>n-1</sup></em> <em>...</em> <em>2<sup>n-1</sup>-1</em> and the range of\nunsinged numbers is <em>0</em> <em>...</em> <em>2<sup>n</sup>-1</em>.\n</p><p>\nA method for testing <a href=\"core/KEY\">KEY</a>, <a href=\"core/QUIT\">QUIT</a>, <a href=\"core/ABORT\">ABORT</a>,\n<a href=\"core/ABORTq\">ABORT\"</a>, <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>, etc has yet to be proposed.\n</p><p>\n<span class=\"tt\">T{  -&gt;  }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code><a href=\"core/p\">(</a> Start with a clean slate )</code> <br>\n<code><a href=\"core/p\">(</a> Test if any bits are set; Answer in base 1 )</code> <br>\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;BITSSET?&nbsp;<a href=\"core/IF\">IF</a>&nbsp;0&nbsp;0&nbsp;<a href=\"core/ELSE\">ELSE</a>&nbsp;0&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n<span class=\"tt\">T{ &nbsp;0&nbsp;BITSSET? -&gt; 0 }T</span>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code><a href=\"core/p\">(</a> Zero is all bits clear )</code> <br>\n<span class=\"tt\">T{ &nbsp;1&nbsp;BITSSET? -&gt; 0&nbsp;0 }T</span>\t&nbsp;&nbsp;&nbsp;&nbsp; <code><a href=\"core/p\">(</a> Other numbers have at least one bit )</code> <br>\n<span class=\"tt\">T{ -1&nbsp;BITSSET? -&gt; 0&nbsp;0 }T</span>\n</p><p>\n</p><h3 id=\"subsection.F.3.2\">F.3.2 Booleans</h3>\n<p>\nTo test the booleans it is first neccessary to test\n<a href=\"testsuite#test:core:AND\">F.6.1.0720 AND</a>, and <a href=\"testsuite#test:core:INVERT\">F.6.1.1720 INVERT</a>.  Before moving\non to the test <a href=\"testsuite#test:core:CONSTANT\">F.6.1.0950 CONSTANT</a>.  The latter defines\ntwo constants (<code>0S</code> and <code>1S</code>) which will be used in the\nfurther test.\n</p><p>\nIt is now possible to complete the testing of\n<a href=\"testsuite#test:core:AND\">F.6.1.0720 AND</a>,\n<a href=\"testsuite#test:core:OR\">F.6.1.1980 OR</a>, and\n<a href=\"testsuite#test:core:XOR\">F.6.1.2490 XOR</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.3\">F.3.3 Shifts</h3>\n<p>\nTo test the shift operators it is necessary to calculate the most\nsignificant bit of a cell:\n</p><p>\n</p><div class=\"quote\">\n\n  <code>1S 1 <a href=\"core/RSHIFT\">RSHIFT</a> <a href=\"core/INVERT\">INVERT</a> <a href=\"core/CONSTANT\">CONSTANT</a> MSB</code>\n  \n  </div>\n<p>\n<a href=\"core/RSHIFT\">RSHIFT</a> is tested later.\n<code>MSB</code> must have at least one bit set:\n</p><p>\n</p><div class=\"quote\">\n\n  <span class=\"tt\">T{ MSB&nbsp;BITSSET? -&gt; 0&nbsp;0 }T</span>\n  \n  </div>\n<p>\nThe test <a href=\"testsuite#test:core:2*\">F.6.1.0320 2*</a>, <a href=\"testsuite#test:core:2/\">F.6.1.0330 2/</a>,\n<a href=\"testsuite#test:core:LSHIFT\">F.6.1.1805 LSHIFT</a>, and <a href=\"testsuite#test:core:RSHIFT\">F.6.1.2162 RSHIFT</a>\ncan now be performed.\n</p><p>\n</p><h3 id=\"subsection.F.3.4\">F.3.4 Numeric notation</h3><!-- A.3.4.1.3 -->\n<a name=\"test:numeric\"></a>\n<p>\nThe numeric representation can be tested with the following test cases:\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/DECIMAL\">DECIMAL</a> <br>\n  <span class=\"tt\">T{ #1289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ #12346789.&nbsp; -&gt; 12346789.&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ #-1289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -1289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ #-12346789. -&gt; -12346789.&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ $12eF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 4847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ $12aBcDeF.&nbsp; -&gt; 313249263.&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ $-12eF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -4847&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ $-12AbCdEf. -&gt; -313249263. }T</span> <br>\n  <span class=\"tt\">T{ %10010110&nbsp;&nbsp; -&gt; 150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ %10010110.&nbsp; -&gt; 150.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ %-10010110&nbsp; -&gt; -150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ %-10010110. -&gt; -150.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n  <span class=\"tt\">T{ 'z'&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n  \n  </div>\n<p>\n</p><h3 id=\"subsection.F.3.5\">F.3.5 Comparisons</h3>\n<p>\nBefore testing the comparison operators it is necessary to define\na few constants to allow the testing of the upper and lower bounds.\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n\n    0 <a href=\"core/INVERT\">INVERT</a>                \t\t\t\t\t<a href=\"core/CONSTANT\">CONSTANT</a> MAX-UINT <br>\n    0 <a href=\"core/INVERT\">INVERT</a> 1 <a href=\"core/RSHIFT\">RSHIFT</a>       \t\t\t<a href=\"core/CONSTANT\">CONSTANT</a> MAX-INT <br>\n    0 <a href=\"core/INVERT\">INVERT</a> 1 <a href=\"core/RSHIFT\">RSHIFT</a> <a href=\"core/INVERT\">INVERT</a>\t<a href=\"core/CONSTANT\">CONSTANT</a> MIN-INT <br>\n    0 <a href=\"core/INVERT\">INVERT</a> 1 <a href=\"core/RSHIFT\">RSHIFT</a>       \t\t\t<a href=\"core/CONSTANT\">CONSTANT</a> MID-UINT <br>\n    0 <a href=\"core/INVERT\">INVERT</a> 1 <a href=\"core/RSHIFT\">RSHIFT</a> <a href=\"core/INVERT\">INVERT</a>\t<a href=\"core/CONSTANT\">CONSTANT</a> MID-UINT+1 <br>\n    <br>\n    0S <a href=\"core/CONSTANT\">CONSTANT</a> &lt;FALSE&gt; <br>\n    1S <a href=\"core/CONSTANT\">CONSTANT</a> &lt;TRUE&gt;\n    \n    </div>\n  </div>\n<p>\nWith these constants defined, it is now possible to perform the\n<a href=\"testsuite#test:core:0=\">F.6.1.0270 0=</a>,\n<a href=\"testsuite#test:core:=\">F.6.1.0530 =</a>,\n<a href=\"testsuite#test:core:0less\">F.6.1.0250 0&lt;</a>,\n<a href=\"testsuite#test:core:less\">F.6.1.0480 &lt;</a>,\n<a href=\"testsuite#test:core:more\">F.6.1.0540 &gt;</a>,\n<a href=\"testsuite#test:core:Uless\">F.6.1.2340 U&lt;</a>,\n<a href=\"testsuite#test:core:MIN\">F.6.1.1880 MIN</a>, and\n<a href=\"testsuite#test:core:MAX\">F.6.1.1870 MAX</a> test.\n</p><p>\n</p><h3 id=\"subsection.F.3.6\">F.3.6 Stack Operators</h3>\n<p>\nThe stack operators can be tested without any prepatory work.  The\n\"normal\" operators\n(<a href=\"testsuite#test:core:DROP\">F.6.1.1260 DROP</a>,\n<a href=\"testsuite#test:core:DUP\">F.6.1.1290 DUP</a>,\n<a href=\"testsuite#test:core:OVER\">F.6.1.1990 OVER</a>,\n<a href=\"testsuite#test:core:ROT\">F.6.1.2160 ROT</a>, and\n<a href=\"testsuite#test:core:SWAP\">F.6.1.2260 SWAP</a>)\nshould be tested first, followed by the two-cell variants\n(<a href=\"testsuite#test:core:2DROP\">F.6.1.0370 2DROP</a>,\n<a href=\"testsuite#test:core:2DUP\">F.6.1.0380 2DUP</a>,\n<a href=\"testsuite#test:core:2OVER\">F.6.1.0400 2OVER</a> and \n<a href=\"testsuite#test:core:2SWAP\">F.6.1.0430 2SWAP</a>)\nwith <a href=\"testsuite#test:core:qDUP\">F.6.1.0630 ?DUP</a> and <a href=\"testsuite#test:core:DEPTH\">F.6.1.1200 DEPTH</a> being\nperformed last.\n</p><p>\n</p><h3 id=\"subsection.F.3.7\">F.3.7 Return Stack Operators</h3>\n<p>\nThe test <a href=\"testsuite#test:core:toR\">F.6.1.0580 &gt;R</a> will test all three basic return\nstack operators (<a href=\"core/toR\">&gt;R</a>, <a href=\"core/Rfrom\">R&gt;</a>, and <a href=\"core/RFetch\">R@</a>).\n</p><p>\n</p><h3 id=\"subsection.F.3.8\">F.3.8 Addition and Subtraction</h3>\n<p>\nBasic addition and subtraction should be tested in the order:\n<a href=\"testsuite#test:core:+\">F.6.1.0120 +</a>,\n<a href=\"testsuite#test:core:-\">F.6.1.0160 -</a>,\n<a href=\"testsuite#test:core:1+\">F.6.1.0290 1+</a>,\n<a href=\"testsuite#test:core:1-\">F.6.1.0300 1-</a>,\n<a href=\"testsuite#test:core:ABS\">F.6.1.0690 ABS</a> and\n<a href=\"testsuite#test:core:NEGATE\">F.6.1.1910 NEGATE</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.9\">F.3.9 Multiplication</h3>\n<p>\nThe multiplication operators should be tested in the order:\n<a href=\"testsuite#test:core:StoD\">F.6.1.2170 S&gt;D</a>,\n<a href=\"testsuite#test:core:*\">F.6.1.0090 *</a>,\n<a href=\"testsuite#test:core:M*\">F.6.1.1810 M*</a>, and\n<a href=\"testsuite#test:core:UM*\">F.6.1.2360 UM*</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.10\">F.3.10 Division</h3>\n<p>\nDue to the complexity of the division operators they are tested\nseparately from the multiplication operators.  The basic division\noperators are tested first:\n<a href=\"testsuite#test:core:FM/MOD\">F.6.1.1561 FM/MOD</a>,\n<a href=\"testsuite#test:core:SM/REM\">F.6.1.2214 SM/REM</a>, and\n<a href=\"testsuite#test:core:UM/MOD\">F.6.1.2370 UM/MOD</a>.\n</p><p>\nAs the standard allows a system to provide either floored or symmetric\ndivision, the remaining operators have to be tested depending on the\nsystem behaviour.  Two words are defined that provide a form of\nconditional compilation.\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/Colon\">:</a> IFFLOORED \n  <a href=\"core/Bracket\">[</a> -3 2 <a href=\"core/Div\">/</a> -2 = <a href=\"core/INVERT\">INVERT</a> <a href=\"right-bracket\">]</a>\n  <a href=\"core/LITERAL\">LITERAL</a> <a href=\"core/IF\">IF</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/bs\">\\</a> <a href=\"core/THEN\">THEN</a>\n  <a href=\"core/Semi\">;</a> <br>\n  <a href=\"core/Colon\">:</a> IFSYM &nbsp;&nbsp;&nbsp;&nbsp;\n  <a href=\"core/Bracket\">[</a> -3 2 <a href=\"core/Div\">/</a> -1 = <a href=\"core/INVERT\">INVERT</a> <a href=\"right-bracket\">]</a>\n  <a href=\"core/LITERAL\">LITERAL</a> <a href=\"core/IF\">IF</a> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/bs\">\\</a> <a href=\"core/THEN\">THEN</a>\n  <a href=\"core/Semi\">;</a>\n  \n  </div>\n<p>\n<code>IFSYM</code> will ignore the rest of the line when it is performed\non a system with floored division and perform the line on a system\nwith symmetric division.  <code>IFFLOORED</code> is the direct inverse,\nignoring the rest of the line on systems with symmetric division and\nprocessing it on systems with floored division.\n</p><p>\nThe remaining division operators are tested by defining a version of\nthe operator using words which have already been tested (<a href=\"core/StoD\">S&gt;D</a>,\n<a href=\"core/MTimes\">M*</a>, <a href=\"core/FMDivMOD\">FM/MOD</a> and <a href=\"core/SMDivREM\">SM/REM</a>).  The test definition\nhandles the special case of differing signes.  As the test definitions\nuse the words which have just been tested, the tests must be performed\nin the order:\n<a href=\"testsuite#test:core:/MOD\">F.6.1.0240 /MOD</a>,\n<a href=\"testsuite#test:core:/\">F.6.1.0230 /</a>,\n<a href=\"testsuite#test:core:MOD\">F.6.1.1890 MOD</a>,\n<a href=\"testsuite#test:core:*/\">F.6.1.0100 */</a>, and\n<a href=\"testsuite#test:core:*/MOD\">F.6.1.0110 */MOD</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.11\">F.3.11 Memory</h3>\n<p>\nAs with the other sections, the tests for the memory access words\nbuild on previously tested words and thus require an order to the\ntesting.\n</p><p>\nThe first test (<a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a> (comma)) tests <a href=\"core/HERE\">HERE</a>, the\nsignle cell memory access words <a href=\"core/Fetch\">@</a>, <a href=\"core/Store\">!</a> and <a href=\"core/CELLPlus\">CELL+</a>\nas well as the double cell access words <a href=\"core/TwoFetch\">2@</a> and <a href=\"core/TwoStore\">2!</a>.  The\ntests <a href=\"testsuite#test:core:+!\">F.6.1.0130 +!</a> and <a href=\"testsuite#test:core:CELLS\">F.6.1.0890 CELLS</a> should then be\nperformed.\n</p><p>\nThe test (<a href=\"testsuite#test:core:C,\">F.6.1.0860 C,</a>) also tests the single character memory\nwords <a href=\"core/CFetch\">C@</a>, <a href=\"core/CStore\">C!</a>, and <a href=\"core/CHARPlus\">CHAR+</a>, leaving the test\n<a href=\"testsuite#test:core:CHARS\">F.6.1.0898 CHARS</a> to be performed seperatly.\n</p><p>\nFinally, the memory access alignment test <a href=\"testsuite#test:core:ALIGN\">F.6.1.0705 ALIGN</a>\nincludes a test of <a href=\"core/ALIGNED\">ALIGNED</a>, leaving  <a href=\"testsuite#test:core:ALLOT\">F.6.1.0710 ALLOT</a>\nas the final test in this group.\n</p><p>\n</p><h3 id=\"subsection.F.3.12\">F.3.12 Characters</h3>\n<p>\nBasic character handling:\n<a href=\"testsuite#test:core:BL\">F.6.1.0770 BL</a>,\n<a href=\"testsuite#test:core:CHAR\">F.6.1.0895 CHAR</a>,\n<a href=\"testsuite#test:core:[CHAR]\">F.6.1.2520 [CHAR]</a>,\n<a href=\"testsuite#test:core:[\">F.6.1.2500 [</a> which also tests <a href=\"right-bracket\">]</a>, and\n<a href=\"testsuite#test:core:Sq\">F.6.1.2165 S\"</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.13\">F.3.13 Dictionary</h3>\n<p>\nThe dictionary tests define a number of words as part of the test,\nthese are included in the approperate test:\n<a href=\"testsuite#test:core:'\">F.6.1.0070 '</a>,\n<a href=\"testsuite#test:core:[']\">F.6.1.2510 [']</a> both of which also test <a href=\"core/EXECUTE\">EXECUTE</a>,\n<a href=\"testsuite#test:core:FIND\">F.6.1.1550 FIND</a>,\n<a href=\"testsuite#test:core:LITERAL\">F.6.1.1780 LITERAL</a>,\n<a href=\"testsuite#test:core:COUNT\">F.6.1.0980 COUNT</a>,\n<a href=\"testsuite#test:core:POSTPONE\">F.6.1.2033 POSTPONE</a>,\n<a href=\"testsuite#test:core:STATE\">F.6.1.2250 STATE</a>\n</p><p>\n</p><h3 id=\"subsection.F.3.14\">F.3.14 Flow Control</h3>\n<p>\nThe flow control words have to be tested in matching groups.\nFirst test <a href=\"testsuite#test:core:IF\">F.6.1.1700 IF</a>, <a href=\"core/ELSE\">ELSE</a>, <a href=\"core/THEN\">THEN</a> group.\nFollowed by the <a href=\"core/BEGIN\">BEGIN</a>, <a href=\"testsuite#test:core:WHILE\">F.6.1.2430 WHILE</a>,\n<a href=\"core/REPEAT\">REPEAT</a> group, and the <a href=\"core/BEGIN\">BEGIN</a>, <a href=\"testsuite#test:core:UNTIL\">F.6.1.2390 UNTIL</a>\npairing.  Finally the <a href=\"testsuite#test:core:RECURSE\">F.6.1.2120 RECURSE</a> function should\nbe tested.\n</p><p>\n</p><h3 id=\"subsection.F.3.15\">F.3.15 Counted Loops</h3>\n<p>\nCounted loops have a set of special condition that require testing.\nAs with the flow control words, these words have to be tested as\na group.\nFirst the basic counted loop: <a href=\"core/DO\">DO</a>; <a href=\"core/I\">I</a>;\n<a href=\"testsuite#test:core:LOOP\">F.6.1.1800 LOOP</a>,\nfollowed by loops with a non regular increment:\n<a href=\"testsuite#test:core:+LOOP\">F.6.1.0140 +LOOP</a>,\nloops within loops:\n<a href=\"testsuite#test:core:J\">F.6.1.1730 J</a>,\nand aborted loops:\n<a href=\"testsuite#test:core:LEAVE\">F.6.1.1760 LEAVE</a>;\n<a href=\"testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a> which includes a test for <a href=\"core/EXIT\">EXIT</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.16\">F.3.16 Defining Words</h3>\n<p>\nAlthough most of the defining words have already been used within the\ntest suite, they still need to be tested fully.  The tests include\n<a href=\"testsuite#test:core::\">F.6.1.0450 :</a> which also tests <a href=\"core/Semi\">;</a>,\n<a href=\"testsuite#test:core:CONSTANT\">F.6.1.0950 CONSTANT</a>,\n<a href=\"testsuite#test:core:VARIABLE\">F.6.1.2410 VARIABLE</a>,\n<a href=\"testsuite#test:core:DOES\">F.6.1.1250 DOES&gt;</a> which includes tests <a href=\"core/CREATE\">CREATE</a>, and\n<a href=\"testsuite#test:core:toBODY\">F.6.1.0550 &gt;BODY</a> which also tests <a href=\"core/CREATE\">CREATE</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.17\">F.3.17 Evaluate</h3>\n<p>\nAs with the defining words, <a href=\"testsuite#test:core:EVALUATE\">F.6.1.1360 EVALUATE</a> has\nalready been used, but it must still be tested fully.\n</p><p>\n</p><h3 id=\"subsection.F.3.18\">F.3.18 Parser Input Source Control</h3>\n<p>\nTesting of the input source can be quit dificult.  The tests\nrequire line breaks within the test:\n<a href=\"testsuite#test:core:SOURCE\">F.6.1.2216 SOURCE</a>,\n<a href=\"testsuite#test:core:toIN\">F.6.1.0560 &gt;IN</a>, and\n<a href=\"testsuite#test:core:WORD\">F.6.1.2450 WORD</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.19\">F.3.19 Number Patterns</h3>\n<p>\nThe number formatting words produce a string, a word that compares\ntwo strings is required.  This test suite assumes that the optional\nString word set is unavailable.  Thus a string comparison word is\ndefined, using only trusted words:\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/Colon\">:</a> S=  <a href=\"core/bs\">\\</a> ( ADDR1 C1 ADDR2 C2 -- T/F ) Compare two strings. <br>\n  &nbsp;&nbsp;  <a href=\"core/toR\">&gt;R</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/RFetch\">R@</a> <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> Make sure strings have same length <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/qDUP\">?DUP</a> <a href=\"core/IF\">IF</a>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> If non-empty strings <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     0 <a href=\"core/DO\">DO</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       <a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/Minus\">-</a>\n  <a href=\"core/IF\">IF</a> <a href=\"core/TwoDROP\">2DROP</a> &lt;FALSE&gt; <a href=\"core/UNLOOP\">UNLOOP</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       <a href=\"core/SWAP\">SWAP</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/CHARPlus\">CHAR+</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     <a href=\"core/LOOP\">LOOP</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/THEN\">THEN</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/TwoDROP\">2DROP</a> &lt;TRUE&gt;\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> If we get here, strings match <br>\n  &nbsp;&nbsp;  <a href=\"core/ELSE\">ELSE</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp;   <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/TwoDROP\">2DROP</a> &lt;FALSE&gt;\t\t <a href=\"core/bs\">\\</a> Lengths mismatch <br>\n  &nbsp;&nbsp;  <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n  \n  </div>\n<p>\nThe number formatting words have to be tested as a group with\n<a href=\"testsuite#test:core:HOLD\">F.6.1.1670 HOLD</a>,\n<a href=\"testsuite#test:core:SIGN\">F.6.1.2210 SIGN</a>, and\n<a href=\"testsuite#test:core:num\">F.6.1.0030 #</a> all including tests for\n<a href=\"core/num-start\">&lt;#</a> and <a href=\"core/num-end\">#&gt;</a>.\n</p><p>\nBefore the <a href=\"testsuite#test:core:numS\">F.6.1.0050 #S</a> test can be performed it is\nnecessary to calculate the number of bits required to store the\nlargest double value.\n</p><p>\n</p><div class=\"tt\">\n\n  24 <a href=\"core/CONSTANT\">CONSTANT</a> MAX-BASE\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> BASE 2 ... 36 <br>\n  <a href=\"core/Colon\">:</a> COUNT-BITS <br>\n  &nbsp;&nbsp; 0 0 <a href=\"core/INVERT\">INVERT</a>\n  <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/WHILE\">WHILE</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/TwoTimes\">2*</a> <a href=\"core/REPEAT\">REPEAT</a>\n  <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a> <br>\n  COUNT-BITS <a href=\"core/TwoTimes\">2*</a> <a href=\"core/CONSTANT\">CONSTANT</a> #BITS-UD\t\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> NUMBER OF BITS IN UD\n  \n  </div>\n<p>\nThe <a href=\"testsuite#test:core:toNUMBER\">F.6.1.0570 &gt;NUMBER</a> test can now be performed.\nFinally, the <a href=\"testsuite#test:core:BASE\">F.6.1.0750 BASE</a> test, which includes tests for\n<a href=\"core/HEX\">HEX</a> and <a href=\"core/DECIMAL\">DECIMAL</a>, can be performed.\n</p><p>\n</p><h3 id=\"subsection.F.3.20\">F.3.20 Memory Movement</h3>\n<p>\nFrist two memory buffers are defined:\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/CREATE\">CREATE</a> FBUF 00 <a href=\"core/CComma\">C,</a> 00 <a href=\"core/CComma\">C,</a> 00 <a href=\"core/CComma\">C,</a> <br>\n  <a href=\"core/CREATE\">CREATE</a> SBUF 12 <a href=\"core/CComma\">C,</a> 34 <a href=\"core/CComma\">C,</a> 56 <a href=\"core/CComma\">C,</a> <br>\n  <a href=\"core/Colon\">:</a> SEEBUF FBUF <a href=\"core/CFetch\">C@</a>  FBUF <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/CFetch\">C@</a>  FBUF <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/Semi\">;</a>\n  \n  </div>\n<p>\nAs the content of <code>FBUF</code> is changed by the\n<a href=\"testsuite#test:core:FILL\">F.6.1.1540 FILL</a> test, this must be executed before the\n <a href=\"testsuite#test:core:MOVE\">F.6.1.1900 MOVE</a> test.\n</p><p>\n</p><h3 id=\"subsection.F.3.21\">F.3.21 Output</h3>\n<p>\nAs there is no provision for capturing the output stream so that it\ncan be compared to an expected result there is not automatic method\nof testing the output generation words.  The user is required to\nvalidate the output for the <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a> test.  This tests\nthe selection of output words <a href=\"core/d\">.</a>, <a href=\"core/Dotq\">.\"</a>, <a href=\"core/CR\">CR</a>,\n<a href=\"core/SPACE\">SPACE</a>, <a href=\"core/SPACES\">SPACES</a>, <a href=\"core/TYPE\">TYPE</a>, and <a href=\"core/Ud\">U.</a>.\n</p><p>\n</p><h3 id=\"subsection.F.3.22\">F.3.22 Input</h3>\n<p>\nTo test the input word (<a href=\"testsuite#test:core:ACCEPT\">F.6.1.0695 ACCEPT</a>) the user is\nrequired to type up to 80 characters.  The system will buffer the\ninput sequence and output it to the user for inspection.\n</p><p>\n</p><h3 id=\"subsection.F.3.23\">F.3.23 Dictionary Search Rules</h3>\n<p>\nThe final test in this suite is included with <a href=\"testsuite#test:core::\">F.6.1.0450 :</a> and\ntests the search order of the dictionary.  It asserts that a\ndefinition that uses its own name in the definition is not recursive\nbut rather refers to the previous definition of the word.\n</p><p>\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GDX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\t&nbsp;&nbsp; <code><a href=\"core/bs\">\\</a> First defintion</code> <br>\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GDX&nbsp;GDX&nbsp;234&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\t&nbsp;&nbsp; <code><a href=\"core/bs\">\\</a> Second defintion</code> <br>\n<span class=\"tt\">T{ GDX -&gt; 123&nbsp;234 }T</span>\n</p><p>\n\n\n\n\n</p><h2 id=\"section.F.6\">F.6 The Core word set</h2> <!-- T.6 -->\n\n<div class=\"wordHead\" id=\"test:core:!\">\n  <div class=\"wordNumber\">F.6.1.0010</div>\n  <div class=\"wordName\">!</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:num\">\n  <div class=\"wordNumber\">F.6.1.0030</div>\n  <div class=\"wordName\">#</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <code><a href=\"core/Colon\">:</a> GP3  <a href=\"core/num-start\">&lt;#</a> 1 0 <strong>#</strong> <strong>#</strong> <a href=\"core/num-end\">#&gt;</a> <a href=\"core/Sq\">S\"</a> 01\" S= <a href=\"core/Semi\">;</a></code> <br>\n    <span class=\"tt\">T{ GP3 -&gt; &lt;TRUE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:num-end\">\n  <div class=\"wordNumber\">F.6.1.0040</div>\n  <div class=\"wordName\">#&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:num\">F.6.1.0030 #</a>,\n    <a href=\"testsuite#test:core:numS\">F.6.1.0050 #S</a>,\n    <a href=\"testsuite#test:core:HOLD\">F.6.1.1670 HOLD</a> and\n    <a href=\"testsuite#test:core:SIGN\">F.6.1.2210 SIGN</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:numS\">\n  <div class=\"wordNumber\">F.6.1.0050</div>\n  <div class=\"wordName\">#S</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<code><a href=\"core/Colon\">:</a> GP4  <a href=\"core/num-start\">&lt;#</a> 1 0 <strong>#S</strong> <a href=\"core/num-end\">#&gt;</a> <a href=\"core/Sq\">S\"</a> 1\" S= <a href=\"core/Semi\">;</a></code> <br>\n      <span class=\"tt\">T{ GP4 -&gt; &lt;TRUE&gt; }T</span>\n      <p>\n      <a href=\"core/Colon\">:</a> GP5 <br>\n      &nbsp;&nbsp; <a href=\"core/BASE\">BASE</a> <a href=\"core/Fetch\">@</a> &lt;TRUE&gt; <br>\n      &nbsp;&nbsp; MAX-BASE <a href=\"core/OnePlus\">1+</a> 2 <a href=\"core/DO\">DO</a>\t\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> FOR EACH POSSIBLE BASE <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> TBD: ASSUMES BASE WORKS <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> 0 <a href=\"core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"core/num-end\">#&gt;</a> <a href=\"core/Sq\">S\"</a> 10\" S= <a href=\"core/AND\">AND</a> <br>\n      &nbsp;&nbsp;    <a href=\"core/LOOP\">LOOP</a> <br>\n      &nbsp;&nbsp;    <a href=\"core/SWAP\">SWAP</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GP5 -&gt; &lt;TRUE&gt; }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> GP6 <br>\n      &nbsp;&nbsp;\t<a href=\"core/BASE\">BASE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/toR\">&gt;R</a>  2 <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp;\tMAX-UINT MAX-UINT <a href=\"core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"core/num-end\">#&gt;</a>\t&nbsp;&nbsp;\t\t<a href=\"core/bs\">\\</a> MAXIMUM UD TO BINARY <br>\n      &nbsp;&nbsp;\t<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> S: C-ADDR U <br>\n      &nbsp;&nbsp;\t<a href=\"core/DUP\">DUP</a> #BITS-UD <a href=\"core/Equal\">=</a> <a href=\"core/SWAP\">SWAP</a> <br>\n      &nbsp;&nbsp;\t0 <a href=\"core/DO\">DO</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> S: C-ADDR FLAG <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/OVER\">OVER</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/BracketCHAR\">[CHAR]</a> 1 <a href=\"core/Equal\">=</a> <a href=\"core/AND\">AND</a>\t&nbsp;&nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> ALL ONES <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/toR\">&gt;R</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp;\t<a href=\"core/LOOP\">LOOP</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GP6 -&gt; &lt;TRUE&gt; }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> GP7 <br>\n      &nbsp;&nbsp;\t<a href=\"core/BASE\">BASE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/toR\">&gt;R</a>\t\tMAX-BASE <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp;\t&lt;TRUE&gt; <br>\n      &nbsp;&nbsp;\tA 0 <a href=\"core/DO\">DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/I\">I</a> 0 <a href=\"core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"core/num-end\">#&gt;</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t\t1 <a href=\"core/Equal\">=</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/I\">I</a> 30 <a href=\"core/Plus\">+</a> <a href=\"core/Equal\">=</a> <a href=\"core/AND\">AND</a> <a href=\"core/AND\">AND</a> <br>\n      &nbsp;&nbsp;\t<a href=\"core/LOOP\">LOOP</a> <br>\n      &nbsp;&nbsp;\tMAX-BASE A <a href=\"core/DO\">DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/I\">I</a> 0 <a href=\"core/num-start\">&lt;#</a> <strong>#S</strong> <a href=\"core/num-end\">#&gt;</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t\t1 <a href=\"core/Equal\">=</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/CFetch\">C@</a> 41 <a href=\"core/I\">I</a> A <a href=\"core/Minus\">-</a> <a href=\"core/Plus\">+</a> <a href=\"core/Equal\">=</a> <a href=\"core/AND\">AND</a> <a href=\"core/AND\">AND</a> <br>\n      &nbsp;&nbsp;\t<a href=\"core/LOOP\">LOOP</a> <br>\n      &nbsp;&nbsp;\t<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GP7 -&gt; &lt;TRUE&gt; }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:'\">\n  <div class=\"wordNumber\">F.6.1.0070</div>\n  <div class=\"wordName\">'</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT1&nbsp;123&nbsp;<a href=\"core/Semi\">;</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ <strong>'</strong>&nbsp;GT1&nbsp;<a href=\"core/EXECUTE\">EXECUTE</a> -&gt; 123 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:p\">\n  <div class=\"wordNumber\">F.6.1.0080</div>\n  <div class=\"wordName\">(</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">There is no space either side of the ).</span><br>\n    \n    <span class=\"tt\">T{ <strong>(</strong>&nbsp;A&nbsp;comment)1234 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pc1&nbsp;<strong>(</strong>&nbsp;A&nbsp;comment)1234&nbsp;<a href=\"core/Semi\">;</a>&nbsp;pc1 -&gt; 1234 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:*\">\n  <div class=\"wordNumber\">F.6.1.0090</div>\n  <div class=\"wordName\">*</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;<strong>*</strong> -&gt; &nbsp;0 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> TEST IDENTITIE\\S <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;<strong>*</strong> -&gt; &nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;0&nbsp;<strong>*</strong> -&gt; &nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;2&nbsp;<strong>*</strong> -&gt; &nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;2&nbsp;&nbsp;1&nbsp;<strong>*</strong> -&gt; &nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;3&nbsp;&nbsp;3&nbsp;<strong>*</strong> -&gt; &nbsp;9 }T</span> <br>\n    <span class=\"tt\">T{ -3&nbsp;&nbsp;3&nbsp;<strong>*</strong> -&gt; -9 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;3&nbsp;-3&nbsp;<strong>*</strong> -&gt; -9 }T</span> <br>\n    <span class=\"tt\">T{ -3&nbsp;-3&nbsp;<strong>*</strong> -&gt; &nbsp;9 }T</span>\n    <p>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;1&nbsp;<a href=\"core/RSHIFT\">RSHIFT</a>&nbsp;2&nbsp;<strong>*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; MID-UINT+1 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;2&nbsp;<a href=\"core/RSHIFT\">RSHIFT</a>&nbsp;4&nbsp;<strong>*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; MID-UINT+1 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;1&nbsp;<a href=\"core/RSHIFT\">RSHIFT</a>&nbsp;MID-UINT+1&nbsp;<a href=\"core/OR\">OR</a>&nbsp;2&nbsp;<strong>*</strong> -&gt; MID-UINT+1 }T</span> <br>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:*/\">\n  <div class=\"wordNumber\">F.6.1.0100</div>\n  <div class=\"wordName\">*/</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;\t<a href=\"core/Colon\">:</a> T*/ T*/MOD <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a> <br>\n      IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/Colon\">:</a> T*/ T*/MOD <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;<strong>*/</strong> -&gt; MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;T*/ }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;<strong>*/</strong> -&gt; MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;T*/ }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:*/MOD\">\n  <div class=\"wordNumber\">F.6.1.0110</div>\n  <div class=\"wordName\">*/MOD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;\t<a href=\"core/Colon\">:</a> T*/MOD <a href=\"core/toR\">&gt;R</a> <a href=\"core/MTimes\">M*</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/FMDivMOD\">FM/MOD</a> <a href=\"core/Semi\">;</a> <br>\n      IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/Colon\">:</a> T*/MOD <a href=\"core/toR\">&gt;R</a> <a href=\"core/MTimes\">M*</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SMDivREM\">SM/REM</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>*/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;<strong>*/MOD</strong> -&gt; MAX-INT&nbsp;2&nbsp;MAX-INT&nbsp;T*/MOD }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;<strong>*/MOD</strong> -&gt; MIN-INT&nbsp;2&nbsp;MIN-INT&nbsp;T*/MOD }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:+\">\n  <div class=\"wordNumber\">F.6.1.0120</div>\n  <div class=\"wordName\">+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;-5&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5&nbsp;&nbsp;0&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;-2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;-2&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;1&nbsp;<strong>+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT&nbsp;&nbsp;1&nbsp;<strong>+</strong> -&gt; MID-UINT+1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:+!\">\n  <div class=\"wordNumber\">F.6.1.0130</div>\n  <div class=\"wordName\">+!</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;0&nbsp;1ST&nbsp;<a href=\"core/Store\">!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;1ST&nbsp;<strong>+!</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;1ST&nbsp;<strong>+!</strong>&nbsp;1ST&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 0 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:+LOOP\">\n  <div class=\"wordNumber\">F.6.1.0140</div>\n  <div class=\"wordName\">+LOOP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GD2&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<a href=\"core/I\">I</a>&nbsp;-1&nbsp;<strong>+LOOP</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;GD2 -&gt; 4&nbsp;3&nbsp;2&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GD2 -&gt; 2&nbsp;1&nbsp;0&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ MID-UINT&nbsp;MID-UINT+1&nbsp;GD2 -&gt; MID-UINT+1&nbsp;MID-UINT }T</span>\n      <p>\n      <a href=\"core/VARIABLE\">VARIABLE</a> gditerations <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> gdincrement\n      </p><p>\n      <a href=\"core/Colon\">:</a> gd7 <a href=\"core/p\">(</a> limit start increment -- ) <br>\n      &nbsp;&nbsp; gdincrement <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp; 0 gditerations <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp; <a href=\"core/DO\">DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 1 gditerations <a href=\"core/PlusStore\">+!</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; gditerations <a href=\"core/Fetch\">@</a>  6 <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a> <a href=\"core/LEAVE\">LEAVE</a> <a href=\"core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; gdincrement <a href=\"core/Fetch\">@</a> <br>\n      &nbsp;&nbsp; <strong>+LOOP</strong> gditerations <a href=\"core/Fetch\">@</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;3&nbsp;&nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;-2&nbsp;&nbsp;-3&nbsp;&nbsp;-4&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;1&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;4&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;1&nbsp;&nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;9&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;-1&nbsp;&nbsp;-1&nbsp;gd7 -&gt; -1&nbsp;-2&nbsp;-3&nbsp;-4&nbsp;&nbsp;-5&nbsp;&nbsp;-6&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;&nbsp;-1&nbsp;gd7 -&gt; &nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;-1&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; -1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;&nbsp;-1&nbsp;&nbsp;-1&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;0&nbsp;gd7 -&gt; &nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;2&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; &nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;7&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;-1&nbsp;&nbsp;&nbsp;1&nbsp;gd7 -&gt; -1&nbsp;0&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;-20&nbsp;30&nbsp;-10&nbsp;gd7 -&gt; 30&nbsp;20&nbsp;10&nbsp;&nbsp;0&nbsp;-10&nbsp;-20&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;-20&nbsp;31&nbsp;-10&nbsp;gd7 -&gt; 31&nbsp;21&nbsp;11&nbsp;&nbsp;1&nbsp;&nbsp;-9&nbsp;-19&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;-20&nbsp;29&nbsp;-10&nbsp;gd7 -&gt; 29&nbsp;19&nbsp;&nbsp;9&nbsp;-1&nbsp;-11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp; }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">With large and small increments</span>\n      </p><p>\n      MAX-UINT 8 RSHIFT 1+ CONSTANT ustep <br>\n      ustep NEGATE CONSTANT -ustep <br>\n      MAX-INT 7 RSHIFT 1+ CONSTANT step <br>\n      step NEGATE CONSTANT -step\n      </p><p>\n      <a href=\"core/VARIABLE\">VARIABLE</a> bump\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;<a href=\"core/Colon\">:</a>&nbsp;gd8&nbsp;bump&nbsp;<a href=\"core/Store\">!</a>&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;bump&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>+LOOP</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;MAX-UINT&nbsp;0&nbsp;ustep&nbsp;gd8 -&gt; 256 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;0&nbsp;MAX-UINT&nbsp;-ustep&nbsp;gd8 -&gt; 256 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;MAX-INT&nbsp;MIN-INT&nbsp;step&nbsp;gd8 -&gt; 256 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;MIN-INT&nbsp;MAX-INT&nbsp;-step&nbsp;gd8 -&gt; 256 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:,\">\n  <div class=\"wordNumber\">F.6.1.0150</div>\n  <div class=\"wordName\">,</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/HERE\">HERE</a> 1 <strong>,</strong> <br>\n      <a href=\"core/HERE\">HERE</a> 2 <strong>,</strong> <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> 2ND <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> 1ST\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;2ND&nbsp;<a href=\"core/Uless\">U&lt;</a> -&gt; &lt;TRUE&gt; }T</span> <a href=\"core/bs\">\\</a> HERE MUST GROW WITH ALLOT <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp; -&gt; 2ND }T</span>    <a href=\"core/bs\">\\</a> ... BY ONE CELL <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1ST&nbsp;1&nbsp;<a href=\"core/CELLS\">CELLS</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp; -&gt; 2ND }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;2ND&nbsp;<a href=\"core/Fetch\">@</a>&nbsp; -&gt; 1&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;1ST&nbsp;<a href=\"core/Store\">!</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;2ND&nbsp;<a href=\"core/Fetch\">@</a>&nbsp; -&gt; 5&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;2ND&nbsp;<a href=\"core/Store\">!</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;2ND&nbsp;<a href=\"core/Fetch\">@</a>&nbsp; -&gt; 5&nbsp;6 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 6&nbsp;5 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;1&nbsp;1ST&nbsp;<a href=\"core/TwoStore\">2!</a> -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1ST&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 2&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;1ST&nbsp;<a href=\"core/Store\">!</a>&nbsp;&nbsp;1ST&nbsp;<a href=\"core/Fetch\">@</a>&nbsp; -&gt; 1S&nbsp; }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> CAN STORE CELL-WIDE VALUE\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:-\">\n  <div class=\"wordNumber\">F.6.1.0160</div>\n  <div class=\"wordName\">-</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;-5&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5&nbsp;&nbsp;0&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;-2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;-2&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;<strong>-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;&nbsp;1&nbsp;<strong>-</strong> -&gt; MID-UINT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:d\">\n  <div class=\"wordNumber\">F.6.1.0180</div>\n  <div class=\"wordName\">.</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:.q\">\n  <div class=\"wordNumber\">F.6.1.0190</div>\n  <div class=\"wordName\">.\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pb1&nbsp;<a href=\"core/CR\">CR</a>&nbsp;<strong>.\"</strong>&nbsp;You&nbsp;should&nbsp;see&nbsp;2345:&nbsp;\"<strong>.\"</strong>&nbsp;2345\"<a href=\"core/Semi\">;</a>&nbsp;pb1 -&gt;  }T</span>\n    <p>\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:/\">\n  <div class=\"wordNumber\">F.6.1.0230</div>\n  <div class=\"wordName\">/</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;\t<a href=\"core/Colon\">:</a> T/ T/MOD <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a> <br>\n      IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> T/ T/MOD <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/</strong> -&gt; MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>/</strong> -&gt; MAX-INT&nbsp;MAX-INT&nbsp;T/ }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>/</strong> -&gt; MIN-INT&nbsp;MIN-INT&nbsp;T/ }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:/MOD\">\n  <div class=\"wordNumber\">F.6.1.0240</div>\n  <div class=\"wordName\">/MOD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp;  <a href=\"core/Colon\">:</a> T/MOD  <a href=\"core/toR\">&gt;R</a> <a href=\"core/StoD\">S&gt;D</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/FMDivMOD\">FM/MOD</a> <a href=\"core/Semi\">;</a> <br>\n      IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Colon\">:</a> T/MOD  <a href=\"core/toR\">&gt;R</a> <a href=\"core/StoD\">S&gt;D</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SMDivREM\">SM/REM</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>/MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>/MOD</strong> -&gt; MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>/MOD</strong> -&gt; MAX-INT&nbsp;MAX-INT&nbsp;T/MOD }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>/MOD</strong> -&gt; MIN-INT&nbsp;MIN-INT&nbsp;T/MOD }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:0less\">\n  <div class=\"wordNumber\">F.6.1.0250</div>\n  <div class=\"wordName\">0&lt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<strong>0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;<strong>0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:0=\">\n  <div class=\"wordNumber\">F.6.1.0270</div>\n  <div class=\"wordName\">0=</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>0=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-UINT&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;<strong>0=</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:1+\">\n  <div class=\"wordNumber\">F.6.1.0290</div>\n  <div class=\"wordName\">1+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>1+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>1+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>1+</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT&nbsp;<strong>1+</strong> -&gt; MID-UINT+1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:1-\">\n  <div class=\"wordNumber\">F.6.1.0300</div>\n  <div class=\"wordName\">1-</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>1-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>1-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>1-</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;<strong>1-</strong> -&gt; MID-UINT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2!\">\n  <div class=\"wordNumber\">F.6.1.0310</div>\n  <div class=\"wordName\">2!</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2*\">\n  <div class=\"wordNumber\">F.6.1.0320</div>\n  <div class=\"wordName\">2*</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;0S&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;&nbsp;0S }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ 4000&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 8000 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;1S&nbsp;<strong>2*</strong>&nbsp;1&nbsp;<a href=\"core/XOR\">XOR</a> -&gt; &nbsp;&nbsp;1S }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;MSB&nbsp;<strong>2*</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;&nbsp;0S }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2/\">\n  <div class=\"wordNumber\">F.6.1.0330</div>\n  <div class=\"wordName\">2/</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0S&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;0S }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4000&nbsp;<strong>2/</strong> -&gt; 2000 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1S&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;1S }T</span> <a href=\"core/bs\">\\</a> MSB PROPOGATED <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1S&nbsp;1&nbsp;<a href=\"core/XOR\">XOR</a>&nbsp;<strong>2/</strong> -&gt; &nbsp;&nbsp;1S }T</span> <br>\n    <span class=\"tt\">T{ MSB&nbsp;<strong>2/</strong>&nbsp;MSB&nbsp;<a href=\"core/AND\">AND</a> -&gt; &nbsp;MSB }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2@\">\n  <div class=\"wordNumber\">F.6.1.0350</div>\n  <div class=\"wordName\">2@</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2DROP\">\n  <div class=\"wordNumber\">F.6.1.0370</div>\n  <div class=\"wordName\">2DROP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2DROP</strong> -&gt;  }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2DUP\">\n  <div class=\"wordNumber\">F.6.1.0380</div>\n  <div class=\"wordName\">2DUP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2DUP</strong> -&gt; 1&nbsp;2&nbsp;1&nbsp;2 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2OVER\">\n  <div class=\"wordNumber\">F.6.1.0400</div>\n  <div class=\"wordName\">2OVER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;4&nbsp;<strong>2OVER</strong> -&gt; 1&nbsp;2&nbsp;3&nbsp;4&nbsp;1&nbsp;2 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:2SWAP\">\n  <div class=\"wordNumber\">F.6.1.0430</div>\n  <div class=\"wordName\">2SWAP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;4&nbsp;<strong>2SWAP</strong> -&gt; 3&nbsp;4&nbsp;1&nbsp;2 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core::\">\n  <div class=\"wordNumber\">F.6.1.0450</div>\n  <div class=\"wordName\">:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>:</strong>&nbsp;NOP&nbsp;<strong>:</strong>&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ NOP&nbsp;NOP1&nbsp;NOP&nbsp;NOP2 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ NOP1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ NOP2 -&gt;  }T</span>\n    <p>\n    The following tests the dictionary search order:\n    </p><p>\n    <span class=\"tt\">T{ <strong>:</strong>&nbsp;GDX&nbsp;&nbsp;&nbsp;123&nbsp;<a href=\"core/Semi\">;</a>&nbsp;&nbsp;&nbsp;&nbsp;<strong>:</strong>&nbsp;GDX&nbsp;&nbsp;&nbsp;GDX&nbsp;234&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GDX -&gt; 123&nbsp;234 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:;\">\n  <div class=\"wordNumber\">F.6.1.0460</div>\n  <div class=\"wordName\">;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core::\">F.6.1.0450 :</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:less\">\n  <div class=\"wordNumber\">F.6.1.0480</div>\n  <div class=\"wordName\">&lt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:num-start\">\n  <div class=\"wordNumber\">F.6.1.0490</div>\n  <div class=\"wordName\">&lt;#</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:num\">F.6.1.0030 #</a>,\n    <a href=\"testsuite#test:core:numS\">F.6.1.0050 #S</a>,\n    <a href=\"testsuite#test:core:HOLD\">F.6.1.1670 HOLD</a>,\n    <a href=\"testsuite#test:core:SIGN\">F.6.1.2210 SIGN</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:=\">\n  <div class=\"wordNumber\">F.6.1.0530</div>\n  <div class=\"wordName\">=</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;<strong>=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;1&nbsp;<strong>=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;-1&nbsp;<strong>=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;0&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;&nbsp;0&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;<strong>=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:more\">\n  <div class=\"wordNumber\">F.6.1.0540</div>\n  <div class=\"wordName\">&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>&gt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:toBODY\">\n  <div class=\"wordNumber\">F.6.1.0550</div>\n  <div class=\"wordName\">&gt;BODY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;<a href=\"core/CREATE\">CREATE</a>&nbsp;CR0 -&gt; &nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;CR0&nbsp;<strong>&gt;BODY</strong> -&gt; <a href=\"core/HERE\">HERE</a> }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:toIN\">\n  <div class=\"wordNumber\">F.6.1.0560</div>\n  <div class=\"wordName\">&gt;IN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/VARIABLE\">VARIABLE</a> SCANS <br>\n      <a href=\"core/Colon\">:</a> RESCAN?  -1 SCANS <a href=\"core/PlusStore\">+!</a> SCANS <a href=\"core/Fetch\">@</a> <a href=\"core/IF\">IF</a> 0 <strong>&gt;IN</strong> <a href=\"core/Store\">!</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;2&nbsp;SCANS&nbsp;<a href=\"core/Store\">!</a>&nbsp;<br>\n      \n      345&nbsp;RESCAN?&nbsp;<br>\n       -&gt; 345&nbsp;345 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> GS2  5 SCANS <a href=\"core/Store\">!</a> <a href=\"core/Sq\">S\"</a> 123 RESCAN?\" <a href=\"core/EVALUATE\">EVALUATE</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GS2 -&gt; 123&nbsp;123&nbsp;123&nbsp;123&nbsp;123 }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">These tests must start on a new line</span> <br>\n      <a href=\"core/DECIMAL\">DECIMAL</a> <br>\n      T{ 123456 <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/OVER\">OVER</a> 9 <a href=\"core/less\">&lt;</a> 35 <a href=\"core/AND\">AND</a> <a href=\"core/Plus\">+</a> 3 <a href=\"core/Plus\">+</a> <strong>&gt;IN</strong> <a href=\"core/Store\">!</a> <br>\n      -&gt; 123456 23456 3456 456 56 6 }T <br>\n      T{ 14145 8115 <a href=\"core/qDUP\">?DUP</a> <a href=\"core/ZeroEqual\">0=</a> 34 <a href=\"core/AND\">AND</a> <strong>&gt;IN</strong> <a href=\"core/PlusStore\">+!</a> <a href=\"core/TUCK\">TUCK</a> <a href=\"core/MOD\">MOD</a> 14 <strong>&gt;IN</strong> <a href=\"core/Store\">!</a> GCD calculation <br>\n      -&gt; 15 }T\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:toNUMBER\">\n  <div class=\"wordNumber\">F.6.1.0570</div>\n  <div class=\"wordName\">&gt;NUMBER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> GN-BUF 0 <a href=\"core/CComma\">C,</a> <br>\n      <a href=\"core/Colon\">:</a> GN-STRING\t GN-BUF 1 <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> GN-CONSUMED GN-BUF <a href=\"core/CHARPlus\">CHAR+</a> 0 <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> GN'\t\t <a href=\"core/BracketCHAR\">[CHAR]</a> ' <a href=\"core/WORD\">WORD</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/CFetch\">C@</a> GN-BUF <a href=\"core/CStore\">C!</a>  GN-STRING <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;0'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;1'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;0&nbsp;GN'&nbsp;1'&nbsp;<strong>&gt;NUMBER</strong> -&gt; BASE&nbsp;@&nbsp;1+&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n      <a href=\"core/bs\">\\</a> FOLLOWING SHOULD FAIL TO CONVERT <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;-'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;+'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;.'&nbsp;<strong>&gt;NUMBER</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> &gt;NUMBER-BASED <br>\n      &nbsp;&nbsp; <a href=\"core/BASE\">BASE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <strong>&gt;NUMBER</strong> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;2'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;2&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;2'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;F'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;F&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;G'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10&nbsp;&gt;NUMBER-BASED -&gt; &nbsp;0&nbsp;0&nbsp;GN-STRING&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;G'&nbsp;MAX-BASE&nbsp;&gt;NUMBER-BASED -&gt; 10&nbsp;0&nbsp;GN-CONSUMED }T</span> <br>\n      <span class=\"tt\">T{ 0&nbsp;0&nbsp;GN'&nbsp;Z'&nbsp;MAX-BASE&nbsp;&gt;NUMBER-BASED -&gt; 23&nbsp;0&nbsp;GN-CONSUMED }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> GN1 <a href=\"core/p\">(</a> UD BASE -- UD' LEN ) <br>\n      &nbsp;&nbsp;\t<a href=\"core/bs\">\\</a> UD SHOULD EQUAL UD' AND LEN SHOULD BE ZERO. <br>\n      &nbsp;&nbsp;\t<a href=\"core/BASE\">BASE</a> <a href=\"core/Fetch\">@</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp;\t<a href=\"core/num-start\">&lt;#</a> <a href=\"core/numS\">#S</a> <a href=\"core/num-end\">#&gt;</a> <br>\n      &nbsp;&nbsp;\t0 0 <a href=\"core/TwoSWAP\">2SWAP</a> <strong>&gt;NUMBER</strong> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> RETURN LENGTH ONLY <br>\n      &nbsp;&nbsp;\t<a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/BASE\">BASE</a> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GN1 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GN1 -&gt; MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;DUP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GN1 -&gt; MAX-UINT&nbsp;DUP&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;MAX-BASE&nbsp;GN1 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;MAX-BASE&nbsp;GN1 -&gt; MAX-UINT&nbsp;&nbsp;&nbsp;0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ MAX-UINT&nbsp;DUP&nbsp;MAX-BASE&nbsp;GN1 -&gt; MAX-UINT&nbsp;DUP&nbsp;0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:toR\">\n  <div class=\"wordNumber\">F.6.1.0580</div>\n  <div class=\"wordName\">&gt;R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ :&nbsp;GR1&nbsp;<strong>&gt;R</strong>&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;; -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ :&nbsp;GR2&nbsp;<strong>&gt;R</strong>&nbsp;<a href=\"core/RFetch\">R@</a>&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;; -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 123&nbsp;GR1 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ 123&nbsp;GR2 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1S&nbsp;GR1 -&gt; &nbsp;1S }T</span> &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/p\">(</a> <span class=\"rm\">Return stack holds cells</span> )\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:qDUP\">\n  <div class=\"wordNumber\">F.6.1.0630</div>\n  <div class=\"wordName\">?DUP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ -1&nbsp;<strong>?DUP</strong> -&gt; -1&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;<strong>?DUP</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;<strong>?DUP</strong> -&gt; &nbsp;1&nbsp;&nbsp;1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:@\">\n  <div class=\"wordNumber\">F.6.1.0650</div>\n  <div class=\"wordName\">@</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ABS\">\n  <div class=\"wordNumber\">F.6.1.0690</div>\n  <div class=\"wordName\">ABS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>ABS</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>ABS</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>ABS</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<strong>ABS</strong> -&gt; MID-UINT+1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ACCEPT\">\n  <div class=\"wordNumber\">F.6.1.0695</div>\n  <div class=\"wordName\">ACCEPT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/CREATE\">CREATE</a> ABUF 80 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/ALLOT\">ALLOT</a>\n      <p>\n      <a href=\"core/Colon\">:</a> ACCEPT-TEST <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/CR\">CR</a> <a href=\"core/Dotq\">.\"</a> PLEASE TYPE UP TO 80 CHARACTERS:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; ABUF 80 <strong>ACCEPT</strong> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/CR\">CR</a> <a href=\"core/Dotq\">.\"</a> RECEIVED: \" <a href=\"core/BracketCHAR\">[CHAR]</a> \" <a href=\"core/EMIT\">EMIT</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; ABUF <a href=\"core/SWAP\">SWAP</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/BracketCHAR\">[CHAR]</a> \" <a href=\"core/EMIT\">EMIT</a> <a href=\"core/CR\">CR</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ ACCEPT-TEST -&gt;  }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ALIGN\">\n  <div class=\"wordNumber\">F.6.1.0705</div>\n  <div class=\"wordName\">ALIGN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<strong>ALIGN</strong>  1 <a href=\"core/ALLOT\">ALLOT</a> <a href=\"core/HERE\">HERE</a>  <strong>ALIGN</strong> <a href=\"core/HERE\">HERE</a> 3 <a href=\"core/CELLS\">CELLS</a> <a href=\"core/ALLOT\">ALLOT</a> <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> A-ADDR  <a href=\"core/CONSTANT\">CONSTANT</a> UA-ADDR <br>\n      <span class=\"tt\">T{ UA-ADDR&nbsp;<a href=\"core/ALIGNED\">ALIGNED</a> -&gt; A-ADDR }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;A-ADDR&nbsp;<a href=\"core/CStore\">C!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1234&nbsp;A-ADDR&nbsp;<a href=\"core/Store\">!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Fetch\">@</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp;1234 }T</span> <br>\n      <span class=\"tt\">T{ 123&nbsp;456&nbsp;A-ADDR&nbsp;<a href=\"core/TwoStore\">2!</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 123&nbsp;456 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;A-ADDR&nbsp;<a href=\"core/CHARPlus\">CHAR+</a>&nbsp;<a href=\"core/CStore\">C!</a>&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"core/CHARPlus\">CHAR+</a>&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;A-ADDR&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp;<a href=\"core/CStore\">C!</a>&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1234&nbsp;A-ADDR&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp;<a href=\"core/Store\">!</a>&nbsp;&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp; -&gt; &nbsp;&nbsp;&nbsp;1234 }T</span> <br>\n      <span class=\"tt\">T{ 123&nbsp;456&nbsp;A-ADDR&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp;<a href=\"core/TwoStore\">2!</a>&nbsp;&nbsp;&nbsp;A-ADDR&nbsp;<a href=\"core/CELLPlus\">CELL+</a>&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 123&nbsp;456 }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ALLOT\">\n  <div class=\"wordNumber\">F.6.1.0710</div>\n  <div class=\"wordName\">ALLOT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/HERE\">HERE</a> 1 <strong>ALLOT</strong> <br>\n      <a href=\"core/HERE\">HERE</a> <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> 2NDA <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> 1STA <br>\n      <span class=\"tt\">T{ 1STA&nbsp;2NDA&nbsp;<a href=\"core/Uless\">U&lt;</a> -&gt; &lt;TRUE&gt; }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> HERE MUST GROW WITH ALLOT <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1STA&nbsp;<a href=\"core/OnePlus\">1+</a> -&gt; &nbsp;&nbsp;2NDA }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> ... BY ONE ADDRESS UNIT <br>\n      ( MISSING TEST: NEGATIVE ALLOT )\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:AND\">\n  <div class=\"wordNumber\">F.6.1.0720</div>\n  <div class=\"wordName\">AND</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0&nbsp;0&nbsp;<strong>AND</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;1&nbsp;<strong>AND</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;0&nbsp;<strong>AND</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;1&nbsp;<strong>AND</strong> -&gt; 1 }T</span>\n    <p>\n    <span class=\"tt\">T{ 0&nbsp;<a href=\"core/INVERT\">INVERT</a>&nbsp;1&nbsp;<strong>AND</strong> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;<a href=\"core/INVERT\">INVERT</a>&nbsp;1&nbsp;<strong>AND</strong> -&gt; 0 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ 0S&nbsp;0S&nbsp;<strong>AND</strong> -&gt; 0S }T</span> <br>\n    <span class=\"tt\">T{ 0S&nbsp;1S&nbsp;<strong>AND</strong> -&gt; 0S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;0S&nbsp;<strong>AND</strong> -&gt; 0S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;1S&nbsp;<strong>AND</strong> -&gt; 1S }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:BASE\">\n  <div class=\"wordNumber\">F.6.1.0750</div>\n  <div class=\"wordName\">BASE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> GN2\t<a href=\"core/bs\">\\</a> ( -- 16 10 ) <br>\n      &nbsp;&nbsp; <strong>BASE</strong> <a href=\"core/Fetch\">@</a> <a href=\"core/toR\">&gt;R</a>\n      <a href=\"core/HEX\">HEX</a> <strong>BASE</strong> <a href=\"core/Fetch\">@</a>\n      <a href=\"core/DECIMAL\">DECIMAL</a> <strong>BASE</strong> <a href=\"core/Fetch\">@</a>\n      <a href=\"core/Rfrom\">R&gt;</a> <strong>BASE</strong> <a href=\"core/Store\">!</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GN2 -&gt; 10&nbsp;A }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:BEGIN\">\n  <div class=\"wordNumber\">F.6.1.0760</div>\n  <div class=\"wordName\">BEGIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:WHILE\">F.6.1.2430 WHILE</a>,\n    <a href=\"testsuite#test:core:UNTIL\">F.6.1.2390 UNTIL</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:BL\">\n  <div class=\"wordNumber\">F.6.1.0770</div>\n  <div class=\"wordName\">BL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>BL</strong> -&gt; 20 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:C!\">\n  <div class=\"wordNumber\">F.6.1.0850</div>\n  <div class=\"wordName\">C!</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:C,\">\n  <div class=\"wordNumber\">F.6.1.0860</div>\n  <div class=\"wordName\">C,</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/HERE\">HERE</a> 1 <strong>C,</strong> <br>\n      <a href=\"core/HERE\">HERE</a> 2 <strong>C,</strong> <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> 2NDC <br>\n      <a href=\"core/CONSTANT\">CONSTANT</a> 1STC\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1STC&nbsp;2NDC&nbsp;<a href=\"core/Uless\">U&lt;</a> -&gt; &lt;TRUE&gt; }T</span>\t<a href=\"core/bs\">\\</a> HERE MUST GROW WITH ALLOT <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1STC&nbsp;<a href=\"core/CHARPlus\">CHAR+</a> -&gt; &nbsp;2NDC&nbsp; }T</span>\t\t<a href=\"core/bs\">\\</a> ... BY ONE CHAR <br>\n      <span class=\"tt\">T{ &nbsp;1STC&nbsp;1&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<a href=\"core/Plus\">+</a> -&gt; &nbsp;2NDC&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 1STC&nbsp;<a href=\"core/CFetch\">C@</a>&nbsp;2NDC&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;1&nbsp;2&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;1STC&nbsp;<a href=\"core/CStore\">C!</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 1STC&nbsp;<a href=\"core/CFetch\">C@</a>&nbsp;2NDC&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;3&nbsp;2&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;2NDC&nbsp;<a href=\"core/CStore\">C!</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 1STC&nbsp;<a href=\"core/CFetch\">C@</a>&nbsp;2NDC&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; &nbsp;&nbsp;3&nbsp;4&nbsp; }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:C@\">\n  <div class=\"wordNumber\">F.6.1.0870</div>\n  <div class=\"wordName\">C@</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CELL+\">\n  <div class=\"wordNumber\">F.6.1.0880</div>\n  <div class=\"wordName\">CELL+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CELLS\">\n  <div class=\"wordNumber\">F.6.1.0890</div>\n  <div class=\"wordName\">CELLS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> BITS <a href=\"core/p\">(</a> X -- U ) <br>\n      &nbsp;&nbsp; 0 <a href=\"core/SWAP\">SWAP</a> <a href=\"core/BEGIN\">BEGIN</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/WHILE\">WHILE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> MSB <a href=\"core/AND\">AND</a> <a href=\"core/IF\">IF</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/OnePlus\">1+</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/TwoTimes\">2*</a> <br>\n      &nbsp;&nbsp; <a href=\"core/REPEAT\">REPEAT</a> <a href=\"core/DROP\">DROP</a>\n      <a href=\"core/Semi\">;</a>\n      <p>\n      <a href=\"core/p\">(</a> CELLS &gt;= 1 AU, INTEGRAL MULTIPLE OF CHAR SIZE, &gt;= 16 BITS ) <br>\n      <span class=\"tt\">T{ 1&nbsp;<strong>CELLS</strong>&nbsp;1&nbsp;<a href=\"core/less\">&lt;</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;<strong>CELLS</strong>&nbsp;1&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<a href=\"core/MOD\">MOD</a> -&gt; &nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ 1S&nbsp;BITS&nbsp;10&nbsp;<a href=\"core/less\">&lt;</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &lt;FALSE&gt; }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CHAR\">\n  <div class=\"wordNumber\">F.6.1.0895</div>\n  <div class=\"wordName\">CHAR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>CHAR</strong>&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 58 }T</span> <br>\n    <span class=\"tt\">T{ <strong>CHAR</strong>&nbsp;HELLO -&gt; 48 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CHAR+\">\n  <div class=\"wordNumber\">F.6.1.0897</div>\n  <div class=\"wordName\">CHAR+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CHARS\">\n  <div class=\"wordNumber\">F.6.1.0898</div>\n  <div class=\"wordName\">CHARS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/p\">(</a> CHARACTERS &gt;= 1 AU, &lt;= SIZE OF CELL, &gt;= 8 BITS ) <br>\n      <span class=\"tt\">T{ 1&nbsp;<strong>CHARS</strong>&nbsp;1&nbsp;<a href=\"core/less\">&lt;</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ 1&nbsp;<strong>CHARS</strong>&nbsp;1&nbsp;<a href=\"core/CELLS\">CELLS</a>&nbsp;<a href=\"core/more\">&gt;</a> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <a href=\"core/p\">(</a> TBD: HOW TO FIND NUMBER OF BITS? )\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CONSTANT\">\n  <div class=\"wordNumber\">F.6.1.0950</div>\n  <div class=\"wordName\">CONSTANT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 123&nbsp;<strong>CONSTANT</strong>&nbsp;X123 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ X123 -&gt; 123 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;EQU&nbsp;<strong>CONSTANT</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ X123&nbsp;EQU&nbsp;Y123 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ Y123 -&gt; 123 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:COUNT\">\n  <div class=\"wordNumber\">F.6.1.0980</div>\n  <div class=\"wordName\">COUNT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ GT1STRING&nbsp;<strong>COUNT</strong> -&gt; GT1STRING&nbsp;<a href=\"core/CHARPlus\">CHAR+</a>&nbsp;3 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CR\">\n  <div class=\"wordNumber\">F.6.1.0990</div>\n  <div class=\"wordName\">CR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CREATE\">\n  <div class=\"wordNumber\">F.6.1.1000</div>\n  <div class=\"wordName\">CREATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:toBODY\">F.6.1.0550 &gt;BODY</a> and\n    <a href=\"testsuite#test:core:DOES\">F.6.1.1250 DOES&gt;</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DECIMAL\">\n  <div class=\"wordNumber\">F.6.1.1170</div>\n  <div class=\"wordName\">DECIMAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:BASE\">F.6.1.0750 BASE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DEPTH\">\n  <div class=\"wordNumber\">F.6.1.1200</div>\n  <div class=\"wordName\">DEPTH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0&nbsp;1&nbsp;<strong>DEPTH</strong> -&gt; 0&nbsp;1&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;<strong>DEPTH</strong> -&gt; 0&nbsp;1&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;<strong>DEPTH</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DO\">\n  <div class=\"wordNumber\">F.6.1.1240</div>\n  <div class=\"wordName\">DO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:LOOP\">F.6.1.1800 LOOP</a>,\n    <a href=\"testsuite#test:core:+LOOP\">F.6.1.0140 +LOOP</a>,\n    <a href=\"testsuite#test:core:J\">F.6.1.1730 J</a>,\n    <a href=\"testsuite#test:core:LEAVE\">F.6.1.1760 LEAVE</a>,\n    <a href=\"testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DOES\">\n  <div class=\"wordNumber\">F.6.1.1250</div>\n  <div class=\"wordName\">DOES&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;DOES1&nbsp;<strong>DOES&gt;</strong>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;1&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;DOES2&nbsp;<strong>DOES&gt;</strong>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;2&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/CREATE\">CREATE</a>&nbsp;CR1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ CR1&nbsp;&nbsp; -&gt; <a href=\"core/HERE\">HERE</a> }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;<a href=\"core/Comma\">,</a>&nbsp;&nbsp; -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ CR1&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ DOES1 -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ CR1&nbsp;&nbsp; -&gt; 2 }T</span> <br>\n    <span class=\"tt\">T{ DOES2 -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ CR1&nbsp;&nbsp; -&gt; 3 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;WEIRD:&nbsp;<a href=\"core/CREATE\">CREATE</a>&nbsp;<strong>DOES&gt;</strong>&nbsp;1&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<strong>DOES&gt;</strong>&nbsp;2&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ WEIRD:&nbsp;W1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;W1&nbsp;<a href=\"core/toBODY\">&gt;BODY</a> -&gt; <a href=\"core/HERE\">HERE</a> }T</span> <br>\n    <span class=\"tt\">T{ W1 -&gt; <a href=\"core/HERE\">HERE</a>&nbsp;1&nbsp;<a href=\"core/Plus\">+</a> }T</span> <br>\n    <span class=\"tt\">T{ W1 -&gt; <a href=\"core/HERE\">HERE</a>&nbsp;2&nbsp;<a href=\"core/Plus\">+</a> }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DROP\">\n  <div class=\"wordNumber\">F.6.1.1260</div>\n  <div class=\"wordName\">DROP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>DROP</strong> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;&nbsp;&nbsp;<strong>DROP</strong> -&gt; &nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DUP\">\n  <div class=\"wordNumber\">F.6.1.1290</div>\n  <div class=\"wordName\">DUP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;<strong>DUP</strong> -&gt; 1&nbsp;1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ELSE\">\n  <div class=\"wordNumber\">F.6.1.1310</div>\n  <div class=\"wordName\">ELSE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:IF\">F.6.1.1700 IF</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:EMIT\">\n  <div class=\"wordNumber\">F.6.1.1320</div>\n  <div class=\"wordName\">EMIT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> OUTPUT-TEST <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> YOU SHOULD SEE THE STANDARD GRAPHIC CHARACTERS:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   41 <a href=\"core/BL\">BL</a> <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <strong>EMIT</strong> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   61 41 <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <strong>EMIT</strong> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   7F 61 <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <strong>EMIT</strong> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> YOU SHOULD SEE 0-9 SEPARATED BY A SPACE:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   9 <a href=\"core/OnePlus\">1+</a> 0 <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <a href=\"core/d\">.</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> YOU SHOULD SEE 0-9 (WITH NO SPACES):\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   <a href=\"core/BracketCHAR\">[CHAR]</a> 9 <a href=\"core/OnePlus\">1+</a> <a href=\"core/BracketCHAR\">[CHAR]</a> 0\n      <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> 0 <a href=\"core/SPACES\">SPACES</a> <strong>EMIT</strong> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> YOU SHOULD SEE A-G SEPARATED BY A SPACE:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   <a href=\"core/BracketCHAR\">[CHAR]</a> G <a href=\"core/OnePlus\">1+</a> <a href=\"core/BracketCHAR\">[CHAR]</a> A\n      <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <strong>EMIT</strong> <a href=\"core/SPACE\">SPACE</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> YOU SHOULD SEE 0-5 SEPARATED BY TWO SPACES:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   5 <a href=\"core/OnePlus\">1+</a> 0\n      <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <a href=\"core/BracketCHAR\">[CHAR]</a> 0 <a href=\"core/Plus\">+</a> <strong>EMIT</strong> 2 <a href=\"core/SPACES\">SPACES</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/CR\">CR</a> <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> YOU SHOULD SEE TWO SEPARATE LINES:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   <a href=\"core/Sq\">S\"</a> LINE 1\" <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <a href=\"core/Sq\">S\"</a> LINE 2\" <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <br>\n      \n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a>  YOU SHOULD SEE THE NUMBER RANGES OF SIGNED AND UNSIGNED NUMBERS:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a>   SIGNED: \" MIN-INT <a href=\"core/d\">.</a> MAX-INT <a href=\"core/d\">.</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;   <a href=\"core/Dotq\">.\"</a> UNSIGNED: \" 0 <a href=\"core/Ud\">U.</a> MAX-UINT <a href=\"core/Ud\">U.</a> <a href=\"core/CR\">CR</a> <br>\n      <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ OUTPUT-TEST -&gt;  }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ENVIRONMENTq\">\n  <div class=\"wordNumber\">F.6.1.1345</div>\n  <div class=\"wordName\">ENVIRONMENT?</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <a href=\"core/bs\">\\</a> should be the same for any query starting with X: <br>\n    <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;X:deferred\"&nbsp;<strong>ENVIRONMENT?</strong>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/ZeroEqual\">0=</a>&nbsp;<a href=\"core/XOR\">XOR</a>&nbsp;<a href=\"core/INVERT\">INVERT</a> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;X:notfound\"&nbsp;<strong>ENVIRONMENT?</strong>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/ZeroEqual\">0=</a>&nbsp;<a href=\"core/XOR\">XOR</a>&nbsp;<a href=\"core/INVERT\">INVERT</a> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:EVALUATE\">\n  <div class=\"wordNumber\">F.6.1.1360</div>\n  <div class=\"wordName\">EVALUATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> GE1 <a href=\"core/Sq\">S\"</a> 123\" <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br>\n      <a href=\"core/Colon\">:</a> GE2 <a href=\"core/Sq\">S\"</a> 123 1+\" <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br>\n      <a href=\"core/Colon\">:</a> GE3 <a href=\"core/Sq\">S\"</a> <a href=\"core/Colon\">:</a> GE4 345 <a href=\"core/Semi\">;</a>\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> GE5 <strong>EVALUATE</strong> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      <p>\n      <span class=\"tt\">T{ GE1&nbsp;<strong>EVALUATE</strong> -&gt; 123 }T</span> <a href=\"core/p\">(</a> TEST EVALUATE IN INTERP. STATE ) <br>\n      <span class=\"tt\">T{ GE2&nbsp;<strong>EVALUATE</strong> -&gt; 124 }T</span> <br>\n      <span class=\"tt\">T{ GE3&nbsp;<strong>EVALUATE</strong> -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ GE4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 345 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GE6&nbsp;GE1&nbsp;GE5&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <a href=\"core/p\">(</a> TEST EVALUATE IN COMPILE STATE ) <br>\n      <span class=\"tt\">T{ GE6 -&gt; 123 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GE7&nbsp;GE2&nbsp;GE5&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ GE7 -&gt; 124 }T</span>\n      </p><p>\n      <span class=\"rm\">See <a href=\"testsuite#test:throw\">F.9.3.6</a> for additional test.</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:EXECUTE\">\n  <div class=\"wordNumber\">F.6.1.1370</div>\n  <div class=\"wordName\">EXECUTE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:'\">F.6.1.0070 '</a> and <a href=\"testsuite#test:core:[']\">F.6.1.2510 [']</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:EXIT\">\n  <div class=\"wordNumber\">F.6.1.1380</div>\n  <div class=\"wordName\">EXIT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:FILL\">\n  <div class=\"wordNumber\">F.6.1.1540</div>\n  <div class=\"wordName\">FILL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ FBUF&nbsp;0&nbsp;20&nbsp;<strong>FILL</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 00&nbsp;00&nbsp;00 }T</span>\n    <p>\n    <span class=\"tt\">T{ FBUF&nbsp;1&nbsp;20&nbsp;<strong>FILL</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;00&nbsp;00 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ FBUF&nbsp;3&nbsp;20&nbsp;<strong>FILL</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;20&nbsp;20 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:FIND\">\n  <div class=\"wordNumber\">F.6.1.1550</div>\n  <div class=\"wordName\">FIND</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/HERE\">HERE</a>\n      3 <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CHAR\">CHAR</a> G <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CHAR\">CHAR</a> T <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CHAR\">CHAR</a> 1 <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CONSTANT\">CONSTANT</a> GT1STRING <br>\n      <a href=\"core/HERE\">HERE</a>\n      3 <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CHAR\">CHAR</a> G <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CHAR\">CHAR</a> T <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CHAR\">CHAR</a> 2 <a href=\"core/CComma\">C,</a>\n      <a href=\"core/CONSTANT\">CONSTANT</a> GT2STRING <br>\n      <span class=\"tt\">T{ GT1STRING&nbsp;<strong>FIND</strong> -&gt; <a href=\"core/Tick\">'</a>&nbsp;GT1&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ GT2STRING&nbsp;<strong>FIND</strong> -&gt; <a href=\"core/Tick\">'</a>&nbsp;GT2&nbsp;1&nbsp; }T</span> <br>\n      <a href=\"core/p\">(</a> HOW TO SEARCH FOR NON-EXISTENT WORD? )\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:FM/MOD\">\n  <div class=\"wordNumber\">F.6.1.1561</div>\n  <div class=\"wordName\">FM/MOD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>FM/MOD</strong> -&gt; -2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>FM/MOD</strong> -&gt; -1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1S&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;3&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>FM/MOD</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:HERE\">\n  <div class=\"wordNumber\">F.6.1.1650</div>\n  <div class=\"wordName\">HERE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:,\">F.6.1.0150 ,</a>,\n    <a href=\"testsuite#test:core:ALLOT\">F.6.1.0710 ALLOT</a>,\n    <a href=\"testsuite#test:core:C,\">F.6.1.0860 C,</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:HOLD\">\n  <div class=\"wordNumber\">F.6.1.1670</div>\n  <div class=\"wordName\">HOLD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> GP1  <a href=\"core/num-start\">&lt;#</a> 41 <strong>HOLD</strong> 42 <strong>HOLD</strong> 0 0 <a href=\"core/num-end\">#&gt;</a> <a href=\"core/Sq\">S\"</a> BA\" S= <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GP1 -&gt; &lt;TRUE&gt; }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:I\">\n  <div class=\"wordNumber\">F.6.1.1680</div>\n  <div class=\"wordName\">I</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:LOOP\">F.6.1.1800 LOOP</a>,\n    <a href=\"testsuite#test:core:+LOOP\">F.6.1.0140 +LOOP</a>,\n    <a href=\"testsuite#test:core:J\">F.6.1.1730 J</a>,\n    <a href=\"testsuite#test:core:LEAVE\">F.6.1.1760 LEAVE</a>,\n    <a href=\"testsuite#test:core:UNLOOP\">F.6.1.2380 UNLOOP</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:IF\">\n  <div class=\"wordNumber\">F.6.1.1700</div>\n  <div class=\"wordName\">IF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GI1&nbsp;<strong>IF</strong>&nbsp;123&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GI2&nbsp;<strong>IF</strong>&nbsp;123&nbsp;<a href=\"core/ELSE\">ELSE</a>&nbsp;234&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;GI1 -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;GI1 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;GI1 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;GI2 -&gt; 234 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;GI2 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;GI1 -&gt; 123 }T</span>\n    <p>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Multiple <a href=\"core/ELSE\">ELSE</a>s in an <strong>IF</strong> statement</span> <br>\n    <a href=\"core/Colon\">:</a> melse <strong>IF</strong> 1 <a href=\"core/ELSE\">ELSE</a> 2 <a href=\"core/ELSE\">ELSE</a> 3 <a href=\"core/ELSE\">ELSE</a> 4 <a href=\"core/ELSE\">ELSE</a> 5 <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n    <span class=\"tt\">T{ &lt;FALSE&gt;&nbsp;melse -&gt; 2&nbsp;4 }T</span> <br>\n    <span class=\"tt\">T{ &lt;TRUE&gt;&nbsp;&nbsp;melse -&gt; 1&nbsp;3&nbsp;5 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:IMMEDIATE\">\n  <div class=\"wordNumber\">F.6.1.1710</div>\n  <div class=\"wordName\">IMMEDIATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 123&nbsp;<a href=\"core/CONSTANT\">CONSTANT</a>&nbsp;iw1&nbsp;<strong>IMMEDIATE</strong>&nbsp;iw1 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;iw2&nbsp;iw1&nbsp;<a href=\"core/LITERAL\">LITERAL</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;iw2 -&gt; 123 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/VARIABLE\">VARIABLE</a>&nbsp;iw3&nbsp;<strong>IMMEDIATE</strong>&nbsp;234&nbsp;iw3&nbsp;<a href=\"core/Store\">!</a>&nbsp;iw3&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 234 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;iw4&nbsp;iw3&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"core/LITERAL\">LITERAL</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;iw4 -&gt; 234 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/ColonNONAME\">:NONAME</a>&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;345&nbsp;<a href=\"right-bracket\">]</a>&nbsp;iw3&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;<a href=\"core/Store\">!</a>&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;iw3&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 345 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/CREATE\">CREATE</a>&nbsp;iw5&nbsp;456&nbsp;<a href=\"core/Comma\">,</a>&nbsp;<strong>IMMEDIATE</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/ColonNONAME\">:NONAME</a>&nbsp;iw5&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;iw3&nbsp;<a href=\"core/Store\">!</a>&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;iw3&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 456 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;iw6&nbsp;<a href=\"core/CREATE\">CREATE</a>&nbsp;<a href=\"core/Comma\">,</a>&nbsp;<strong>IMMEDIATE</strong>&nbsp;<a href=\"core/DOES\">DOES&gt;</a>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 111&nbsp;iw6&nbsp;iw7&nbsp;iw7 -&gt; 112 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;iw8&nbsp;iw7&nbsp;<a href=\"core/LITERAL\">LITERAL</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;iw8 -&gt; 113 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;iw9&nbsp;<a href=\"core/CREATE\">CREATE</a>&nbsp;<a href=\"core/Comma\">,</a>&nbsp;<a href=\"core/DOES\">DOES&gt;</a>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;2&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<strong>IMMEDIATE</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <a href=\"core/Colon\">:</a> find-iw <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a> <a href=\"core/FIND\">FIND</a> <a href=\"core/NIP\">NIP</a> <a href=\"core/Semi\">;</a> <br>\n    <span class=\"tt\">T{ 222&nbsp;iw9&nbsp;iw10&nbsp;find-iw&nbsp;iw10 -&gt; -1 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">iw10 is not immediate</span> <br>\n    <span class=\"tt\">T{ iw10&nbsp;find-iw&nbsp;iw10 -&gt; 224&nbsp;1 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">iw10 becomes immediate</span>\n    </p><p>\n    See <a href=\"testsuite#test:core:[']\">F.6.1.2510 [']</a>,\n    <a href=\"testsuite#test:core:POSTPONE\">F.6.1.2033 POSTPONE</a>,\n    <a href=\"testsuite#test:core:STATE\">F.6.1.2250 STATE</a>,\n    <a href=\"testsuite#test:core:Sq\">F.6.1.2165 S\"</a>.\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:INVERT\">\n  <div class=\"wordNumber\">F.6.1.1720</div>\n  <div class=\"wordName\">INVERT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0S&nbsp;<strong>INVERT</strong> -&gt; 1S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;<strong>INVERT</strong> -&gt; 0S }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:J\">\n  <div class=\"wordNumber\">F.6.1.1730</div>\n  <div class=\"wordName\">J</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GD3&nbsp;<a href=\"core/DO\">DO</a>&nbsp;1&nbsp;0&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<strong>J</strong>&nbsp;<a href=\"core/LOOP\">LOOP</a>&nbsp;<a href=\"core/LOOP\">LOOP</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;GD3 -&gt; &nbsp;1&nbsp;2&nbsp;3&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;GD3 -&gt; -1&nbsp;0&nbsp;1&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;MID-UINT&nbsp;GD3 -&gt; MID-UINT }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GD4&nbsp;<a href=\"core/DO\">DO</a>&nbsp;1&nbsp;0&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<strong>J</strong>&nbsp;<a href=\"core/LOOP\">LOOP</a>&nbsp;-1&nbsp;<a href=\"core/PlusLOOP\">+LOOP</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;GD4 -&gt; 4&nbsp;3&nbsp;2&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;GD4 -&gt; 2&nbsp;1&nbsp;0&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT&nbsp;MID-UINT+1&nbsp;GD4 -&gt; MID-UINT+1&nbsp;MID-UINT }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:LEAVE\">\n  <div class=\"wordNumber\">F.6.1.1760</div>\n  <div class=\"wordName\">LEAVE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GD5&nbsp;123&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;0&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/I\">I</a>&nbsp;4&nbsp;<a href=\"core/more\">&gt;</a>&nbsp;<a href=\"core/IF\">IF</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;234&nbsp;<strong>LEAVE</strong>&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/LOOP\">LOOP</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;GD5 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ 5&nbsp;GD5 -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ 6&nbsp;GD5 -&gt; 234 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:LITERAL\">\n  <div class=\"wordNumber\">F.6.1.1780</div>\n  <div class=\"wordName\">LITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT3&nbsp;GT2&nbsp;<strong>LITERAL</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GT3 -&gt; <a href=\"core/Tick\">'</a>&nbsp;GT1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:LOOP\">\n  <div class=\"wordNumber\">F.6.1.1800</div>\n  <div class=\"wordName\">LOOP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GD1&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<a href=\"core/I\">I</a>&nbsp;<strong>LOOP</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;GD1 -&gt; &nbsp;1&nbsp;2&nbsp;3&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;GD1 -&gt; -1&nbsp;0&nbsp;1&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;MID-UINT&nbsp;GD1 -&gt; MID-UINT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:LSHIFT\">\n  <div class=\"wordNumber\">F.6.1.1805</div>\n  <div class=\"wordName\">LSHIFT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;0&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;1&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;2&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;4 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;F&nbsp;<strong>LSHIFT</strong> -&gt; 8000 }T</span> &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> BIGGEST GUARANTEED SHIFT <br>\n    <span class=\"tt\">T{ &nbsp;1S&nbsp;1&nbsp;<strong>LSHIFT</strong>&nbsp;1&nbsp;<a href=\"core/XOR\">XOR</a> -&gt; 1S }T</span> <br>\n    <span class=\"tt\">T{ MSB&nbsp;1&nbsp;<strong>LSHIFT</strong> -&gt; &nbsp;&nbsp;&nbsp;0 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:M*\">\n  <div class=\"wordNumber\">F.6.1.1810</div>\n  <div class=\"wordName\">M*</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-9&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-9&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;1S&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; MAX-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"core/LSHIFT\">LSHIFT</a>&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MSB&nbsp;1&nbsp;<a href=\"core/RSHIFT\">RSHIFT</a>&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;MSB&nbsp;MSB&nbsp;<a href=\"core/TwoDiv\">2/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>M*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;MSB&nbsp;<a href=\"core/TwoDiv\">2/</a>&nbsp;<a href=\"core/INVERT\">INVERT</a>&nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:MAX\">\n  <div class=\"wordNumber\">F.6.1.1870</div>\n  <div class=\"wordName\">MAX</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>MAX</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MAX</strong> -&gt; MAX-INT }T</span> <br>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:MIN\">\n  <div class=\"wordNumber\">F.6.1.1880</div>\n  <div class=\"wordName\">MIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-INT&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MIN-INT&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MIN-INT&nbsp;<strong>MIN</strong> -&gt; MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>MIN</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:MOD\">\n  <div class=\"wordNumber\">F.6.1.1890</div>\n  <div class=\"wordName\">MOD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\nIFFLOORED &nbsp;&nbsp; \t<a href=\"core/Colon\">:</a> TMOD T/MOD <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a> <br>\n      IFSYM &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/Colon\">:</a> TMOD T/MOD <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>MOD</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>MOD</strong> -&gt; MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<strong>MOD</strong> -&gt; MAX-INT&nbsp;MAX-INT&nbsp;TMOD }T</span> <br>\n      <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<strong>MOD</strong> -&gt; MIN-INT&nbsp;MIN-INT&nbsp;TMOD }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:MOVE\">\n  <div class=\"wordNumber\">F.6.1.1900</div>\n  <div class=\"wordName\">MOVE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ FBUF&nbsp;FBUF&nbsp;3&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span>  <a href=\"core/bs\">\\</a> BIZARRE SPECIAL CASE <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;20&nbsp;20 }T</span>\n    <p>\n    <span class=\"tt\">T{ SBUF&nbsp;FBUF&nbsp;0&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 20&nbsp;20&nbsp;20 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ SBUF&nbsp;FBUF&nbsp;1&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;20&nbsp;20 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ SBUF&nbsp;FBUF&nbsp;3&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;34&nbsp;56 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ FBUF&nbsp;FBUF&nbsp;<a href=\"core/CHARPlus\">CHAR+</a>&nbsp;2&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;12&nbsp;34 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ FBUF&nbsp;<a href=\"core/CHARPlus\">CHAR+</a>&nbsp;FBUF&nbsp;2&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>MOVE</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ SEEBUF -&gt; 12&nbsp;34&nbsp;34 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:NEGATE\">\n  <div class=\"wordNumber\">F.6.1.1910</div>\n  <div class=\"wordName\">NEGATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;0&nbsp;<strong>NEGATE</strong> -&gt; &nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;<strong>NEGATE</strong> -&gt; -1 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;<strong>NEGATE</strong> -&gt; &nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;2&nbsp;<strong>NEGATE</strong> -&gt; -2 }T</span> <br>\n    <span class=\"tt\">T{ -2&nbsp;<strong>NEGATE</strong> -&gt; &nbsp;2 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:OR\">\n  <div class=\"wordNumber\">F.6.1.1980</div>\n  <div class=\"wordName\">OR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0S&nbsp;0S&nbsp;<strong>OR</strong> -&gt; 0S }T</span> <br>\n    <span class=\"tt\">T{ 0S&nbsp;1S&nbsp;<strong>OR</strong> -&gt; 1S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;0S&nbsp;<strong>OR</strong> -&gt; 1S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;1S&nbsp;<strong>OR</strong> -&gt; 1S }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:OVER\">\n  <div class=\"wordNumber\">F.6.1.1990</div>\n  <div class=\"wordName\">OVER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>OVER</strong> -&gt; 1&nbsp;2&nbsp;1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:POSTPONE\">\n  <div class=\"wordNumber\">F.6.1.2033</div>\n  <div class=\"wordName\">POSTPONE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT4&nbsp;<strong>POSTPONE</strong>&nbsp;GT1&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT5&nbsp;GT4&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GT5 -&gt; 123 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT6&nbsp;345&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT7&nbsp;<strong>POSTPONE</strong>&nbsp;GT6&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GT7 -&gt; 345 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:Rfrom\">\n  <div class=\"wordNumber\">F.6.1.2060</div>\n  <div class=\"wordName\">R&gt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:toR\">F.6.1.0580 &gt;R</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:R@\">\n  <div class=\"wordNumber\">F.6.1.2070</div>\n  <div class=\"wordName\">R@</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:toR\">F.6.1.0580 &gt;R</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:RECURSE\">\n  <div class=\"wordNumber\">F.6.1.2120</div>\n  <div class=\"wordName\">RECURSE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GI6&nbsp;<a href=\"core/p\">(</a>&nbsp;N&nbsp;--&nbsp;0,1,..N&nbsp;)&nbsp;<br>\n    \n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/IF\">IF</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/toR\">&gt;R</a>&nbsp;<a href=\"core/OneMinus\">1-</a>&nbsp;<strong>RECURSE</strong>&nbsp;<a href=\"core/Rfrom\">R&gt;</a>\n    <a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;GI6 -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;GI6 -&gt; 0&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;GI6 -&gt; 0&nbsp;1&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ 3&nbsp;GI6 -&gt; 0&nbsp;1&nbsp;2&nbsp;3 }T</span> <br>\n    <span class=\"tt\">T{ 4&nbsp;GI6 -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4 }T</span>\n    <p>\n    <a href=\"core/DECIMAL\">DECIMAL</a> <br>\n    <span class=\"tt\">T{ <a href=\"core/ColonNONAME\">:NONAME</a>&nbsp;<a href=\"core/p\">(</a>&nbsp;n&nbsp;--&nbsp;0,&nbsp;1,&nbsp;..,&nbsp;n&nbsp;)&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/IF\">IF</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/toR\">&gt;R</a>&nbsp;<a href=\"core/OneMinus\">1-</a>&nbsp;<strong>RECURSE</strong>&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"core/CONSTANT\">CONSTANT</a>&nbsp;rn1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;rn1&nbsp;EXECUTE -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ 4&nbsp;rn1&nbsp;EXECUTE -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4 }T</span>\n    </p><p>\n    <a href=\"core/ColonNONAME\">:NONAME</a>  <a href=\"core/p\">(</a> n -- n1 ) <br>\n    &nbsp;&nbsp; <a href=\"core/OneMinus\">1-</a> <a href=\"core/DUP\">DUP</a> <br>\n    &nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> 0 <a href=\"core/OF\">OF</a> <a href=\"core/EXIT\">EXIT</a> <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 1 <a href=\"core/OF\">OF</a> 11 <a href=\"core/SWAP\">SWAP</a> <strong>RECURSE</strong> <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 2 <a href=\"core/OF\">OF</a> 22 <a href=\"core/SWAP\">SWAP</a> <strong>RECURSE</strong> <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; 3 <a href=\"core/OF\">OF</a> 33 <a href=\"core/SWAP\">SWAP</a> <strong>RECURSE</strong> <a href=\"core/ENDOF\">ENDOF</a> <br>\n    &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DROP\">DROP</a> <a href=\"core/ABS\">ABS</a> <strong>RECURSE</strong> <a href=\"core/EXIT\">EXIT</a> <br>\n    &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n    <a href=\"core/Semi\">;</a> <a href=\"core/CONSTANT\">CONSTANT</a> rn2\n    </p><p>\n    <span class=\"tt\">T{ &nbsp;1&nbsp;rn2&nbsp;EXECUTE -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;2&nbsp;rn2&nbsp;EXECUTE -&gt; 11&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;4&nbsp;rn2&nbsp;EXECUTE -&gt; 33&nbsp;22&nbsp;11&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 25&nbsp;rn2&nbsp;EXECUTE -&gt; 33&nbsp;22&nbsp;11&nbsp;0 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:REPEAT\">\n  <div class=\"wordNumber\">F.6.1.2140</div>\n  <div class=\"wordName\">REPEAT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:WHILE\">F.6.1.2430 WHILE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ROT\">\n  <div class=\"wordNumber\">F.6.1.2160</div>\n  <div class=\"wordName\">ROT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;3&nbsp;<strong>ROT</strong> -&gt; 2&nbsp;3&nbsp;1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:RSHIFT\">\n  <div class=\"wordNumber\">F.6.1.2162</div>\n  <div class=\"wordName\">RSHIFT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;0&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;1&nbsp;<strong>RSHIFT</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2&nbsp;1&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;4&nbsp;2&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ 8000&nbsp;F&nbsp;<strong>RSHIFT</strong> -&gt; 1 }T</span>\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Biggest</span> <br>\n    <span class=\"tt\">T{ &nbsp;MSB&nbsp;1&nbsp;<strong>RSHIFT</strong>&nbsp;MSB&nbsp;<a href=\"core/AND\">AND</a> -&gt; &nbsp;&nbsp;0 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> RSHIFT <span class=\"rm\">zero fills MSBs</span> <br>\n    <span class=\"tt\">T{ &nbsp;MSB&nbsp;1&nbsp;<strong>RSHIFT</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/TwoTimes\">2*</a>&nbsp; -&gt; MSB }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:Sq\">\n  <div class=\"wordNumber\">F.6.1.2165</div>\n  <div class=\"wordName\">S\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GC4&nbsp;<strong>S\"</strong>&nbsp;XY\"&nbsp;<a href=\"core/Semi\">;</a> -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ GC4&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp; -&gt; 2 }T</span> <br>\n    <span class=\"tt\">T{ GC4&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/CFetch\">C@</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/CHARPlus\">CHAR+</a>&nbsp;<a href=\"core/CFetch\">C@</a> -&gt; 58&nbsp;59 }T</span>\n    <p>\n    <a href=\"core/Colon\">:</a> GC5 <strong>S\"</strong> A String\"<a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/Semi\">;</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">There is no space between the \" and <a href=\"core/TwoDROP\">2DROP</a></span> <br>\n    <span class=\"tt\">T{ GC5 -&gt;  }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:StoD\">\n  <div class=\"wordNumber\">F.6.1.2170</div>\n  <div class=\"wordName\">S&gt;D</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>S&gt;D</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<strong>S&gt;D</strong> -&gt; MIN-INT&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;<strong>S&gt;D</strong> -&gt; MAX-INT&nbsp;&nbsp;0 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SIGN\">\n  <div class=\"wordNumber\">F.6.1.2210</div>\n  <div class=\"wordName\">SIGN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> GP2  <a href=\"core/num-start\">&lt;#</a> -1 <strong>SIGN</strong> 0 <strong>SIGN</strong> -1 <strong>SIGN</strong> 0 0 <a href=\"core/num-end\">#&gt;</a> <a href=\"core/Sq\">S\"</a> --\" S= <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GP2 -&gt; &lt;TRUE&gt; }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SM/REM\">\n  <div class=\"wordNumber\">F.6.1.2214</div>\n  <div class=\"wordName\">SM/REM</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;<strong>SM/REM</strong> -&gt; -1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1S&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;3&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MIN-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MIN-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MIN-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;MAX-INT&nbsp;<a href=\"core/MTimes\">M*</a>&nbsp;MAX-INT&nbsp;<strong>SM/REM</strong> -&gt; &nbsp;0&nbsp;MAX-INT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SOURCE\">\n  <div class=\"wordNumber\">F.6.1.2216</div>\n  <div class=\"wordName\">SOURCE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> GS1 <a href=\"core/Sq\">S\"</a> <strong>SOURCE</strong>\" <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/EVALUATE\">EVALUATE</a>\n      <a href=\"core/toR\">&gt;R</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/Equal\">=</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Equal\">=</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GS1 -&gt; &lt;TRUE&gt;&nbsp;&lt;TRUE&gt; }T</span>\n      <p>\n      <a href=\"core/Colon\">:</a> GS4 <strong>SOURCE</strong> <a href=\"core/toIN\">&gt;IN</a> <a href=\"core/Store\">!</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ GS4&nbsp;123&nbsp;456&nbsp;<br>\n      &nbsp;&nbsp;&nbsp; -&gt;  }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SPACE\">\n  <div class=\"wordNumber\">F.6.1.2220</div>\n  <div class=\"wordName\">SPACE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SPACES\">\n  <div class=\"wordNumber\">F.6.1.2230</div>\n  <div class=\"wordName\">SPACES</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:STATE\">\n  <div class=\"wordNumber\">F.6.1.2250</div>\n  <div class=\"wordName\">STATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT8&nbsp;<strong>STATE</strong>&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GT8 -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT9&nbsp;GT8&nbsp;<a href=\"core/LITERAL\">LITERAL</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GT9&nbsp;<a href=\"core/ZeroEqual\">0=</a> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SWAP\">\n  <div class=\"wordNumber\">F.6.1.2260</div>\n  <div class=\"wordName\">SWAP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>SWAP</strong> -&gt; 2&nbsp;1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:THEN\">\n  <div class=\"wordNumber\">F.6.1.2270</div>\n  <div class=\"wordName\">THEN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:IF\">F.6.1.1700 IF</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:TYPE\">\n  <div class=\"wordNumber\">F.6.1.2310</div>\n  <div class=\"wordName\">TYPE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:Ud\">\n  <div class=\"wordNumber\">F.6.1.2320</div>\n  <div class=\"wordName\">U.</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:EMIT\">F.6.1.1320 EMIT</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:Uless\">\n  <div class=\"wordNumber\">F.6.1.2340</div>\n  <div class=\"wordName\">U&lt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MID-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;MAX-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT&nbsp;MAX-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-UINT&nbsp;MID-UINT&nbsp;<strong>U&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:UM*\">\n  <div class=\"wordNumber\">F.6.1.2360</div>\n  <div class=\"wordName\">UM*</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0&nbsp;0&nbsp;<strong>UM*</strong> -&gt; 0&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;1&nbsp;<strong>UM*</strong> -&gt; 0&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;0&nbsp;<strong>UM*</strong> -&gt; 0&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>UM*</strong> -&gt; 2&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;1&nbsp;<strong>UM*</strong> -&gt; 2&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 3&nbsp;3&nbsp;<strong>UM*</strong> -&gt; 9&nbsp;0 }T</span>\n    <p>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;1&nbsp;<a href=\"core/RSHIFT\">RSHIFT</a>&nbsp;2&nbsp;<strong>UM*</strong> -&gt; &nbsp;MID-UINT+1&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MID-UINT+1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<strong>UM*</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM*</strong> -&gt; 1S&nbsp;1&nbsp;<a href=\"core/LSHIFT\">LSHIFT</a>&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;MAX-UINT&nbsp;&nbsp;&nbsp;MAX-UINT&nbsp;<strong>UM*</strong> -&gt; &nbsp;&nbsp;&nbsp;1&nbsp;1&nbsp;<a href=\"core/INVERT\">INVERT</a> }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:UM/MOD\">\n  <div class=\"wordNumber\">F.6.1.2370</div>\n  <div class=\"wordName\">UM/MOD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM/MOD</strong> -&gt; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM/MOD</strong> -&gt; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/UMTimes\">UM*</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;MAX-UINT }T</span> <br>\n    <span class=\"tt\">T{ MAX-UINT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<a href=\"core/UMTimes\">UM*</a>&nbsp;MAX-UINT&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ MAX-UINT&nbsp;MAX-UINT&nbsp;<a href=\"core/UMTimes\">UM*</a>&nbsp;MAX-UINT&nbsp;<strong>UM/MOD</strong> -&gt; 0&nbsp;MAX-UINT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:UNLOOP\">\n  <div class=\"wordNumber\">F.6.1.2380</div>\n  <div class=\"wordName\">UNLOOP</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GD6&nbsp;<a href=\"core/p\">(</a>&nbsp;PAT:&nbsp;{0&nbsp;0},{0&nbsp;0}{1&nbsp;0}{1&nbsp;1},{0&nbsp;0}{1&nbsp;0}{1&nbsp;1}{2&nbsp;0}{2&nbsp;1}{2&nbsp;2}&nbsp;)&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;0&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/I\">I</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;0&nbsp;<a href=\"core/DO\">DO</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/I\">I</a>&nbsp;<a href=\"core/J\">J</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;3&nbsp;<a href=\"core/Equal\">=</a>&nbsp;<a href=\"core/IF\">IF</a>\n    <a href=\"core/I\">I</a>&nbsp;<strong>UNLOOP</strong>&nbsp;<a href=\"core/I\">I</a>&nbsp;<strong>UNLOOP</strong>&nbsp;<a href=\"core/EXIT\">EXIT</a>&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/LOOP\">LOOP</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/LOOP\">LOOP</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;GD6 -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;GD6 -&gt; 3 }T</span> <br>\n    <span class=\"tt\">T{ 3&nbsp;GD6 -&gt; 4&nbsp;1&nbsp;2 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:UNTIL\">\n  <div class=\"wordNumber\">F.6.1.2390</div>\n  <div class=\"wordName\">UNTIL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GI4&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;5&nbsp;<a href=\"core/more\">&gt;</a>&nbsp;<strong>UNTIL</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 3&nbsp;GI4 -&gt; 3&nbsp;4&nbsp;5&nbsp;6 }T</span> <br>\n    <span class=\"tt\">T{ 5&nbsp;GI4 -&gt; 5&nbsp;6 }T</span> <br>\n    <span class=\"tt\">T{ 6&nbsp;GI4 -&gt; 6&nbsp;7 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:VARIABLE\">\n  <div class=\"wordNumber\">F.6.1.2410</div>\n  <div class=\"wordName\">VARIABLE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>VARIABLE</strong>&nbsp;V1 -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;123&nbsp;V1&nbsp;<a href=\"core/Store\">!</a> -&gt; &nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V1&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 123 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:WHILE\">\n  <div class=\"wordNumber\">F.6.1.2430</div>\n  <div class=\"wordName\">WHILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GI3&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;5&nbsp;<a href=\"core/less\">&lt;</a>&nbsp;<strong>WHILE</strong>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/REPEAT\">REPEAT</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;GI3 -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ 4&nbsp;GI3 -&gt; 4&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ 5&nbsp;GI3 -&gt; 5 }T</span> <br>\n    <span class=\"tt\">T{ 6&nbsp;GI3 -&gt; 6 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GI5&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;2&nbsp;<a href=\"core/more\">&gt;</a>&nbsp;<strong>WHILE</strong>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;5&nbsp;<a href=\"core/less\">&lt;</a>&nbsp;<strong>WHILE</strong>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/REPEAT\">REPEAT</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123&nbsp;<a href=\"core/ELSE\">ELSE</a>&nbsp;345&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;GI5 -&gt; 1&nbsp;345 }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;GI5 -&gt; 2&nbsp;345 }T</span> <br>\n    <span class=\"tt\">T{ 3&nbsp;GI5 -&gt; 3&nbsp;4&nbsp;5&nbsp;123 }T</span> <br>\n    <span class=\"tt\">T{ 4&nbsp;GI5 -&gt; 4&nbsp;5&nbsp;123 }T</span> <br>\n    <span class=\"tt\">T{ 5&nbsp;GI5 -&gt; 5&nbsp;123 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:WORD\">\n  <div class=\"wordNumber\">F.6.1.2450</div>\n  <div class=\"wordName\">WORD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> GS3 <strong>WORD</strong> <a href=\"core/COUNT\">COUNT</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ <a href=\"core/BL\">BL</a>&nbsp;GS3&nbsp;HELLO -&gt; 5&nbsp;<a href=\"core/CHAR\">CHAR</a>&nbsp;H }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/CHAR\">CHAR</a>&nbsp;\"&nbsp;GS3&nbsp;GOODBYE\" -&gt; 7&nbsp;<a href=\"core/CHAR\">CHAR</a>&nbsp;G }T</span> <br>\n      <span class=\"tt\">T{ BL&nbsp;GS3&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/DROP\">DROP</a> -&gt; 0 }T</span>  <a href=\"core/bs\">\\</a> <span class=\"rm\">Blank lines return zero-length strings</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:XOR\">\n  <div class=\"wordNumber\">F.6.1.2490</div>\n  <div class=\"wordName\">XOR</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0S&nbsp;0S&nbsp;<strong>XOR</strong> -&gt; 0S }T</span> <br>\n    <span class=\"tt\">T{ 0S&nbsp;1S&nbsp;<strong>XOR</strong> -&gt; 1S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;0S&nbsp;<strong>XOR</strong> -&gt; 1S }T</span> <br>\n    <span class=\"tt\">T{ 1S&nbsp;1S&nbsp;<strong>XOR</strong> -&gt; 0S }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:[\">\n  <div class=\"wordNumber\">F.6.1.2500</div>\n  <div class=\"wordName\">[</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GC3&nbsp;<strong>[</strong>&nbsp;GC1&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"core/LITERAL\">LITERAL</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GC3 -&gt; 58 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:[']\">\n  <div class=\"wordNumber\">F.6.1.2510</div>\n  <div class=\"wordName\">[']</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;GT2&nbsp;<strong>[']</strong>&nbsp;GT1&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GT2&nbsp;<a href=\"core/EXECUTE\">EXECUTE</a> -&gt; 123 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:[CHAR]\">\n  <div class=\"wordNumber\">F.6.1.2520</div>\n  <div class=\"wordName\">[CHAR]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ :&nbsp;GC1&nbsp;<strong>[CHAR]</strong>&nbsp;X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ :&nbsp;GC2&nbsp;<strong>[CHAR]</strong>&nbsp;HELLO&nbsp;; -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ GC1 -&gt; 58 }T</span> <br>\n    <span class=\"tt\">T{ GC2 -&gt; 48 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:]\">\n  <div class=\"wordNumber\">F.6.1.2540</div>\n  <div class=\"wordName\">]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:[\">F.6.1.2500 [</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core::NONAME\">\n  <div class=\"wordNumber\">F.6.2.0455</div>\n  <div class=\"wordName\">:NONAME</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <a href=\"core/VARIABLE\">VARIABLE</a> nn1 <br>\n    <a href=\"core/VARIABLE\">VARIABLE</a> nn2 <br>\n    <span class=\"tt\">T{ <strong>:NONAME</strong>&nbsp;1234&nbsp;<a href=\"core/Semi\">;</a>&nbsp;nn1&nbsp;<a href=\"core/Store\">!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <strong>:NONAME</strong>&nbsp;9876&nbsp;<a href=\"core/Semi\">;</a>&nbsp;nn2&nbsp;<a href=\"core/Store\">!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ nn1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/EXECUTE\">EXECUTE</a> -&gt; 1234 }T</span> <br>\n    <span class=\"tt\">T{ nn2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/EXECUTE\">EXECUTE</a> -&gt; 9876 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:qDO\">\n  <div class=\"wordNumber\">F.6.2.0620</div>\n  <div class=\"wordName\">?DO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/DECIMAL\">DECIMAL</a>\n      <p>\n      <a href=\"core/Colon\">:</a> qd <strong>?DO</strong> <a href=\"core/I\">I</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;789&nbsp;&nbsp;&nbsp;789&nbsp;qd -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ -9876&nbsp;-9876&nbsp;qd -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;qd -&gt; 0&nbsp;1&nbsp;2&nbsp;3&nbsp;4 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> qd1 <strong>?DO</strong> <a href=\"core/I\">I</a> 10 <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 50&nbsp;1&nbsp;qd1 -&gt; 1&nbsp;11&nbsp;21&nbsp;31&nbsp;41 }T</span> <br>\n      <span class=\"tt\">T{ 50&nbsp;0&nbsp;qd1 -&gt; 0&nbsp;10&nbsp;20&nbsp;30&nbsp;40 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> qd2 <strong>?DO</strong> <a href=\"core/I\">I</a> 3 <a href=\"core/more\">&gt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/LEAVE\">LEAVE</a> <a href=\"core/ELSE\">ELSE</a> <a href=\"core/I\">I</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 5&nbsp;-1&nbsp;qd2 -&gt; -1&nbsp;0&nbsp;1&nbsp;2&nbsp;3 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> qd3 <strong>?DO</strong> <a href=\"core/I\">I</a> 1 <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 4&nbsp;&nbsp;4&nbsp;qd3 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;&nbsp;1&nbsp;qd3 -&gt; &nbsp;1&nbsp;2&nbsp;3 }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;-1&nbsp;qd3 -&gt; -1&nbsp;0&nbsp;1 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> qd4 <strong>?DO</strong> <a href=\"core/I\">I</a> -1 <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;4&nbsp;qd4 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;4&nbsp;qd4 -&gt; 4&nbsp;3&nbsp;2&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;2&nbsp;qd4 -&gt; 2&nbsp;1&nbsp;0&nbsp;-1 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> qd5 <strong>?DO</strong> <a href=\"core/I\">I</a> -10 <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;1&nbsp;50&nbsp;qd5 -&gt; 50&nbsp;40&nbsp;30&nbsp;20&nbsp;10&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;50&nbsp;qd5 -&gt; 50&nbsp;40&nbsp;30&nbsp;20&nbsp;10&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ -25&nbsp;10&nbsp;qd5 -&gt; 10&nbsp;0&nbsp;-10&nbsp;-20&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n      </p><p>\n      <a href=\"core/VARIABLE\">VARIABLE</a> qditerations <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> qdincrement\n      </p><p>\n      <a href=\"core/Colon\">:</a> qd6 <a href=\"core/p\">(</a> limit start increment -- )\n      &nbsp;&nbsp; qdincrement <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp; 0 qditerations <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp; <strong>?DO</strong> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; 1 qditerations <a href=\"core/PlusStore\">+!</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; qditerations <a href=\"core/Fetch\">@</a>  6 <a href=\"core/Equal\">=</a> <a href=\"core/IF\">IF</a> <a href=\"core/LEAVE\">LEAVE</a> <a href=\"core/THEN\">THEN</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; qdincrement <a href=\"core/Fetch\">@</a> <br>\n      &nbsp;&nbsp; <a href=\"core/PlusLOOP\">+LOOP</a> qditerations <a href=\"core/Fetch\">@</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;4&nbsp;-1&nbsp;qd6 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;4&nbsp;-1&nbsp;qd6 -&gt; &nbsp;4&nbsp;&nbsp;3&nbsp;&nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;1&nbsp;-1&nbsp;qd6 -&gt; &nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;-2&nbsp;-3&nbsp;-4&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;4&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;&nbsp;8&nbsp;&nbsp;9&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;1&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;1&nbsp;&nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;4&nbsp;&nbsp;4&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;2&nbsp;-1&nbsp;-1&nbsp;qd6 -&gt; -1&nbsp;-2&nbsp;-3&nbsp;-4&nbsp;-5&nbsp;-6&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;2&nbsp;-1&nbsp;qd6 -&gt; &nbsp;2&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;2&nbsp;-1&nbsp;&nbsp;0&nbsp;qd6 -&gt; -1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;-1&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;2&nbsp;&nbsp;0&nbsp;qd6 -&gt; &nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;&nbsp;2&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;&nbsp;2&nbsp;&nbsp;1&nbsp;qd6 -&gt; &nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;4&nbsp;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;7&nbsp;6&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;2&nbsp;-1&nbsp;&nbsp;1&nbsp;qd6 -&gt; -1&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp; }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ACTION-OF\">\n  <div class=\"wordNumber\">F.6.2.0698</div>\n  <div class=\"wordName\">ACTION-OF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/DEFER\">DEFER</a>&nbsp;defer1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;action-defer1&nbsp;<strong>ACTION-OF</strong>&nbsp;defer1&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a>&nbsp;<a href=\"core/Tick\">'</a>&nbsp;defer1&nbsp;<a href=\"core/DEFERStore\">DEFER!</a> -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;3&nbsp;defer1 -&gt; 6 }T</span> <br>\n    <span class=\"tt\">T{ <strong>ACTION-OF</strong>&nbsp;defer1 -&gt; <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;action-defer1 -&gt; <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a> }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/IS\">IS</a>&nbsp;defer1 -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;defer1 -&gt; 3 }T</span> <br>\n    <span class=\"tt\">T{ <strong>ACTION-OF</strong>&nbsp;defer1 -&gt; <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;action-defer1 -&gt; <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a> }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:BUFFER:\">\n  <div class=\"wordNumber\">F.6.2.0825</div>\n  <div class=\"wordName\">BUFFER:</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/DECIMAL\">DECIMAL</a> <br>\n      <span class=\"tt\">T{ 127&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>BUFFER:</strong>&nbsp;TBUF1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 127&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>BUFFER:</strong>&nbsp;TBUF2 -&gt;  }T</span>\n      <p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Buffer is aligned</span> <br>\n      <span class=\"tt\">T{ TBUF1&nbsp;<a href=\"core/ALIGNED\">ALIGNED</a> -&gt; TBUF1 }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Buffers do not overlap</span> <br>\n      <span class=\"tt\">T{ TBUF2&nbsp;TBUF1&nbsp;<a href=\"core/Minus\">-</a>&nbsp;<a href=\"core/ABS\">ABS</a>&nbsp;127&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<a href=\"core/less\">&lt;</a> -&gt; &lt;FALSE&gt; }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Buffer can be written to</span> <br>\n      1 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/CONSTANT\">CONSTANT</a> /CHAR <br>\n      <a href=\"core/Colon\">:</a> TFULL? <a href=\"core/p\">(</a> c-addr n char -- flag )<br>\n      &nbsp;&nbsp;&nbsp;<a href=\"core/TRUE\">TRUE</a> <a href=\"core/TwoSWAP\">2SWAP</a> <a href=\"core/CHARS\">CHARS</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/qDO\">?DO</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/I\">I</a> <a href=\"core/CFetch\">C@</a> <a href=\"core/Equal\">=</a> <a href=\"core/AND\">AND</a> <br>\n      &nbsp;&nbsp;&nbsp;/CHAR <a href=\"core/PlusLOOP\">+LOOP</a> <a href=\"core/NIP\">NIP</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;<a href=\"core/CHAR\">CHAR</a>&nbsp;*&nbsp;<a href=\"core/FILL\">FILL</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;<a href=\"core/CHAR\">CHAR</a>&nbsp;*&nbsp;TFULL? -&gt; &lt;TRUE&gt; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;0&nbsp;<a href=\"core/FILL\">FILL</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ TBUF1&nbsp;127&nbsp;0&nbsp;TFULL? -&gt; &lt;TRUE&gt; }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:Cq\">\n  <div class=\"wordNumber\">F.6.2.0855</div>\n  <div class=\"wordName\">C\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cq1&nbsp;<strong>C\"</strong>&nbsp;123<code>\"</code>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cq2&nbsp;<strong>C\"</strong>&nbsp;<code>\"</code>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;&nbsp;&nbsp; -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ cq1&nbsp;<a href=\"core/COUNT\">COUNT</a>&nbsp;<a href=\"core/EVALUATE\">EVALUATE</a> -&gt; 123 }T</span> <br>\n    <span class=\"tt\">T{ cq2&nbsp;<a href=\"core/COUNT\">COUNT</a>&nbsp;<a href=\"core/EVALUATE\">EVALUATE</a> -&gt; &nbsp;&nbsp;&nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:CASE\">\n  <div class=\"wordNumber\">F.6.2.0873</div>\n  <div class=\"wordName\">CASE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> cs1 <strong>CASE</strong> 1 <a href=\"core/OF\">OF</a> 111 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp; 2 <a href=\"core/OF\">OF</a> 222 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp; 3 <a href=\"core/OF\">OF</a> 333 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> 999 <a href=\"core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n      <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ 1&nbsp;cs1 -&gt; 111 }T</span> <br>\n      <span class=\"tt\">T{ 2&nbsp;cs1 -&gt; 222 }T</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;cs1 -&gt; 333 }T</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;cs1 -&gt; 999 }T</span> <br>\n      <a href=\"core/Colon\">:</a> cs2 <a href=\"core/toR\">&gt;R</a> <strong>CASE</strong> <br>\n      &nbsp;&nbsp; -1 <a href=\"core/OF\">OF</a> <strong>CASE</strong> <a href=\"core/RFetch\">R@</a> 1 <a href=\"core/OF\">OF</a> 100 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 <a href=\"core/OF\">OF</a> 200 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> -300 <a href=\"core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp; -2 <a href=\"core/OF\">OF</a> <strong>CASE</strong> <a href=\"core/RFetch\">R@</a> 1 <a href=\"core/OF\">OF</a> -99  <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> -199 <a href=\"core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/toR\">&gt;R</a> 299 <a href=\"core/Rfrom\">R&gt;</a> <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/DROP\">DROP</a>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ -1&nbsp;1&nbsp;cs2 -&gt; &nbsp;100 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;2&nbsp;cs2 -&gt; &nbsp;200 }T</span> <br>\n      <span class=\"tt\">T{ -1&nbsp;3&nbsp;cs2 -&gt; -300 }T</span> <br>\n      <span class=\"tt\">T{ -2&nbsp;1&nbsp;cs2 -&gt; &nbsp;-99 }T</span> <br>\n      <span class=\"tt\">T{ -2&nbsp;2&nbsp;cs2 -&gt; -199 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;2&nbsp;cs2 -&gt; &nbsp;299 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:COMPILE,\">\n  <div class=\"wordNumber\">F.6.2.0945</div>\n  <div class=\"wordName\">COMPILE,</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/ColonNONAME\">:NONAME</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/Plus\">+</a> <a href=\"core/Semi\">;</a> <a href=\"core/CONSTANT\">CONSTANT</a> dup+ <br>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;q&nbsp;dup+&nbsp;<strong>COMPILE,</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;as&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;q&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ 123&nbsp;as -&gt; 246 }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DEFER\">\n  <div class=\"wordNumber\">F.6.2.1173</div>\n  <div class=\"wordName\">DEFER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>DEFER</strong>&nbsp;defer2 -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a>&nbsp;<a href=\"core/Tick\">'</a>&nbsp;defer2&nbsp;<a href=\"core/DEFERStore\">DEFER!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;2&nbsp;3&nbsp;defer2 -&gt; 6 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/IS\">IS</a>&nbsp;defer2 -&gt; &nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;defer2 -&gt; 3 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DEFER!\">\n  <div class=\"wordNumber\">F.6.2.1175</div>\n  <div class=\"wordName\">DEFER!</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/DEFER\">DEFER</a>&nbsp;defer3 -&gt;  }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a>&nbsp;<a href=\"core/Tick\">'</a>&nbsp;defer3&nbsp;<strong>DEFER!</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;3&nbsp;defer3 -&gt; 6 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/Tick\">'</a>&nbsp;defer3&nbsp;<strong>DEFER!</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;defer3 -&gt; 3 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:DEFER@\">\n  <div class=\"wordNumber\">F.6.2.1177</div>\n  <div class=\"wordName\">DEFER@</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/DEFER\">DEFER</a>&nbsp;defer4 -&gt;  }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a>&nbsp;<a href=\"core/Tick\">'</a>&nbsp;defer4&nbsp;<a href=\"core/DEFERStore\">DEFER!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;3&nbsp;defer4 -&gt; 6 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;defer4&nbsp;<strong>DEFER@</strong> -&gt; <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a> }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/IS\">IS</a>&nbsp;defer4 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;defer4 -&gt; 3 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;defer4&nbsp;<strong>DEFER@</strong> -&gt; <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a> }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ENDCASE\">\n  <div class=\"wordNumber\">F.6.2.1342</div>\n  <div class=\"wordName\">ENDCASE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:CASE\">F.6.2.0873 CASE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:ENDOF\">\n  <div class=\"wordNumber\">F.6.2.1343</div>\n  <div class=\"wordName\">ENDOF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:CASE\">F.6.2.0873 CASE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:FALSE\">\n  <div class=\"wordNumber\">F.6.2.1485</div>\n  <div class=\"wordName\">FALSE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>FALSE</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ <strong>FALSE</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:HEX\">\n  <div class=\"wordNumber\">F.6.2.1660</div>\n  <div class=\"wordName\">HEX</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:BASE\">F.6.1.0750 BASE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:HOLDS\">\n  <div class=\"wordNumber\">F.6.2.1675</div>\n  <div class=\"wordName\">HOLDS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 0.&nbsp;<a href=\"core/num-start\">&lt;#</a>&nbsp;<a href=\"file/Sq\">S\"</a>&nbsp;Test\"&nbsp;<strong>HOLDS</strong>&nbsp;<a href=\"core/num-end\">#&gt;</a>&nbsp;<a href=\"file/Sq\">S\"</a>&nbsp;Test\"&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:IS\">\n  <div class=\"wordNumber\">F.6.2.1725</div>\n  <div class=\"wordName\">IS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/DEFER\">DEFER</a>&nbsp;defer5 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;is-defer5&nbsp;<strong>IS</strong>&nbsp;defer5&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Times\">*</a>&nbsp;<strong>IS</strong>&nbsp;defer5 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2&nbsp;3&nbsp;defer5 -&gt; 6 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;is-defer5 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;defer5 -&gt; 3 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:OF\">\n  <div class=\"wordNumber\">F.6.2.1950</div>\n  <div class=\"wordName\">OF</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:CASE\">F.6.2.0873 CASE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:PARSE-NAME\">\n  <div class=\"wordNumber\">F.6.2.2020</div>\n  <div class=\"wordName\">PARSE-NAME</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>PARSE-NAME</strong>&nbsp;abcd&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;abcd\"&nbsp;S= -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ <strong>PARSE-NAME</strong>&nbsp;&nbsp;&nbsp;abcde&nbsp;&nbsp;&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;abcde\"&nbsp;S= -&gt; &lt;TRUE&gt; }T</span>\n    <p>\n    <a href=\"core/bs\">\\</a> test empty parse area <br>\n    <span class=\"tt\">T{ <strong>PARSE-NAME</strong>&nbsp;<br>\n    \n    &nbsp;&nbsp;&nbsp;<a href=\"core/NIP\">NIP</a> -&gt; 0 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> empty line <br>\n    <span class=\"tt\">T{ PARSE-NAME&nbsp;&nbsp;&nbsp;&nbsp;<br>\n    \n    &nbsp;&nbsp;&nbsp;<a href=\"core/NIP\">NIP</a> -&gt; 0 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> line with white space\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;parse-name-test&nbsp;<a href=\"core/p\">(</a>&nbsp;\"name1\"&nbsp;\"name2\"&nbsp;--&nbsp;n&nbsp;)&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<strong>PARSE-NAME</strong>&nbsp;<strong>PARSE-NAME</strong>&nbsp;S=&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n    </p><p>\n    <span class=\"tt\">T{ parse-name-test&nbsp;abcd&nbsp;abcd -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ parse-name-test&nbsp;&nbsp;abcd&nbsp;&nbsp;&nbsp;abcd&nbsp;&nbsp; -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ parse-name-test&nbsp;abcde&nbsp;abcdf -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ parse-name-test&nbsp;abcdf&nbsp;abcde -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ parse-name-test&nbsp;abcde&nbsp;abcde&nbsp;<br>\n    &nbsp;&nbsp;&nbsp; -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ parse-name-test&nbsp;abcde&nbsp;abcde&nbsp;&nbsp;<br>\n    &nbsp;&nbsp;&nbsp; -&gt; &lt;TRUE&gt; }T</span>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> line with white space\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:SAVE-INPUT\">\n  <div class=\"wordNumber\">F.6.2.2182</div>\n  <div class=\"wordName\">SAVE-INPUT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"rm\">Testing with a file source</span> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> siv -1 siv <a href=\"core/Store\">!</a>\n      <p>\n      <a href=\"core/Colon\">:</a> NeverExecuted <br>\n      &nbsp;&nbsp; <a href=\"core/Dotq\">.\"</a> This should never be executed<code>\"</code> <a href=\"core/ABORT\">ABORT</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      11111 <strong>SAVE-INPUT</strong>\n      </p><p>\n      siv <a href=\"core/Fetch\">@</a>\n      </p><p>\n      <a href=\"tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; 0 siv <a href=\"core/Store\">!</a> <br>\n      &nbsp;&nbsp; <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> <br>\n      &nbsp;&nbsp; NeverExecuted <br>\n      <a href=\"tools/BracketELSE\">[ELSE]</a> <br>\n      &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Testing the ELSE part is executed</span> <br>\n      &nbsp;&nbsp; 22222 <br>\n      <a href=\"tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <span class=\"tt\">T{  -&gt; 11111&nbsp;0&nbsp;22222 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">0 comes from <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a></span>\n      </p><p>\n      <span class=\"rm\">Testing with a string source</span> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> si_inc 0 si_inc <a href=\"core/Store\">!</a>\n      </p><p>\n      <a href=\"core/Colon\">:</a> si1 <br>\n      &nbsp;&nbsp; si_inc <a href=\"core/Fetch\">@</a> <a href=\"core/toIN\">&gt;IN</a> <a href=\"core/PlusStore\">+!</a> <br>\n      &nbsp;&nbsp; 15 si_inc <a href=\"core/Store\">!</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <a href=\"core/Colon\">:</a> s$ <a href=\"core/Sq\">S\"</a> <strong>SAVE-INPUT</strong> si1 <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> 12345<code>\"</code> <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ s$&nbsp;<a href=\"core/EVALUATE\">EVALUATE</a>&nbsp;si_inc&nbsp;<a href=\"core/Fetch\">@</a> -&gt; 0&nbsp;2345&nbsp;15 }T</span>\n      </p><p>\n      <span class=\"rm\">Testing nesting</span> <br>\n      <a href=\"core/Colon\">:</a> read_a_line <br>\n      &nbsp;&nbsp; <a href=\"core/REFILL\">REFILL</a> <a href=\"core/ZeroEqual\">0=</a> <br>\n      &nbsp;&nbsp; <a href=\"core/ABORTq\">ABORT\"</a> <a href=\"core/REFILL\">REFILL</a> failed<code>\"</code> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      0 si_inc <a href=\"core/Store\">!</a> <br>\n      <a href=\"double/TwoVARIABLE\">2VARIABLE</a> 2res -1. 2res <a href=\"core/TwoStore\">2!</a>\n      </p><p>\n      <a href=\"core/Colon\">:</a> si2 <br>\n      &nbsp;&nbsp; read_a_line <br>\n      &nbsp;&nbsp; read_a_line <br>\n      &nbsp;&nbsp; <strong>SAVE-INPUT</strong> <br>\n      &nbsp;&nbsp; read_a_line <br>\n      &nbsp;&nbsp; read_a_line <br>\n      &nbsp;&nbsp; s$ <a href=\"core/EVALUATE\">EVALUATE</a> 2res <a href=\"core/TwoStore\">2!</a> <br>\n      &nbsp;&nbsp; <a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"rm\"><strong>WARNING:</strong> do not delete or insert lines of\n      text after si2 is called otherwise the next test will\n      fail</span>\n      </p><p>\n      si2 <br>\n      33333 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">This line should be ignored</span> <br>\n      2res 2@ 44444 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\"><a href=\"core/RESTORE-INPUT\">RESTORE-INPUT</a> should return to this line</span>\n      </p><p>\n      55555\n      </p><p>\n      <span class=\"tt\">T{  -&gt; 0&nbsp;0&nbsp;2345&nbsp;44444&nbsp;55555 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:TO\">\n  <div class=\"wordNumber\">F.6.2.2295</div>\n  <div class=\"wordName\">TO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:core:VALUE\">F.6.2.2405 VALUE</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:TRUE\">\n  <div class=\"wordNumber\">F.6.2.2298</div>\n  <div class=\"wordName\">TRUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>TRUE</strong> -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ <strong>TRUE</strong> -&gt; 0&nbsp;INVERT }T</span> <br>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:VALUE\">\n  <div class=\"wordNumber\">F.6.2.2405</div>\n  <div class=\"wordName\">VALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;111&nbsp;VALUE&nbsp;v1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ -999&nbsp;VALUE&nbsp;v2 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ v1 -&gt; &nbsp;111 }T</span> <br>\n    <span class=\"tt\">T{ v2 -&gt; -999 }T</span> <br>\n    <span class=\"tt\">T{ 222&nbsp;TO&nbsp;v1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ v1 -&gt; 222 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;vd1&nbsp;v1&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ vd1 -&gt; 222 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;vd2&nbsp;<a href=\"core/TO\">TO</a>&nbsp;v2&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ v2 -&gt; -999 }T</span> <br>\n    <span class=\"tt\">T{ -333&nbsp;vd2 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ v2 -&gt; -333 }T</span> <br>\n    <span class=\"tt\">T{ v1 -&gt; &nbsp;222 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:core:[COMPILE]\">\n  <div class=\"wordNumber\">F.6.2.2530</div>\n  <div class=\"wordName\">[COMPILE]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"rm\">With default compilation semantics</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;[c1]&nbsp;<strong>[COMPILE]</strong>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 123&nbsp;[c1] -&gt; 123&nbsp;123 }T</span>\n    <p>\n    <span class=\"rm\">With an immediate word</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;[c2]&nbsp;<strong>[COMPILE]</strong>&nbsp;[c1]&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 234&nbsp;[c2] -&gt; 234&nbsp;234 }T</span>\n    </p><p>\n    <span class=\"rm\">With special compilation semantics</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;[cif]&nbsp;<strong>[COMPILE]</strong>&nbsp;<a href=\"core/IF\">IF</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;[c3]&nbsp;&nbsp;[cif]&nbsp;111&nbsp;<a href=\"core/ELSE\">ELSE</a>&nbsp;222&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;[c3] -&gt; 111 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;[c3] -&gt; 222 }T</span>\n    \n    </p></div>\n  </div>\n<p>\n\t\t\t\t\t\t<!-- T.7 -->\n</p><h2 id=\"section.F.8\">F.8 The optional Double-Number word set</h2> <!-- T.8 -->\n\n<a name=\"test:double\"></a>\n<p>\nTwo additional constants are defined to assist tests in this word set:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n\n    MAX-INT <a href=\"core/TwoDiv\">2/</a>  <a href=\"core/CONSTANT\">CONSTANT</a> HI-INT   <a href=\"core/bs\">\\</a> 001...1 <br>\n    MIN-INT <a href=\"core/TwoDiv\">2/</a>  <a href=\"core/CONSTANT\">CONSTANT</a> LO-INT   <a href=\"core/bs\">\\</a> 110...1\n    \n    </div>\n  </div>\n<p>\nBefore anything can be tested, the text interpreter must be\ntested (<a href=\"testsuite#test:dbl:in\">F.8.3.2</a>).\nOnce the  <a href=\"testsuite#test:double:2CONSTANT\">F.8.6.1.0360 2CONSTANT</a> test has been preformed\nwe can also define a number of double constants:\n</p><p>\n</p><div class=\"quote\">\n  <div class=\"tt\">\n\n          1S MAX-INT <a href=\"double/TwoCONSTANT\">2CONSTANT</a> MAX-2INT   <a href=\"core/bs\">\\</a> 01...1 <br>\n    \n    0 MIN-INT <a href=\"double/TwoCONSTANT\">2CONSTANT</a> MIN-2INT   <a href=\"core/bs\">\\</a> 10...0 <br>\n    MAX-2INT      <a href=\"core/TwoDiv\">2/</a> <a href=\"double/TwoCONSTANT\">2CONSTANT</a> HI-2INT    <a href=\"core/bs\">\\</a> 001...1 <br>\n    MIN-2INT      <a href=\"core/TwoDiv\">2/</a> <a href=\"double/TwoCONSTANT\">2CONSTANT</a> LO-2INT    <a href=\"core/bs\">\\</a> 110...0\n    \n    </div>\n  </div>\n<p>\nThe rest of the word set can be tesed:\n<a href=\"testsuite#test:double:DNEGATE\">F.8.6.1.1230 DNEGATE</a>,\n<a href=\"testsuite#test:double:D+\">F.8.6.1.1040 D+</a>, <a href=\"testsuite#test:double:D-\">F.8.6.1.1050 D-</a>,\n<a href=\"testsuite#test:double:D0less\">F.8.6.1.1075 D0&lt;</a>, <a href=\"testsuite#test:double:D0=\">F.8.6.1.1080 D0=</a>,\n<a href=\"testsuite#test:double:D2*\">F.8.6.1.1090 D2*</a>, <a href=\"testsuite#test:double:D2/\">F.8.6.1.1100 D2/</a>,\n<a href=\"testsuite#test:double:Dless\">F.8.6.1.1110 D&lt;</a>, <a href=\"testsuite#test:double:D=\">F.8.6.1.1120 D=</a>,\n<a href=\"testsuite#test:double:2LITERAL\">F.8.6.1.0390 2LITERAL</a>, <a href=\"testsuite#test:double:2VARIABLE\">F.8.6.1.0440 2VARIABLE</a>,\n<a href=\"testsuite#test:double:DMAX\">F.8.6.1.1210 DMAX</a>, <a href=\"testsuite#test:double:DMIN\">F.8.6.1.1220 DMIN</a>, \n<a href=\"testsuite#test:double:DtoS\">F.8.6.1.1140 D&gt;S</a>, <a href=\"testsuite#test:double:DABS\">F.8.6.1.1160 DABS</a>,\n<a href=\"testsuite#test:double:M+\">F.8.6.1.1830 M+</a>, <a href=\"testsuite#test:double:M*/\">F.8.6.1.1820 M*/</a> and\n<a href=\"testsuite#test:double:D.R\">F.8.6.1.1070 D.R</a> which also tests <a href=\"double/Dd\">D.</a> before moving on\nto the existion words with the\n<a href=\"testsuite#test:double:2ROT\">F.8.6.2.0420 2ROT</a> and <a href=\"testsuite#test:double:DUless\">F.8.6.2.1270 DU&lt;</a> tests.\n</p><p>\n\n\n</p><h4 id=\"subsubsection.F.8.3.2\">F.8.3.2 Text interpreter input number conversion</h4>\n<a name=\"test:dbl:in\"></a>\n<p>\n<span class=\"tt\">T{ &nbsp;1. -&gt; &nbsp;1&nbsp;&nbsp;0 }T</span> <br>\n<span class=\"tt\">T{ -2. -&gt; -2&nbsp;-1 }T</span> <br>\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;rdl1&nbsp;&nbsp;3. <a href=\"core/Semi\">;</a>&nbsp;rdl1 -&gt; &nbsp;3&nbsp;&nbsp;0 }T</span> <br>\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;rdl2&nbsp;-4. <a href=\"core/Semi\">;</a>&nbsp;rdl2 -&gt; -4&nbsp;-1 }T</span>\n</p><p>\n\n</p><div class=\"wordHead\" id=\"test:double:2CONSTANT\">\n  <div class=\"wordNumber\">F.8.6.1.0360</div>\n  <div class=\"wordName\">2CONSTANT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2CONSTANT</strong>&nbsp;2c1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2c1 -&gt; 1&nbsp;2 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd1&nbsp;2c1&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ cd1 -&gt; 1&nbsp;2 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd2&nbsp;<strong>2CONSTANT</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;-2&nbsp;cd2&nbsp;2c2 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2c2 -&gt; -1&nbsp;-2 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ 4&nbsp;5&nbsp;<strong>2CONSTANT</strong>&nbsp;2c3&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a>&nbsp;2c3 -&gt; 4&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd6&nbsp;2c3&nbsp;<a href=\"double/TwoLITERAL\">2LITERAL</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;cd6 -&gt; 4&nbsp;5 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:2LITERAL\">\n  <div class=\"wordNumber\">F.8.6.1.0390</div>\n  <div class=\"wordName\">2LITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd1&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;MAX-2INT&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<strong>2LITERAL</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span><br>\n    <span class=\"tt\">T{ cd1 -&gt; MAX-2INT }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"double/TwoVARIABLE\">2VARIABLE</a>&nbsp;2v4&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a>&nbsp;5&nbsp;6&nbsp;2v4&nbsp;<a href=\"core/TwoStore\">2!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd7&nbsp;2v4&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;<a href=\"core/TwoFetch\">2@</a>&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<strong>2LITERAL</strong>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;cd7 -&gt; 5&nbsp;6 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd8&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;6&nbsp;7&nbsp;<a href=\"right-bracket\">]</a>&nbsp;2v4&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;<a href=\"core/TwoStore\">2!</a>&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;2v4&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 6&nbsp;7 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:2VARIABLE\">\n  <div class=\"wordNumber\">F.8.6.1.0440</div>\n  <div class=\"wordName\">2VARIABLE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>2VARIABLE</strong>&nbsp;2v1 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 0.&nbsp;2v1&nbsp;<a href=\"core/TwoStore\">2!</a> -&gt; &nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;2v1&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 0. }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;-2&nbsp;2v1&nbsp;<a href=\"core/TwoStore\">2!</a> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2v1&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; -1&nbsp;-2 }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd2&nbsp;<strong>2VARIABLE</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ cd2&nbsp;2v2 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;cd3&nbsp;2v2&nbsp;<a href=\"core/TwoStore\">2!</a>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ -2&nbsp;-1&nbsp;cd3 -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2v2&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; -2&nbsp;-1 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <strong>2VARIABLE</strong>&nbsp;2v3&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a>&nbsp;5&nbsp;6&nbsp;2v3&nbsp;<a href=\"core/TwoStore\">2!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ 2v3&nbsp;<a href=\"core/TwoFetch\">2@</a> -&gt; 5&nbsp;6 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D+\">\n  <div class=\"wordNumber\">F.8.6.1.1040</div>\n  <div class=\"wordName\">D+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;0.&nbsp;&nbsp;5.&nbsp;<strong>D+</strong> -&gt; &nbsp;5. }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> small integers <br>\n    <span class=\"tt\">T{ -5.&nbsp;&nbsp;0.&nbsp;<strong>D+</strong> -&gt; -5. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1.&nbsp;&nbsp;2.&nbsp;<strong>D+</strong> -&gt; &nbsp;3. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1.&nbsp;-2.&nbsp;<strong>D+</strong> -&gt; -1. }T</span> <br>\n    <span class=\"tt\">T{ -1.&nbsp;&nbsp;2.&nbsp;<strong>D+</strong> -&gt; &nbsp;1. }T</span> <br>\n    <span class=\"tt\">T{ -1.&nbsp;-2.&nbsp;<strong>D+</strong> -&gt; -3. }T</span> <br>\n    <span class=\"tt\">T{ -1.&nbsp;&nbsp;1.&nbsp;<strong>D+</strong> -&gt; &nbsp;0. }T</span>\n    <p>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;&nbsp;5 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> mid range integers <br>\n    <span class=\"tt\">T{ -1&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;<strong>D+</strong> -&gt; -1&nbsp;&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;-5&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-5&nbsp;-1&nbsp;&nbsp;0&nbsp;<strong>D+</strong> -&gt; -1&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;&nbsp;3 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;-2&nbsp;<strong>D+</strong> -&gt; -1&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D+</strong> -&gt; &nbsp;0&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;-1&nbsp;-2&nbsp;<strong>D+</strong> -&gt; -1&nbsp;-3 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;-1&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;<strong>D+</strong> -&gt; -1&nbsp;&nbsp;0 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ MIN-INT&nbsp;0&nbsp;<a href=\"core/TwoDUP\">2DUP</a>&nbsp;<strong>D+</strong> -&gt; 0&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;MIN-INT&nbsp;0&nbsp;<strong>D+</strong> -&gt; 0&nbsp;0 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. <strong>D+</strong> -&gt; 0&nbsp;HI-INT&nbsp;<a href=\"core/OnePlus\">1+</a> }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> large double integers <br>\n    <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/TwoDUP\">2DUP</a>&nbsp;<strong>D+</strong> -&gt; 1S&nbsp;<a href=\"core/OneMinus\">1-</a>&nbsp;MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D+</strong> -&gt; -1. }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>D+</strong> -&gt; HI-2INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;LO-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/TwoDUP\">2DUP</a>&nbsp;<strong>D+</strong> -&gt; MIN-2INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;MIN-2INT&nbsp;<strong>D+</strong>&nbsp;1. <strong>D+</strong> -&gt; LO-2INT }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D-\">\n  <div class=\"wordNumber\">F.8.6.1.1050</div>\n  <div class=\"wordName\">D-</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;0.&nbsp;&nbsp;5.&nbsp;<strong>D-</strong> -&gt; -5. }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> small integers <br>\n    <span class=\"tt\">T{ &nbsp;5.&nbsp;&nbsp;0.&nbsp;<strong>D-</strong> -&gt; &nbsp;5. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0.&nbsp;-5.&nbsp;<strong>D-</strong> -&gt; &nbsp;5. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1.&nbsp;&nbsp;2.&nbsp;<strong>D-</strong> -&gt; -1. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;1.&nbsp;-2.&nbsp;<strong>D-</strong> -&gt; &nbsp;3. }T</span> <br>\n    <span class=\"tt\">T{ -1.&nbsp;&nbsp;2.&nbsp;<strong>D-</strong> -&gt; -3. }T</span> <br>\n    <span class=\"tt\">T{ -1.&nbsp;-2.&nbsp;<strong>D-</strong> -&gt; &nbsp;1. }T</span> <br>\n    <span class=\"tt\">T{ -1.&nbsp;-1.&nbsp;<strong>D-</strong> -&gt; &nbsp;0. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;5&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-5 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> mid-range integers <br>\n    <span class=\"tt\">T{ -1&nbsp;&nbsp;5&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;<strong>D-</strong> -&gt; -1&nbsp;&nbsp;5 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;-1&nbsp;-5&nbsp;<strong>D-</strong> -&gt; &nbsp;1&nbsp;&nbsp;4 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-5&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-5 }T</span> <br>\n    <span class=\"tt\">T{ -1&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D-</strong> -&gt; -1&nbsp;-1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;1&nbsp;-1&nbsp;-2&nbsp;<strong>D-</strong> -&gt; &nbsp;1&nbsp;&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;&nbsp;0&nbsp;&nbsp;2&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-3 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;&nbsp;0&nbsp;-2&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;1&nbsp;<strong>D-</strong> -&gt; &nbsp;0&nbsp;-1 }T</span>\n    <p>\n    <span class=\"tt\">T{ MIN-INT&nbsp;0&nbsp;<a href=\"core/TwoDUP\">2DUP</a>&nbsp;<strong>D-</strong> -&gt; 0. }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;<a href=\"core/StoD\">S&gt;D</a>&nbsp;MAX-INT&nbsp;0<strong>D-</strong> -&gt; 1&nbsp;1s }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;max-2INT&nbsp;<strong>D-</strong> -&gt; 0. }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> large integers <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;min-2INT&nbsp;<strong>D-</strong> -&gt; 0. }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;hi-2INT&nbsp;<strong>D-</strong> -&gt; lo-2INT&nbsp;<a href=\"double/DNEGATE\">DNEGATE</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;&nbsp;lo-2INT&nbsp;<strong>D-</strong> -&gt; max-2INT }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;LO-2INT&nbsp;&nbsp;hi-2INT&nbsp;<strong>D-</strong> -&gt; min-2INT&nbsp;1.&nbsp;<a href=\"double/DPlus\">D+</a> }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;min-2INT&nbsp;<strong>D-</strong> -&gt; 0. }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;lo-2INT&nbsp;<strong>D-</strong> -&gt; lo-2INT }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:Dd\">\n  <div class=\"wordNumber\">F.8.6.1.1060</div>\n  <div class=\"wordName\">D.</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:double:D.R\">F.8.6.1.1070 D.R</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D.R\">\n  <div class=\"wordNumber\">F.8.6.1.1070</div>\n  <div class=\"wordName\">D.R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n\n      MAX-2INT 71 73 <a href=\"double/MTimesDiv\">M*/</a> <a href=\"double/TwoCONSTANT\">2CONSTANT</a> dbl1 <br>\n      MIN-2INT 73 79 <a href=\"double/MTimesDiv\">M*/</a> <a href=\"double/TwoCONSTANT\">2CONSTANT</a> dbl2\n      <p>\n      <a href=\"core/Colon\">:</a> d&gt;ascii  <a href=\"core/p\">(</a> d -- caddr u ) <br>\n      &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/num-start\">&lt;#</a> <a href=\"double/DABS\">DABS</a> <a href=\"core/numS\">#S</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/SIGN\">SIGN</a> <a href=\"core/num-end\">#&gt;</a> &nbsp;&nbsp; <a href=\"core/p\">(</a> -- caddr1 u ) <br>\n      &nbsp;&nbsp; <a href=\"core/HERE\">HERE</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/TwoDUP\">2DUP</a> <a href=\"core/TwotoR\">2&gt;R</a> <a href=\"core/CHARS\">CHARS</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/ALLOT\">ALLOT</a> <a href=\"core/MOVE\">MOVE</a> <a href=\"core/TwoRfrom\">2R&gt;</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      dbl1 d&gt;ascii <a href=\"double/TwoCONSTANT\">2CONSTANT</a> \"dbl1\" <br>\n      dbl2 d&gt;ascii <a href=\"double/TwoCONSTANT\">2CONSTANT</a> \"dbl2\"\n      </p><p>\n      <a href=\"core/Colon\">:</a> DoubleOutput <br>\n      &nbsp;&nbsp; <a href=\"core/CR\">CR</a> <a href=\"core/Dotq\">.\"</a> You should see lines duplicated:\" <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  5 <a href=\"core/SPACES\">SPACES</a> \"dbl1\" <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  5 <a href=\"core/SPACES\">SPACES</a>  dbl1  <a href=\"double/Dd\">D.</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  8 <a href=\"core/SPACES\">SPACES</a> \"dbl1\" <a href=\"core/DUP\">DUP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  5 <a href=\"core/SPACES\">SPACES</a>  dbl1  <a href=\"core/Rfrom\">R&gt;</a> 3 <a href=\"core/Plus\">+</a> <strong>D.R</strong> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  5 <a href=\"core/SPACES\">SPACES</a> \"dbl2\" <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  5 <a href=\"core/SPACES\">SPACES</a>  dbl2  <a href=\"double/Dd\">D.</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp; 10 <a href=\"core/SPACES\">SPACES</a> \"dbl2\" <a href=\"core/DUP\">DUP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/TYPE\">TYPE</a> <a href=\"core/CR\">CR</a> <br>\n      &nbsp;&nbsp;  5 <a href=\"core/SPACES\">SPACES</a>  dbl2  <a href=\"core/Rfrom\">R&gt;</a> 5 <a href=\"core/Plus\">+</a> <strong>D.R</strong> <a href=\"core/CR\">CR</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ DoubleOutput -&gt;  }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D0less\">\n  <div class=\"wordNumber\">F.8.6.1.1075</div>\n  <div class=\"wordName\">D0&lt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;MAX-INT&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-2INT&nbsp;<strong>D0&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN-2INT&nbsp;<strong>D0&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D0=\">\n  <div class=\"wordNumber\">F.8.6.1.1080</div>\n  <div class=\"wordName\">D0=</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-2INT&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;MAX-INT&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D0=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;MIN-INT&nbsp;<strong>D0=</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D2*\">\n  <div class=\"wordNumber\">F.8.6.1.1090</div>\n  <div class=\"wordName\">D2*</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D2*</strong> -&gt; 0.&nbsp;<strong>D2*</strong> }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D2*</strong> -&gt; 0&nbsp;1 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HI-2INT&nbsp;<strong>D2*</strong> -&gt; MAX-2INT&nbsp;1.&nbsp;<a href=\"double/DMinus\">D-</a> }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LO-2INT&nbsp;<strong>D2*</strong> -&gt; MIN-2INT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D2/\">\n  <div class=\"wordNumber\">F.8.6.1.1100</div>\n  <div class=\"wordName\">D2/</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D2/</strong> -&gt; 0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D2/</strong> -&gt; 0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;1&nbsp;<strong>D2/</strong> -&gt; MIN-INT&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;<strong>D2/</strong> -&gt; HI-2INT&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D2/</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;<strong>D2/</strong> -&gt; LO-2INT&nbsp;&nbsp; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:Dless\">\n  <div class=\"wordNumber\">F.8.6.1.1110</div>\n  <div class=\"wordName\">D&lt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;MAX-2INT&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n    <p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;<a href=\"core/TwoDUP\">2DUP</a>&nbsp;-1.&nbsp;<a href=\"double/DPlus\">D+</a>&nbsp;<strong>D&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;<a href=\"core/TwoDUP\">2DUP</a>&nbsp;&nbsp;1.&nbsp;<a href=\"double/DPlus\">D+</a>&nbsp;<strong>D&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:D=\">\n  <div class=\"wordNumber\">F.8.6.1.1120</div>\n  <div class=\"wordName\">D=</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n    <p>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;-1&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;-1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;-1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;-1&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;0&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;1&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n    </p><p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MAX-2INT&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;HI-2INT&nbsp;&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;MIN-2INT&nbsp;<strong>D=</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;LO-2INT&nbsp;&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>D=</strong> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:DtoS\">\n  <div class=\"wordNumber\">F.8.6.1.1140</div>\n  <div class=\"wordName\">D&gt;S</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;1234&nbsp;&nbsp;0&nbsp;<strong>D&gt;S</strong> -&gt; &nbsp;1234&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;-1234&nbsp;-1&nbsp;<strong>D&gt;S</strong> -&gt; -1234&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-INT&nbsp;&nbsp;0&nbsp;<strong>D&gt;S</strong> -&gt; MAX-INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-INT&nbsp;-1&nbsp;<strong>D&gt;S</strong> -&gt; MIN-INT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:DABS\">\n  <div class=\"wordNumber\">F.8.6.1.1160</div>\n  <div class=\"wordName\">DABS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DABS</strong> -&gt; 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DABS</strong> -&gt; 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;<strong>DABS</strong> -&gt; MAX-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;1.&nbsp;<a href=\"double/DPlus\">D+</a>&nbsp;<strong>DABS</strong> -&gt; MAX-2INT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:DMAX\">\n  <div class=\"wordNumber\">F.8.6.1.1210</div>\n  <div class=\"wordName\">DMAX</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>DMAX</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n    <p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;HI-2INT&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>DMAX</strong> -&gt; LO-2INT&nbsp; }T</span>\n    </p><p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; MAX-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMAX</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMAX</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:DMIN\">\n  <div class=\"wordNumber\">F.8.6.1.1220</div>\n  <div class=\"wordName\">DMIN</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>DMIN</strong> -&gt; -2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n    <p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;HI-2INT&nbsp;<strong>DMIN</strong> -&gt; HI-2INT&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span>\n    </p><p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; &nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; -1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DMIN</strong> -&gt; MIN-2INT }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:DNEGATE\">\n  <div class=\"wordNumber\">F.8.6.1.1230</div>\n  <div class=\"wordName\">DNEGATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;0. <strong>DNEGATE</strong> -&gt; &nbsp;0. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;1. <strong>DNEGATE</strong> -&gt; -1. }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;-1. <strong>DNEGATE</strong> -&gt; &nbsp;1. }T</span> <br>\n    <span class=\"tt\">T{ max-2int&nbsp;<strong>DNEGATE</strong> -&gt; min-2int&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/SWAP\">SWAP</a> }T</span> <br>\n    <span class=\"tt\">T{ min-2int&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<strong>DNEGATE</strong> -&gt; max-2int }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:M*/\">\n  <div class=\"wordNumber\">F.8.6.1.1820</div>\n  <div class=\"wordName\">M*/</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"rm\">To correct the result if the division is floored,\n      only used when necessary, i.e., negative quotient and\n      remainder <em>&lt;&gt;=</em> 0.</span>\n      <p>\n      <a href=\"core/Colon\">:</a> ?floored <a href=\"core/Bracket\">[</a> -3 2 <a href=\"core/Div\">/</a> -2 <a href=\"core/Equal\">=</a> <a href=\"right-bracket\">]</a> <a href=\"core/LITERAL\">LITERAL</a> <a href=\"core/IF\">IF</a> 1. <a href=\"double/DMinus\">D-</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n      </p><p>\n      \n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; &nbsp;3. }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; -3.&nbsp;?floored }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; -3.&nbsp;?floored }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;<strong>M*/</strong> -&gt; &nbsp;3. }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; HI-2INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; HI-2INT&nbsp;<a href=\"double/DNEGATE\">DNEGATE</a>&nbsp;?floored }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; LO-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;<strong>M*/</strong> -&gt; LO-2INT&nbsp;<a href=\"double/DNEGATE\">DNEGATE</a> }T</span>\n      </p><p>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>M*/</strong> -&gt; MAX-2INT }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;MAX-INT&nbsp;<a href=\"core/TwoDiv\">2/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MAX-INT&nbsp;<strong>M*/</strong> -&gt; MAX-INT&nbsp;1-&nbsp;HI-2INT&nbsp;<a href=\"core/NIP\">NIP</a> }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;LO-2INT&nbsp;<a href=\"core/NIP\">NIP</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/NEGATE\">NEGATE</a>&nbsp;<strong>M*/</strong> -&gt; MIN-2INT }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;LO-2INT&nbsp;<a href=\"core/NIP\">NIP</a>&nbsp;<a href=\"core/OneMinus\">1-</a>&nbsp;MAX-INT&nbsp;<strong>M*/</strong> -&gt; MIN-INT&nbsp;3&nbsp;+&nbsp;HI-2INT&nbsp;<a href=\"core/NIP\">NIP</a>&nbsp;2&nbsp;<a href=\"core/Plus\">+</a> }T</span> <br>\n      <span class=\"tt\">T{ MAX-2INT&nbsp;LO-2INT&nbsp;<a href=\"core/NIP\">NIP</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<a href=\"core/NEGATE\">NEGATE</a>&nbsp;<strong>M*/</strong> -&gt; MAX-2INT&nbsp;<a href=\"double/DNEGATE\">DNEGATE</a> }T</span> <br>\n      <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-INT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;<strong>M*/</strong> -&gt; MIN-2INT }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:M+\">\n  <div class=\"wordNumber\">F.8.6.1.1830</div>\n  <div class=\"wordName\">M+</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ HI-2INT&nbsp;&nbsp;&nbsp;1&nbsp;<strong>M+</strong> -&gt; HI-2INT&nbsp;&nbsp;&nbsp;1.&nbsp;<a href=\"double/DPlus\">D+</a> }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;-1&nbsp;<strong>M+</strong> -&gt; MAX-2INT&nbsp;-1.&nbsp;<a href=\"double/DPlus\">D+</a> }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;1&nbsp;<strong>M+</strong> -&gt; MIN-2INT&nbsp;&nbsp;1.&nbsp;<a href=\"double/DPlus\">D+</a> }T</span> <br>\n    <span class=\"tt\">T{ LO-2INT&nbsp;&nbsp;-1&nbsp;<strong>M+</strong> -&gt; LO-2INT&nbsp;&nbsp;-1.&nbsp;<a href=\"double/DPlus\">D+</a> }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:2ROT\">\n  <div class=\"wordNumber\">F.8.6.2.0420</div>\n  <div class=\"wordName\">2ROT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;3.&nbsp;<strong>2ROT</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;1.&nbsp;<strong>2ROT</strong> -&gt; MIN-2INT&nbsp;1.&nbsp;MAX-2INT }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:2VALUE\">\n  <div class=\"wordNumber\">F.8.6.2.0435</div>\n  <div class=\"wordName\">2VALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ 1&nbsp;2&nbsp;<strong>2VALUE</strong>&nbsp;t2val -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ t2val -&gt; 1&nbsp;2 }T</span> <br>\n      \n      <span class=\"tt\">T{ 3&nbsp;4&nbsp;<a href=\"core/TO\">TO</a>&nbsp;t2val -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ t2val -&gt; 3&nbsp;4 }T</span> <br>\n      \n      <a href=\"core/Colon\">:</a> sett2val t2val <a href=\"core/TwoSWAP\">2SWAP</a> <a href=\"core/TO\">TO</a> t2val <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 5&nbsp;6&nbsp;sett2val&nbsp;t2val -&gt; 3&nbsp;4&nbsp;5&nbsp;6 }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:double:DUless\">\n  <div class=\"wordNumber\">F.8.6.2.1270</div>\n  <div class=\"wordName\">DU&lt;</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span>\n    <p>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;&nbsp;HI-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;HI-2INT&nbsp;MAX-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MAX-2INT&nbsp;MIN-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;MAX-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ MIN-2INT&nbsp;&nbsp;LO-2INT&nbsp;<strong>DU&lt;</strong> -&gt; &lt;TRUE&gt;&nbsp; }T</span>\n    \n    </p></div>\n  </div>\n<p>\n</p><h2 id=\"section.F.9\">F.9 The optional Exception word set</h2> <!-- T.9 -->\n\nThe test <a href=\"testsuite#test:exception:CATCH\">F.9.6.1.0875 CATCH</a> also test <a href=\"exception/THROW\">THROW</a>.  This should\nbe followed by the test <a href=\"testsuite#test:exception:ABORTq\">F.9.6.2.0680 ABORT\"</a> which also test\n<a href=\"exception/ABORT\">ABORT</a>.  Finally, the general exception handling is tested in\n<a href=\"testsuite#test:throw\">F.9.3.6</a>.\n<p>\n\n\n</p><h4 id=\"subsubsection.F.9.3.6\">F.9.3.6 Exception handling</h4>\n<a name=\"test:throw\"></a>\n<p>\nIdeally all of the throw codes should be tested.  Here only the\nthow code for an \"Undefined Word\" exception is tested, assuming\nthat the word <code>$$UndefedWord$$</code> is undefined.\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/DECIMAL\">DECIMAL</a> <br>\n  <a href=\"core/Colon\">:</a> t7 <a href=\"core/Sq\">S\"</a> 333 $$UndefedWord$$ 334\" <a href=\"core/EVALUATE\">EVALUATE</a> 335 <a href=\"core/Semi\">;</a> <br>\n  <a href=\"core/Colon\">:</a> t8 <a href=\"core/Sq\">S\"</a> 222 t7 223\" <a href=\"core/EVALUATE\">EVALUATE</a> 224 <a href=\"core/Semi\">;</a> <br>\n  <a href=\"core/Colon\">:</a> t9 <a href=\"core/Sq\">S\"</a> 111 112 t8 113\" <a href=\"core/EVALUATE\">EVALUATE</a> 114 <a href=\"core/Semi\">;</a>\n  \n  </div>\n<p>\n<span class=\"tt\">T{ 6&nbsp;7&nbsp;<a href=\"core/Tick\">'</a>&nbsp;t9&nbsp;c6&nbsp;3 -&gt; 6&nbsp;7&nbsp;13&nbsp;3 }T</span>\n</p><p>\n\n</p><div class=\"wordHead\" id=\"test:exception:CATCH\">\n  <div class=\"wordNumber\">F.9.6.1.0875</div>\n  <div class=\"wordName\">CATCH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:exception:THROW\">F.9.6.1.2275 THROW</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:exception:THROW\">\n  <div class=\"wordNumber\">F.9.6.1.2275</div>\n  <div class=\"wordName\">THROW</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/DECIMAL\">DECIMAL</a>\n      <p>\n      <a href=\"core/Colon\">:</a> t1 9 <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c1 1 2 3 <a href=\"core/BracketTick\">[']</a> t1 <a href=\"exception/CATCH\">CATCH</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ c1 -&gt; 1&nbsp;2&nbsp;3&nbsp;9&nbsp;0 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">No THROW executed</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> t2 8 0 <strong>THROW</strong> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c2 1 2 <a href=\"core/BracketTick\">[']</a> t2 <a href=\"exception/CATCH\">CATCH</a> <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ c2 -&gt; 1&nbsp;2&nbsp;8&nbsp;0 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">0 THROW does nothing</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> t3 7 8 9 99 <strong>THROW</strong> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c3 1 2 <a href=\"core/BracketTick\">[']</a> t3 <a href=\"exception/CATCH\">CATCH</a> <a href=\"core/Semi\">;</a><br>\n      <span class=\"tt\">T{ c3 -&gt; 1&nbsp;2&nbsp;99 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Restores stack to <a href=\"exception/CATCH\">CATCH</a> depth</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> t4 <a href=\"core/OneMinus\">1-</a> <a href=\"core/DUP\">DUP</a> <a href=\"core/Zeromore\">0&gt;</a> <a href=\"core/IF\">IF</a> <a href=\"core/RECURSE\">RECURSE</a> <a href=\"core/ELSE\">ELSE</a> 999 <strong>THROW</strong> -222 <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c4 3 4 5 10 <a href=\"core/BracketTick\">[']</a> t4 <a href=\"exception/CATCH\">CATCH</a> -111 <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ c4 -&gt; 3&nbsp;4&nbsp;5&nbsp;0&nbsp;999&nbsp;-111 }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Test return stack unwinding</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> t5 <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/TwoDROP\">2DROP</a> 9999 <strong>THROW</strong> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c5 1 2 3 4 <a href=\"core/BracketTick\">[']</a> t5 <a href=\"exception/CATCH\">CATCH</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Test depth restored correctly</span> <br>\n      &nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/TwoDROP\">2DROP</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/Semi\">;</a> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">after stack has been emptied</span> <br>\n      <span class=\"tt\">T{ c5 -&gt; 5 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:exception:ABORT\">\n  <div class=\"wordNumber\">F.9.6.2.0670</div>\n  <div class=\"wordName\">ABORT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:exception:ABORTq\">F.9.6.2.0680 ABORT\"</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:exception:ABORTq\">\n  <div class=\"wordNumber\">F.9.6.2.0680</div>\n  <div class=\"wordName\">ABORT\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/DECIMAL\">DECIMAL</a> <br>\n       -1\t<a href=\"core/CONSTANT\">CONSTANT</a> exc_abort <br>\n       -2 <a href=\"core/CONSTANT\">CONSTANT</a> exc_abort\" <br>\n      -13 <a href=\"core/CONSTANT\">CONSTANT</a> exc_undef <br>\n      <a href=\"core/Colon\">:</a> t6 <a href=\"exception/ABORT\">ABORT</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"rm\">The 77 in <code>t10</code> is necessary for the second\n      <strong>ABORT\"</strong> test as the data stack is restored to a\n      depth of 2 when <a href=\"exception/THROW\">THROW</a> is executed.  The 77 ensures\n      the top of stack value is known for the results check.</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> t10 77 <a href=\"core/SWAP\">SWAP</a> <strong>ABORT\"</strong> This should not be displayed\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c6 <a href=\"exception/CATCH\">CATCH</a> <br>\n      &nbsp;&nbsp; <a href=\"core/CASE\">CASE</a> exc_abort  <a href=\"core/OF\">OF</a> 11 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t exc_abort\" <a href=\"core/OF\">OF</a> 12 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t exc_undef  <a href=\"core/OF\">OF</a> 13 <a href=\"core/ENDOF\">ENDOF</a> <br>\n      &nbsp;&nbsp; <a href=\"core/ENDCASE\">ENDCASE</a> <br>\n      <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ 1&nbsp;2&nbsp;<a href=\"core/Tick\">'</a>&nbsp;&nbsp;t6&nbsp;c6 -&gt; 1&nbsp;2&nbsp;11&nbsp; }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Test that ABORT is caught</span> <br>\n      <span class=\"tt\">T{ 3&nbsp;0&nbsp;<a href=\"core/Tick\">'</a>&nbsp;t10&nbsp;c6 -&gt; 3&nbsp;77&nbsp;&nbsp;&nbsp; }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">ABORT\" does nothing</span> <br>\n      <span class=\"tt\">T{ 4&nbsp;5&nbsp;<a href=\"core/Tick\">'</a>&nbsp;t10&nbsp;c6 -&gt; 4&nbsp;77&nbsp;12 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">ABORT\" caught, no message</span>\n      \n      </p></div>\n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.F.11\">F.11 The optional Facility word set</h2>\n\n<div class=\"wordHead\" id=\"test:facility:EKEYtoFKEY\">\n  <div class=\"wordNumber\">F.10.6.2.1306.40</div>\n  <div class=\"wordName\">EKEY&gt;FKEY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> TFKEY\" <a href=\"core/p\">(</a> \"ccc&lt;quote&gt;\" -- u flag ) <br>\n      &nbsp;&nbsp;&nbsp; <a href=\"core/CR\">CR</a> <a href=\"core/Dotq\">.\"</a> Please press \" <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/Dotq\">.\"</a> <a href=\"facility/EKEY\">EKEY</a> <strong>EKEY&gt;FKEY</strong> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;left&gt;\"&nbsp; -&gt; <a href=\"facility/K-LEFT\">K-LEFT</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;right&gt;\" -&gt; <a href=\"facility/K-RIGHT\">K-RIGHT</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;up&gt;\"&nbsp;&nbsp;&nbsp; -&gt; <a href=\"facility/K-UP\">K-UP</a>&nbsp;&nbsp;&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;down&gt;\"&nbsp; -&gt; <a href=\"facility/K-DOWN\">K-DOWN</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;home&gt;\"&nbsp; -&gt; <a href=\"facility/K-HOME\">K-HOME</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;end&gt;\"&nbsp;&nbsp; -&gt; <a href=\"facility/K-END\">K-END</a>&nbsp;&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;prior&gt;\" -&gt; <a href=\"facility/K-PRIOR\">K-PRIOR</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;next&gt;\"&nbsp; -&gt; <a href=\"facility/K-NEXT\">K-NEXT</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F1&gt;\"&nbsp; -&gt; <a href=\"facility/K-FOne\">K-F1</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F2&gt;\"&nbsp; -&gt; <a href=\"facility/K-FTwo\">K-F2</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F3&gt;\"&nbsp; -&gt; <a href=\"facility/K-F3\">K-F3</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F4&gt;\"&nbsp; -&gt; <a href=\"facility/K-F4\">K-F4</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F5&gt;\"&nbsp; -&gt; <a href=\"facility/K-F5\">K-F5</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F6&gt;\"&nbsp; -&gt; <a href=\"facility/K-F6\">K-F6</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F7&gt;\"&nbsp; -&gt; <a href=\"facility/K-F7\">K-F7</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F8&gt;\"&nbsp; -&gt; <a href=\"facility/K-F8\">K-F8</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F9&gt;\"&nbsp; -&gt; <a href=\"facility/K-F9\">K-F9</a>&nbsp;&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F10&gt;\" -&gt; <a href=\"facility/K-FOneZero\">K-F10</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F11&gt;\" -&gt; <a href=\"facility/K-FOneOne\">K-F11</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;F11&gt;\" -&gt; <a href=\"facility/K-FOneTwo\">K-F12</a>&nbsp;&lt;TRUE&gt; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;shift-left&gt;\" -&gt; <a href=\"facility/K-LEFT\">K-LEFT</a>&nbsp;<a href=\"facility/K-SHIFT-MASK\">K-SHIFT-MASK</a>&nbsp;<a href=\"core/OR\">OR</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;ctrl-left&gt;\"&nbsp; -&gt; <a href=\"facility/K-LEFT\">K-LEFT</a>&nbsp;<a href=\"facility/K-CTRL-MASK\">K-CTRL-MASK</a>&nbsp;&nbsp;<a href=\"core/OR\">OR</a>&nbsp;&lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;alt-left&gt;\"&nbsp;&nbsp; -&gt; <a href=\"facility/K-LEFT\">K-LEFT</a>&nbsp;<a href=\"facility/K-ALT-MASK\">K-ALT-MASK</a>&nbsp;&nbsp;&nbsp;<a href=\"core/OR\">OR</a>&nbsp;&lt;TRUE&gt; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ TFKEY\"&nbsp;&lt;a&gt;\"&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"facility/EKEYtoCHAR\">EKEY&gt;CHAR</a> -&gt; &lt;FALSE&gt;&nbsp;CHAR&nbsp;a&nbsp;&lt;TRUE&gt; }T</span> <br>\n      \n      </p></div>\n    </div>\n  </div>\t\t<!-- T.10 -->\n<h2 id=\"section.F.12\">F.12 The optional File-Access word set</h2> <!-- T.11 -->\n\nThese tests create files in the current directory, if all goes well\nthese will be deleted.  If something fails they may not be deleted.\nIf this is a problem ensure you set a suitable directory before\nrunning this test.  Currently, there is no ANS standard way of doing\nthis.  the file names used in these test are:\n\"<code>fatest1.txt</code>\", \"<code>fatest2.txt</code>\" and\n\"<code>fatest3.txt</code>\".\n<p>\nThe test <a href=\"testsuite#test:file:CREATE-FILE\">F.11.6.1.1010 CREATE-FILE</a> also tests <a href=\"file/CLOSE-FILE\">CLOSE-FILE</a>,\n<a href=\"testsuite#test:file:WRITE-LINE\">F.11.6.1.2485 WRITE-LINE</a>  also tests <a href=\"file/WDivO\">W/O</a> and <a href=\"file/OPEN-FILE\">OPEN-FILE</a>,\n<a href=\"testsuite#test:file:READ-LINE\">F.11.6.1.2090 READ-LINE</a> includes a test for <a href=\"file/RDivO\">R/O</a>, \n<a href=\"testsuite#test:file:REPOSITION-FILE\">F.11.6.1.2142 REPOSITION-FILE</a> includes tests for <a href=\"file/RDivW\">R/W</a>,\n<a href=\"file/WRITE-FILE\">WRITE-FILE</a>, <a href=\"file/READ-FILE\">READ-FILE</a>, \n<a href=\"file/FILE-POSITION\">FILE-POSITION</a>, and <a href=\"file/Sq\">S\"</a>.\nThe <a href=\"testsuite#test:file:FILE-SIZE\">F.11.6.1.1522 FILE-SIZE</a> test includes a test for <a href=\"file/BIN\">BIN</a>.\nThe test  <a href=\"testsuite#test:file:RESIZE-FILE\">F.11.6.1.2147 RESIZE-FILE</a> should then be run followed by\nthe <a href=\"testsuite#test:file:DELETE-FILE\">F.11.6.1.1190 DELETE-FILE</a> test.\n</p><p>\nThe <a href=\"testsuite#test:file:p\">F.11.6.1.0080 (</a> test should be next, followed by\n<a href=\"testsuite#test:file:SOURCE-ID\">F.11.6.1.2218 SOURCE-ID</a> the test which test the extended versions of\n<a href=\"file/p\">(</a> and <a href=\"file/SOURCE-ID\">SOURCE-ID</a> respectively.\n</p><p>\nFinally <a href=\"testsuite#test:file:RENAME-FILE\">F.11.6.2.2130 RENAME-FILE</a> tests the extended words\n<a href=\"file/RENAME-FILE\">RENAME-FILE</a>, <a href=\"file/FILE-STATUS\">FILE-STATUS</a>, and <a href=\"file/FLUSH-FILE\">FLUSH-FILE</a>.\n</p><p>\n\n</p><div class=\"wordHead\" id=\"test:file:p\">\n  <div class=\"wordNumber\">F.11.6.1.0080</div>\n  <div class=\"wordName\">(</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>(</strong>&nbsp;1&nbsp;2&nbsp;3&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;5&nbsp;6&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;8&nbsp;9&nbsp;)&nbsp;11&nbsp;22&nbsp;33 -&gt; 11&nbsp;22&nbsp;33 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:CREATE-FILE\">\n  <div class=\"wordNumber\">F.11.6.1.1010</div>\n  <div class=\"wordName\">CREATE-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> fn1 <a href=\"file/Sq\">S\"</a> fatest1.txt\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> fid1\n      <p>\n      <span class=\"tt\">T{ fn1&nbsp;<a href=\"file/RDivW\">R/W</a>&nbsp;<strong>CREATE-FILE</strong>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:DELETE-FILE\">\n  <div class=\"wordNumber\">F.11.6.1.1190</div>\n  <div class=\"wordName\">DELETE-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ fn2&nbsp;<strong>DELETE-FILE</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ fn2&nbsp;<a href=\"file/RDivW\">R/W</a>&nbsp;<a href=\"file/BIN\">BIN</a>&nbsp;<a href=\"file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ fn2&nbsp;<strong>DELETE-FILE</strong> -&gt; 0 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:FILE-SIZE\">\n  <div class=\"wordNumber\">F.11.6.1.1522</div>\n  <div class=\"wordName\">FILE-SIZE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> cbuf buf bsize 0 <a href=\"core/FILL\">FILL</a> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> fn2 <a href=\"file/Sq\">S\"</a> fatest2.txt\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> fid2 <br>\n      <a href=\"core/Colon\">:</a> setpad <a href=\"core/PAD\">PAD</a> 50 0 <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/CStore\">C!</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/Semi\">;</a>\n      <p>\n      setpad\n      </p><p>\n      <span class=\"rm\"><strong>Note:</strong> If anything else is defined\n      <code>setpad</code> must be called again as the pad may move</span>\n      </p><p>\n      <span class=\"tt\">T{ fn2&nbsp;<a href=\"file/RDivW\">R/W</a>&nbsp;<a href=\"file/BIN\">BIN</a>&nbsp;<a href=\"file/CREATE-FILE\">CREATE-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid2&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;50&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/WRITE-FILE\">WRITE-FILE</a>&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FLUSH-FILE\">FLUSH-FILE</a> -&gt; 0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>FILE-SIZE</strong> -&gt; 50.&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ 0.&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;29&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/READ-FILE\">READ-FILE</a> -&gt; 29&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;29&nbsp;buf&nbsp;29&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;30&nbsp;buf&nbsp;30&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;29&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/READ-FILE\">READ-FILE</a> -&gt; 21&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;29&nbsp;<a href=\"core/Plus\">+</a>&nbsp;21&nbsp;buf&nbsp;21&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>FILE-SIZE</strong>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-POSITION\">FILE-POSITION</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<a href=\"double/DEqual\">D=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ buf&nbsp;10&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/READ-FILE\">READ-FILE</a> -&gt; 0&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:INCLUDED\">\n  <div class=\"wordNumber\">F.11.6.1.1718</div>\n  <div class=\"wordName\">INCLUDED</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:file:REQUIRED\">F.11.6.2.2144.50 REQUIRED</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:READ-LINE\">\n  <div class=\"wordNumber\">F.11.6.1.2090</div>\n  <div class=\"wordName\">READ-LINE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n200 <a href=\"core/CONSTANT\">CONSTANT</a> bsize <br>\n      <a href=\"core/CREATE\">CREATE</a> buf bsize <a href=\"core/ALLOT\">ALLOT</a> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> #chars\n      <p>\n      <span class=\"tt\">T{ fn1&nbsp;<a href=\"file/RDivO\">R/O</a>&nbsp;<a href=\"file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-POSITION\">FILE-POSITION</a> -&gt; 0.&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ buf&nbsp;100&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>READ-LINE</strong>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;#chars&nbsp;<a href=\"core/Store\">!</a> -&gt; <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&lt;TRUE&gt;&nbsp;0&nbsp;line1&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a> }T</span> <br>\n      <span class=\"tt\">T{ buf&nbsp;#chars&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;line1&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:REPOSITION-FILE\">\n  <div class=\"wordNumber\">F.11.6.1.2142</div>\n  <div class=\"wordName\">REPOSITION-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> line2 <a href=\"file/Sq\">S\"</a> Line 2 blah blah blah\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> rl1 buf 100 fid1 <a href=\"core/Fetch\">@</a> <a href=\"file/READ-LINE\">READ-LINE</a> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"double/TwoVARIABLE\">2VARIABLE</a> fp\n      <p>\n      <span class=\"tt\">T{ fn1&nbsp;<a href=\"file/RDivW\">R/W</a>&nbsp;<a href=\"file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-SIZE\">FILE-SIZE</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-SIZE\">FILE-SIZE</a> -&gt; fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-POSITION\">FILE-POSITION</a> }T</span>\n      </p><p>\n      <span class=\"tt\">T{ line2&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/WRITE-FILE\">WRITE-FILE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ 10.&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-POSITION\">FILE-POSITION</a> -&gt; 10.&nbsp;0 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ 0.&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ rl1 -&gt; line1&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;&lt;TRUE&gt;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ rl1 -&gt; <a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;#chars&nbsp;<a href=\"core/Store\">!</a> }T</span>&lt;TRUE&gt; 0 line2 <a href=\"core/SWAP\">SWAP</a> <a href=\"core/DROP\">DROP</a> <br>\n      <span class=\"tt\">T{ buf&nbsp;#chars&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;line2&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;FALSE&gt;&nbsp;0 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-POSITION\">FILE-POSITION</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;fp&nbsp;<a href=\"core/TwoStore\">2!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fp&nbsp;<a href=\"core/TwoFetch\">2@</a>&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-SIZE\">FILE-SIZE</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<a href=\"double/DEqual\">D=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"file/Sq\">S\"</a>&nbsp;\"&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/WRITE-LINE\">WRITE-LINE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"file/Sq\">S\"</a>&nbsp;\"&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/WRITE-LINE\">WRITE-LINE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fp&nbsp;<a href=\"core/TwoFetch\">2@</a>&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>REPOSITION-FILE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;TRUE&gt;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;TRUE&gt;&nbsp;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ rl1 -&gt; 0&nbsp;&lt;FALSE&gt;&nbsp;0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:RESIZE-FILE\">\n  <div class=\"wordNumber\">F.11.6.1.2147</div>\n  <div class=\"wordName\">RESIZE-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <code>setpad</code> <br>\n    <span class=\"tt\">T{ fn2&nbsp;<a href=\"file/RDivW\">R/W</a>&nbsp;<a href=\"file/BIN\">BIN</a>&nbsp;<a href=\"file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid2&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ 37.&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>RESIZE-FILE</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-SIZE\">FILE-SIZE</a> -&gt; 37.&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 0.&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;100&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/READ-FILE\">READ-FILE</a> -&gt; 37&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;37&nbsp;buf&nbsp;37&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;38&nbsp;buf&nbsp;38&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ 500.&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>RESIZE-FILE</strong> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FILE-SIZE\">FILE-SIZE</a> -&gt; 500.&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ 0.&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ cbuf&nbsp;buf&nbsp;100&nbsp;fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/READ-FILE\">READ-FILE</a> -&gt; 100&nbsp;0 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;37&nbsp;buf&nbsp;37&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ fid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:Sq\">\n  <div class=\"wordNumber\">F.11.6.1.2165</div>\n  <div class=\"wordName\">S\"</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>S\"</strong>&nbsp;A&nbsp;String\"<a href=\"core/TwoDROP\">2DROP</a> -&gt;  }T</span>\n    &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">There is no space between the \" and <a href=\"core/TwoDROP\">2DROP</a></span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:SOURCE-ID\">\n  <div class=\"wordNumber\">F.11.6.1.2218</div>\n  <div class=\"wordName\">SOURCE-ID</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>SOURCE-ID</strong>&nbsp;<a href=\"core/DUP\">DUP</a>&nbsp;-1&nbsp;<a href=\"core/Equal\">=</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/ZeroEqual\">0=</a>&nbsp;<a href=\"core/OR\">OR</a> -&gt; &lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:WRITE-LINE\">\n  <div class=\"wordNumber\">F.11.6.1.2485</div>\n  <div class=\"wordName\">WRITE-LINE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> line1 <a href=\"file/Sq\">S\"</a> Line 1\" <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ fn1&nbsp;<a href=\"file/WDivO\">W/O</a>&nbsp;<a href=\"file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ line1&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>WRITE-LINE</strong> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:INCLUDE\">\n  <div class=\"wordNumber\">F.11.6.2.1714</div>\n  <div class=\"wordName\">INCLUDE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:file:REQUIRED\">F.11.6.2.2144.50 REQUIRED</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:RENAME-FILE\">\n  <div class=\"wordNumber\">F.11.6.2.2130</div>\n  <div class=\"wordName\">RENAME-FILE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> fn3 <a href=\"file/Sq\">S\"</a> fatest3.txt\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> &gt;end fid1 <a href=\"core/Fetch\">@</a> <a href=\"file/FILE-SIZE\">FILE-SIZE</a> <a href=\"core/DROP\">DROP</a> fid1 <a href=\"core/Fetch\">@</a> <a href=\"file/REPOSITION-FILE\">REPOSITION-FILE</a> <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ fn3&nbsp;<a href=\"file/DELETE-FILE\">DELETE-FILE</a>&nbsp;<a href=\"core/DROP\">DROP</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ fn1&nbsp;fn3&nbsp;<strong>RENAME-FILE</strong> -&gt; 0 }T</span> <br>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\"> Return value is undefined</span> <br>\n      <span class=\"tt\">T{ fn1&nbsp;<a href=\"file/FILE-STATUS\">FILE-STATUS</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<a href=\"core/ZeroEqual\">0=</a> -&gt; &lt;FALSE&gt; }T</span> <br>\n      <span class=\"tt\">T{ fn3&nbsp;<a href=\"file/FILE-STATUS\">FILE-STATUS</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<a href=\"core/ZeroEqual\">0=</a> -&gt; &lt;TRUE&gt;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ fn3&nbsp;<a href=\"file/RDivW\">R/W</a>&nbsp;<a href=\"file/OPEN-FILE\">OPEN-FILE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;fid1&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ &gt;end -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"file/Sq\">S\"</a>&nbsp;Final&nbsp;line\"&nbsp;fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/WRITE-LINE\">WRITE-LINE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/FLUSH-FILE\">FLUSH-FILE</a> -&gt; 0 }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Can only test <a href=\"file/FLUSH-FILE\">FLUSH-FILE</a> doesn't fail</span> <br>\n      <span class=\"tt\">T{ fid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"file/CLOSE-FILE\">CLOSE-FILE</a> -&gt; 0 }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Tidy the test folder</span> <br>\n      <span class=\"tt\">T{ fn3&nbsp;<a href=\"file/DELETE-FILE\">DELETE-FILE</a>&nbsp;<a href=\"core/DROP\">DROP</a> -&gt;  }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:REQUIRE\">\n  <div class=\"wordNumber\">F.11.6.2.2144.10</div>\n  <div class=\"wordName\">REQUIRE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    See <a href=\"testsuite#test:file:REQUIRED\">F.11.6.2.2144.50 REQUIRED</a>.\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:file:REQUIRED\">\n  <div class=\"wordNumber\">F.11.6.2.2144.50</div>\n  <div class=\"wordName\">REQUIRED</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    This test requires two additional files:\n    <code>required-helper1.fs</code> and\n    <code>required-helper2.fs</code>.\n    Both of which hold the text:\n        <div class=\"quote\">\n\n      <a href=\"core/OnePlus\">1+</a>\n      \n      </div>\n    As for the test themselves:\n    <p>\n    <span class=\"tt\">T{ 0&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/Sq\">S\"</a>&nbsp;required-helper1.fs\"&nbsp;<strong>REQUIRED</strong>&nbsp;<a href=\"core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/REQUIRE\">REQUIRE</a>&nbsp;required-helper1.fs\t\t\t\t<a href=\"core/bs\">\\</a>&nbsp;Ignore&nbsp;-&nbsp;already&nbsp;loaded&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/INCLUDE\">INCLUDE</a>&nbsp;required-helper1.fs\t\t\t\t<a href=\"core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n     -&gt; 2 }T</span> <br>\n    <span class=\"tt\">T{ 0&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/INCLUDE\">INCLUDE</a>&nbsp;required-helper2.fs\t\t\t\t<a href=\"core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/Sq\">S\"</a>&nbsp;required-helper2.fs\"&nbsp;<strong>REQUIRED</strong>&nbsp;<a href=\"core/bs\">\\</a>&nbsp;Ignored&nbsp;-&nbsp;already&nbsp;loaded&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/REQUIRE\">REQUIRE</a>&nbsp;required-helper2.fs\t\t\t\t<a href=\"core/bs\">\\</a>&nbsp;Ignored&nbsp;-&nbsp;already&nbsp;loaded&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;<a href=\"file/Sq\">S\"</a>&nbsp;required-helper2.fs\"&nbsp;<a href=\"file/INCLUDED\">INCLUDED</a>\t<a href=\"core/bs\">\\</a>&nbsp;Increment&nbsp;TOS&nbsp;<br>\n     -&gt; 2 }T</span>\n    \n    </p></div>\n  </div>\n<p>\n</p><h2 id=\"section.F.14\">F.14 The optional Floating-Point word set</h2>\n\n<div class=\"wordHead\" id=\"test:floating:FATAN2\">\n  <div class=\"wordNumber\">F.12.6.2.1489</div>\n  <div class=\"wordName\">FATAN2</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a>  NaN <a href=\"tools/BracketIF\">[IF]</a>  0e 0e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>  NaN <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n      <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> +Inf <a href=\"tools/BracketIF\">[IF]</a>  1e 0e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a> +Inf <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n      <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> -Inf <a href=\"tools/BracketIF\">[IF]</a> -1e 0e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a> -Inf <a href=\"tools/BracketTHEN\">[THEN]</a>\n      <p>\n      <a href=\"core/TRUE\">TRUE</a> verbose <a href=\"core/Store\">!</a> <br>\n      <a href=\"core/DECIMAL\">DECIMAL</a>\n      </p><p>\n      <span class=\"rm\">The test harness default for <code>EXACT?</code> is TRUE.\n      Uncomment the following line if your system needs it to\n      be FALSE</span> <br>\n      <a href=\"core/bs\">\\</a> SET-NEAR\n      </p><p>\n      <a href=\"core/VARIABLE\">VARIABLE</a> #errors    0 #errors <a href=\"core/Store\">!</a>\n      </p><p>\n      <a href=\"core/ColonNONAME\">:NONAME</a> <a href=\"core/p\">(</a> c-addr u -- ) <br>\n      &nbsp;&nbsp; <a href=\"core/p\">(</a> <span class=\"rm\">Display an error message followed by the\n      line that had the error@.</span> ) <br>\n      &nbsp;&nbsp; 1 #errors <a href=\"core/PlusStore\">+!</a> error1 <a href=\"core/Semi\">;</a> error-xt <a href=\"core/Store\">!</a>\n      </p><p>\n      <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> pi <a href=\"tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; 0.3141592653589793238463E1 <a href=\"float/FCONSTANT\">FCONSTANT</a> pi <br>\n      <a href=\"tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a> -pi <a href=\"tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; pi <a href=\"float/FNEGATE\">FNEGATE</a> <a href=\"float/FCONSTANT\">FCONSTANT</a> -pi <br>\n      <a href=\"tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      <a href=\"core/FALSE\">FALSE</a> <a href=\"tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp;  0.7853981633974483096157E0 <a href=\"float/FCONSTANT\">FCONSTANT</a>   pi/4 <br>\n      &nbsp;&nbsp; -0.7853981633974483096157E0 <a href=\"float/FCONSTANT\">FCONSTANT</a>  -pi/4 <br>\n      &nbsp;&nbsp;  0.1570796326794896619231E1 <a href=\"float/FCONSTANT\">FCONSTANT</a>   pi/2 <br>\n      &nbsp;&nbsp; -0.1570796326794896619231E1 <a href=\"float/FCONSTANT\">FCONSTANT</a>  -pi/2 <br>\n      &nbsp;&nbsp;  0.4712388980384689857694E1 <a href=\"float/FCONSTANT\">FCONSTANT</a>  3pi/2 <br>\n      &nbsp;&nbsp;  0.2356194490192344928847E1 <a href=\"float/FCONSTANT\">FCONSTANT</a>  3pi/4 <br>\n      &nbsp;&nbsp; -0.2356194490192344928847E1 <a href=\"float/FCONSTANT\">FCONSTANT</a> -3pi/4 <br>\n      <a href=\"tools/BracketELSE\">[ELSE]</a> <br>\n      &nbsp;&nbsp;  pi   4e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>   pi/4 <br>\n      &nbsp;&nbsp; -pi   4e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>  -pi/4 <br>\n      &nbsp;&nbsp;  pi   2e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>   pi/2 <br>\n      &nbsp;&nbsp; -pi   2e <a href=\"float/FDiv\">F/</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>  -pi/2 <br>\n      &nbsp;&nbsp;  pi/2 3e <a href=\"float/FTimes\">F*</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>  3pi/2 <br>\n      &nbsp;&nbsp;  pi/4 3e <a href=\"float/FTimes\">F*</a> <a href=\"float/FCONSTANT\">FCONSTANT</a>  3pi/4 <br>\n      &nbsp;&nbsp; -pi/4 3e <a href=\"float/FTimes\">F*</a> <a href=\"float/FCONSTANT\">FCONSTANT</a> -3pi/4 <br>\n      <a href=\"tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      verbose <a href=\"core/Fetch\">@</a> <a href=\"tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; <a href=\"core/ColonNONAME\">:NONAME</a> <a href=\"core/p\">(</a> -- fp.separate? ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/toR\">&gt;R</a> 1e <a href=\"core/DEPTH\">DEPTH</a> <a href=\"core/Rfrom\">R&gt;</a> <a href=\"float/FDROP\">FDROP</a> <a href=\"core/TwoRfrom\">2R&gt;</a> <a href=\"core/Equal\">=</a> <a href=\"core/Semi\">;</a> <a href=\"core/EXECUTE\">EXECUTE</a> <br>\n      &nbsp;&nbsp; <a href=\"core/CR\">CR</a> <a href=\"core/Dotp\">.(</a> <span class=\"rm\">floating-point and data stacks</span> ) <br>\n      &nbsp;&nbsp; <a href=\"tools/BracketIF\">[IF]</a> <a href=\"core/Dotp\">.(</a> <span class=\"rm\">*separate*</span> ) <a href=\"tools/BracketELSE\">[ELSE]</a> <a href=\"core/Dotp\">.(</a> <span class=\"rm\">*not separate*</span> ) <a href=\"tools/BracketTHEN\">[THEN]</a> <br>\n      &nbsp;&nbsp; <a href=\"core/CR\">CR</a> <br>\n      <a href=\"tools/BracketTHEN\">[THEN]</a>\n      </p><p>\n      TESTING normal values\n      </p><p>\n      <a href=\"core/bs\">\\</a>   y   x              rad         deg <br>\n      <span class=\"tt\">T{ &nbsp;0e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;0e&nbsp;&nbsp; R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a>   0 <br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;pi/4 R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a>  45 <br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;pi/2 R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a>  90 <br>\n      <span class=\"tt\">T{ -1e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; -3pi/4 R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a> 135 <br>\n      <span class=\"tt\">T{ &nbsp;0e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;&nbsp;pi&nbsp;&nbsp; R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a> 180 <br>\n      <span class=\"tt\">T{ -1e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;-pi/4 R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a> 225 <br>\n      <span class=\"tt\">T{ -1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;-pi/2 R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a> 270 <br>\n      <span class=\"tt\">T{ -1e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;-pi/4 R}T</span>&nbsp;&nbsp; <a href=\"core/bs\">\\</a> 315\n      </p><p>\n      TESTING Single UNIX 3 special values spec\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">ISO C / Single UNIX Specification Version 3:</span> <br>\n      <a href=\"core/bs\">\\</a> &nbsp;&nbsp; <a href=\"http://www.unix.org/single_unix_specification/\">http://www.unix.org/single_unix_specification/</a> <br>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Select \"Topic\", then \"Math Interfaces\", then \"<code>atan2()</code>\":</span> <br>\n      <a href=\"core/bs\">\\</a> &nbsp;&nbsp; <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atan2f.html\">http://www.opengroup.org/onlinepubs/009695399/</a> <br>\n      <a href=\"core/bs\">\\</a> &nbsp;&nbsp; <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/atan2f.html\">functions/atan2f.html</a>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is &lt; 0, +/-pi shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;0e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi R}T</span> <br>\n      <span class=\"tt\">T{ -0e&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; -pi R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is &gt; 0, +/-0 shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;0e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;0e R}T</span><br>\n      <span class=\"tt\">T{ -0e&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; -0e R}T</span><br>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is &lt; 0 and <em>x</em> is +/-0, -pi/2 shall be returned.</span> <br>\n      <span class=\"tt\">T{ -1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span> <br>\n      <span class=\"tt\">T{ -1e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span> <br>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is &gt; 0 and <em>x</em> is +/-0, pi/2 shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; pi/2 R}T</span> <br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; pi/2 R}T</span> <br>\n      TESTING Single UNIX 3 special values optional spec\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Optional ISO C / single UNIX specs:</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If either <em>x</em> or <em>y</em> is NaN, a NaN shall be returned.</span> <br>\n      <span class=\"tt\">T{ NaN&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; NaN R}T</span><br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;NaN&nbsp;<strong>FATAN2</strong> -&gt; NaN R}T</span><br>\n      <span class=\"tt\">T{ NaN&nbsp;NaN&nbsp;<strong>FATAN2</strong> -&gt; NaN R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is -0, +/-pi shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;0e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi R}T</span><br>\n      <span class=\"tt\">T{ -0e&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; -pi R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-0 and <em>x</em> is +0, +/-0 shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;0e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; +0e R}T</span><br>\n      <span class=\"tt\">T{ -0e&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; -0e R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">For finite values of +/-<em>y</em> &gt; 0, if <em>x</em> is -Inf, +/-pi shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi R}T</span><br>\n      <span class=\"tt\">T{ -1e&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; -pi R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">For finite values of +/-<em>y</em> &gt; 0, if <em>x</em> is +Inf, +/-0 shall be returned.</span> <br>\n      <span class=\"tt\">T{ &nbsp;1e&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; +0e R}T</span><br>\n      <span class=\"tt\">T{ -1e&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; -0e R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">For finite values of <em>x</em>, if <em>y</em> is +/-Inf, +/-pi/2 shall be returned.</span> <br>\n      <span class=\"tt\">T{ +Inf&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n      <span class=\"tt\">T{ +Inf&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n      <span class=\"tt\">T{ +Inf&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n      <span class=\"tt\">T{ +Inf&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/2 R}T</span><br>\n      <span class=\"tt\">T{ -Inf&nbsp;&nbsp;1e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span><br>\n      <span class=\"tt\">T{ -Inf&nbsp;-1e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span><br>\n      <span class=\"tt\">T{ -Inf&nbsp;&nbsp;0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span><br>\n      <span class=\"tt\">T{ -Inf&nbsp;-0e&nbsp;<strong>FATAN2</strong> -&gt; -pi/2 R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-Inf and <em>x</em> is -Inf, +/-3pi/4 shall be returned.</span> <br>\n      <span class=\"tt\">T{ +Inf&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;3pi/4 R}T</span><br>\n      <span class=\"tt\">T{ -Inf&nbsp;-Inf&nbsp;<strong>FATAN2</strong> -&gt; -3pi/4 R}T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">If <em>y</em> is +/-Inf and <em>x</em> is +Inf, +/-pi/4 shall be returned.</span> <br>\n      <span class=\"tt\">T{ +Inf&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; &nbsp;pi/4 R}T</span><br>\n      <span class=\"tt\">T{ -Inf&nbsp;+Inf&nbsp;<strong>FATAN2</strong> -&gt; -pi/4 R}T</span>\n      </p><p>\n      verbose <a href=\"core/Fetch\">@</a> <a href=\"tools/BracketIF\">[IF]</a> <br>\n      &nbsp;&nbsp; <a href=\"core/CR\">CR</a> <a href=\"core/Dotp\">.(</a> <span class=\"rm\">#ERRORS:</span> ) #errors <a href=\"core/Fetch\">@</a> <a href=\"core/d\">.</a> <a href=\"core/CR\">CR</a> <br>\n      <a href=\"tools/BracketTHEN\">[THEN]</a>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:floating:FTRUNC\">\n  <div class=\"wordNumber\">F.12.6.2.1627</div>\n  <div class=\"wordName\">FTRUNC</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <code>SET-EXACT</code>\n    <p>\n    <span class=\"tt\">T{ -0E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ -1E-9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ -0.9E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ -1E&nbsp;&nbsp;1E-5&nbsp;F+&nbsp;<strong>FTRUNC</strong>&nbsp;<a href=\"float/FZeroEqual\">F0=</a> -&gt; &lt;TRUE&gt; }T</span> <br>\n    <span class=\"tt\">T{ 0E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;0E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ 1E-9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;0E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ -1E&nbsp;-1E-5&nbsp;F+&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -1E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ 3.14E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;3E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ 3.99E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;3E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ 4E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; &nbsp;4E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ -4E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -4E&nbsp;&nbsp; R}T</span> <br>\n    <span class=\"tt\">T{ -4.1E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>FTRUNC</strong>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; -4E&nbsp;&nbsp; R}T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:floating:FVALUE\">\n  <div class=\"wordNumber\">F.12.6.2.1628</div>\n  <div class=\"wordName\">FVALUE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ 0e0&nbsp;<strong>FVALUE</strong>&nbsp;Tval -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ Tval -&gt; 0e0 R}T</span> <br>\n      <span class=\"tt\">T{ 1e0&nbsp;<a href=\"core/TO\">TO</a>&nbsp;Tval -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ Tval -&gt; 1e0 R}T</span> <br>\n      \n      <a href=\"core/Colon\">:</a> setTval Tval <a href=\"float/FSWAP\">FSWAP</a> <a href=\"core/TO\">TO</a> Tval <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ 2e0&nbsp;setTval&nbsp;Tval -&gt; 1e0&nbsp;2e0 RR}T</span> <br>\n      \n      <span class=\"tt\">T{ 5e0&nbsp;<a href=\"core/TO\">TO</a>&nbsp;Tval -&gt;  }T</span> <br>\n      <a href=\"core/Colon\">:</a> [execute] <a href=\"core/EXECUTE\">EXECUTE</a> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> <br>\n      <span class=\"tt\">T{ <a href=\"core/Tick\">'</a>&nbsp;Tval&nbsp;<a href=\"right-bracket\">]</a>&nbsp;[execute]&nbsp;<a href=\"core/Bracket\">[</a> -&gt; 2e0 R}T</span>\n      \n      </div>\n    </div>\n  </div>\t<!-- T.12 -->\n\t\t\t\t<!-- T.13 -->\n<h2 id=\"section.F.16\">F.16 The optional Memory-Allocation word set</h2> <!-- T.14 -->\n<a name=\"test:memory\"></a>\nThese test require a new variable to hold the address of the allocated\nmemory.  Two helper words are defined to populate the allocated memory\nand to check the memory:\n<p>\n</p><div class=\"tt\">\n\n  <a href=\"core/VARIABLE\">VARIABLE</a> addr\n  <p>\n  <a href=\"core/Colon\">:</a> write-cell-mem <a href=\"core/p\">(</a> addr n -- ) <br>\n  &nbsp;&nbsp; <a href=\"core/OnePlus\">1+</a> 1 <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/Store\">!</a> <a href=\"core/CELLPlus\">CELL+</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/DROP\">DROP</a> <br>\n  <a href=\"core/Semi\">;</a>\n  </p><p>\n  <a href=\"core/Colon\">:</a> check-cell-mem <a href=\"core/p\">(</a> addr n -- ) <br>\n  &nbsp;&nbsp; <a href=\"core/OnePlus\">1+</a> 1 <a href=\"core/DO\">DO</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/toR\">&gt;R</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <span class=\"tt\">T{ <a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/p\">(</a>&nbsp;<a href=\"core/I\">I</a>&nbsp;) -&gt; <a href=\"core/RFetch\">R@</a>&nbsp;<a href=\"core/p\">(</a>&nbsp;addr&nbsp;)&nbsp;<a href=\"core/Fetch\">@</a> }T</span> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/CELLPlus\">CELL+</a> <br>\n  &nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <a href=\"core/DROP\">DROP</a> <br>\n  <a href=\"core/Semi\">;</a>\n  </p><p>\n  <a href=\"core/Colon\">:</a> write-char-mem <a href=\"core/p\">(</a> addr n -- ) <br>\n  &nbsp;&nbsp; <a href=\"core/OnePlus\">1+</a> 1 <a href=\"core/DO\">DO</a> <a href=\"core/I\">I</a> <a href=\"core/OVER\">OVER</a> <a href=\"core/CStore\">C!</a> <a href=\"core/CHARPlus\">CHAR+</a> <a href=\"core/LOOP\">LOOP</a> <a href=\"core/DROP\">DROP</a> <br>\n  <a href=\"core/Semi\">;</a>\n  </p><p>\n  <a href=\"core/Colon\">:</a> check-char-mem <a href=\"core/p\">(</a> addr n -- ) <br>\n  &nbsp;&nbsp; <a href=\"core/OnePlus\">1+</a> 1 <a href=\"core/DO\">DO</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/I\">I</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/toR\">&gt;R</a> <a href=\"core/toR\">&gt;R</a> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <span class=\"tt\">T{ <a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/p\">(</a>&nbsp;<a href=\"core/I\">I</a>&nbsp;) -&gt; <a href=\"core/RFetch\">R@</a>&nbsp;<a href=\"core/p\">(</a>&nbsp;addr&nbsp;)&nbsp;<a href=\"core/CFetch\">C@</a> }T</span> <br>\n  &nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/Rfrom\">R&gt;</a> <a href=\"core/CHARPlus\">CHAR+</a> <br>\n  &nbsp;&nbsp; <a href=\"core/LOOP\">LOOP</a> <a href=\"core/DROP\">DROP</a> <br>\n  <a href=\"core/Semi\">;</a>\n  \n  </p></div>\n\nThe test <a href=\"testsuite#test:memory:ALLOCATE\">F.14.6.1.0707 ALLOCATE</a> includes a test for <a href=\"memory/FREE\">FREE</a>.\n<p>\n\n</p><div class=\"wordHead\" id=\"test:memory:ALLOCATE\">\n  <div class=\"wordNumber\">F.14.6.1.0707</div>\n  <div class=\"wordName\">ALLOCATE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/VARIABLE\">VARIABLE</a> datsp <br>\n      <a href=\"core/HERE\">HERE</a> datsp <a href=\"core/Store\">!</a>\n      <p>\n      <span class=\"tt\">T{ 50&nbsp;<a href=\"core/CELLS\">CELLS</a>&nbsp;<strong>ALLOCATE</strong>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/ALIGNED\">ALIGNED</a> -&gt; addr&nbsp;<a href=\"core/Fetch\">@</a> }T</span>\t\t\t\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Test address is aligned</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/HERE\">HERE</a> -&gt; datsp&nbsp;<a href=\"core/Fetch\">@</a> }T</span>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Check data space pointer is unaffected</span><br>\n      addr <a href=\"core/Fetch\">@</a> 50 write-cell-mem <br>\n      addr <a href=\"core/Fetch\">@</a> 50 check-cell-mem &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Check we can access the heap</span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"memory/FREE\">FREE</a> -&gt; 0 }T</span>\n      </p><p>\n      <span class=\"tt\">T{ 99&nbsp;<strong>ALLOCATE</strong>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/ALIGNED\">ALIGNED</a> -&gt; addr&nbsp;<a href=\"core/Fetch\">@</a> }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Test address is aligned</span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"memory/FREE\">FREE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/HERE\">HERE</a> -&gt; datsp&nbsp;<a href=\"core/Fetch\">@</a> }T</span>\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Data space pointer unaffected by <a href=\"memory/FREE\">FREE</a></span><br>\n      <span class=\"tt\">T{ -1&nbsp;<strong>ALLOCATE</strong>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<a href=\"core/ZeroEqual\">0=</a> -&gt; &lt;FALSE&gt; }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Memory allocate failed</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:memory:FREE\">\n  <div class=\"wordNumber\">F.14.6.1.1605</div>\n  <div class=\"wordName\">FREE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"rm\">See <a href=\"testsuite#test:memory:ALLOCATE\">F.14.6.1.0707 ALLOCATE</a></span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:memory:RESIZE\">\n  <div class=\"wordNumber\">F.14.6.1.2145</div>\n  <div class=\"wordName\">RESIZE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ 50&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<a href=\"memory/ALLOCATE\">ALLOCATE</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      addr <a href=\"core/Fetch\">@</a> 50 write-char-mem addr <a href=\"core/Fetch\">@</a> 50 check-char-mem\n      <p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Resize smaller does not change content.</span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;28&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>RESIZE</strong>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      addr <a href=\"core/Fetch\">@</a> 28 check-char-mem\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Resize larger does not change original content.</span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;100&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<strong>RESIZE</strong>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;addr&nbsp;<a href=\"core/Store\">!</a> -&gt; 0 }T</span> <br>\n      addr <a href=\"core/Fetch\">@</a> 28 check-char-mem\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Resize error does not change <em>addr</em></span> <br>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;-1&nbsp;<strong>RESIZE</strong>&nbsp;<a href=\"core/ZeroEqual\">0=</a> -&gt; addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;&lt;FALSE&gt; }T</span>\n      </p><p>\n      <span class=\"tt\">T{ addr&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"memory/FREE\">FREE</a> -&gt; 0 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/HERE\">HERE</a> -&gt; datsp&nbsp;<a href=\"core/Fetch\">@</a> }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Data space pointer is unaffected</span>\n      \n      </p></div>\n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.F.18\">F.18 The optional Programming-Tools word set</h2>\n\n<div class=\"wordHead\" id=\"test:tools:AHEAD\">\n  <div class=\"wordNumber\">F.15.6.2.0702</div>\n  <div class=\"wordName\">AHEAD</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pt1&nbsp;<strong>AHEAD</strong>&nbsp;1111&nbsp;2222&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;3333&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ pt1 -&gt; 3333 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:tools:CS-PICK\">\n  <div class=\"wordNumber\">F.15.6.2.1015</div>\n  <div class=\"wordName\">CS-PICK</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> ?repeat <br>\n      &nbsp;&nbsp; 0 <strong>CS-PICK</strong> <a href=\"core/POSTPONE\">POSTPONE</a> <a href=\"core/UNTIL\">UNTIL</a> <br>\n      <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      <p>\n      <a href=\"core/VARIABLE\">VARIABLE</a> pt4\n      </p><p>\n      <a href=\"core/Colon\">:</a> &lt;= <a href=\"core/more\">&gt;</a> <a href=\"core/ZeroEqual\">0=</a> <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pt5&nbsp;&nbsp;<a href=\"core/p\">(</a>&nbsp;n1&nbsp;--&nbsp;)&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"core/Store\">!</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1&nbsp;pt4&nbsp;<a href=\"core/PlusStore\">+!</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;4&nbsp;&lt;=&nbsp;?repeat&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a>&nbsp;<span class=\"rm\">Back&nbsp;to&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;if&nbsp;false</span>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;111&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;3&nbsp;&lt;=&nbsp;?repeat&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;222&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;2&nbsp;&lt;=&nbsp;?repeat&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;333&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt4&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;1&nbsp;<a href=\"core/Equal\">=</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/UNTIL\">UNTIL</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n      </p><p>\n      <span class=\"tt\">T{ 6&nbsp;pt5 -&gt; 111&nbsp;111&nbsp;222&nbsp;111&nbsp;222&nbsp;333&nbsp;111&nbsp;222&nbsp;333 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:tools:CS-ROLL\">\n  <div class=\"wordNumber\">F.15.6.2.1020</div>\n  <div class=\"wordName\">CS-ROLL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;?DONE&nbsp;<a href=\"core/p\">(</a>&nbsp;dest&nbsp;--&nbsp;orig&nbsp;dest&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a>&nbsp;<span class=\"rm\">Same&nbsp;as&nbsp;WHILE</span>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/POSTPONE\">POSTPONE</a>&nbsp;<a href=\"core/IF\">IF</a>&nbsp;1&nbsp;<strong>CS-ROLL</strong>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a>&nbsp;<a href=\"core/IMMEDIATE\">IMMEDIATE</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pt6&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/toR\">&gt;R</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/RFetch\">R@</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?DONE&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/RFetch\">R@</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/OneMinus\">1-</a>&nbsp;<a href=\"core/toR\">&gt;R</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/REPEAT\">REPEAT</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n      <p>\n      <span class=\"tt\">T{ 5&nbsp;pt6 -&gt; 5&nbsp;4&nbsp;3&nbsp;2&nbsp;1 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> mix_up 2 <strong>CS-ROLL</strong> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">cs-rot</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> pt7 <a href=\"core/p\">(</a> f3 f2 f1 -- ? ) <br>\n      &nbsp;&nbsp; <a href=\"core/IF\">IF</a> 1111 <a href=\"core/ROT\">ROT</a> <a href=\"core/ROT\">ROT</a>\t&nbsp;&nbsp;\t\t( -- 1111 f3 f2 )\t\t&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o1 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/IF\">IF</a> 2222 <a href=\"core/SWAP\">SWAP</a>\t\t\t&nbsp;&nbsp;\t( -- 1111 2222 f3 )\t&nbsp;&nbsp;\t( cs: -- o1 o2 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/IF\">IF</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o1 o2 o3 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t\t3333 mix_up\t\t\t\t\t\t\t( -- 1111 2222 3333 )\t\t( cs: -- o2 o3 o1 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t<a href=\"core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o2 o3 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t\t4444\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Hence failure of first IF comes here and falls through</span> <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t<a href=\"core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- o2 ) <br>\n      &nbsp;&nbsp;&nbsp;&nbsp;\t5555 \t\t&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Failure of 3rd IF comes here</span> <br>\n      &nbsp;&nbsp; <a href=\"core/THEN\">THEN</a>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\t( cs: -- ) <br>\n      &nbsp;&nbsp; 6666 \t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Failure of 2nd IF comes here</span> <br>\n      &nbsp;&nbsp; <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ -1&nbsp;-1&nbsp;-1&nbsp;pt7 -&gt; 1111&nbsp;2222&nbsp;3333&nbsp;4444&nbsp;5555&nbsp;6666 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;-1&nbsp;-1&nbsp;pt7 -&gt; 1111&nbsp;2222&nbsp;5555&nbsp;6666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;-1&nbsp;pt7 -&gt; 1111&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;6666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;0&nbsp;&nbsp;0&nbsp;&nbsp;0&nbsp;pt7 -&gt; 0&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;4444&nbsp;5555&nbsp;6666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> [1cs-roll] 1 <strong>CS-ROLL</strong> <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pt8&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/toR\">&gt;R</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"tools/AHEAD\">AHEAD</a>&nbsp;111&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/BEGIN\">BEGIN</a>&nbsp;222&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1cs-roll]&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/THEN\">THEN</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;333&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/OneMinus\">1-</a>&nbsp;<a href=\"core/toR\">&gt;R</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/RFetch\">R@</a>&nbsp;<a href=\"core/Zeroless\">0&lt;</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/UNTIL\">UNTIL</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Rfrom\">R&gt;</a>&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;<br>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n      </p><p>\n      <span class=\"tt\">T{ 1&nbsp;pt8 -&gt; 333&nbsp;222&nbsp;333 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:tools:NtoR\">\n  <div class=\"wordNumber\">F.15.6.2.1908</div>\n  <div class=\"wordName\">N&gt;R</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <a href=\"core/Colon\">:</a> TNR1 <strong>N&gt;R</strong> <a href=\"core/SWAP\">SWAP</a> <a href=\"tools/NRfrom\">NR&gt;</a> <a href=\"core/Semi\">;</a> <br>\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;10&nbsp;20&nbsp;30&nbsp;3&nbsp;TNR1 -&gt; 2&nbsp;1&nbsp;10&nbsp;20&nbsp;30&nbsp;3 }T</span>\n    <p>\n    <a href=\"core/Colon\">:</a> TNR2 <strong>N&gt;R</strong> <strong>N&gt;R</strong> <a href=\"core/SWAP\">SWAP</a> <a href=\"tools/NRfrom\">NR&gt;</a> <a href=\"tools/NRfrom\">NR&gt;</a> <a href=\"core/Semi\">;</a> <br>\n    <span class=\"tt\">T{ 1&nbsp;2&nbsp;10&nbsp;20&nbsp;30&nbsp;3&nbsp;40&nbsp;50&nbsp;2&nbsp;TNR2 -&gt; 2&nbsp;1&nbsp;10&nbsp;20&nbsp;30&nbsp;3&nbsp;40&nbsp;50&nbsp;2 }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:tools:[THEN]\">\n  <div class=\"wordNumber\">F.15.6.2.2533</div>\n  <div class=\"wordName\">[THEN]</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ &lt;TRUE&gt;&nbsp;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;111&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;222&nbsp;<strong>[THEN]</strong> -&gt; 111 }T</span> <br>\n    <span class=\"tt\">T{ &lt;FALSE&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;111&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;222&nbsp;<strong>[THEN]</strong> -&gt; 222 }T</span>\n    <p>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Check words are immediate</span> <br>\n    <a href=\"core/Colon\">:</a> tfind <a href=\"core/BL\">BL</a> <a href=\"core/WORD\">WORD</a> <a href=\"core/FIND\">FIND</a> <a href=\"core/Semi\">;</a> <br>\n    <span class=\"tt\">T{ tfind&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/NIP\">NIP</a> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ tfind&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;<a href=\"core/NIP\">NIP</a> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ tfind&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"core/NIP\">NIP</a> -&gt; 1 }T</span>\n    </p><p>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pt2&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;&nbsp;0&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;1111&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;2222&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;pt2 -&gt; 2222 }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;pt3&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;-1&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;3333&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;4444&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"core/Semi\">;</a>&nbsp;pt3 -&gt; 3333 }T</span>\n    </p><p>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Code spread over more than 1 line</span> <br>\n    <span class=\"tt\">T{ &lt;TRUE&gt;&nbsp;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>[THEN]</strong> -&gt; 1&nbsp;2 }T</span><br>\n    <span class=\"tt\">T{ &lt;FALSE&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;2&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;4&nbsp;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>[THEN]</strong> -&gt; 3&nbsp;4 }T</span>\n    </p><p>\n    <a href=\"core/bs\">\\</a> <span class=\"rm\">Nested</span> <br>\n    <a href=\"core/Colon\">:</a> &lt;T&gt; &lt;TRUE&gt;  <a href=\"core/Semi\">;</a> <br>\n    <a href=\"core/Colon\">:</a> &lt;F&gt; &lt;FALSE&gt; <a href=\"core/Colon\">:</a> <br>\n    <span class=\"tt\">T{ &lt;T&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;T&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 1&nbsp;2 }T</span> <br>\n    <span class=\"tt\">T{ &lt;F&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;T&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 4 }T</span> <br>\n    <span class=\"tt\">T{ &lt;T&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;F&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 1&nbsp;3 }T</span> <br>\n    <span class=\"tt\">T{ &lt;F&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;1&nbsp;&lt;F&gt;&nbsp;<a href=\"tools/BracketIF\">[IF]</a>&nbsp;2&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;3&nbsp;<strong>[THEN]</strong>&nbsp;<a href=\"tools/BracketELSE\">[ELSE]</a>&nbsp;4&nbsp;<strong>[THEN]</strong> -&gt; 4 }T</span>\n    \n    </p></div>\n  </div>\t<!-- T.15 -->\n<h2 id=\"section.F.19\">F.19 The optional Search-Order word set</h2> <!-- T.16 -->\n\nThe search order is reset to a known state before the tests can be\nrun.\n<p>\n</p><div class=\"tt\">\n\n  <a href=\"search/ONLY\">ONLY</a> <a href=\"search/FORTH\">FORTH</a> <a href=\"search/DEFINITIONS\">DEFINITIONS</a>\n  \n  </div>\n<p>\nDefine two word list (wid) variables used by the tests.\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/VARIABLE\">VARIABLE</a> wid1 <br>\n  <a href=\"core/VARIABLE\">VARIABLE</a> wid2\n  \n  </div>\n<p>\nIn order to test the search order it in necessary to remember the\nexisting search order before modifying it.  The existing search order\nis saved and the <code>get-orderlist</code> defined to access it.\n</p><p>\n</p><div class=\"tt\">\n\n  <a href=\"core/Colon\">:</a> save-orderlist <a href=\"core/p\">(</a> widn ... wid1 n -- ) <br>\n  &nbsp;&nbsp; <a href=\"core/DUP\">DUP</a> <a href=\"core/Comma\">,</a> 0 <a href=\"core/qDO\">?DO</a> <a href=\"core/Comma\">,</a> <a href=\"core/LOOP\">LOOP</a> <br>\n  <a href=\"core/Semi\">;</a>\n  <p>\n  <a href=\"core/CREATE\">CREATE</a> order-list <br>\n  <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;save-orderlist -&gt;  }T</span>\n  </p><p>\n  <a href=\"core/Colon\">:</a> get-orderlist  ( -- widn ... wid1 n ) <br>\n  &nbsp;&nbsp; order-list <a href=\"core/DUP\">DUP</a> <a href=\"core/Fetch\">@</a> <a href=\"core/CELLS\">CELLS</a>\t&nbsp;&nbsp; ( -- ad n ) <br>\n  &nbsp;&nbsp; <a href=\"core/OVER\">OVER</a> <a href=\"core/Plus\">+</a>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( -- AD AD' ) <br>\n  &nbsp;&nbsp; <a href=\"core/qDO\">?DO</a> <a href=\"core/I\">I</a> <a href=\"core/Fetch\">@</a> -1 <a href=\"core/CELLS\">CELLS</a> <a href=\"core/PlusLOOP\">+LOOP</a> &nbsp;&nbsp;  ( -- ) <br>\n  <a href=\"core/Semi\">;</a>\n  \n  </p></div>\n<p>\nHaving obtained a copy of the current wordlist, the testing of the\nwordlist can begin with test <a href=\"testsuite#test:search:FORTH-WORDLIST\">F.16.6.1.1595 FORTH-WORDLIST</a> followed\nby <a href=\"testsuite#test:search:SET-ORDER\">F.16.6.1.2197 SET-ORDER</a> which also test <a href=\"search/GET-ORDER\">GET-ORDER</a>, then\n\n<a href=\"testsuite#test:search:ALSO\">F.16.6.2.0715 ALSO</a> and <a href=\"testsuite#test:search:ONLY\">F.16.6.2.1965 ONLY</a> before moving on to\n<a href=\"testsuite#test:search:SET-CURRENT\">F.16.6.1.2195 SET-CURRENT</a> which also test <a href=\"search/GET-CURRENT\">GET-CURRENT</a> and\n<a href=\"search/WORDLIST\">WORDLIST</a>.  This should be followed by the test\n\n<a href=\"testsuite#test:search:DEFINITIONS\">F.16.6.1.1180 DEFINITIONS</a> which also tests <a href=\"search/PREVIOUS\">PREVIOUS</a> and the\n<a href=\"testsuite#test:search:SEARCH-WORDLIST\">F.16.6.1.2192 SEARCH-WORDLIST</a> and <a href=\"testsuite#test:search:FIND\">F.16.6.1.1550 FIND</a> tests.\nFinally the <a href=\"testsuite#test:search:ORDER\">F.16.6.2.1985 ORDER</a> test can be performed.\n</p><p>\n\n</p><div class=\"wordHead\" id=\"test:search:DEFINITIONS\">\n  <div class=\"wordNumber\">F.16.6.1.1180</div>\n  <div class=\"wordName\">DEFINITIONS</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"search/ONLY\">ONLY</a>&nbsp;<a href=\"search/FORTH\">FORTH</a>&nbsp;<strong>DEFINITIONS</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/GET-CURRENT\">GET-CURRENT</a> -&gt; FORTH-WORDLIST }T</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;wid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/OnePlus\">1+</a>&nbsp;<a href=\"search/SET-ORDER\">SET-ORDER</a>&nbsp;<strong>DEFINITIONS</strong>&nbsp;<a href=\"search/GET-CURRENT\">GET-CURRENT</a><br>\n       -&gt; wid2&nbsp;<a href=\"core/Fetch\">@</a> }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist&nbsp;wid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/OnePlus\">1+</a> }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/PREVIOUS\">PREVIOUS</a>&nbsp;<a href=\"search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span> <br>\n      <span class=\"tt\">T{ <strong>DEFINITIONS</strong>&nbsp;<a href=\"search/GET-CURRENT\">GET-CURRENT</a> -&gt; FORTH-WORDLIST }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> alsowid2 <a href=\"search/ALSO\">ALSO</a> <a href=\"search/GET-ORDER\">GET-ORDER</a> wid2 <a href=\"core/Fetch\">@</a> <a href=\"core/ROT\">ROT</a> <a href=\"core/DROP\">DROP</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"search/SET-ORDER\">SET-ORDER</a> <a href=\"core/Semi\">;</a> <br>\n      alsowid2 <br>\n      <a href=\"core/Colon\">:</a> w1 1234 <a href=\"core/Semi\">;</a> <br>\n      <strong>DEFINITIONS</strong>\n      <a href=\"core/Colon\">:</a> w1 -9876 <a href=\"core/Semi\">;</a> <a href=\"core/IMMEDIATE\">IMMEDIATE</a>\n      </p><p>\n      <a href=\"search/ONLY\">ONLY</a> <a href=\"search/FORTH\">FORTH</a> <br>\n      <span class=\"tt\">T{ w1 -&gt; 1234 }T</span> <br>\n      <strong>DEFINITIONS</strong> <br>\n      <span class=\"tt\">T{ w1 -&gt; 1234 }T</span> <br>\n      alsowid2 <br>\n      <span class=\"tt\">T{ w1 -&gt; -9876 }T</span> <br>\n      <strong>DEFINITIONS</strong>\n      <span class=\"tt\">T{ w1 -&gt; -9876 }T</span>\n      </p><p>\n      <a href=\"search/ONLY\">ONLY</a> <a href=\"search/FORTH\">FORTH</a> <strong>DEFINITIONS</strong> <br>\n      <a href=\"core/Colon\">:</a> so5  <a href=\"core/DUP\">DUP</a> <a href=\"core/IF\">IF</a> <a href=\"core/SWAP\">SWAP</a> <a href=\"core/EXECUTE\">EXECUTE</a> <a href=\"core/THEN\">THEN</a> <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;w1\"&nbsp;wid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>&nbsp;so5 -&gt; -1&nbsp;&nbsp;1234 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;w1\"&nbsp;wid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<a href=\"search/SEARCH-WORDLIST\">SEARCH-WORDLIST</a>&nbsp;so5 -&gt; &nbsp;1&nbsp;-9876 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> c\"w1\" <a href=\"core/Cq\">C\"</a> w1\" <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ alsowid2&nbsp;c\"w1\"&nbsp;<a href=\"search/FIND\">FIND</a>&nbsp;so5 -&gt; &nbsp;1&nbsp;-9876 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/PREVIOUS\">PREVIOUS</a>&nbsp;c\"w1\"&nbsp;<a href=\"search/FIND\">FIND</a>&nbsp;so5 -&gt; -1&nbsp;&nbsp;1234 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:FIND\">\n  <div class=\"wordNumber\">F.16.6.1.1550</div>\n  <div class=\"wordName\">FIND</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> c\"dup\" <a href=\"core/Cq\">C\"</a> DUP\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c\".(\"  <a href=\"core/Cq\">C\"</a> .(\"  <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> c\"x\"   <a href=\"core/Cq\">C\"</a> unknown word\" <a href=\"core/Semi\">;</a>\n      <p>\n      <span class=\"tt\">T{ c\"dup\"&nbsp;<strong>FIND</strong> -&gt; xt&nbsp;&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ c\".(\"&nbsp;&nbsp;<strong>FIND</strong> -&gt; xti&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ c\"x\"&nbsp;&nbsp;&nbsp;<strong>FIND</strong> -&gt; c\"x\"&nbsp;&nbsp;&nbsp;0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:FORTH-WORDLIST\">\n  <div class=\"wordNumber\">F.16.6.1.1595</div>\n  <div class=\"wordName\">FORTH-WORDLIST</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>FORTH-WORDLIST</strong>&nbsp;wid1&nbsp;<a href=\"core/Store\">!</a> -&gt;  }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:SEARCH-WORDLIST\">\n  <div class=\"wordNumber\">F.16.6.1.2192</div>\n  <div class=\"wordName\">SEARCH-WORDLIST</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"search/ONLY\">ONLY</a> <a href=\"search/FORTH\">FORTH</a> <a href=\"search/DEFINITIONS\">DEFINITIONS</a> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> xt  <a href=\"core/Tick\">'</a> <a href=\"core/DUP\">DUP</a> xt  <a href=\"core/Store\">!</a> <br>\n      <a href=\"core/VARIABLE\">VARIABLE</a> xti <a href=\"core/Tick\">'</a> <a href=\"core/Dotp\">.(</a>  xti <a href=\"core/Store\">!</a> <a href=\"core/bs\">\\</a> <span class=\"rm\">Immediate word</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;DUP\"&nbsp;wid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>SEARCH-WORDLIST</strong> -&gt; xt&nbsp;&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;-1 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;.(\"&nbsp;&nbsp;wid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>SEARCH-WORDLIST</strong> -&gt; xti&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;&nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/Sq\">S\"</a>&nbsp;DUP\"&nbsp;wid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>SEARCH-WORDLIST</strong> -&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:SET-CURRENT\">\n  <div class=\"wordNumber\">F.16.6.1.2195</div>\n  <div class=\"wordName\">SET-CURRENT</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"search/GET-CURRENT\">GET-CURRENT</a> -&gt; wid1&nbsp;<a href=\"core/Fetch\">@</a> }T</span>\n    <p>\n    <span class=\"tt\">T{ <a href=\"search/WORDLIST\">WORDLIST</a>&nbsp;wid2&nbsp;<a href=\"core/Store\">!</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ wid2&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>SET-CURRENT</strong> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"search/GET-CURRENT\">GET-CURRENT</a> -&gt; wid2&nbsp;<a href=\"core/Fetch\">@</a> }T</span>\n    </p><p>\n    <span class=\"tt\">T{ wid1&nbsp;<a href=\"core/Fetch\">@</a>&nbsp;<strong>SET-CURRENT</strong> -&gt;  }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:SET-ORDER\">\n  <div class=\"wordNumber\">F.16.6.1.2197</div>\n  <div class=\"wordName\">SET-ORDER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;<a href=\"core/OVER\">OVER</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; <a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;wid1&nbsp;<a href=\"core/Fetch\">@</a> }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;<strong>SET-ORDER</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; get-orderlist }T</span> <!-- \\tab \\word{bs} \\textdf{Check nothing changed} \\\\ -->\n      <span class=\"tt\">T{ get-orderlist&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;get-orderList&nbsp;<a href=\"core/TwoTimes\">2*</a>&nbsp;<strong>SET-ORDER</strong> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;get-orderList&nbsp;<a href=\"core/TwoTimes\">2*</a> }T</span> <br>\n      <span class=\"tt\">T{ get-orderlist&nbsp;<strong>SET-ORDER</strong>&nbsp;<a href=\"search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span>\n      <p>\n      <a href=\"core/Colon\">:</a> so2a <a href=\"search/GET-ORDER\">GET-ORDER</a> get-orderlist <strong>SET-ORDER</strong> <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> so2 0 <strong>SET-ORDER</strong> so2a <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ so2 -&gt; 0 }T</span>\t&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">0 SET-ORDER leaves an empty search order</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> so3 -1 <strong>SET-ORDER</strong> so2a <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> so4 <a href=\"search/ONLY\">ONLY</a> so2a <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ so3 -&gt; so4 }T</span>\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">-1 SET-ORDER is the same as ONLY</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:ALSO\">\n  <div class=\"wordNumber\">F.16.6.2.0715</div>\n  <div class=\"wordName\">ALSO</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <strong>ALSO</strong>&nbsp;<a href=\"search/GET-ORDER\">GET-ORDER</a>&nbsp;<a href=\"search/ONLY\">ONLY</a> -&gt; get-orderlist&nbsp;<a href=\"core/OVER\">OVER</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;<a href=\"core/OnePlus\">1+</a> }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:ONLY\">\n  <div class=\"wordNumber\">F.16.6.2.1965</div>\n  <div class=\"wordName\">ONLY</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ <strong>ONLY</strong>&nbsp;<a href=\"search/FORTH\">FORTH</a>&nbsp;<a href=\"search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span>\n      <p>\n      <a href=\"core/Colon\">:</a> so1 <a href=\"search/SET-ORDER\">SET-ORDER</a> ; <a href=\"core/bs\">\\</a> <span class=\"rm\">In case it is unavailable in the forth wordlist</span>\n      </p><p>\n      <span class=\"tt\">T{ <strong>ONLY</strong>&nbsp;<a href=\"search/FORTH-WORDLIST\">FORTH-WORDLIST</a>&nbsp;1&nbsp;<a href=\"search/SET-ORDER\">SET-ORDER</a>&nbsp;get-orderlist&nbsp;so1 -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ <a href=\"search/GET-ORDER\">GET-ORDER</a> -&gt; get-orderlist }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:search:ORDER\">\n  <div class=\"wordNumber\">F.16.6.2.1985</div>\n  <div class=\"wordName\">ORDER</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/CR\">CR</a> <a href=\"core/Dotp\">.(</a> ONLY FORTH DEFINITIONS search order and compilation list) <a href=\"core/CR\">CR</a> <br>\n      <span class=\"tt\">T{ <a href=\"search/ONLY\">ONLY</a>&nbsp;<a href=\"search/FORTH\">FORTH</a>&nbsp;<a href=\"search/DEFINITIONS\">DEFINITIONS</a>&nbsp;<strong>ORDER</strong> -&gt;  }T</span>\n      <p>\n      <a href=\"core/CR\">CR</a> <a href=\"core/Dotp\">.(</a> Plus another unnamed wordlist at head of search order) <a href=\"core/CR\">CR</a> <br>\n      <span class=\"tt\">T{ alsowid2&nbsp;<a href=\"search/DEFINITIONS\">DEFINITIONS</a>&nbsp;<strong>ORDER</strong> -&gt;  }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n<p>\n</p><h2 id=\"section.F.20\">F.20 The optional String word set</h2> <!-- T.17 -->\n\nMost of the tests in this wordlist require a known string which is\ndefined as:\n<p>\n<span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s1&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;abcdefghijklmnopqrstuvwxyz\"&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n</p><p>\nThe tests should be carried out in the order:\n<a href=\"testsuite#test:string:/STRING\">F.17.6.1.0245 /STRING</a>,\n<a href=\"testsuite#test:string:SEARCH\">F.17.6.1.2191 SEARCH</a>, \n<a href=\"testsuite#test:string:-TRAILING\">F.17.6.1.0170 -TRAILING</a>,\n<a href=\"testsuite#test:string:COMPARE\">F.17.6.1.0935 COMPARE</a>,\n<a href=\"testsuite#test:string:BLANK\">F.17.6.1.0780 BLANK</a> and \n<a href=\"testsuite#test:string:SLITERAL\">F.17.6.1.2212 SLITERAL</a>.\n</p><p>\n\n</p><div class=\"wordHead\" id=\"test:string:-TRAILING\">\n  <div class=\"wordNumber\">F.17.6.1.0170</div>\n  <div class=\"wordName\">-TRAILING</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;&nbsp;s8&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;abc&nbsp;&nbsp;\"&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;&nbsp;s9&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s10&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;\"&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n    <p>\n    <span class=\"tt\">T{ &nbsp;s1&nbsp;<strong>-TRAILING</strong> -&gt; s1 }T</span>\t\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> \"<code>abcdefghijklmnopqrstuvwxyz</code>\" <br>\n    <span class=\"tt\">T{ &nbsp;s8&nbsp;<strong>-TRAILING</strong> -&gt; s8&nbsp;2&nbsp;- }T</span> \t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> \"<code>abc  </code>\" <br>\n    <span class=\"tt\">T{ &nbsp;s7&nbsp;<strong>-TRAILING</strong> -&gt; s7 }T</span>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> \"<code> </code>\" <br>\n    <span class=\"tt\">T{ &nbsp;s9&nbsp;<strong>-TRAILING</strong> -&gt; s9&nbsp;<a href=\"core/DROP\">DROP</a>&nbsp;0 }T</span>\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> \"<code>     </code>\" <br>\n    <span class=\"tt\">T{ s10&nbsp;<strong>-TRAILING</strong> -&gt; s10&nbsp;1- }T</span>\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> \"<code>   a </code>\"\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:/STRING\">\n  <div class=\"wordNumber\">F.17.6.1.0245</div>\n  <div class=\"wordName\">/STRING</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ s1&nbsp;&nbsp;5&nbsp;<strong>/STRING</strong> -&gt; s1&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;5&nbsp;<a href=\"core/Plus\">+</a>&nbsp;<a href=\"core/SWAP\">SWAP</a>&nbsp;5&nbsp;<a href=\"core/Minus\">-</a> }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;10&nbsp;<strong>/STRING</strong>&nbsp;-4&nbsp;<strong>/STRING</strong> -&gt; s1&nbsp;6&nbsp;<strong>/STRING</strong> }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;&nbsp;0&nbsp;<strong>/STRING</strong> -&gt; s1 }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:BLANK\">\n  <div class=\"wordNumber\">F.17.6.1.0780</div>\n  <div class=\"wordName\">BLANK</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<a href=\"core/Colon\">:</a> s13 <a href=\"core/Sq\">S\"</a> aaaaa      a\" <a href=\"core/Semi\">;</a>\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Six spaces</span>\n      <p>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;25&nbsp;<a href=\"core/CHAR\">CHAR</a>&nbsp;a&nbsp;<a href=\"core/FILL\">FILL</a> -&gt;  }T</span>\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Fill PAD with 25 'a's</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;5&nbsp;<a href=\"core/CHARS\">CHARS</a>&nbsp;<a href=\"core/Plus\">+</a>&nbsp;6&nbsp;<strong>BLANK</strong> -&gt;  }T</span>\t&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Put 6 spaced from character 5</span> <br>\n      <span class=\"tt\">T{ <a href=\"core/PAD\">PAD</a>&nbsp;12&nbsp;s13&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span>\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">PAD Should now be same as s13</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:COMPARE\">\n  <div class=\"wordNumber\">F.17.6.1.0935</div>\n  <div class=\"wordName\">COMPARE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n<span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;0&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;PAD&nbsp;SWAP&nbsp;<a href=\"string/CMOVE\">CMOVE</a>&nbsp;&nbsp; -&gt; &nbsp;&nbsp;&nbsp; }T</span> &nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Copy s1 to PAD</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;PAD&nbsp;OVER&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;0&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PAD&nbsp;6&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ PAD&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; -1&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PAD&nbsp;0&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ PAD&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; -1&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s6&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1&nbsp; }T</span> <br>\n      <span class=\"tt\">T{ s6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s1&nbsp;<strong>COMPARE</strong> -&gt; -1&nbsp; }T</span>\n      <p>\n      <a href=\"core/Colon\">:</a> \"abdde\"  <a href=\"core/Sq\">S\"</a> abdde\"  <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> \"abbde\"  <a href=\"core/Sq\">S\"</a> abbde\"  <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> \"abcdf\"  <a href=\"core/Sq\">S\"</a> abcdf\"  <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> \"abcdee\" <a href=\"core/Sq\">S\"</a> abcdee\" <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ s1&nbsp;\"abdde\"&nbsp;&nbsp;<strong>COMPARE</strong> -&gt; -1 }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;\"abbde\"&nbsp;&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;\"abcdf\"&nbsp;&nbsp;<strong>COMPARE</strong> -&gt; -1 }T</span> <br>\n      <span class=\"tt\">T{ s1&nbsp;\"abcdee\"&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1 }T</span>\n      </p><p>\n      <a href=\"core/Colon\">:</a> s11 <a href=\"core/Sq\">S\"</a> 0abc\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> s12 <a href=\"core/Sq\">S\"</a> 0aBc\" <a href=\"core/Semi\">;</a>\n      </p><p>\n      <span class=\"tt\">T{ s11&nbsp;s12&nbsp;<strong>COMPARE</strong> -&gt; &nbsp;1 }T</span> <br>\n      <span class=\"tt\">T{ s12&nbsp;s11&nbsp;<strong>COMPARE</strong> -&gt; -1 }T</span>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:SEARCH\">\n  <div class=\"wordNumber\">F.17.6.1.2191</div>\n  <div class=\"wordName\">SEARCH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s2&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;abc\"&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s3&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;jklmn\"&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s4&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;z\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s5&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;mnoq\"&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s6&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;12345\"&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s7&nbsp;<a href=\"core/Sq\">S\"</a>&nbsp;\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span>\n    <p>\n    <span class=\"tt\">T{ s1&nbsp;s2&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s3&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&nbsp;9&nbsp;<a href=\"string/DivSTRING\">/STRING</a>&nbsp;&lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s4&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;25&nbsp;<a href=\"string/DivSTRING\">/STRING</a>&nbsp;&lt;TRUE&gt;&nbsp; }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s5&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s6&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;FALSE&gt; }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s7&nbsp;<strong>SEARCH</strong> -&gt; s1&nbsp;&lt;TRUE&gt;&nbsp; }T</span>\n    \n    </p></div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:SLITERAL\">\n  <div class=\"wordNumber\">F.17.6.1.2212</div>\n  <div class=\"wordName\">SLITERAL</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ <a href=\"core/Colon\">:</a>&nbsp;s14&nbsp;<a href=\"core/Bracket\">[</a>&nbsp;s1&nbsp;<a href=\"right-bracket\">]</a>&nbsp;<strong>SLITERAL</strong>&nbsp;<a href=\"core/Semi\">;</a> -&gt;  }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s14&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span> <br>\n    <span class=\"tt\">T{ s1&nbsp;s14&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/Equal\">=</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/Equal\">=</a> -&gt; &lt;TRUE&gt;&nbsp;&lt;FALSE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:SUBSTITUTE\">\n  <div class=\"wordNumber\">F.17.6.2.2255</div>\n  <div class=\"wordName\">SUBSTITUTE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n        <div class=\"tt\">\n30 <a href=\"core/CHARS\">CHARS</a> <a href=\"core/BUFFERColon\">BUFFER:</a> subbuff <a href=\"core/bs\">\\</a> <span class=\"rm\">Destination buffer</span>\n      <p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Define a few string constants</span> <br>\n      <a href=\"core/Colon\">:</a> \"hi\"    <a href=\"core/Sq\">S\"</a> hi\"    <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> \"wld\"   <a href=\"core/Sq\">S\"</a> wld\"   <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> \"hello\" <a href=\"core/Sq\">S\"</a> hello\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> \"world\" <a href=\"core/Sq\">S\"</a> world\" <a href=\"core/Semi\">;</a>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Define a few test strings</span> <br>\n      <a href=\"core/Colon\">:</a> sub1 <a href=\"core/Sq\">S\"</a> Start: %hi%,%wld%! :End\" ; &nbsp;&nbsp;&nbsp;<a href=\"core/bs\">\\</a> <span class=\"rm\">Original string</span> <br>\n      <a href=\"core/Colon\">:</a> sub2 <a href=\"core/Sq\">S\"</a> Start: hello,world! :End\" ;    &nbsp;&nbsp;<a href=\"core/bs\">\\</a> <span class=\"rm\">First target string</span> <br>\n      <a href=\"core/Colon\">:</a> sub3 <a href=\"core/Sq\">S\"</a> Start: world,hello! :End\" ;    &nbsp;&nbsp;<a href=\"core/bs\">\\</a> <span class=\"rm\">Second target string</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Define the <code>hi</code> and <code>wld</code> substitutions</span> <br>\n      <span class=\"tt\">T{ \"hello\"&nbsp;\"hi\"&nbsp;&nbsp;<a href=\"string/REPLACES\">REPLACES</a> -&gt;  }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Replace \"<code>%hi%</code>\"  with \"<code>hello</code>\"</span> <br>\n      <span class=\"tt\">T{ \"world\"&nbsp;\"wld\"&nbsp;<a href=\"string/REPLACES\">REPLACES</a> -&gt;  }T</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href=\"core/bs\">\\</a> <span class=\"rm\">Replace \"<code>%wld%</code>\" with \"<code>world</code>\"</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">\"<code>%hi%,%wld%</code>\" changed to \"<code>hello,world</code>\"</span> <br>\n      <span class=\"tt\">T{ sub1&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;sub2&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 2&nbsp;0 }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Change the <code>hi</code> and <code>wld</code> substitutions</span> <br>\n      <span class=\"tt\">T{ \"world\"&nbsp;\"hi\"&nbsp;&nbsp;<a href=\"string/REPLACES\">REPLACES</a> -&gt;  }T</span> <br>\n      <span class=\"tt\">T{ \"hello\"&nbsp;\"wld\"&nbsp;<a href=\"string/REPLACES\">REPLACES</a> -&gt;  }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Now \"<code>%hi%,%wld%</code>\" should be changed to \"<code>world,hello</code>\"</span> <br>\n      <span class=\"tt\">T{ sub1&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;sub3&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 2&nbsp;0 }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Where the subsitution name is not defined</span> <br>\n      <a href=\"core/Colon\">:</a> sub4 <a href=\"core/Sq\">S\"</a> aaa%bbb%ccc\" ; <br>\n      <span class=\"tt\">T{ sub4&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;sub4&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0&nbsp;0 }T</span>\n      </p><p>\n      <a href=\"core/bs\">\\</a> <span class=\"rm\">Finally the <code>%</code> character itself</span> <br>\n      <a href=\"core/Colon\">:</a> sub5 <a href=\"core/Sq\">S\"</a> aaa%%bbb\" <a href=\"core/Semi\">;</a> <br>\n      <a href=\"core/Colon\">:</a> sub6 <a href=\"core/Sq\">S\"</a> aaa%bbb\" <a href=\"core/Semi\">;</a> <br>\n      <span class=\"tt\">T{ sub5&nbsp;subbuff&nbsp;30&nbsp;<strong>SUBSTITUTE</strong>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;<a href=\"core/ROT\">ROT</a>&nbsp;sub6&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0&nbsp;0 }T</span> <br>\n      \n      </p></div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:string:UNESCAPE\">\n  <div class=\"wordNumber\">F.17.6.2.2375</div>\n  <div class=\"wordName\">UNESCAPE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    Using <code>subbuff</code>, <code>sub5</code> and <code>sub6</code> from <a href=\"testsuite#test:string:SUBSTITUTE\">F.17.6.2.2255 SUBSTITUTE</a>.\n    <p>\n    <span class=\"tt\">T{ sub6&nbsp;subbuff&nbsp;<strong>UNESCAPE</strong>&nbsp;sub5&nbsp;<a href=\"string/COMPARE\">COMPARE</a> -&gt; 0 }T</span>\n    \n    </p></div>\n  </div>\n<p>\n</p><h2 id=\"section.F.21\">F.21 The optional Extended Character word set</h2> <!-- T.18 -->\n\nThese test assume the UTF-8 character encoding is being used.\n<p>\n\n</p><div class=\"wordHead\" id=\"test:xchar:XC!+q\">\n  <div class=\"wordNumber\">F.18.6.1.2487.15</div>\n  <div class=\"wordName\">XC!+?</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ $ffff&nbsp;<a href=\"core/PAD\">PAD</a>&nbsp;4&nbsp;<strong>XC!+?</strong> -&gt; <a href=\"core/PAD\">PAD</a>&nbsp;3&nbsp;<a href=\"core/Plus\">+</a>&nbsp;1&nbsp;&lt;TRUE&gt; }T</span>\n    \n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:xchar:XC-SIZE\">\n  <div class=\"wordNumber\">F.18.6.1.2487.25</div>\n  <div class=\"wordName\">XC-SIZE</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    This test assumes UTF-8 encoding is being used.\n    <p>\n        </p><div class=\"tt\">\n<a href=\"core/HEX\">HEX</a> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;<strong>XC-SIZE</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;7f&nbsp;<strong>XC-SIZE</strong> -&gt; 1 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;<strong>XC-SIZE</strong> -&gt; 2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;7ff&nbsp;<strong>XC-SIZE</strong> -&gt; 2 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;&nbsp;800&nbsp;<strong>XC-SIZE</strong> -&gt; 3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;&nbsp;ffff&nbsp;<strong>XC-SIZE</strong> -&gt; 3 }T</span> <br>\n      <span class=\"tt\">T{ &nbsp;10000&nbsp;<strong>XC-SIZE</strong> -&gt; 4 }T</span> <br>\n      <span class=\"tt\">T{ 1fffff&nbsp;<strong>XC-SIZE</strong> -&gt; 4 }T</span>\n      \n      </div>\n    </div>\n  </div>\n\n<div class=\"wordHead\" id=\"test:xchar:XC-WIDTH\">\n  <div class=\"wordNumber\">F.18.6.2.2487.30</div>\n  <div class=\"wordName\">XC-WIDTH</div>\n</div>\n<div class=\"wordBody\">\n  <div class=\"testing\">\n\n    <span class=\"tt\">T{ $606D&nbsp;<strong>XC-WIDTH</strong> -&gt; 2 }T</span> <br>\n    <span class=\"tt\">T{ &nbsp;&nbsp;$41&nbsp;<strong>XC-WIDTH</strong> -&gt; 1 }T</span> <br>\n    <span class=\"tt\">T{ $2060&nbsp;<strong>XC-WIDTH</strong> -&gt; 0 }T</span>\n    \n    </div>\n  </div>\n<p>\n\n</p></div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Test Suite</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\" class=\"current\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" class=\"scroll-bar\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.F.1\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.2\">Test Harness</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.3\">Core Tests</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.6\">The Core word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.7\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.8\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.9\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.10\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.11\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.12\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.13\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.14\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.15\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.16\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.17\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.18\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.19\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.20\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"#section.F.21\">Extended Character word set</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "tools": {
            "basename": "tools",
            "name": "15 The optional Programming-Tools word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.15\">15 The optional Programming-Tools word set</h1> <!-- 15 -->\n<h2 id=\"section.15.1\">15.1 Introduction</h2> <!-- 15.1 -->\nThis optional word set contains words most often used during the\ndevelopment of applications.\n<p>\n</p><h2 id=\"section.15.2\">15.2 Additional terms and notation</h2> <!-- 15.2 -->\nNone.\n<p>\n</p><h2 id=\"section.15.3\">15.3 Additional usage requirements</h2> <!-- 15.3 -->\n<h3 id=\"subsection.15.3.1\">15.3.1 Data types</h3> <!-- 15.3.1 -->\n<a name=\"tools:datatype\"></a>\n<p>\nA name token is a single-cell value that identifies a named word.\n</p><p>\nAppend table <a href=\"tools#tools:types\">15.1</a> to table <a href=\"usage#table:datatypes\">3.1</a>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 15.1: Data types</div>\n  <a name=\"tools:types\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em> </td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>nt</em>\t</td><td>name token </td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\nSee: <strong><a href=\"rationale#rat:tools:nt\">A.15.3.1 Name tokens</a></strong>.\n<p>\n</p><h3 id=\"subsection.15.3.2\">15.3.2 The Forth dictionary</h3> <!-- 15.3.2 -->\n<a name=\"tools:dict\"></a>\n<p>\nA program using the words <a href=\"tools/CODE\">CODE</a> or <a href=\"tools/SemiCODE\">;CODE</a> associated\nwith assembler code has an environmental dependency on that\nparticular instruction set and assembler notation.\n</p><p>\nPrograms using the words <a href=\"tools/EDITOR\">EDITOR</a> or <a href=\"tools/ASSEMBLER\">ASSEMBLER</a> require\nthe Search Order word set or an equivalent implementation-defined\ncapability.\n</p><p>\nSee: <strong><a href=\"usage#usage:dict\">3.3 The Forth dictionary</a></strong>.\n</p><p>\n</p><h2 id=\"section.15.4\">15.4 Additional documentation requirements</h2> <!-- 15.4 -->\n<h3 id=\"subsection.15.4.1\">15.4.1 System documentation</h3> <!-- 15.4.1 -->\n<h4 id=\"subsubsection.15.4.1.1\">15.4.1.1 Implementation-defined options</h4> <!-- 15.4.1.1 -->\n<ul>\n<li> ending sequence for input following\n<a href=\"tools/SemiCODE\">15.6.2.0470 ;CODE</a> and\n<a href=\"tools/CODE\">15.6.2.0930 CODE</a>;\n</li>\n<li> manner of processing input following\n<a href=\"tools/SemiCODE\">15.6.2.0470 ;CODE</a> and\n<a href=\"tools/CODE\">15.6.2.0930 CODE</a>;\n</li>\n<li> search-order capability for\n<a href=\"tools/EDITOR\">15.6.2.1300 EDITOR</a> and\n<a href=\"tools/ASSEMBLER\">15.6.2.0740 ASSEMBLER</a>\n(<strong><a href=\"tools#tools:dict\">15.3.2 The Forth dictionary</a></strong>);\n</li>\n<li> source and format of display by <a href=\"tools/SEE\">15.6.1.2194 SEE</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.15.4.1.2\">15.4.1.2 Ambiguous conditions</h4> <!-- 15.4.1.2 -->\n<a name=\"tools:ambiguous\"></a>\n<p>\n</p><ul>\n<li> deleting the compilation word-list (<a href=\"tools/FORGET\">15.6.2.1580 FORGET</a>);\n</li>\n<li> fewer than <em>u+1</em> items on control-flow stack\n(<a href=\"tools/CS-PICK\">15.6.2.1015 CS-PICK</a>,\n<a href=\"tools/CS-ROLL\">15.6.2.1020 CS-ROLL</a>);\n</li>\n<li> <em>name</em> can't be found (<a href=\"tools/FORGET\">15.6.2.1580 FORGET</a>, <a href=\"tools/SYNONYM\">15.6.2.2264 SYNONYM</a>);\n</li>\n<li> <em>name</em> not defined via <a href=\"core/CREATE\">6.1.1000 CREATE</a>\n(<a href=\"tools/SemiCODE\">15.6.2.0470 ;CODE</a>);\n</li>\n<li> <a href=\"core/POSTPONE\">6.1.2033 POSTPONE</a> applied to <a href=\"tools/BracketIF\">15.6.2.2532 [IF]</a>;\n</li>\n<li> reaching the end of the input source before matching\n<a href=\"tools/BracketELSE\">15.6.2.2531 [ELSE]</a> or <a href=\"tools/BracketTHEN\">15.6.2.2533 [THEN]</a>\n(<a href=\"tools/BracketIF\">15.6.2.2532 [IF]</a>);\n</li>\n<li> removing a needed definition (<a href=\"tools/FORGET\">15.6.2.1580 FORGET</a>);\n</li>\n<li> <a href=\"core/IMMEDIATE\">6.1.1710 IMMEDIATE</a> is applied to a word defined by <a href=\"tools/SYNONYM\">15.6.2.2264 SYNONYM</a>;\n</li>\n<li> <a href=\"tools/NRfrom\">15.6.2.1940 NR&gt;</a> is used with data not stored by <a href=\"tools/NtoR\">15.6.2.1908 N&gt;R</a>;\n</li>\n<li> adding to or deleting from the wordlist during the execution of\n<a href=\"tools/TRAVERSE-WORDLIST\">15.6.2.2297 TRAVERSE-WORDLIST</a>\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.15.4.1.3\">15.4.1.3 Other system documentation</h4> <!-- 15.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.15.4.2\">15.4.2 Program documentation</h3> <!-- 15.4.2 -->\n<h4 id=\"subsubsection.15.4.2.1\">15.4.2.1 Environmental dependencies</h4> <!-- 15.4.2.1 -->\n<ul>\n<li> using the words <a href=\"tools/SemiCODE\">15.6.2.0470 ;CODE</a> or\n<a href=\"tools/CODE\">15.6.2.0930 CODE</a>.\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.15.4.2.2\">15.4.2.2 Other program documentation</h4> <!-- 15.4.2.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.15.5\">15.5 Compliance and labeling</h2> <!-- 15.5 -->\n\n<h3 id=\"subsection.15.5.1\">15.5.1 Forth-2012 systems</h3> <!-- 15.5.1 -->\nThe phrase \"Providing the Programming-Tools word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Programming-Tools word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Programming-Tools\nExtensions word set\" shall be appended to the label of any Standard\nSystem that provides portions of the Programming-Tools Extensions\nword set.\n</p><p>\nThe phrase \"Providing the Programming-Tools Extensions word set\"\nshall be appended to the label of any Standard System that provides\nall of the Programming-Tools and Programming-Tools Extensions word\nsets.\n</p><p>\n</p><h3 id=\"subsection.15.5.2\">15.5.2 Forth-2012 programs</h3> <!-- 15.5.2 -->\nThe phrase \"Requiring the Programming-Tools word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide the Programming-Tools word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Programming-Tools\nExtensions word set\" shall be appended to the label of Standard\nPrograms that require the system to provide portions of the\nProgramming-Tools Extensions word set.\n</p><p>\nThe phrase \"Requiring the Programming-Tools Extensions word set\"\nshall be appended to the label of Standard Programs that require the\nsystem to provide all of the Programming-Tools and Programming-Tools\nExtensions word sets.\n</p><p>\n</p><h2 id=\"section.15.6\">15.6 Glossary</h2> <!-- 15.6 -->\n<h3 id=\"subsection.15.6.1\">15.6.1 Programming-Tools words</h3> <!-- 15.6.1 -->\n<ul>\n<li><a href=\"tools/DotS\">15.6.1.0220 .S</a></li>\n<li><a href=\"tools/q\">15.6.1.0600 ?</a></li>\n<li><a href=\"tools/DUMP\">15.6.1.1280 DUMP</a></li>\n<li><a href=\"tools/SEE\">15.6.1.2194 SEE</a></li>\n<li><a href=\"tools/WORDS\">15.6.1.2465 WORDS</a></li>\n</ul>\n<h3 id=\"subsection.15.6.2\">15.6.2 Programming-Tools extension words</h3> <!-- 15.6.2 -->\n<ul>\n<li><a href=\"tools/SemiCODE\">15.6.2.0470 ;CODE</a></li>\n<li><a href=\"tools/AHEAD\">15.6.2.0702 AHEAD</a></li>\n\n<li><a href=\"tools/ASSEMBLER\">15.6.2.0740 ASSEMBLER</a></li>\n\n<li><a href=\"tools/BYE\">15.6.2.0830 BYE</a></li>\n\n\n<li><a href=\"tools/CODE\">15.6.2.0930 CODE</a></li>\n<li><a href=\"tools/CS-PICK\">15.6.2.1015 CS-PICK</a></li>\n<li><a href=\"tools/CS-ROLL\">15.6.2.1020 CS-ROLL</a></li>\n<li><a href=\"tools/EDITOR\">15.6.2.1300 EDITOR</a></li>\n<li><a href=\"tools/FORGET\">15.6.2.1580 FORGET</a></li>\n\n<li><a href=\"tools/NtoR\">15.6.2.1908 N&gt;R</a></li>\n\n<li><a href=\"tools/NAMEtoCOMPILE\">15.6.2.1909.10 NAME&gt;COMPILE</a></li>\n\n\n<li><a href=\"tools/NAMEtoINTERPRET\">15.6.2.1909.20 NAME&gt;INTERPRET</a></li>\n\n<li><a href=\"tools/NAMEtoSTRING\">15.6.2.1909.40 NAME&gt;STRING</a></li>\n<li><a href=\"tools/NRfrom\">15.6.2.1940 NR&gt;</a></li>\n<li><a href=\"tools/STATE\">15.6.2.2250 STATE</a></li>\n\n<li><a href=\"tools/SYNONYM\">15.6.2.2264 SYNONYM</a></li>\n<li><a href=\"tools/TRAVERSE-WORDLIST\">15.6.2.2297 TRAVERSE-WORDLIST</a></li>\n<li><a href=\"tools/BracketDEFINED\">15.6.2.2530.30 [DEFINED]</a></li>\n<li><a href=\"tools/BracketELSE\">15.6.2.2531 [ELSE]</a></li>\n<li><a href=\"tools/BracketIF\">15.6.2.2532 [IF]</a></li>\n<li><a href=\"tools/BracketTHEN\">15.6.2.2533 [THEN]</a></li>\n<li><a href=\"tools/BracketUNDEFINED\">15.6.2.2534 [UNDEFINED]</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Programming-Tools word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\" class=\"current\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.15.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.15.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.15.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.15.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.15.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.15.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">.S</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"tools/DotS\">.S</a></li>\n        <li role=\"menuitem\"><a href=\"tools/q\">?</a></li>\n        <li role=\"menuitem\"><a href=\"tools/DUMP\">DUMP</a></li>\n        <li role=\"menuitem\"><a href=\"tools/SEE\">SEE</a></li>\n        <li role=\"menuitem\"><a href=\"tools/WORDS\">WORDS</a></li>\n        <li role=\"menuitem\"><a href=\"tools/SemiCODE\">;CODE</a></li>\n        <li role=\"menuitem\"><a href=\"tools/AHEAD\">AHEAD</a></li>\n        <li role=\"menuitem\"><a href=\"tools/ASSEMBLER\">ASSEMBLER</a></li>\n        <li role=\"menuitem\"><a href=\"tools/BYE\">BYE</a></li>\n        <li role=\"menuitem\"><a href=\"tools/CODE\">CODE</a></li>\n        <li role=\"menuitem\"><a href=\"tools/CS-PICK\">CS-PICK</a></li>\n        <li role=\"menuitem\"><a href=\"tools/CS-ROLL\">CS-ROLL</a></li>\n        <li role=\"menuitem\"><a href=\"tools/EDITOR\">EDITOR</a></li>\n        <li role=\"menuitem\"><a href=\"tools/FORGET\">FORGET</a></li>\n        <li role=\"menuitem\"><a href=\"tools/NtoR\">N&gt;R</a></li>\n        <li role=\"menuitem\"><a href=\"tools/NAMEtoCOMPILE\">NAME&gt;COMPILE</a></li>\n        <li role=\"menuitem\"><a href=\"tools/NAMEtoINTERPRET\">NAME&gt;INTERPRET</a></li>\n        <li role=\"menuitem\"><a href=\"tools/NAMEtoSTRING\">NAME&gt;STRING</a></li>\n        <li role=\"menuitem\"><a href=\"tools/NRfrom\">NR&gt;</a></li>\n        <li role=\"menuitem\"><a href=\"tools/STATE\">STATE</a></li>\n        <li role=\"menuitem\"><a href=\"tools/SYNONYM\">SYNONYM</a></li>\n        <li role=\"menuitem\"><a href=\"tools/TRAVERSE-WORDLIST\">TRAVERSE-WORDLIST</a></li>\n        <li role=\"menuitem\"><a href=\"tools/BracketDEFINED\">[DEFINED]</a></li>\n        <li role=\"menuitem\"><a href=\"tools/BracketELSE\">[ELSE]</a></li>\n        <li role=\"menuitem\"><a href=\"tools/BracketIF\">[IF]</a></li>\n        <li role=\"menuitem\"><a href=\"tools/BracketTHEN\">[THEN]</a></li>\n        <li role=\"menuitem\"><a href=\"tools/BracketUNDEFINED\">[UNDEFINED]</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "usage": {
            "basename": "usage",
            "name": "3 Usage requirements",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.3\">3 Usage requirements</h1>\n<a name=\"usage\"></a>\n<p>\nA system shall provide all of the words defined in\n<strong><a href=\"core#wordlist:core\">6.1 Core words</a></strong>. It may also provide any\nwords defined in the optional word sets and extensions word\nsets. No standard word provided by a system shall alter the\nsystem state in a way that changes the effect of execution of\nany other standard word except as provided in this standard.\nA system may contain non-standard extensions, provided that\nthey are consistent with the requirements of this standard.\n</p><p>\nThe implementation of a system may use words and techniques\noutside the scope of this standard.\n</p><p>\nA system need not provide all words in executable form. The\nimplementation may provide definitions, including definitions\nof words in the Core word set, in source form only. If so,\nthe mechanism for adding the definitions to the dictionary\nis implementation defined.\n</p><p>\nA program that requires a system to provide words or techniques\nnot defined in this standard has an environmental dependency.\n</p><p>\n</p><h2 id=\"section.3.1\">3.1 Data types</h2> <!-- 3.1 -->\n<a name=\"usage:data\"></a>\n<p>\nA data type identifies the set of permissible values for a\ndata object. It is not a property of a particular storage\nlocation or position on a stack. Moving a data object shall\nnot affect its type.\n</p><p>\nNo data-type checking is required of a system. An ambiguous\ncondition exists if an incorrectly typed data object is\nencountered.\n</p><p>\nTable <a href=\"usage#table:datatypes\">3.1</a> summarizes the data types used\nthroughout this standard. Multiple instances of the same\ntype in the description of a definition are suffixed with\na sequence digit subscript to distinguish them.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 3.1: Data types</div>\n  <a name=\"table:datatypes\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em> </td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>flag</em>\t\t</td><td>flag\t\t\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>true</em>\t\t</td><td>true flag\t\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>false</em>\t\t</td><td>false flag\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>char</em>\t\t</td><td>character\t\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>n</em>\t\t\t</td><td>signed number\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>+n</em>\t\t\t</td><td>non-negative number\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>u</em>\t\t\t</td><td>unsigned number\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>u | n</em><sup>[1]</sup>\n  </td><td>number\t\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>x</em>\t\t\t</td><td>unspecified cell\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>xt</em>\t\t\t</td><td>execution token\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>addr</em>\t\t</td><td>address\t\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>a-addr</em>\t\t</td><td>aligned address\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>c-addr</em>\t\t</td><td>character-aligned address\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>ior</em>\t\t\t</td><td>error result\t\t\t\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>d</em>\t\t\t</td><td>double-cell signed number\t\t\t</td><td class=\"r\">2 cells </td></tr>\n  <tr valign=\"top\"><td><em>+d</em>\t\t\t</td><td>double-cell non-negative number\t</td><td class=\"r\">2 cells </td></tr>\n  <tr valign=\"top\"><td><em>ud</em>\t\t\t</td><td>double-cell unsigned number\t\t</td><td class=\"r\">2 cells </td></tr>\n  <tr valign=\"top\"><td><em>d | ud</em><sup>[2]</sup>\n  </td><td>double-cell number\t\t\t\t</td><td class=\"r\">2 cells </td></tr>\n  <tr valign=\"top\"><td><em>xd</em>\t\t\t</td><td>unspecified cell pair\t\t\t\t</td><td class=\"r\">2 cells </td></tr>\n  <tr valign=\"top\"><td><em>colon-sys</em>\t</td><td>definition compilation\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>do-sys</em>\t\t</td><td>do-loop structures\t\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>case-sys</em>\t</td><td><a href=\"core/CASE\">CASE</a> structures\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>of-sys</em>\t\t</td><td><a href=\"core/OF\">OF</a> structures\t\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>orig</em>\t\t</td><td>control-flow origins\t\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>dest</em>\t\t</td><td>control-flow destinations\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>loop-sys</em>\t</td><td>loop-control parameters\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>nest-sys</em>\t</td><td>definition cells\t\t\t\t\t</td><td class=\"r\">implementation dependent </td></tr>\n  <tr valign=\"top\"><td><em>i * x, j * x, k * x</em><sup>[3]</sup>\n  </td><td>any data type\t\t\t\t\t\t</td><td class=\"r\">0 or more cells </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  <p>\n  </p><table class=\"center\">\n  <tbody><tr valign=\"top\"><td><sup>[1]</sup> </td><td style=\"width: 40em\">May be either a signed number or an unsigned number\n  depending on context. </td></tr>\n  <tr valign=\"top\"><td><sup>[2]</sup> </td><td style=\"width: 40em\">May be either a double-cell signed number or a double-cell\n  unsigned number depending on context.</td></tr>\n  <tr valign=\"top\"><td><sup>[3]</sup> </td><td style=\"width: 40em\">May be an undetermined number of stack entries of\n  unspecified type. For examples of use, see\n  <a href=\"core/EXECUTE\">6.1.1370 EXECUTE</a>, <a href=\"core/QUIT\">6.1.2050 QUIT</a>.\n  </td></tr></tbody></table>\n  \n  </div>\n<h3 id=\"subsection.3.1.1\">3.1.1 Data-type relationships</h3> <!-- 3.1.1 -->\n<a name=\"usage:type\"></a>\n<p>\nSome of the data types are subtypes of other data types. A data\ntype <em>i</em> is a subtype of type <em>j</em> if and only if the\nmembers of <em>i</em> are a subset of the members of <em>j</em>. The\nfollowing list represents the subtype relationships using the\nphrase \"<em>i</em> <em>⇒</em> <em>j</em>\" to denote \"<em>i</em>\nis a subtype of <em>j</em>\". The subtype relationship is transitive;\nif <em>i</em> <em>⇒</em> <em>j</em> and <em>j</em> <em>⇒</em>\n<em>k</em> then <em>i</em> <em>⇒</em> <em>k</em>:\n</p><p>\n</p><div class=\"quote\">\n\n  <em>+n</em> <em>⇒</em> <em>u</em> <em>⇒</em> <em>x</em>; <br>\n  <em>+n</em> <em>⇒</em> <em>n</em> <em>⇒</em> <em>x</em>; <br>\n  <em>char</em> <em>⇒</em> <em>+n</em>; <br>\n  <em>a-addr</em> <em>⇒</em> <em>c-addr</em>\n  <em>⇒</em> <em>addr</em>\n  <em>⇒</em> <em>u</em>; <br>\n  <em>flag</em> <em>⇒</em> <em>x</em>; <br>\n  <em>xt</em> <em>⇒</em> <em>x</em>; <br>\n  <em>ior</em> <em>⇒</em> <em>n</em> <em>⇒</em> <em>x</em>; <br>\n  <em>+d</em> <em>⇒</em> <em>d</em> <em>⇒</em> <em>xd</em>; <br>\n  <em>+d</em> <em>⇒</em> <em>ud</em> <em>⇒</em> <em>xd</em>.\n  \n  </div>\n<p>\nAny Forth definition that accepts an argument of type <em>i</em>\nshall also accept an argument that is a subtype of <em>i</em>.\n</p><p>\n\n</p><h3 id=\"subsection.3.1.2\">3.1.2 Character types</h3> <!-- 3.1.2 -->\n<a name=\"usage:char\"></a>\n<p>\nCharacters shall have the following properties:\n</p><ul>\n<li> be at least one address unit wide; \n</li>\n<li> contain at least eight bits; \n</li>\n<li> be of fixed width; \n</li>\n<li> have a size less than or equal to cell size; \n</li>\n<li> be unsigned.\n</li>\n</ul>\n<p>\nThe characters provided by a system shall include the graphic\ncharacters {32 ... 126}, which represent graphic forms\nas shown in table <a href=\"usage#table:ASCII\">3.2</a>.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.2.1\">3.1.2.1 Graphic characters</h4> <!-- 3.1.2.1 -->\n<a name=\"usage:ASCII\"></a>\n<p>\nA graphic character is one that is normally displayed (e.g.,\nA, #, &amp;, 6). These values and graphics, shown in table\n<a href=\"usage#table:ASCII\">3.2</a>, are taken directly from ANS X3.4-1974 (ASCII)\nand ISO 646-1983, International Reference Version (IRV). The\ngraphic forms of characters outside the hex range {20 ...\n7E} are implementation defined. Programs that use the graphic hex\n24 (the currency sign) have an environmental dependency.\n</p><p>\nThe graphic representation of characters is not restricted to\nparticular type fonts or styles. The graphics here are examples.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 3.2: Standard graphic characters</div>\n  <a name=\"table:ASCII\"></a>\n  \n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"30\"><hr></td></tr>\n  <tr valign=\"top\"><td class=\"c\">Hex </td><td>&nbsp;</td><td class=\"c\">IRV </td><td>&nbsp;</td><td class=\"c\">ASCII </td><td class=\"c\">Hex </td><td>&nbsp;</td><td class=\"c\">IRV </td><td>&nbsp;</td><td class=\"c\">ASCII </td><td class=\"c\">Hex </td><td>&nbsp;</td><td class=\"c\">IRV </td><td>&nbsp;</td><td class=\"c\">ASCII </td><td class=\"c\">Hex </td><td>&nbsp;</td><td class=\"c\">IRV </td><td>&nbsp;</td><td class=\"c\">ASCII </td><td class=\"c\">Hex </td><td>&nbsp;</td><td class=\"c\">IRV </td><td>&nbsp;</td><td class=\"c\">ASCII </td><td class=\"c\">Hex </td><td>&nbsp;</td><td class=\"c\">IRV </td><td>&nbsp;</td><td class=\"c\">ASCII </td></tr>\n  <tr valign=\"top\"><td colspan=\"30\"><hr></td></tr>\n  <tr valign=\"top\"><td class=\"c\">20</td><td>&nbsp;</td><td class=\"c\"></td><td>&nbsp;</td><td class=\"c\"></td><td class=\"c\">30</td><td>&nbsp;</td><td class=\"c\">0 </td><td>&nbsp;</td><td class=\"c\">0\t</td><td class=\"c\">40</td><td>&nbsp;</td><td class=\"c\">@ </td><td>&nbsp;</td><td class=\"c\">@\t</td><td class=\"c\">50</td><td>&nbsp;</td><td class=\"c\">P </td><td>&nbsp;</td><td class=\"c\">P\t</td><td class=\"c\">60</td><td>&nbsp;</td><td class=\"c\"><code>`</code> </td><td>&nbsp;</td><td class=\"c\"><code>`</code>\n  </td><td class=\"c\">70</td><td>&nbsp;</td><td class=\"c\">p </td><td>&nbsp;</td><td class=\"c\">p\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">21</td><td>&nbsp;</td><td class=\"c\">! </td><td>&nbsp;</td><td class=\"c\">!\t</td><td class=\"c\">31</td><td>&nbsp;</td><td class=\"c\">1 </td><td>&nbsp;</td><td class=\"c\">1\t</td><td class=\"c\">41</td><td>&nbsp;</td><td class=\"c\">A </td><td>&nbsp;</td><td class=\"c\">A\t</td><td class=\"c\">51</td><td>&nbsp;</td><td class=\"c\">Q </td><td>&nbsp;</td><td class=\"c\">Q\t</td><td class=\"c\">61</td><td>&nbsp;</td><td class=\"c\">a </td><td>&nbsp;</td><td class=\"c\">a\t</td><td class=\"c\">71</td><td>&nbsp;</td><td class=\"c\">q </td><td>&nbsp;</td><td class=\"c\">q\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">22</td><td>&nbsp;</td><td class=\"c\"><code>\"</code> </td><td>&nbsp;</td><td class=\"c\"><code>\"</code>\n  </td><td class=\"c\">32</td><td>&nbsp;</td><td class=\"c\">2 </td><td>&nbsp;</td><td class=\"c\">2\t</td><td class=\"c\">42</td><td>&nbsp;</td><td class=\"c\">B </td><td>&nbsp;</td><td class=\"c\">B\t</td><td class=\"c\">52</td><td>&nbsp;</td><td class=\"c\">R </td><td>&nbsp;</td><td class=\"c\">R\t</td><td class=\"c\">62</td><td>&nbsp;</td><td class=\"c\">b </td><td>&nbsp;</td><td class=\"c\">b\t</td><td class=\"c\">72</td><td>&nbsp;</td><td class=\"c\">r </td><td>&nbsp;</td><td class=\"c\">r\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">23</td><td>&nbsp;</td><td class=\"c\"># </td><td>&nbsp;</td><td class=\"c\"># </td><td class=\"c\">33</td><td>&nbsp;</td><td class=\"c\">3 </td><td>&nbsp;</td><td class=\"c\">3\t</td><td class=\"c\">43</td><td>&nbsp;</td><td class=\"c\">C </td><td>&nbsp;</td><td class=\"c\">C\t</td><td class=\"c\">53</td><td>&nbsp;</td><td class=\"c\">S </td><td>&nbsp;</td><td class=\"c\">S\t</td><td class=\"c\">63</td><td>&nbsp;</td><td class=\"c\">c </td><td>&nbsp;</td><td class=\"c\">c\t</td><td class=\"c\">73</td><td>&nbsp;</td><td class=\"c\">s </td><td>&nbsp;</td><td class=\"c\">s\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">24</td><td>&nbsp;</td><td class=\"c\">¤  </td><td>&nbsp;</td><td class=\"c\">$ </td><td class=\"c\">34</td><td>&nbsp;</td><td class=\"c\">4 </td><td>&nbsp;</td><td class=\"c\">4\t</td><td class=\"c\">44</td><td>&nbsp;</td><td class=\"c\">D </td><td>&nbsp;</td><td class=\"c\">D\t</td><td class=\"c\">54</td><td>&nbsp;</td><td class=\"c\">T </td><td>&nbsp;</td><td class=\"c\">T\t</td><td class=\"c\">63</td><td>&nbsp;</td><td class=\"c\">d </td><td>&nbsp;</td><td class=\"c\">d\t</td><td class=\"c\">74</td><td>&nbsp;</td><td class=\"c\">t </td><td>&nbsp;</td><td class=\"c\">t\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">25</td><td>&nbsp;</td><td class=\"c\">% </td><td>&nbsp;</td><td class=\"c\">% </td><td class=\"c\">35</td><td>&nbsp;</td><td class=\"c\">5 </td><td>&nbsp;</td><td class=\"c\">5\t</td><td class=\"c\">45</td><td>&nbsp;</td><td class=\"c\">E </td><td>&nbsp;</td><td class=\"c\">E\t</td><td class=\"c\">55</td><td>&nbsp;</td><td class=\"c\">U </td><td>&nbsp;</td><td class=\"c\">U\t</td><td class=\"c\">64</td><td>&nbsp;</td><td class=\"c\">e </td><td>&nbsp;</td><td class=\"c\">e\t</td><td class=\"c\">75</td><td>&nbsp;</td><td class=\"c\">u </td><td>&nbsp;</td><td class=\"c\">u\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">26</td><td>&nbsp;</td><td class=\"c\">&amp; </td><td>&nbsp;</td><td class=\"c\">&amp; </td><td class=\"c\">36</td><td>&nbsp;</td><td class=\"c\">6 </td><td>&nbsp;</td><td class=\"c\">6\t</td><td class=\"c\">46</td><td>&nbsp;</td><td class=\"c\">F </td><td>&nbsp;</td><td class=\"c\">F\t</td><td class=\"c\">56</td><td>&nbsp;</td><td class=\"c\">V </td><td>&nbsp;</td><td class=\"c\">V\t</td><td class=\"c\">65</td><td>&nbsp;</td><td class=\"c\">f </td><td>&nbsp;</td><td class=\"c\">f\t</td><td class=\"c\">76</td><td>&nbsp;</td><td class=\"c\">v </td><td>&nbsp;</td><td class=\"c\">v\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">27</td><td>&nbsp;</td><td class=\"c\">'  </td><td>&nbsp;</td><td class=\"c\">'\t</td><td class=\"c\">37</td><td>&nbsp;</td><td class=\"c\">7 </td><td>&nbsp;</td><td class=\"c\">7\t</td><td class=\"c\">47</td><td>&nbsp;</td><td class=\"c\">G </td><td>&nbsp;</td><td class=\"c\">G\t</td><td class=\"c\">57</td><td>&nbsp;</td><td class=\"c\">W </td><td>&nbsp;</td><td class=\"c\">W\t</td><td class=\"c\">66</td><td>&nbsp;</td><td class=\"c\">g </td><td>&nbsp;</td><td class=\"c\">g\t</td><td class=\"c\">77</td><td>&nbsp;</td><td class=\"c\">w </td><td>&nbsp;</td><td class=\"c\">w\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">28</td><td>&nbsp;</td><td class=\"c\">(  </td><td>&nbsp;</td><td class=\"c\">(\t</td><td class=\"c\">38</td><td>&nbsp;</td><td class=\"c\">8 </td><td>&nbsp;</td><td class=\"c\">8\t</td><td class=\"c\">48</td><td>&nbsp;</td><td class=\"c\">H </td><td>&nbsp;</td><td class=\"c\">H\t</td><td class=\"c\">58</td><td>&nbsp;</td><td class=\"c\">X </td><td>&nbsp;</td><td class=\"c\">X\t</td><td class=\"c\">67</td><td>&nbsp;</td><td class=\"c\">h </td><td>&nbsp;</td><td class=\"c\">h\t</td><td class=\"c\">78</td><td>&nbsp;</td><td class=\"c\">x </td><td>&nbsp;</td><td class=\"c\">x\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">29</td><td>&nbsp;</td><td class=\"c\">)  </td><td>&nbsp;</td><td class=\"c\">)\t</td><td class=\"c\">39</td><td>&nbsp;</td><td class=\"c\">9 </td><td>&nbsp;</td><td class=\"c\">9\t</td><td class=\"c\">49</td><td>&nbsp;</td><td class=\"c\">I </td><td>&nbsp;</td><td class=\"c\">I\t</td><td class=\"c\">59</td><td>&nbsp;</td><td class=\"c\">Y </td><td>&nbsp;</td><td class=\"c\">Y\t</td><td class=\"c\">68</td><td>&nbsp;</td><td class=\"c\">i </td><td>&nbsp;</td><td class=\"c\">i\t</td><td class=\"c\">79</td><td>&nbsp;</td><td class=\"c\">y </td><td>&nbsp;</td><td class=\"c\">y\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">2A</td><td>&nbsp;</td><td class=\"c\">*  </td><td>&nbsp;</td><td class=\"c\">*\t</td><td class=\"c\">3A</td><td>&nbsp;</td><td class=\"c\">: </td><td>&nbsp;</td><td class=\"c\">:\t</td><td class=\"c\">4A</td><td>&nbsp;</td><td class=\"c\">J </td><td>&nbsp;</td><td class=\"c\">J\t</td><td class=\"c\">5A</td><td>&nbsp;</td><td class=\"c\">Z </td><td>&nbsp;</td><td class=\"c\">Z\t</td><td class=\"c\">69</td><td>&nbsp;</td><td class=\"c\">j </td><td>&nbsp;</td><td class=\"c\">j\t</td><td class=\"c\">7A</td><td>&nbsp;</td><td class=\"c\">z </td><td>&nbsp;</td><td class=\"c\">z\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">2B</td><td>&nbsp;</td><td class=\"c\">+  </td><td>&nbsp;</td><td class=\"c\">+\t</td><td class=\"c\">3B</td><td>&nbsp;</td><td class=\"c\">; </td><td>&nbsp;</td><td class=\"c\">;\t</td><td class=\"c\">4B</td><td>&nbsp;</td><td class=\"c\">K </td><td>&nbsp;</td><td class=\"c\">K\t</td><td class=\"c\">5B</td><td>&nbsp;</td><td class=\"c\">[ </td><td>&nbsp;</td><td class=\"c\">[\t</td><td class=\"c\">6A</td><td>&nbsp;</td><td class=\"c\">k </td><td>&nbsp;</td><td class=\"c\">k\t</td><td class=\"c\">7B</td><td>&nbsp;</td><td class=\"c\">{</td><td>&nbsp;</td><td class=\"c\">{\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">2C</td><td>&nbsp;</td><td class=\"c\">,  </td><td>&nbsp;</td><td class=\"c\">,\t</td><td class=\"c\">3C</td><td>&nbsp;</td><td class=\"c\"><em>&lt;</em></td><td>&nbsp;</td><td class=\"c\"><em>&lt;</em>\t</td><td class=\"c\">4C</td><td>&nbsp;</td><td class=\"c\">L </td><td>&nbsp;</td><td class=\"c\">L\t</td><td class=\"c\">5C</td><td>&nbsp;</td><td class=\"c\"><code>\\</code> </td><td>&nbsp;</td><td class=\"c\"><code>\\</code>\n  </td><td class=\"c\">6C</td><td>&nbsp;</td><td class=\"c\">l </td><td>&nbsp;</td><td class=\"c\">l\t</td><td class=\"c\">7C</td><td>&nbsp;</td><td class=\"c\"><code>|</code> </td><td>&nbsp;</td><td class=\"c\"><code>|</code> </td></tr>\n  <tr valign=\"top\"><td class=\"c\">2D</td><td>&nbsp;</td><td class=\"c\">-  </td><td>&nbsp;</td><td class=\"c\">-\t</td><td class=\"c\">3D</td><td>&nbsp;</td><td class=\"c\">= </td><td>&nbsp;</td><td class=\"c\">=\t</td><td class=\"c\">4D</td><td>&nbsp;</td><td class=\"c\">M </td><td>&nbsp;</td><td class=\"c\">M\t</td><td class=\"c\">5D</td><td>&nbsp;</td><td class=\"c\">] </td><td>&nbsp;</td><td class=\"c\">]\t</td><td class=\"c\">6D</td><td>&nbsp;</td><td class=\"c\">m </td><td>&nbsp;</td><td class=\"c\">m\t</td><td class=\"c\">7D</td><td>&nbsp;</td><td class=\"c\">}</td><td>&nbsp;</td><td class=\"c\">}\t</td></tr>\n  <tr valign=\"top\"><td class=\"c\">2E</td><td>&nbsp;</td><td class=\"c\">.  </td><td>&nbsp;</td><td class=\"c\">.\t</td><td class=\"c\">3E</td><td>&nbsp;</td><td class=\"c\"><em>&gt;</em></td><td>&nbsp;</td><td class=\"c\"><em>&gt;</em>\t</td><td class=\"c\">4E</td><td>&nbsp;</td><td class=\"c\">N </td><td>&nbsp;</td><td class=\"c\">N\t</td><td class=\"c\">5E</td><td>&nbsp;</td><td class=\"c\"><code>^</code> </td><td>&nbsp;</td><td class=\"c\"><code>^</code>\n  </td><td class=\"c\">6E</td><td>&nbsp;</td><td class=\"c\">n </td><td>&nbsp;</td><td class=\"c\">n\t</td><td class=\"c\">7E</td><td>&nbsp;</td><td class=\"c\"><code>~</code> </td><td>&nbsp;</td><td class=\"c\"><code>~</code> </td></tr>\n  <tr valign=\"top\"><td class=\"c\">2F</td><td>&nbsp;</td><td class=\"c\">/  </td><td>&nbsp;</td><td class=\"c\">/\t</td><td class=\"c\">3F</td><td>&nbsp;</td><td class=\"c\">? </td><td>&nbsp;</td><td class=\"c\">?\t</td><td class=\"c\">4F</td><td>&nbsp;</td><td class=\"c\">O </td><td>&nbsp;</td><td class=\"c\">O\t</td><td class=\"c\">5F</td><td>&nbsp;</td><td class=\"c\">_ </td><td>&nbsp;</td><td class=\"c\">_</td><td class=\"c\">6F</td><td>&nbsp;</td><td class=\"c\">o </td><td>&nbsp;</td><td class=\"c\">o\t</td></tr>\n  <tr valign=\"top\"><td colspan=\"30\"><hr></td></tr>\n  <tr valign=\"top\"><td class=\"c\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<h4 id=\"subsubsection.3.1.2.2\">3.1.2.2 Control characters</h4> <!-- 3.1.2.2 -->\n<a name=\"usage:control\"></a>\n<p>\nAll non-graphic characters included in the implementation-defined\ncharacter set are defined in this standard as control characters.\nIn particular, the characters {0 ... 31}, which could be\nincluded in the implementation-defined character set, are control\ncharacters.\n</p><p>\nPrograms that require the ability to send or receive control\ncharacters have an environmental dependency.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.2.3\">3.1.2.3 Primitive Character</h4> <!-- 3.1.2.3 -->\n<a name=\"usage:pchar\"></a>\n<p>\nA primitive character (pchar) is a character with no restrictions on\nits contents.  Unless otherwise stated, a \"character\" refers to a\nprimitive character.\n</p><p>\n</p><h3 id=\"subsection.3.1.3\">3.1.3 Single-cell types</h3> <!-- 3.1.3 -->\n<a name=\"usage:cell\"></a>\n<p>\nThe implementation-defined fixed size of a cell is specified in\naddress units and the corresponding number of bits.\nSee <strong><a href=\"port#port:hardware\">D.2 Hardware peculiarities</a></strong>.\n</p><p>\nCells shall be at least one address unit wide and contain at least\nsixteen bits. The size of a cell shall be an integral multiple of\nthe size of a character. Data-stack elements, return-stack elements,\naddresses, execution tokens, flags, and integers are one cell wide.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.3.1\">3.1.3.1 Flags</h4> <!-- 3.1.3.1 -->\n<a name=\"usage:flags\"></a>\n<p>\nFlags may have one of two logical states, <em>true</em> or <em>false</em>.\nPrograms that use flags as arithmetic operands have an environmental\ndependency. A true flag returned by a standard word shall be a\nsingle-cell value with all bits set. A false flag returned by a\nstandard word shall be a single-cell value with all bits clear.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.3.2\">3.1.3.2 Integers</h4> <!-- 3.1.3.2 -->\nThe implementation-defined range of signed integers shall include\n{-32767 ... +32767}. The implementation-defined range of\nnon-negative integers shall include {0 ... 32767}. The\nimplementation-defined range of unsigned integers shall include\n{0 ... 65535}.\n<p>\n</p><h4 id=\"subsubsection.3.1.3.3\">3.1.3.3 Addresses</h4> <!-- 3.1.3.3 -->\n<a name=\"usage:addr\"></a>\n<p>\nAn address identifies a location in data space with a size of one\naddress unit, which a program may fetch from or store into except\nfor the restrictions established in this standard. The size of an\naddress unit is specified in bits. Each distinct address value\nidentifies exactly one such storage element.\nSee <strong><a href=\"usage#usage:dataspace\">3.3.3 Data space</a></strong>.\n</p><p>\nThe set of character-aligned addresses, addresses at which a\ncharacter can be accessed, is an implementation-defined subset of\nall addresses. Adding the size of a character to a character-aligned\naddress shall produce another character-aligned address.\n</p><p>\nThe set of aligned addresses is an implementation-defined subset\nof character-aligned addresses. Adding the size of a cell to an\naligned address shall produce another aligned address.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.3.4\">3.1.3.4 Counted strings</h4> <!-- 3.1.3.4 -->\n<a name=\"usage:cstring\"></a>\n<p>\nA counted string in memory is identified by the address\n(<em>c-addr</em>) of its length character.\n</p><p>\nThe length character of a counted string shall contain a binary\nrepresentation of the number of data characters, between zero and\nthe implementation-defined maximum length for a counted string.\nThe maximum length of a counted string shall be at least 255.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.3.5\">3.1.3.5 Execution tokens</h4> <!-- 3.1.3.5 -->\nDifferent definitions may have the same execution token if the\ndefinitions are equivalent.\n<p>\n</p><h4 id=\"subsubsection.3.1.3.6\">3.1.3.6 Error results</h4> <!-- 3.1.3.6 -->\n<a name=\"usage:ior\"></a>\n<p>\nA value of zero indicates that the operation completed successfully;\nother values are in the range {-4095 ... -1} and represent a\nvalid <a href=\"exception/THROW\">THROW</a> code.\n</p><p>\nThe meanings of values in the range {-255 ... -1} are defined\nby table <strong><a href=\"exception#table:throw\">9.1 <code>[exception]{THROW</code> code assignments</a></strong>.  Values in\nthe range {-4095 ... -256} and their meanings are implementation\ndefined.\n</p><p>\nA word that returns an <em>ior</em> will not <a href=\"exception/THROW\">THROW</a>\nthat <em>ior</em> as an exception, but indicates the exception through\nthe <em>ior</em>.\nThis allows a program to take appropriate actions, which may include\nthrowing the exception.\n</p><p>\n</p><h3 id=\"subsection.3.1.4\">3.1.4 Cell-pair types</h3> <!-- 3.1.4 -->\n<a name=\"usage:2cell\"></a>\n<p>\nA cell pair in memory consists of a sequence of two contiguous\ncells. The cell at the lower address is the first cell, and its\naddress is used to identify the cell pair. Unless otherwise\nspecified, a cell pair on a stack consists of the first cell\nimmediately above the second cell.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.4.1\">3.1.4.1 Double-cell integers</h4> <!-- 3.1.4.1 -->\nOn the stack, the cell containing the most significant part of a\ndouble-cell integer shall be above the cell containing the least\nsignificant part.\n<p>\nThe implementation-defined range of double-cell signed integers\nshall include {-2147483647 ...  +2147483647}.\n</p><p>\nThe implementation-defined range of double-cell non-negative\nintegers shall include {0 ... 2147483647}.\n</p><p>\nThe implementation-defined range of double-cell unsigned integers\nshall include {0 ... 4294967295}. Placing the single-cell\ninteger zero on the stack above a single-cell unsigned integer\nproduces a double-cell unsigned integer with the same value.\nSee <strong><a href=\"usage#usage:number\">3.2.1.1 Internal number representation</a></strong>.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.4.2\">3.1.4.2 Character strings</h4> <!-- 3.1.4.2 -->\nA string is specified by a cell pair (<em>c-addr u</em>) representing\nits starting address and length in characters.\n<p>\n</p><h3 id=\"subsection.3.1.5\">3.1.5 System types</h3> <!-- 3.1.5 -->\nThe system data types specify permitted word combinations during\ncompilation and execution.\n<p>\n</p><h4 id=\"subsubsection.3.1.5.1\">3.1.5.1 System-compilation types</h4> <!-- 3.1.5.1 -->\nThese data types denote zero or more items on the control-flow stack\n(see <a href=\"usage#usage:controlstack\">3.2.3.2</a>). The possible presence of such items\non the data stack means that any items already there shall be\nunavailable to a program until the control-flow-stack items are\nconsumed.\n<p>\nThe implementation-dependent data generated upon beginning to compile\na definition and consumed at its close is represented by the symbol\n<em>colon-sys</em> throughout this standard.\n</p><p>\nThe implementation-dependent data generated upon beginning to\ncompile a do-loop structure such as <a href=\"core/DO\">DO</a> ... <a href=\"core/LOOP\">LOOP</a>\nand consumed at its close is represented by the symbol <em>do-sys</em>\nthroughout this standard.\n</p><p>\nThe implementation-dependent data generated upon beginning to\ncompile a <a href=\"core/CASE\">CASE</a> ... <a href=\"core/ENDCASE\">ENDCASE</a> structure and consumed\nat its close is represented by the symbol <em>case-sys</em> throughout\nthis standard.\n</p><p>\nThe implementation-dependent data generated upon beginning to\ncompile an <a href=\"core/OF\">OF</a> ... <a href=\"core/ENDOF\">ENDOF</a> structure and consumed\nat its close is represented by the symbol <em>of-sys</em> throughout\nthis standard.\n</p><p>\nThe implementation-dependent data generated and consumed by executing\nthe other standard control-flow words is represented by the symbols\n<em>orig</em> and <em>dest</em> throughout this standard.\n</p><p>\n</p><h4 id=\"subsubsection.3.1.5.2\">3.1.5.2 System-execution types</h4> <!-- 3.1.5.2 -->\nThese data types denote zero or more items on the return stack.\nTheir possible presence means that any items already on the return\nstack shall be unavailable to a program until the system-execution\nitems are consumed.\n<p>\nThe implementation-dependent data generated upon beginning to\nexecute a definition and consumed upon exiting it is represented\nby the symbol <em>nest-sys</em> throughout this standard.\n</p><p>\nThe implementation-dependent loop-control parameters used to\ncontrol the execution of do-loops are represented by the symbol\n<em>loop-sys</em> throughout this standard. Loop-control parameters\nshall be available inside the do-loop for words that use or change\nthese parameters, words such as <a href=\"core/I\">I</a>, <a href=\"core/J\">J</a>, <a href=\"core/LEAVE\">LEAVE</a>\nand <a href=\"core/UNLOOP\">UNLOOP</a>.\n</p><p>\n</p><h2 id=\"section.3.2\">3.2 The implementation environment</h2> <!-- 3.2 ======================= -->\n<h3 id=\"subsection.3.2.1\">3.2.1 Numbers</h3> <!-- 3.2.1 -->\n<h4 id=\"subsubsection.3.2.1.1\">3.2.1.1 Internal number representation</h4> <!-- 3.2.1.1 -->\n<a name=\"usage:number\"></a>\n<p>\nThis standard allows one's complement, two's complement, or\nsign-magnitude number representations and arithmetic. Arithmetic\nzero is represented as the value of a single cell with all bits\nclear.\n</p><p>\nThe representation of a number as a compiled literal or in memory\nis implementation dependent.\n</p><p>\n</p><h4 id=\"subsubsection.3.2.1.2\">3.2.1.2 Digit conversion</h4> <!-- 3.2.1.2 -->\n<a name=\"usage:digits\"></a>\n<p>\nNumbers shall be represented externally by using characters from\nthe standard character set. Conversion between the internal and\nexternal forms of a digit shall behave as follows:\n</p><p>\nThe value in <a href=\"core/BASE\">BASE</a> is the radix for number conversion. A\ndigit has a value ranging from zero to one less than the contents\nof <a href=\"core/BASE\">BASE</a>. The digit with the value zero corresponds to the\ncharacter \"0\". This representation of digits proceeds through\nthe character set to the decimal value nine corresponding to the\ncharacter \"9\". For digits beginning with the decimal value ten\nthe graphic characters beginning with the character \"A\" are used.\nThis correspondence continues up to and including the digit with\nthe decimal value thirty-five which is represented by the character\n\"Z\". The characters \"a\" though to \"z\" should be treated the\nsame as \"A\" though \"Z\", with \"a\" having the value ten and\n\"z\" the value thirty-five.  The conversion of digits outside this\nrange is implementation defined.\n</p><p>\n</p><h4 id=\"subsubsection.3.2.1.3\">3.2.1.3 Free-field number display</h4> <!-- 3.2.1.3 -->\n<a name=\"usage:dot\"></a>\n<p>\nFree-field number display uses the characters described in digit\nconversion, without leading zeros, in a field the exact size of\nthe converted string plus a trailing space. If a number is zero,\nthe least significant digit is not considered a leading zero. If\nthe number is negative, a leading minus sign is displayed.\n</p><p>\nNumber display may use the pictured numeric output string buffer\nto hold partially converted strings (see <strong><a href=\"usage#usage:transient\">3.3.3.6 Other transient regions</a></strong>).\n</p><p>\n</p><h3 id=\"subsection.3.2.2\">3.2.2 Arithmetic</h3> <!-- 3.2.2 -->\n<h4 id=\"subsubsection.3.2.2.1\">3.2.2.1 Integer division</h4> <!-- 3.2.2.1 -->\n<a name=\"usage:div\"></a>\n<p>\nDivision produces a quotient <em>q</em> and a remainder <em>r</em>\nby dividing operand <em>a</em> by operand <em>b</em>. Division\noperations return <em>q, r</em>, or both. The identity\n<em>b × q + r = a</em> shall hold for all <em>a</em> and <em>b</em>.\n</p><p>\nWhen unsigned integers are divided and the remainder is not zero,\n<em>q</em> is the largest integer less than the true quotient.\n</p><p>\nWhen signed integers are divided, the remainder is not zero, and\n<em>a</em> and <em>b</em> have the same sign, <em>q</em> is the largest\ninteger less than the true quotient. If only one operand is\nnegative, whether <em>q</em> is rounded toward negative infinity\n(floored division) or rounded towards zero (symmetric division) is\nimplementation defined.\n</p><p>\nFloored division is integer division in which the remainder carries\nthe sign of the divisor or is zero, and the quotient is rounded to\nits arithmetic floor. Symmetric division is integer division in\nwhich the remainder carries the sign of the dividend or is zero and\nthe quotient is the mathematical quotient \"rounded towards zero\"\nor \"truncated\". Examples of each are shown in tables\n<a href=\"usage#table:floor\">3.3</a> and <a href=\"usage#table:round\">3.4</a>.\n</p><p>\nIn cases where the operands differ in sign and the rounding\ndirection matters, a program shall either include code generating\nthe desired form of division, not relying on the\nimplementation-defined default result, or have an environmental\ndependency on the desired rounding direction.\n</p><p>\n\n</p><div class=\"center\">\n\n    <div class=\"minipage\" style=\"width: 24em\">\n\n    <div class=\"center\">\n\n      <div class=\"caption\">Table 3.3: Floored Division Example</div>\n      <p>\n      <a name=\"table:floor\"></a>\n      </p><table class=\"center\">\n      <tbody><tr valign=\"top\"><td colspan=\"12\"><hr></td></tr>\n      <tr valign=\"top\"><td colspan=\"3\" class=\"c\">Dividend </td><td colspan=\"3\" class=\"c\">Divisor </td><td colspan=\"3\" class=\"c\">Remainder </td><td colspan=\"3\" class=\"c\">Quotient </td></tr>\n      <tr valign=\"top\"><td colspan=\"12\"><hr></td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">10 </td><td></td><td></td><td class=\"r\">7 </td><td></td><td></td><td class=\"r\">3 </td><td></td><td></td><td class=\"r\">1 </td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">-10 </td><td></td><td></td><td class=\"r\">7 </td><td></td><td></td><td class=\"r\">4 </td><td></td><td></td><td class=\"r\">-2 </td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">10 </td><td></td><td></td><td class=\"r\">-7 </td><td></td><td></td><td class=\"r\">-4 </td><td></td><td></td><td class=\"r\">-2 </td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">-10 </td><td></td><td></td><td class=\"r\">-7 </td><td></td><td></td><td class=\"r\">-3 </td><td></td><td></td><td class=\"r\">1 </td></tr>\n      <tr valign=\"top\"><td colspan=\"12\"><hr></td></tr>\n      <tr valign=\"top\"><td></td></tr>\n      </tbody></table>\n      \n      </div>\n      \n    </div>\n    <div class=\"minipage\" style=\"width: 24em\">\n\n    <div class=\"center\">\n\n      <div class=\"caption\">Table 3.3: Symmetric Division Example</div>\n      <a name=\"table:round\"></a>\n      <table class=\"center\">\n      <tbody><tr valign=\"top\"><td colspan=\"12\"><hr></td></tr>\n      <tr valign=\"top\"><td colspan=\"3\" class=\"c\">Dividend </td><td colspan=\"3\" class=\"c\">Divisor </td><td colspan=\"3\" class=\"c\">Remainder </td><td colspan=\"3\" class=\"c\">Quotient </td></tr>\n      <tr valign=\"top\"><td colspan=\"12\"><hr></td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">10 </td><td></td><td></td><td class=\"r\">7 </td><td></td><td></td><td class=\"r\">3 </td><td></td><td></td><td class=\"r\">1 </td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">-10 </td><td></td><td></td><td class=\"r\">7 </td><td></td><td></td><td class=\"r\">-3 </td><td></td><td></td><td class=\"r\">-1 </td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">10 </td><td></td><td></td><td class=\"r\">-7 </td><td></td><td></td><td class=\"r\">3 </td><td></td><td></td><td class=\"r\">-1 </td></tr>\n      <tr valign=\"top\"><td></td><td class=\"r\">-10 </td><td></td><td></td><td class=\"r\">-7 </td><td></td><td></td><td class=\"r\">-3 </td><td></td><td></td><td class=\"r\">1 </td></tr>\n      <tr valign=\"top\"><td colspan=\"12\"><hr></td></tr>\n      <tr valign=\"top\"><td></td></tr>\n      </tbody></table>\n      \n      </div>\n      \n    </div>\n  <br class=\"clear\">\n  \n  </div>\n<h4 id=\"subsubsection.3.2.2.2\">3.2.2.2 Other integer operations</h4> <!-- 3.2.2.2 -->\n<a name=\"usage:intops\"></a>\n<p>\nIn all integer arithmetic operations, both overflow and underflow\nshall be ignored. The value returned when either overflow or\nunderflow occurs is implementation defined.\n</p><p>\n</p><h3 id=\"subsection.3.2.3\">3.2.3 Stacks</h3> <!-- 3.2.3 -->\n<h4 id=\"subsubsection.3.2.3.1\">3.2.3.1 Data stack</h4> <!-- 3.2.3.1 -->\n<a name=\"usage:datastack\"></a>\n<p>\nObjects on the data stack shall be one cell wide.\n</p><p>\n</p><h4 id=\"subsubsection.3.2.3.2\">3.2.3.2 Control-flow stack</h4> <!-- 3.2.3.2 -->\n<a name=\"usage:controlstack\"></a>\n<p>\nThe control-flow stack is a last-in, first out list whose elements\ndefine the permissible matchings of control-flow words and the\nrestrictions imposed on data-stack usage during the compilation of\ncontrol structures.\n</p><p>\nThe elements of the control-flow stack are system-compilation data\ntypes.\n</p><p>\nThe control-flow stack may, but need not, physically exist in an\nimplementation. If it does exist, it may be, but need not be,\nimplemented using the data stack. The format of the control-flow\nstack is implementation defined.\n</p><p>\n</p><h4 id=\"subsubsection.3.2.3.3\">3.2.3.3 Return stack</h4> <!-- 3.2.3.3 -->\n<a name=\"usage:returnstack\"></a>\n<p>\nItems on the return stack shall consist of one or more cells. A\nsystem may use the return stack in an implementation-dependent\nmanner during the compilation of definitions, during the execution\nof do-loops, and for storing run-time nesting information.\n</p><p>\nA program may use the return stack for temporary storage during the\nexecution of a definition subject to the following restrictions:\n</p><p>\n</p><ul>\n<li> A program shall not access values on the return stack\n(using <a href=\"core/RFetch\">R@</a>, <a href=\"core/Rfrom\">R&gt;</a>, <a href=\"core/TwoRFetch\">2R@</a>, <a href=\"core/TwoRfrom\">2R&gt;</a>\nor <a href=\"tools/NRfrom\">NR&gt;</a>) that it did not place there using\n<a href=\"core/toR\">&gt;R</a>,\t<a href=\"core/TwotoR\">2&gt;R</a> or <a href=\"tools/NtoR\">N&gt;R</a>;\n<p>\n</p></li>\n<li> A program shall not access from within a do-loop values\nplaced on the return stack before the loop was entered;\n<p>\n</p></li>\n<li> All values placed on the return stack within a do-loop\nshall be removed before <a href=\"core/I\">I</a>, <a href=\"core/J\">J</a>, <a href=\"core/LOOP\">LOOP</a>,\n<a href=\"core/PlusLOOP\">+LOOP</a>, <a href=\"core/UNLOOP\">UNLOOP</a>, or <a href=\"core/LEAVE\">LEAVE</a> is executed;\n<p>\n</p></li>\n<li> All values placed on the return stack within a definition\nshall be removed before the definition is terminated or\nbefore <a href=\"core/EXIT\">EXIT</a> is executed.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.3.2.4\">3.2.4 Operator terminal</h3> <!-- 3.2.4 -->\nSee <strong><a href=\"intro#intro:exclusions\">1.2.2 Exclusions</a></strong>.\n<p>\n</p><h4 id=\"subsubsection.3.2.4.1\">3.2.4.1 User input device</h4> <!-- 3.2.4.1 -->\n<a name=\"usage:input\"></a>\n<p>\nThe method of selecting the user input device is implementation\ndefined.\n</p><p>\nThe method of indicating the end of an input line of text is\nimplementation defined.\n</p><p>\n</p><h4 id=\"subsubsection.3.2.4.2\">3.2.4.2 User output device</h4> <!-- 3.2.4.2 -->\n<a name=\"usage:output\"></a>\n<p>\nThe method of selecting the user output device is implementation\ndefined.\n</p><p>\n</p><h3 id=\"subsection.3.2.5\">3.2.5 Mass storage</h3> <!-- 3.2.5 -->\n<a name=\"usage:mass\"></a>\n<p>\nA system need not provide any standard words for accessing mass\nstorage.\n</p><p>\n</p><h3 id=\"subsection.3.2.6\">3.2.6 Environmental queries</h3> <!-- 3.2.6 -->\n<a name=\"usage:env\"></a>\n<p>\nThe name spaces for <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> and definitions are\ndisjoint. Names of definitions that are the same as\n<a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a> strings shall not impair the operation of\n<a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>. Table <a href=\"usage#table:env\">3.5</a> contains\nthe valid input strings and corresponding returned value for\ninquiring about the programming environment with\n<a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 3.4: Environmental Query Strings</div>\n  <a name=\"table:env\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\">String  Value data type </td><td class=\"c\">Constant? </td><td style=\"width: 21em\">Meaning </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>/COUNTED-STRING</code>\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">maximum size of a counted string, in characters </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>/HOLD</code>\t\t\t\t\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">size of the pictured numeric output string buffer,\n  in characters </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>/PAD</code>\t\t\t\t\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">size of the scratch area pointed to by <a href=\"core/PAD\">PAD</a>,\n  in characters </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>ADDRESS-UNIT-BITS</code>\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">size of one address unit, in bits </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>FLOORED</code>\t\t\t\t</td><td class=\"r\"><em>flag</em>\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">true if floored division is the default </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>MAX-CHAR</code>\t\t\t\t</td><td class=\"r\"><em>u</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">maximum value of any character in the\n  implementation-defined character set </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>MAX-D</code>\t\t\t\t\t</td><td class=\"r\"><em>d</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">largest usable signed double number </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>MAX-N</code>\t\t\t\t\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">largest usable signed integer </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>MAX-U</code>\t\t\t\t\t</td><td class=\"r\"><em>u</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">largest usable unsigned integer </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>MAX-UD</code>\t\t\t\t</td><td class=\"r\"><em>ud</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">largest usable unsigned double number </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>RETURN-STACK-CELLS</code>\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">maximum size of the return stack, in cells </td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"><code>STACK-CELLS</code>\t\t\t</td><td class=\"r\"><em>n</em>\t\t</td><td class=\"c\">yes\n  </td><td style=\"width: 21em\">maximum size of the data stack, in cells </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 11em\"></td></tr>\n  </tbody></table>\n  \n  </div>\nIf an environmental query (using <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>) returns\n<em>false</em> (i.e., unknown) in response to a string, subsequent\nqueries using the same string may return <em>true</em>. If a query\nreturns <em>true</em> (i.e., known) in response to a string,\nsubsequent queries with the same string shall also return\n<em>true</em>. If a query designated as constant in the above table\nreturns <em>true</em> and a value in response to a string,\nsubsequent queries with the same string shall return <em>true</em>\nand the same value.\n<p>\n</p><h3 id=\"subsection.3.2.7\">3.2.7 Obsolescent Environmental Queries</h3> <!-- 3.2.7 -->\n<a name=\"usage:obsolete\"></a>\nThis standard designates the practice of using <a href=\"core/ENVIRONMENTq\">ENVIRONMENT?</a>\nto inquire whether a given word set is present as obsolescent.  If\nsuch a query, as listed in table <a href=\"usage#table:obsolete\">3.6</a>, returns\n<em>true</em>, the word set is present in the form defined by Forth 94.\nAs these queries will be withdrawn from future revisions of the\nstandard their use in new programs is discouraged.\n<p>\nSee <strong><a href=\"rationale#rat:obsolete\">A.3.2.7 Obsolescent Environmental Queries</a></strong>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 3.5: Obsolescent Environmental Query Strings</div>\n  <a name=\"table:obsolete\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"6\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\">String  Value data type </td><td>&nbsp;&nbsp;</td><td class=\"c\">Constant? </td><td>&nbsp;&nbsp;</td><td style=\"width: 27.5em\">Meaning </td></tr>\n  <tr valign=\"top\"><td colspan=\"6\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>CORE</code>\t\t</td><td class=\"r\"><em>flag</em> </td><td>&nbsp;&nbsp;</td><td class=\"c\">no\n  </td><td>&nbsp;&nbsp;</td><td style=\"width: 27.5em\">true if complete core word set of Forth 94 is present </td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"></td><td class=\"r\"></td><td>&nbsp;&nbsp;</td><td class=\"c\"></td><td>&nbsp;&nbsp;</td><td style=\"width: 27.5em\">(i.e., not a subset as defined in <a href=\"label#label:system\">5.1.1</a>) </td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>CORE-EXT</code>\t</td><td class=\"r\"><em>flag</em> </td><td>&nbsp;&nbsp;</td><td class=\"c\">no\n  </td><td>&nbsp;&nbsp;</td><td style=\"width: 27.5em\">true if the core extensions word set of Forth 94 is present </td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>BLOCK</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 block word set present.</td></tr>\n  <tr valign=\"top\"><td><code>BLOCK-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 block extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>DOUBLE</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 double number word set present.</td></tr>\n  <tr valign=\"top\"><td><code>DOUBLE-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 double number extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>EXCEPTION</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 exception word set present.</td></tr>\n  <tr valign=\"top\"><td><code>EXCEPTION-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 exception extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>FACILITY</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 facility word set present.</td></tr>\n  <tr valign=\"top\"><td><code>FACILITY-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 facility extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>FILE</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 file word set present.</td></tr>\n  <tr valign=\"top\"><td><code>FILE-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 file extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>FLOATING</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 floating-point word set present.</td></tr>\n  <tr valign=\"top\"><td><code>FLOATING-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 floating-point extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>LOCALS</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 locals word set present.</td></tr>\n  <tr valign=\"top\"><td><code>LOCALS-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 locals extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>MEMORY-ALLOC</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 memory-allocation word set present.</td></tr>\n  <tr valign=\"top\"><td><code>MEMORY-ALLOC-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 memory-allocation extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>TOOLS</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 programming-tools word set present.</td></tr>\n  <tr valign=\"top\"><td><code>TOOLS-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 programming-tools extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>SEARCH-ORDER</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 search-order word set present.</td></tr>\n  <tr valign=\"top\"><td><code>SEARCH-ORDER-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 search-order extensions word set present.</td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"><code>STRING</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 string word set present.</td></tr>\n  <tr valign=\"top\"><td><code>STRING-EXT</code></td><td><em>flag</em></td><td></td><td class=\"c\">no</td><td></td><td>Forth 94 string extensions word set present.</td></tr>\n  <tr valign=\"top\"><td colspan=\"6\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 10em\"></td></tr>\n  </tbody></table>\n  \n  </div>\n<h2 id=\"section.3.3\">3.3 The Forth dictionary</h2> <!-- 3.3 ================================ -->\n<a name=\"usage:dict\"></a>\n<p>\nForth words are organized into a structure called the dictionary.\nWhile the form of this structure is not specified by the standard,\nit can be described as consisting of three logical parts:\na name space, a code space, and a data space. The logical separation\nof these parts does not require their physical separation.\n</p><p>\nA program shall not fetch from or store into locations outside data\nspace. An ambiguous condition exists if a program addresses name\nspace or code space.\n</p><p>\n</p><h3 id=\"subsection.3.3.1\">3.3.1 Name space</h3> <!-- 3.3.1 -->\nThe relationship between name space and data space is implementation\ndependent.\n<p>\n</p><h4 id=\"subsubsection.3.3.1.1\">3.3.1.1 Word lists</h4> <!-- 3.3.1.1 -->\nThe structure of a word list is implementation dependent. When\nduplicate names exist in a word list, the latest-defined duplicate\nshall be the one found during a search for the name.\n<p>\n</p><h4 id=\"subsubsection.3.3.1.2\">3.3.1.2 Definition names</h4> <!-- 3.3.1.2 -->\n<a name=\"usage:names\"></a>\n<p>\nDefinition names shall contain {1 ... 31} characters.\nA system may allow or prohibit the creation of definition names\ncontaining non-standard characters.  A system may allow the creation\nof definition names longer than 31 characters.  Programs with\ndefinition names longer than 31 characters have an environmental\ndependency.\n</p><p>\nPrograms that use lower case for standard definition names or depend\non the case-sensitivity properties of a system have an environmental\ndependency.\n</p><p>\nA program shall not create definition names containing non-graphic\ncharacters.\n</p><p>\n</p><h3 id=\"subsection.3.3.2\">3.3.2 Code space</h3> <!-- 3.3.2 -->\nThe relationship between code space and data space is implementation\ndependent.\n<p>\n</p><h3 id=\"subsection.3.3.3\">3.3.3 Data space</h3> <!-- 3.3.3 -->\n<a name=\"usage:dataspace\"></a>\n<p>\nData space is the only logical area of the dictionary for which\nstandard words are provided to allocate and access regions of\nmemory. These regions are: contiguous regions, variables,\ntext-literal regions, input buffers, and other transient regions,\neach of which is described in the following sections. A program may\nread from or write into these regions unless otherwise specified.\n</p><p>\n</p><h4 id=\"subsubsection.3.3.3.1\">3.3.3.1 Address alignment</h4> <!-- 3.3.3.1 -->\n<a name=\"usage:aaddr\"></a>\n<p>\nMost addresses are cell aligned (indicated by <em>a-addr</em>) or character\naligned (<em>c-addr</em>).\n<a href=\"core/ALIGNED\">ALIGNED</a>, <a href=\"core/CHARPlus\">CHAR+</a>, and arithmetic operations can alter\nthe alignment state of an address on the stack. <a href=\"core/CHARPlus\">CHAR+</a> applied\nto an aligned address returns a character-aligned address that can\nonly be used to access characters. Applying <a href=\"core/CHARPlus\">CHAR+</a> to a\ncharacter-aligned address produces the succeeding character-aligned\naddress. Adding or subtracting an arbitrary number to an address can\nproduce an unaligned address that shall not be used to fetch or\nstore anything. The only way to find the next aligned address is\nwith <a href=\"core/ALIGNED\">ALIGNED</a>.\nAn ambiguous condition exists when memory is accessed using an\naddress that is not aligned according to the requirements for\nthe accessed type.\n</p><p>\nThe definitions of <a href=\"core/CREATE\">6.1.1000 CREATE</a> and\n<a href=\"core/VARIABLE\">6.1.2410 VARIABLE</a> require that the definitions created\nby them return aligned addresses.\n</p><p>\nAfter definitions are compiled or the word <a href=\"core/ALIGN\">ALIGN</a> is executed\nthe data-space pointer is guaranteed to be aligned.\n</p><p>\n</p><h4 id=\"subsubsection.3.3.3.2\">3.3.3.2 Contiguous regions</h4> <!-- 3.3.3.2 -->\n<a name=\"usage:contiguous\"></a>\n<p>\nA system guarantees that a region of data space allocated using\n<a href=\"core/ALLOT\">ALLOT</a>, <a href=\"core/Comma\">,</a> (comma), <a href=\"core/CComma\">C,</a> (c-comma), and\n<a href=\"core/ALIGN\">ALIGN</a> shall be contiguous with the last region allocated\nwith one of the above words, unless the restrictions in the\nfollowing paragraphs apply. The data-space pointer <a href=\"core/HERE\">HERE</a>\nalways identifies the beginning of the next data-space region to be\nallocated. As successive allocations are made, the data-space\npointer increases. A program may perform address arithmetic within\ncontiguously allocated regions. The last region of data space\nallocated using the above operators may be released by allocating a\ncorresponding negatively-sized region using <a href=\"core/ALLOT\">ALLOT</a>, subject\nto the restrictions of the following paragraphs.\n</p><p>\n<a href=\"core/CREATE\">CREATE</a> establishes the beginning of a contiguous region of\ndata space, whose starting address is returned by the <a href=\"core/CREATE\">CREATE</a>d\ndefinition. This region is terminated by compiling the next\ndefinition.\n</p><p>\nSince an implementation is free to allocate data space for use by\ncode, the above operators need not produce contiguous regions of\ndata space if definitions are added to or removed from the\ndictionary between allocations. An ambiguous condition exists if\ndeallocated memory contains definitions.\n</p><p>\n</p><h4 id=\"subsubsection.3.3.3.3\">3.3.3.3 Variables</h4> <!-- 3.3.3.3 -->\n<a name=\"usage:var\"></a>\n<p>\nThe region allocated for a variable may be non-contiguous with\nregions subsequently allocated with  <a href=\"core/Comma\">,</a> (comma) or\n<a href=\"core/ALLOT\">ALLOT</a>. For example, in:\n</p><div class=\"quote\">\n\n  <a href=\"core/VARIABLE\">VARIABLE</a> X   1 <a href=\"core/CELLS\">CELLS</a> <a href=\"core/ALLOT\">ALLOT</a>\n  \n  </div>\nthe region <code>X</code> and the region <a href=\"core/ALLOT\">ALLOT</a>ted could be\nnon-contiguous.\n<p>\nSome system-provided variables, such as <a href=\"core/STATE\">STATE</a>, are\nrestricted to read-only access.\n</p><p>\n</p><h4 id=\"subsubsection.3.3.3.4\">3.3.3.4 Text-literal regions</h4> <!-- 3.3.3.4 -->\n<a name=\"usage:\" literal\"=\"\"></a>\n<p>\nThe text-literal regions, specified by strings compiled with\n<a href=\"core/Sq\">S\"</a>, <a href=\"core/Seq\">S\\\"</a> and <a href=\"core/Cq\">C\"</a>, may be read-only.\n</p><p>\nA program shall not store into the text-literal regions created\nby <a href=\"core/Sq\">S\"</a>, <a href=\"core/Seq\">S\\\"</a> and <a href=\"core/Cq\">C\"</a> nor into any read-only\nsystem variable or read-only transient regions.\n</p><p>\n</p><h4 id=\"subsubsection.3.3.3.5\">3.3.3.5 Input buffers</h4> <!-- 3.3.3.5 -->\n<a name=\"usage:inbuf\"></a>\n<p>\nThe address, length, and content of the input buffer may be\ntransient. A program shall not write into the input buffer. In the\nabsence of any optional word sets providing alternative input\nsources, the input buffer is either the terminal-input buffer, used\nby <a href=\"core/QUIT\">QUIT</a> to hold one line from the user input device, or a\nbuffer specified by <a href=\"core/EVALUATE\">EVALUATE</a>. In all cases, <a href=\"core/SOURCE\">SOURCE</a>\nreturns the beginning address and length in characters of the\ncurrent input buffer.\n</p><p>\nThe minimum size of the terminal-input buffer shall be 80\ncharacters.\n</p><p>\nThe address and length returned by <a href=\"core/SOURCE\">SOURCE</a>, the string\nreturned by <a href=\"core/PARSE\">PARSE</a>, and directly computed input-buffer\naddresses are valid only until the text interpreter does I/O to\nrefill the input buffer or the input source is changed.\n</p><p>\nA program may modify the size of the parse area by changing the\ncontents of <a href=\"core/toIN\">&gt;IN</a> within the limits imposed by this standard.\nFor example, if the contents of <a href=\"core/toIN\">&gt;IN</a> are saved before a\nparsing operation and restored afterwards, the text that was parsed\nwill be available again for subsequent parsing operations. The\nextent of permissible repositioning using this method depends on the\ninput source (see <strong><a href=\"block#block:buffers\">7.3.2 Block buffer regions</a></strong>\nand <strong><a href=\"file#file:source\">11.3.3 Input source</a></strong>).\n</p><p>\nA program may directly examine the input buffer using its address\nand length as returned by <a href=\"core/SOURCE\">SOURCE</a>; the beginning of the parse\narea within the input buffer is indexed by the number in <a href=\"core/toIN\">&gt;IN</a>.\nThe values are valid for a limited time. An ambiguous condition\nexists if a program modifies the contents of the input buffer.\n</p><p>\n</p><h4 id=\"subsubsection.3.3.3.6\">3.3.3.6 Other transient regions</h4> <!-- 3.3.3.6 -->\n<a name=\"usage:transient\"></a>\n<p>\nThe data space regions identified by <a href=\"core/PAD\">PAD</a>, <a href=\"core/WORD\">WORD</a>, and\n<a href=\"core/num-end\">#&gt;</a> (the pictured numeric output string buffer) may be\ntransient. Their addresses and contents may become invalid after:\n</p><p>\n</p><ul>\n<li> a definition is created via a defining word;\n</li>\n<li> definitions are compiled with <a href=\"core/Colon\">:</a> or <a href=\"core/ColonNONAME\">:NONAME</a>;\n</li>\n<li> data space is allocated using <a href=\"core/ALLOT\">ALLOT</a>, <a href=\"core/Comma\">,</a> (comma),\n<a href=\"core/CComma\">C,</a> (c-comma), or <a href=\"core/ALIGN\">ALIGN</a>.\n</li>\n</ul>\n<p>\nThe previous contents of the regions identified by <a href=\"core/WORD\">WORD</a> and\n<a href=\"core/num-end\">#&gt;</a> may be invalid after each use of these words. Further,\nthe regions returned by <a href=\"core/WORD\">WORD</a> and <a href=\"core/num-end\">#&gt;</a> may overlap in\nmemory. Consequently, use of one of these words can corrupt a region\nreturned earlier by a different word. The other words that construct\npictured numeric output strings (<a href=\"core/num-start\">&lt;#</a>, <a href=\"core/num\">#</a>, <a href=\"core/numS\">#S</a>,\n<a href=\"core/HOLD\">HOLD</a>, <a href=\"core/HOLDS\">HOLDS</a>, <a href=\"xchar/XHOLD\">XHOLD</a>)  may also modify\nthe contents of these regions. Words that display numbers may be\nimplemented using pictured numeric output words. Consequently, <a href=\"core/d\">.</a>\n(dot), <a href=\"core/DotR\">.R</a>, <a href=\"tools/DotS\">.S</a>, <a href=\"tools/q\">?</a>, <a href=\"double/Dd\">D.</a>,\n<a href=\"double/DDotR\">D.R</a>, <a href=\"core/Ud\">U.</a>, <a href=\"core/UDotR\">U.R</a> could also corrupt the\nregions.\n</p><p>\nThe size of the scratch area whose address is returned by <a href=\"core/PAD\">PAD</a>\nshall be at least 84 characters. The contents of the region\naddressed by <a href=\"core/PAD\">PAD</a> are intended to be under the complete\ncontrol of the user: no words defined in this standard place\nanything in the region, although changing data-space allocations as\ndescribed in <strong><a href=\"usage#usage:contiguous\">3.3.3.2 Contiguous regions</a></strong> may change\nthe address returned by <a href=\"core/PAD\">PAD</a>. Non-standard words provided by\nan implementation may use <a href=\"core/PAD\">PAD</a>, but such use shall be\ndocumented.\n</p><p>\nThe size of the region identified by <a href=\"core/WORD\">WORD</a> shall be at least\n33 characters.\n</p><p>\nThe size of the pictured numeric output string buffer shall be at\nleast <em>(2 × n) + 2 </em> characters, where <em>n</em> is the number of\nbits in a cell. Programs that consider it a fixed area with\nunchanging access parameters have an environmental dependency.\n</p><p>\n</p><h2 id=\"section.3.4\">3.4 The Forth text interpreter</h2> <!-- 3.4 ========================== -->\n<a name=\"usage:command\"></a>\n<p>\nUpon start-up, a system shall be able to interpret, as described\nby <a href=\"core/QUIT\">6.1.2050 QUIT</a>, Forth source code received interactively\nfrom a user input device.\n</p><p>\nSuch interactive systems usually furnish a \"prompt\" indicating\nthat they have accepted a user request and acted on it. The\nimplementation-defined Forth prompt should contain the word \"OK\"\nin some combination of upper or lower case.\n</p><p>\nText interpretation (see <a href=\"core/EVALUATE\">6.1.1360 EVALUATE</a> and\n<a href=\"core/QUIT\">6.1.2050 QUIT</a>) shall repeat the following steps until\neither the parse area is empty or an ambiguous condition exists:\n</p><p>\n</p><ol style=\"list-style-type: lower-alpha\">\n<li> Skip leading spaces and parse a <em>name</em>\n(see <a href=\"usage#usage:parsing\">3.4.1</a>);\n<p>\n</p></li>\n<li> Search the dictionary name space (see <a href=\"usage#usage:find\">3.4.2</a>).\nIf a definition name matching the string is found:\n<p>\n</p><ol style=\"list-style-type: decimal\">\n<li> if interpreting, perform the interpretation semantics of\nthe definition (see <a href=\"usage#usage:interpret\">3.4.3.2</a>), and continue at\na).\n<p>\n</p></li>\n<li> if compiling, perform the compilation semantics of the\ndefinition (see <a href=\"usage#usage:compile\">3.4.3.3</a>), and continue at a).\n</li>\n</ol>\n<p>\n</p></li>\n<li> If a definition name matching the string is not found,\nattempt to convert the string to a number\n(see <a href=\"usage#usage:numbers\">3.4.1.3</a>). If successful:\n<p>\n</p><ol style=\"list-style-type: decimal\">\n<li> if interpreting, place the number on the data stack,\nand continue at a);\n<p>\n</p></li>\n<li> if compiling, compile code that when executed will place\nthe number on the stack (see <a href=\"core/LITERAL\">6.1.1780 LITERAL</a>),\nand continue at a);\n</li>\n</ol>\n<p>\n</p></li>\n<li> If unsuccessful, an ambiguous condition exists\n(see <a href=\"usage#usage:ambiguous\">3.4.4</a>).\n</li>\n</ol>\n<p>\n</p><h3 id=\"subsection.3.4.1\">3.4.1 Parsing</h3> <!-- 3.4.1 Parsing -->\n<a name=\"usage:parsing\"></a>\n<p>\nUnless otherwise noted, the number of characters parsed may be from\nzero to the implementation-defined maximum length of a counted\nstring.\n</p><p>\nIf the parse area is empty, i.e., when the number in <a href=\"core/toIN\">&gt;IN</a> is\nequal to the length of the input buffer, or contains no characters\nother than delimiters, the selected string is empty. Otherwise, the\nselected string begins with the next character in the parse area,\nwhich is the character indexed by the contents of <a href=\"core/toIN\">&gt;IN</a>. An\nambiguous condition exists if the number in <a href=\"core/toIN\">&gt;IN</a> is greater\nthan the size of the input buffer.\n</p><p>\nIf delimiter characters are present in the parse area after the\nbeginning of the selected string, the string continues up to and\nincluding the character just before the first such delimiter, and\nthe number in <a href=\"core/toIN\">&gt;IN</a> is changed to index immediately past that\ndelimiter, thus removing the parsed characters and the delimiter\nfrom the parse area. Otherwise, the string continues up to and\nincluding the last character in the parse area, and the number in\n<a href=\"core/toIN\">&gt;IN</a> is changed to the length of the input buffer, thus\nemptying the parse area.\n</p><p>\nParsing may change the contents of <a href=\"core/toIN\">&gt;IN</a>, but shall not affect\nthe contents of the input buffer. Specifically, if the value in\n<a href=\"core/toIN\">&gt;IN</a> is saved before starting the parse, resetting <a href=\"core/toIN\">&gt;IN</a>\nto that value immediately after the parse shall restore the parse\narea without loss of data.\n</p><p>\n</p><h4 id=\"subsubsection.3.4.1.1\">3.4.1.1 Delimiters</h4> <!-- 3.4.1.1 -->\n<a name=\"usage:delim\"></a>\n<p>\nIf the delimiter is the space character, hex 20 (<a href=\"core/BL\">BL</a>), control\ncharacters may be treated as delimiters. The set of conditions, if\nany, under which a \"space\" delimiter matches control characters is\nimplementation defined.\n</p><p>\nTo skip leading delimiters is to pass by zero or more contiguous\ndelimiters in the parse area before parsing.\n</p><p>\n</p><h4 id=\"subsubsection.3.4.1.2\">3.4.1.2 Syntax</h4> <!-- 3.4.1.2 -->\n<a name=\"usage:syntax\"></a>\n<p>\nForth has a simple, operator-ordered syntax. The phrase\n<code>A B C</code> returns values as if <code>A</code> were executed first,\nthen <code>B</code> and finally <code>C</code>. Words that cause deviations\nfrom this linear flow of control are called control-flow words.\nCombinations of control-flow words whose stack effects are\ncompatible form control-flow structures. Examples of typical use are\ngiven for each control-flow word in Annex <a href=\"rationale#annex:rationale\">A</a>.\n</p><p>\nForth syntax is extensible; for example, new control-flow words can\nbe defined in terms of existing ones. This standard does not require\na syntax or program-construct checker.\n</p><p>\n</p><h4 id=\"subsubsection.3.4.1.3\">3.4.1.3 Text interpreter input number conversion</h4> <!-- 3.4.1.3 -->\n<a name=\"usage:numbers\"></a>\n<p>\nWhen converting input numbers, the text interpreter shall recognize\ninteger numbers in the form &lt;<em>anynum</em>&gt;.\n</p><p>\n</p><div class=\"center\">\n\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td class=\"r\">&lt;<em>anynum</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ &lt;<em>BASEnum</em>&gt;\n  | &lt;<em>decnum</em>&gt;\n  | &lt;<em>hexnum</em>&gt;\n  | &lt;<em>binnum</em>&gt;\n  | &lt;<em>cnum</em>&gt; } </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>BASEnum</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>[<strong>-</strong>]&lt;<em>bdigit</em>&gt;&lt;<em>bdigit</em>&gt;* </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>decnum</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td><strong>#</strong>[<strong>-</strong>]&lt;<em>decdigit</em>&gt;&lt;<em>decdigit</em>&gt;* </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>hexnum</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td><strong>$</strong>[<strong>-</strong>]&lt;<em>hexdigit</em>&gt;&lt;<em>hexdigit</em>&gt;* </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>binnum</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td><strong>%</strong>[<strong>-</strong>]&lt;<em>bindigit</em>&gt;&lt;<em>bindigit</em>&gt;* </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>cnum</em>&gt;\t\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td><strong>'</strong>&lt;<em>char</em>&gt;<strong>'</strong> </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>bindigit</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ <strong>0</strong> | <strong>1</strong> } </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>decdigit</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{\n  <strong>0</strong> | <strong>1</strong> | <strong>2</strong> |\n  <strong>3</strong> | <strong>4</strong> |\t<strong>5</strong> |\n  <strong>6</strong> | <strong>7</strong> | <strong>8</strong> |\n  <strong>9</strong> } </td></tr>\n  <tr valign=\"top\"><td class=\"r\">&lt;<em>hexdigit</em>&gt;\t</td><td> <span style=\"font-family: sans-serif\">:=</span> </td><td>{ &lt;<em>decdigit</em>&gt; |\n  <strong>a</strong> | <strong>b</strong> | <strong>c</strong> |\n  <strong>d</strong> | <strong>e</strong> | <strong>f</strong> |\n  <strong>A</strong> | <strong>B</strong> | <strong>C</strong> |\n  <strong>D</strong> | <strong>E</strong> | <strong>F</strong> }\n  </td></tr></tbody></table>\n  \n  </div>\n<p>\n&lt;<em>bdigit</em>&gt; represents a digit according to the value of\n<a href=\"core/BASE\">BASE</a> (see <strong><a href=\"usage#usage:digits\">3.2.1.2 Digit conversion</a></strong>).\nFor &lt;<em>hexdigit</em>&gt;, the digits <strong>a</strong>...<strong>f</strong> have the\nvalues 10...15. &lt;<em>char</em>&gt; represents any printable character.\n</p><p>\nThe radix used for number conversion is:\n</p><div class=\"center\">\n\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td>&lt;<em>BASEnum</em>&gt;\t</td><td>the value in <a href=\"core/BASE\">BASE</a> </td></tr>\n  <tr valign=\"top\"><td>&lt;<em>decnum</em>&gt;\t</td><td>10 </td></tr>\n  <tr valign=\"top\"><td>&lt;<em>hexnum</em>&gt;\t</td><td>16 </td></tr>\n  <tr valign=\"top\"><td>&lt;<em>binnum</em>&gt;\t</td><td>2 </td></tr>\n  <tr valign=\"top\"><td>&lt;<em>cnum</em>&gt;\t\t</td><td>the number is the value of &lt;<em>char</em>&gt;\n  </td></tr></tbody></table>\n  \n  </div>\n<p>\nSee <strong><a href=\"notation#notation:BNF\">2.2.5 BNF notation</a></strong>.\n</p><p>\n</p><h3 id=\"subsection.3.4.2\">3.4.2 Finding definition names</h3> <!-- 3.4.2 -->\n<a name=\"usage:find\"></a>\n<p>\nA string matches a definition name if each character in the string\nmatches the corresponding character in the string used as the\ndefinition name when the definition was created. The case\nsensitivity (whether or not the upper-case letters match the\nlower-case letters) is implementation defined. A system may be\neither case sensitive, treating upper- and lower-case letters as\ndifferent and not matching, or case insensitive, ignoring\ndifferences in case while searching.\n</p><p>\nThe matching of upper- and lower-case letters with alphabetic\ncharacters in character set extensions such as accented\ninternational characters is implementation defined.\n</p><p>\nA system shall be capable of finding the definition names defined\nby this standard when they are spelled with upper-case letters.\n</p><p>\n</p><h3 id=\"subsection.3.4.3\">3.4.3 Semantics</h3> <!-- 3.4.3 -->\n<a name=\"usage:semantics\"></a>\n<p>\nThe semantics of a Forth definition are implemented by machine code\nor a sequence of execution tokens or other representations. They are\nlargely specified by the stack notation in the glossary entries,\nwhich shows what values shall be consumed and produced. The prose in\neach glossary entry further specifies the definition's behavior.\n</p><p>\nEach Forth definition may have several behaviors, described in the\nfollowing sections. The terms \"initiation semantics\" and\n\"run-time semantics\" refer to definition fragments, and have\nmeaning only within the individual glossary entries where they\nappear.\n</p><p>\n</p><h4 id=\"subsubsection.3.4.3.1\">3.4.3.1 Execution semantics</h4> <!-- 3.4.3.1 -->\nThe execution semantics of each Forth definition are specified in an\n\"<span class=\"sf\">Execution:</span>\" section of its glossary entry. When a\ndefinition has only one specified behavior, the label is omitted.\n<p>\nExecution may occur implicitly, when the definition into which it\nhas been compiled is executed, or explicitly, when its execution\ntoken is passed to <a href=\"core/EXECUTE\">EXECUTE</a>. The execution semantics of a\nsyntactically correct definition under conditions other than those\nspecified in this standard are implementation dependent.\n</p><p>\nGlossary entries for defining words include the execution semantics\nfor the new definition in a \"<em>name</em> <span class=\"sf\">Execution:</span>\"\nsection.\n</p><p>\n</p><h4 id=\"subsubsection.3.4.3.2\">3.4.3.2 Interpretation semantics</h4> <!-- 3.4.3.2 -->\n<a name=\"usage:interpret\"></a>\n<p>\nUnless otherwise specified in an \"<span class=\"sf\">Interpretation:</span>\"\nsection of the glossary entry, the interpretation semantics of a\nForth definition are its execution semantics.\n</p><p>\nA system shall be capable of executing, in interpretation state,\nall of the definitions from the Core word set and any definitions\nincluded from the optional word sets or word set extensions whose\ninterpretation semantics are defined by this standard.\n</p><p>\nA system shall be capable of executing, in interpretation state,\nany new definitions created in accordance with\n<strong><a href=\"usage#usage\">3 Usage requirements</a></strong>.\n</p><p>\n</p><h4 id=\"subsubsection.3.4.3.3\">3.4.3.3 Compilation semantics</h4> <!-- 3.4.3.3 -->\n<a name=\"usage:compile\"></a>\n<p>\nUnless otherwise specified in a \"<span class=\"sf\">Compilation:</span>\" section\nof the glossary entry, the compilation semantics of a Forth\ndefinition shall be to append its execution semantics to the\nexecution semantics of the current definition.\n</p><p>\n</p><h3 id=\"subsection.3.4.4\">3.4.4 Possible actions on an ambiguous condition</h3> <!-- 3.4.4 -->\n<a name=\"usage:ambiguous\"></a>\n<p>\nWhen an ambiguous condition exists, a system may take one or more\nof the following actions:\n</p><p>\n</p><ul>\n<li> ignore and continue;\n</li>\n<li> display a message;\n</li>\n<li> execute a particular word;\n</li>\n<li> set interpretation state and begin text interpretation;\n</li>\n<li> take other implementation-defined actions;\n</li>\n<li> take implementation-dependent actions.\n</li>\n</ul>\n<p>\nThe response to a particular ambiguous condition need not be the\nsame under all circumstances.\n</p><p>\n</p><h3 id=\"subsection.3.4.5\">3.4.5 Compilation</h3> <!-- 3.4.5 -->\n<a name=\"usage:compilation\"></a>\n<p>\nA program shall not attempt to nest compilation of definitions.\n</p><p>\nDuring the compilation of the current definition, a program shall\nnot execute any defining word, <a href=\"core/ColonNONAME\">:NONAME</a>, or any definition\nthat allocates dictionary data space. The compilation of the\ncurrent definition may be suspended using <a href=\"core/Bracket\">[</a> (left-bracket)\nand resumed using <a href=\"right-bracket\">]</a> (right-bracket). While the compilation\nof the current definition is suspended, a program shall not execute\nany defining word, <a href=\"core/ColonNONAME\">:NONAME</a>, or any definition that allocates\ndictionary data space.\n</p></div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Usage requirements</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\" class=\"current\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Data types</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.3.1\">Data types</a></li>\n        <li role=\"menuitem\"><a href=\"#section.3.2\">The implementation environment</a></li>\n        <li role=\"menuitem\"><a href=\"#section.3.3\">The Forth dictionary</a></li>\n        <li role=\"menuitem\"><a href=\"#section.3.4\">The Forth text interpreter</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        },
        "xchar": {
            "basename": "xchar",
            "name": "18 The optional Extended-Character word set",
            "html": "<div id=\"body\">\n<h1 id=\"chapter.18\">18 The optional Extended-Character word set</h1> <!-- 18 -->\n<h2 id=\"section.18.1\">18.1 Introduction</h2> <!-- 18.1 -->\n<a name=\"xchar:intro\"></a>\n<p>\nThis word set deals with variable width character encodings.  It also\nworks with fixed width encodings.\n</p><p>\nSince the standard specifies ASCII encoding for characters, only\nASCII-compatible encodings may be used.  Because ASCII compatibility\nhas so many benefits, most encodings actually are ASCII compatible.\nThe characters beyond the ASCII encoding are called \"extended\ncharacters\" (xchars).\n</p><p>\nAll words dealing with strings shall handle xchars when the xchar word\nset is present.  This includes dictionary definitions.  White space\nparsing does not have to treat code points greater than $20 as white\nspace.\n</p><p>\n</p><h2 id=\"section.18.2\">18.2 Additional terms and notation</h2> <!-- 18.2 -->\n<h3 id=\"subsection.18.2.1\">18.2.1 Definition of Terms</h3> <!-- 18.2.1 -->\n<dl class=\"desc\">\n<dt>code point:</dt><dd> A member of an extended character set.\n</dd></dl>\n<br class=\"clear\">\n\n<p>\n</p><h3 id=\"subsection.18.2.2\">18.2.2 Parsed-text notation</h3>\n<p>\nAppend table <a href=\"xchar#xchar:syntax\">18.1</a> to table <a href=\"notation#table:syntax\">2.1</a>.\n</p><p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 18.1: Parsed text abbreviations</div>\n  <a name=\"xchar:syntax\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Abbreviation</em> </td><td><em>Description</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>&lt;xchar&gt;</em> </td><td>the delimiting extended character </td></tr>\n  <tr valign=\"top\"><td colspan=\"2\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\nSee: <strong><a href=\"notation#notation:parsed\">2.2.3 Parsed-text notation</a></strong>.\n<p>\n</p><h2 id=\"section.18.3\">18.3 Additional usage requirements</h2> <!-- 18.3 -->\n<h3 id=\"subsection.18.3.1\">18.3.1 Data types</h3> <!-- 18.3.1 -->\nAppend table <a href=\"xchar#xchar:types\">18.2</a> to table <a href=\"usage#table:datatypes\">3.1</a>.\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 18.2: Data Types</div>\n  <a name=\"xchar:types\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>Symbol</em>\t\t</td><td><em>Data type</em> </td><td class=\"r\"><em>Size on stack</em> </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td><em>pchar</em>\t\t</td><td>primitive character\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>xchar</em>\t\t</td><td>extended character\t\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td><em>xc-addr</em>\t\t</td><td>xchar-aligned address\t\t</td><td class=\"r\">1 cell </td></tr>\n  <tr valign=\"top\"><td colspan=\"3\"><hr></td></tr>\n  <tr valign=\"top\"><td></td></tr>\n  </tbody></table>\n  \n  </div>\nSee: <strong><a href=\"usage#usage:data\">3.1 Data types</a></strong>.\n<p>\n</p><h4 id=\"subsubsection.18.3.1.1\">18.3.1.1 Extended Characters</h4> <!-- 18.3.1.1 -->\nAn extended character (xchar) is the code point of a character within an\nextended character set; on the stack it is a subset of <em>u</em>.  Extended\ncharacters are stored in memory encoded as one or more primitive characters\n(pchars).\n<p>\n</p><h3 id=\"subsection.18.3.2\">18.3.2 Environmental queries</h3> <!-- 18.3.2. -->\nAppend table <a href=\"xchar#xchar:env\">18.3</a> to table <a href=\"usage#table:env\">3.4</a>.\n<p>\n\n</p><div class=\"center\">\n\n  <div class=\"caption\">Table 18.3: Environmental Query Strings</div>\n  <a name=\"xchar:env\"></a>\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td colspan=\"2\">String  Value data type </td><td class=\"c\">Constant? </td><td style=\"width: 21em\">Meaning </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"><code>XCHAR-ENCODING</code>\t\t</td><td class=\"r\"><em>c-addr u</em> </td><td class=\"c\">no </td><td style=\"width: 21em\">Returns a printable ASCII string that represents the encoding,\n  and use the preferred MIME name (if any) or the name in the\n  IANA character-set register<sup>[1]</sup> (RFC-1700) such\n  as \"<code>ISO-LATIN-1</code>\" or \"<code>UTF–8</code>\",\n  with the exception of \"<code>ASCII</code>\", where the alias\n  \"<code>ASCII</code>\" is preferred. </td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"><code>MAX-XCHAR</code>\t\t\t</td><td class=\"r\"><em>u</em> </td><td class=\"c\">no </td><td style=\"width: 21em\">Maximal value for <em>xchar</em> </td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"><code>XCHAR-MAXMEM</code>\t\t</td><td class=\"r\"><em>u</em> </td><td class=\"c\">no </td><td style=\"width: 21em\">Maximal memory consumed by an <em>xchar</em> in address units </td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><hr></td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"></td></tr>\n  <tr valign=\"top\"><td colspan=\"4\"><div>\n  <sup>[1]</sup>\n    <a href=\"http://www.iana.org/assignments/character-sets\">http://www.iana.org/assignments/character-sets</a>\n    </div> </td></tr>\n  <tr valign=\"top\"><td style=\"width: 9em\"></td></tr>\n  </tbody></table>\n  \n  </div>\nSee: <strong><a href=\"usage#usage:env\">3.2.6 Environmental queries</a></strong>.\n<p>\n</p><h3 id=\"subsection.18.3.3\">18.3.3 Common encodings</h3> <!-- 18.3.3 -->\nInput and files are often encoded iso–latin–1 or utf–8.  The encoding\ndepends on settings of the computer system such as the LANG environment\nvariable on Unix.  You can use the system consistently only when you do\nnot change the encoding, or only use the ASCII subset.\nThe typical practice in environments requiring more than one encoding\nis that the base system is ASCII only, and the character set is then\nextended to specify the required encoding.\n<p>\n</p><h3 id=\"subsection.18.3.4\">18.3.4 The Forth text interpreter</h3> <!-- 18.3.4 -->\nIn section <strong><a href=\"usage#usage:numbers\">3.4.1.3 Text interpreter input number conversion</a></strong>, &lt;<em>cnum</em>&gt; should be redefined to be:\n<p>\n</p><div class=\"center\">\n\n  <table class=\"center\">\n  <tbody><tr valign=\"top\"><td>&lt;<em>cnum</em>&gt;\t\t</td><td>the number is the value of &lt;<em>xchar</em>&gt;\n  </td></tr></tbody></table>\n  \n  </div>\n<p>\n</p><h3 id=\"subsection.18.3.5\">18.3.5 Input and Output</h3> <!-- 18.3.5 -->\n<a name=\"xchar:io\"></a>\n<p>\nIO words such as\n<a href=\"core/KEY\">KEY</a>, \n<a href=\"core/EMIT\">EMIT</a>,\n<a href=\"core/TYPE\">TYPE</a>,\n<a href=\"file/READ-FILE\">READ-FILE</a>,\n<a href=\"file/READ-LINE\">READ-LINE</a>,\n<a href=\"file/WRITE-FILE\">WRITE-FILE</a>, and\n<a href=\"file/WRITE-LINE\">WRITE-LINE</a>\noperate on <em>pchars</em>.  Therefore, it is possible that these words\nread or write incomplete <em>xchars</em>, which are completed in the next\nconsecutive operation(s).  The IO system shall combine these <em>pchars</em>\ninto a complete <em>xchars</em> on output, or split an <em>xchars</em> into\n<em>pchars</em> on input, and shall not throw a \"malformed <em>xchars</em>\"\nexception when the combination of these <em>pchars</em> form a valid\n<em>xchars</em>.  <a href=\"xchar/MinusTRAILING-GARBAGE\">-TRAILING-GARBAGE</a> can be used to process\nan incomplete <em>xchars</em> at the end of such an IO operation.\n<a href=\"core/ACCEPT\">ACCEPT</a> as input editor may be aware of <em>xchars</em> to\nprovide comfort like backspace or cursor movement.\n</p><p>\n</p><h2 id=\"section.18.4\">18.4 Additional documentation requirements</h2> <!-- 18.4 -->\n<h3 id=\"subsection.18.4.1\">18.4.1 System documentation</h3> <!-- 18.4.1 -->\n<h4 id=\"subsubsection.18.4.1.1\">18.4.1.1 Implementation-defined options</h4> <!-- 18.4.1.1 -->\n<a name=\"xchar:impopt\"></a>\n<p>\nSince Unicode input and display poses a number of challenges like input\nmethod editors for different languages, left-to-right and right-to-left\nwriting, and most fonts contain only a subset of Unicode glyphs,\nsystems should document their capabilities.  File IO and in-memory\nstring handling should work transparently with <em>xchars</em>.\n</p><p>\n</p><h4 id=\"subsubsection.18.4.1.2\">18.4.1.2 Ambiguous conditions</h4> <!-- 18.4.1.2 -->\n<ul>\n<li> the data in memory does not encode a valid xchar\n(<a href=\"xchar/X-SIZE\">18.6.1.2486.50 X-SIZE</a>);\n</li>\n<li> the <em>xchars</em> value is outside the range of allowed code points of\nthe current character set used;\n</li>\n<li> words improperly used outside\n<a href=\"core/num-start\">6.1.0490 &lt;#</a> and <a href=\"core/num-end\">6.1.0040 #&gt;</a>\n(<a href=\"xchar/XHOLD\">18.6.2.2488.20 XHOLD</a>).\n</li>\n</ul>\n<p>\n</p><h4 id=\"subsubsection.18.4.1.3\">18.4.1.3 Other system documentation</h4> <!-- 18.4.1.3 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h3 id=\"subsection.18.4.2\">18.4.2 Program documentation</h3> <!-- 18.4.2 -->\n<ul>\n<li> no additional requirements.\n</li>\n</ul>\n<p>\n</p><h2 id=\"section.18.5\">18.5 Compliance and labeling</h2> <!-- 18.5 -->\n<h3 id=\"subsection.18.5.1\">18.5.1 Forth-2012 systems</h3> <!-- 18.5.1 -->\nThe phrase \"Providing the Extended-Character word set\" shall be\nappended to the label of any Standard System that provides all of\nthe Extended-Character word set.\n<p>\nThe phrase \"Providing <em>name(s)</em> from the Extended-Character\nExtensions word set\" shall be appended to the label of any Standard\nSystem that provides portions of the Extended-Character Extensions\nword set.\n</p><p>\nThe phrase \"Providing the Extended-Character Extensions word set\"\nshall be appended to the label of any Standard System that provides\nall of the Extended-Character and Extended-Character Extensions\nword sets.\n</p><p>\n</p><h3 id=\"subsection.18.5.2\">18.5.2 Forth-2012 programs</h3> <!-- 18.5.2 -->\nThe phrase \"Requiring the Extended-Character word set\" shall be\nappended to the label of Standard Programs that require the system\nto provide the Extended-Character word set.\n<p>\nThe phrase \"Requiring <em>name(s)</em> from the Extended-Character\nExtensions word set\" shall be appended to the label of Standard Programs\nthat require the system to provide portions of the Extended-Character\nExtensions word set.\n</p><p>\nThe phrase \"Requiring the Extended-Character Extensions word set\"\nshall be appended to the label of Standard Programs that require the\nsystem to provide all of the Extended-Character Exception and\nExtended-Character Extensions word sets.\n</p><p>\n</p><h2 id=\"section.18.6\">18.6 Glossary</h2> <!-- 18.6 -->\n<h3 id=\"subsection.18.6.1\">18.6.1 Extended-Character words</h3> <!-- 18.6.1 -->\n<ul>\n<li><a href=\"xchar/X-SIZE\">18.6.1.2486.50 X-SIZE</a></li>\n<li><a href=\"xchar/XCStorePlus\">18.6.1.2487.10 XC!+</a></li>\n<li><a href=\"xchar/XCStorePlusq\">18.6.1.2487.15 XC!+?</a></li>\n<li><a href=\"xchar/XCComma\">18.6.1.2487.20 XC,</a></li>\n<li><a href=\"xchar/XC-SIZE\">18.6.1.2487.25 XC-SIZE</a></li>\n<li><a href=\"xchar/XCFetchPlus\">18.6.1.2487.35 XC@+</a></li>\n<li><a href=\"xchar/XCHARPlus\">18.6.1.2487.40 XCHAR+</a></li>\n\n<li><a href=\"xchar/XEMIT\">18.6.1.2488.10 XEMIT</a></li>\n\n<li><a href=\"xchar/XKEY\">18.6.1.2488.30 XKEY</a></li>\n\n<li><a href=\"xchar/XKEYq\">18.6.1.2488.35 XKEY?</a></li>\n</ul>\n<h3 id=\"subsection.18.6.2\">18.6.2 Extended-Character extension words</h3> <!-- 18.6.2 -->\n<ul>\n<li><a href=\"xchar/PlusXDivSTRING\">18.6.2.0145 +X/STRING</a></li>\n<li><a href=\"xchar/MinusTRAILING-GARBAGE\">18.6.2.0175 -TRAILING-GARBAGE</a></li>\n<li><a href=\"xchar/CHAR\">18.6.2.0895 CHAR</a></li>\n\n<li><a href=\"xchar/EKEYtoXCHAR\">18.6.2.1306.60 EKEY&gt;XCHAR</a></li>\n\n<li><a href=\"xchar/PARSE\">18.6.2.2008 PARSE</a></li>\n\n<li><a href=\"xchar/X-WIDTH\">18.6.2.2486.70 X-WIDTH</a></li>\n\n<li><a href=\"xchar/XC-WIDTH\">18.6.2.2487.30 XC-WIDTH</a></li>\n<li><a href=\"xchar/XCHARMinus\">18.6.2.2487.45 XCHAR-</a></li>\n<li><a href=\"xchar/XHOLD\">18.6.2.2488.20 XHOLD</a></li>\n<li><a href=\"xchar/XSTRINGMinus\">18.6.2.2495 X\\STRING-</a></li>\n<li><a href=\"xchar/BracketCHAR\">18.6.2.2520 [CHAR]</a></li>\n</ul>\n\n</div>\n<div id=\"menu-bar\" role=\"menubar\">\n  <ul>\n    <li role=\"menu\" aria-haspopup=\"true\" class=\"first\">\n      <span id=\"menu-label-doc\" class=\"with-menu\">Forth 2012</span>\n      <div class=\"menu\">\n        <ul id=\"menu-doc\" style=\"width: 100px;\">\n        <li role=\"menuitem\"><a href=\"index\" class=\"current\">Forth 2012</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-chap\" class=\"with-menu\">Extended-Character word set</span>\n      <div class=\"menu\">\n        <ul id=\"menu-chap\" class=\"scroll-bar\" style=\"width: 265px;\">\n        <li role=\"menuitem\"><a href=\"foreword\">Foreword</a></li>\n        <li role=\"menuitem\"><a href=\"process\">Proposals Process</a></li>\n        <li role=\"menuitem\"><a href=\"members-2x\">200<em>x</em> Membership</a></li>\n        <li role=\"menuitem\"><a href=\"intro\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"notation\">Terms, notation, and references</a></li>\n        <li role=\"menuitem\"><a href=\"usage\">Usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"doc\">Documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"label\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"core\">Glossary</a></li>\n        <li role=\"menuitem\"><a href=\"block\">Block word set</a></li>\n        <li role=\"menuitem\"><a href=\"double\">Double-Number word set</a></li>\n        <li role=\"menuitem\"><a href=\"exception\">Exception word set</a></li>\n        <li role=\"menuitem\"><a href=\"facility\">Facility word set</a></li>\n        <li role=\"menuitem\"><a href=\"file\">File-Access word set</a></li>\n        <li role=\"menuitem\"><a href=\"float\">Floating-Point word set</a></li>\n        <li role=\"menuitem\"><a href=\"locals\">Locals word set</a></li>\n        <li role=\"menuitem\"><a href=\"memory\">Memory-Allocation word set</a></li>\n        <li role=\"menuitem\"><a href=\"tools\">Programming-Tools word set</a></li>\n        <li role=\"menuitem\"><a href=\"search\">Search-Order word set</a></li>\n        <li role=\"menuitem\"><a href=\"string\">String word set</a></li>\n        <li role=\"menuitem\"><a href=\"xchar\" class=\"current\">Extended-Character word set</a></li>\n        <li role=\"menuitem\"><a href=\"rationale\">Rationale</a></li>\n        <li role=\"menuitem\"><a href=\"bib\">Bibliography</a></li>\n        <li role=\"menuitem\"><a href=\"diff\">Compatibility analysis</a></li>\n        <li role=\"menuitem\"><a href=\"port\">Portability guide</a></li>\n        <li role=\"menuitem\"><a href=\"implement\">Reference Implementations</a></li>\n        <li role=\"menuitem\"><a href=\"testsuite\">Test Suite</a></li>\n        <li role=\"menuitem\"><a href=\"alpha\">Alphabetic list of words</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-sec\" class=\"with-menu\">Introduction</span>\n      <div class=\"menu\">\n        <ul id=\"menu-sec\" style=\"width: 255px;\">\n        <li role=\"menuitem\"><a href=\"#section.18.1\" class=\"current\">Introduction</a></li>\n        <li role=\"menuitem\"><a href=\"#section.18.2\">Additional terms and notation</a></li>\n        <li role=\"menuitem\"><a href=\"#section.18.3\">Additional usage requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.18.4\">Additional documentation requirements</a></li>\n        <li role=\"menuitem\"><a href=\"#section.18.5\">Compliance and labeling</a></li>\n        <li role=\"menuitem\"><a href=\"#section.18.6\">Glossary</a></li>\n        </ul>\n      </div>\n    </li>\n    <li role=\"menu\" aria-haspopup=\"true\">\n      <span id=\"menu-label-word\" class=\"with-menu\">X-SIZE</span>\n      <div class=\"menu\">\n        <ul id=\"menu-word\" class=\"scroll-bar\" style=\"width: 202px;\">\n        <li role=\"menuitem\"><a href=\"xchar/X-SIZE\">X-SIZE</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XCStorePlus\">XC!+</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XCStorePlusq\">XC!+?</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XCComma\">XC,</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XC-SIZE\">XC-SIZE</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XCFetchPlus\">XC@+</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XCHARPlus\">XCHAR+</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XEMIT\">XEMIT</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XKEY\">XKEY</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XKEYq\">XKEY?</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/PlusXDivSTRING\">+X/STRING</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/MinusTRAILING-GARBAGE\">-TRAILING-GARBAGE</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/CHAR\">CHAR</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/EKEYtoXCHAR\">EKEY&gt;XCHAR</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/PARSE\">PARSE</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/X-WIDTH\">X-WIDTH</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XC-WIDTH\">XC-WIDTH</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XCHARMinus\">XCHAR-</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XHOLD\">XHOLD</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/XSTRINGMinus\">X\\STRING-</a></li>\n        <li role=\"menuitem\"><a href=\"xchar/BracketCHAR\">[CHAR]</a></li>\n        </ul>\n      </div>\n    </li>\n\n  </ul>\n</div>\n\n\n\n"
        }
    },
    "sortedWordSets": [
        "core",
        "block",
        "double",
        "exception",
        "facility",
        "file",
        "float",
        "locals",
        "memory",
        "tools",
        "search",
        "string",
        "xchar"
    ],
    "sortedDocuments": [
        "foreword",
        "process",
        "members-2x",
        "intro",
        "notation",
        "usage",
        "doc",
        "label",
        "core",
        "block",
        "double",
        "exception",
        "facility",
        "file",
        "float",
        "locals",
        "memory",
        "tools",
        "search",
        "string",
        "xchar",
        "rationale",
        "bib",
        "diff",
        "port",
        "implement",
        "testsuite",
        "alpha"
    ],
    "unusedDocuments": [
        "index",
        "right-bracket"
    ]
}